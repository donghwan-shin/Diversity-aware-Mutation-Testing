1:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:34:0L |==> 1L
2:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:34:0L |==> -1L
3:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:36:1L |==> 0L
4:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:36:1L |==> -1L
5:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:38:-1L |==> 0L
6:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:38:-1L |==> 1L
7:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:40:0 |==> 1
8:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:40:0 |==> -1
9:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:42:1 |==> 0
10:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:42:1 |==> -1
11:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:44:-1 |==> 0
12:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:44:-1 |==> 1
13:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:46:0 |==> 1
14:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:46:0 |==> -1
15:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:48:1 |==> 0
16:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:48:1 |==> -1
17:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:50:-1 |==> 0
18:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:50:-1 |==> 1
19:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:52:0 |==> 1
20:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:52:0 |==> -1
21:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:54:1 |==> 0
22:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:54:1 |==> -1
23:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:56:-1 |==> 0
24:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:56:-1 |==> 1
25:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:58:0.0 |==> 1.0
26:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:58:0.0 |==> -1.0
27:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:60:1.0 |==> 0.0
28:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:60:1.0 |==> -1.0
29:ORU:-(double):+(double):org.apache.commons.lang3.math.NumberUtils:62:-1.0 |==> +1.0
30:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:62:1.0 |==> 0.0
31:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:62:1.0 |==> -1.0
32:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:64:0.0F |==> 1.0F
33:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:64:0.0F |==> -1.0F
34:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:66:1.0F |==> 0.0F
35:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:66:1.0F |==> -1.0F
36:ORU:-(float):+(float):org.apache.commons.lang3.math.NumberUtils:68:-1.0F |==> +1.0F
37:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:68:1.0F |==> 0.0F
38:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:68:1.0F |==> -1.0F
39:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String):100:0 |==> 1
40:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String):100:0 |==> -1
41:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String,int):121:str == null |==> str != null
42:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String,int):121:str == null |==> false
43:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toInt(java.lang.String,int):121:str == null |==> true
44:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String):149:0L |==> 1L
45:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String):149:0L |==> -1L
46:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String,long):170:str == null |==> str != null
47:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String,long):170:str == null |==> false
48:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toLong(java.lang.String,long):170:str == null |==> true
49:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String):199:0.0F |==> 1.0F
50:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String):199:0.0F |==> -1.0F
51:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String,float):222:str == null |==> str != null
52:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String,float):222:str == null |==> false
53:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toFloat(java.lang.String,float):222:str == null |==> true
54:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String):251:0.0 |==> 1.0
55:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String):251:0.0 |==> -1.0
56:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String,double):274:str == null |==> str != null
57:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String,double):274:str == null |==> false
58:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toDouble(java.lang.String,double):274:str == null |==> true
59:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String):303:0 |==> 1
60:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String):303:0 |==> -1
61:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String,byte):324:str == null |==> str != null
62:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String,byte):324:str == null |==> false
63:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toByte(java.lang.String,byte):324:str == null |==> true
64:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String):352:0 |==> 1
65:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String):352:0 |==> -1
66:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String,short):373:str == null |==> str != null
67:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String,short):373:str == null |==> false
68:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toShort(java.lang.String,short):373:str == null |==> true
69:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):451:str == null |==> str != null
70:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):451:str == null |==> false
71:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):451:str == null |==> true
72:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):454:StringUtils.isBlank(str) |==> false
73:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):454:StringUtils.isBlank(str) |==> true
74:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):459:0 |==> 1
75:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):459:0 |==> -1
76:COR:str.startsWith(pfx):TRUE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):461:str.startsWith(pfx) |==> false
77:COR:str.startsWith(pfx):FALSE:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):461:str.startsWith(pfx) |==> true
78:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):462:pfxLen += pfx.length() |==> <NO-OP>
79:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:0 |==> 1
80:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:0 |==> -1
81:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> pfxLen != 0
82:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> pfxLen < 0
83:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> pfxLen <= 0
84:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> pfxLen == 0
85:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> pfxLen >= 0
86:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> false
87:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):466:pfxLen > 0 |==> true
88:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):467:str.length() - pfxLen |==> str.length() % pfxLen
89:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):467:str.length() - pfxLen |==> str.length() * pfxLen
90:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):467:str.length() - pfxLen |==> str.length() + pfxLen
91:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):467:str.length() - pfxLen |==> str.length() / pfxLen
92:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:16 |==> 0
93:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:16 |==> -16
94:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:hexDigits > 16 |==> hexDigits != 16
95:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:hexDigits > 16 |==> hexDigits < 16
96:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:hexDigits > 16 |==> hexDigits <= 16
97:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:hexDigits > 16 |==> hexDigits == 16
98:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:hexDigits > 16 |==> hexDigits >= 16
99:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:hexDigits > 16 |==> false
100:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):468:hexDigits > 16 |==> true
101:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:8 |==> 0
102:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:8 |==> -8
103:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:hexDigits > 8 |==> hexDigits != 8
104:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:hexDigits > 8 |==> hexDigits < 8
105:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:hexDigits > 8 |==> hexDigits <= 8
106:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:hexDigits > 8 |==> hexDigits == 8
107:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:hexDigits > 8 |==> hexDigits >= 8
108:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:hexDigits > 8 |==> false
109:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):471:hexDigits > 8 |==> true
110:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:1 |==> 0
111:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:1 |==> -1
112:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - 1 |==> str.length() % 1
113:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - 1 |==> str.length() * 1
114:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - 1 |==> str.length() + 1
115:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):476:str.length() - 1 |==> str.length() / 1
116:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') % str.indexOf('E')
117:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') * str.indexOf('E')
118:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') - str.indexOf('E')
119:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') / str.indexOf('E')
120:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:1 |==> 0
121:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:1 |==> -1
122:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) % 1
123:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) * 1
124:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') + 1 |==> str.indexOf('e') + str.indexOf('E') - 1
125:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):481:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) / 1
126:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:0 |==> 1
127:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):485:0 |==> -1
128:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:-1 |==> 0
129:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:-1 |==> 1
130:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:decPos > -1 |==> decPos != -1
131:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:decPos > -1 |==> decPos < -1
132:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:decPos > -1 |==> decPos <= -1
133:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:decPos > -1 |==> decPos == -1
134:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:decPos > -1 |==> decPos >= -1
135:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:decPos > -1 |==> false
136:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):486:decPos > -1 |==> true
137:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:-1 |==> 0
138:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:-1 |==> 1
139:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:expPos > -1 |==> expPos != -1
140:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:expPos > -1 |==> expPos < -1
141:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:expPos > -1 |==> expPos <= -1
142:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:expPos > -1 |==> expPos == -1
143:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:expPos > -1 |==> expPos >= -1
144:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:expPos > -1 |==> false
145:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):488:expPos > -1 |==> true
146:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos |==> expPos != decPos
147:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos |==> expPos <= decPos
148:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos |==> expPos == decPos
149:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos |==> expPos > decPos
150:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos |==> expPos >= decPos
151:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos |==> false
152:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos |==> true
153:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos > str.length() |==> expPos != str.length()
154:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos > str.length() |==> expPos < str.length()
155:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos > str.length() |==> expPos <= str.length()
156:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos > str.length() |==> expPos == str.length()
157:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos > str.length() |==> expPos >= str.length()
158:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos > str.length() |==> false
159:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos > str.length() |==> true
160:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos || expPos > str.length() |==> expPos < decPos != expPos > str.length()
161:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos || expPos > str.length() |==> expPos < decPos && expPos > str.length()
162:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos || expPos > str.length() |==> expPos < decPos == expPos > str.length()
163:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos || expPos > str.length() |==> false
164:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos || expPos > str.length() |==> expPos < decPos
165:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos || expPos > str.length() |==> expPos > str.length()
166:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):489:expPos < decPos || expPos > str.length() |==> true
167:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):492:1 |==> 0
168:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):492:1 |==> -1
169:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):492:decPos + 1 |==> decPos % 1
170:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):492:decPos + 1 |==> decPos * 1
171:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):492:decPos + 1 |==> decPos - 1
172:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):492:decPos + 1 |==> decPos / 1
173:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:1 |==> 0
174:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:1 |==> -1
175:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:decPos + 1 |==> decPos % 1
176:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:decPos + 1 |==> decPos * 1
177:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:decPos + 1 |==> decPos - 1
178:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):494:decPos + 1 |==> decPos / 1
179:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):496:0 |==> 1
180:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):496:0 |==> -1
181:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):497:numDecimals = dec.length() |==> <NO-OP>
182:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:-1 |==> 0
183:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:-1 |==> 1
184:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:expPos > -1 |==> expPos != -1
185:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:expPos > -1 |==> expPos < -1
186:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:expPos > -1 |==> expPos <= -1
187:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:expPos > -1 |==> expPos == -1
188:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:expPos > -1 |==> expPos >= -1
189:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:expPos > -1 |==> false
190:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):499:expPos > -1 |==> true
191:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):500:expPos > str.length() |==> expPos != str.length()
192:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):500:expPos > str.length() |==> expPos < str.length()
193:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):500:expPos > str.length() |==> expPos <= str.length()
194:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):500:expPos > str.length() |==> expPos == str.length()
195:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):500:expPos > str.length() |==> expPos >= str.length()
196:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):500:expPos > str.length() |==> false
197:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):500:expPos > str.length() |==> true
198:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:0 |==> 1
199:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):503:0 |==> -1
200:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:lastChar != '.' |==> lastChar < '.'
201:ROR:!=(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:lastChar != '.' |==> lastChar <= '.'
202:ROR:!=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:lastChar != '.' |==> lastChar == '.'
203:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:lastChar != '.' |==> lastChar > '.'
204:ROR:!=(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:lastChar != '.' |==> lastChar >= '.'
205:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:lastChar != '.' |==> false
206:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:lastChar != '.' |==> true
207:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar) != (lastChar != '.')
208:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar) == (lastChar != '.')
209:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:!Character.isDigit(lastChar) && lastChar != '.' |==> false
210:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar)
211:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:!Character.isDigit(lastChar) && lastChar != '.' |==> lastChar != '.'
212:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:!Character.isDigit(lastChar) && lastChar != '.' |==> true
213:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):509:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar) || lastChar != '.'
214:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:-1 |==> 0
215:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:-1 |==> 1
216:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 |==> expPos != -1
217:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 |==> expPos < -1
218:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 |==> expPos <= -1
219:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 |==> expPos == -1
220:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 |==> expPos >= -1
221:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 |==> false
222:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 |==> true
223:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:1 |==> 0
224:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:1 |==> -1
225:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:str.length() - 1 |==> str.length() % 1
226:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:str.length() - 1 |==> str.length() * 1
227:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:str.length() - 1 |==> str.length() + 1
228:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:str.length() - 1 |==> str.length() / 1
229:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos < str.length() - 1 |==> expPos != str.length() - 1
230:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos < str.length() - 1 |==> expPos <= str.length() - 1
231:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos < str.length() - 1 |==> expPos == str.length() - 1
232:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos < str.length() - 1 |==> expPos > str.length() - 1
233:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos < str.length() - 1 |==> expPos >= str.length() - 1
234:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos < str.length() - 1 |==> false
235:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos < str.length() - 1 |==> true
236:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 != expPos < str.length() - 1
237:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
238:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 && expPos < str.length() - 1 |==> false
239:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
240:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
241:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 && expPos < str.length() - 1 |==> true
242:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):510:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 || expPos < str.length() - 1
243:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:1 |==> 0
244:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:1 |==> -1
245:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:expPos + 1 |==> expPos % 1
246:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:expPos + 1 |==> expPos * 1
247:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:expPos + 1 |==> expPos - 1
248:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:expPos + 1 |==> expPos / 1
249:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:1 |==> 0
250:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:1 |==> -1
251:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:str.length() - 1 |==> str.length() % 1
252:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:str.length() - 1 |==> str.length() * 1
253:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:str.length() - 1 |==> str.length() + 1
254:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):511:str.length() - 1 |==> str.length() / 1
255:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:0 |==> 1
256:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:0 |==> -1
257:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:1 |==> 0
258:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:1 |==> -1
259:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:str.length() - 1 |==> str.length() % 1
260:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:str.length() - 1 |==> str.length() * 1
261:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:str.length() - 1 |==> str.length() + 1
262:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):516:str.length() - 1 |==> str.length() / 1
263:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) != isAllZeros(exp)
264:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
265:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):517:isAllZeros(mant) && isAllZeros(exp) |==> false
266:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
267:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
268:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):517:isAllZeros(mant) && isAllZeros(exp) |==> true
269:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) || isAllZeros(exp)
270:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null |==> dec != null
271:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null |==> false
272:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null |==> true
273:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):522:exp == null |==> exp != null
274:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):522:exp == null |==> false
275:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):522:exp == null |==> true
276:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null |==> dec == null != (exp == null)
277:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null |==> dec == null == (exp == null)
278:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):522:dec == null && exp == null |==> false
279:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null |==> dec == null
280:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):522:dec == null && exp == null |==> exp == null
281:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):522:dec == null && exp == null |==> true
282:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null |==> dec == null || exp == null
283:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:0 |==> 1
284:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:0 |==> -1
285:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' |==> numeric.charAt(0) != '-'
286:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' |==> numeric.charAt(0) < '-'
287:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' |==> numeric.charAt(0) <= '-'
288:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' |==> numeric.charAt(0) > '-'
289:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' |==> numeric.charAt(0) >= '-'
290:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' |==> false
291:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' |==> true
292:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:1 |==> 0
293:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:1 |==> -1
294:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' != isDigits(numeric.substring(1))
295:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' == isDigits(numeric.substring(1))
296:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> false
297:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-'
298:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> isDigits(numeric.substring(1))
299:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> true
300:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' || isDigits(numeric.substring(1))
301:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) != isDigits(numeric)
302:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) && isDigits(numeric)
303:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) == isDigits(numeric)
304:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> false
305:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> numeric.charAt(0) == '-' && isDigits(numeric.substring(1))
306:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> isDigits(numeric)
307:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> true
308:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (dec == null && exp == null) != (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
309:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (dec == null && exp == null) == (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
310:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> false
311:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> dec == null && exp == null
312:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
313:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):523:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> true
314:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):521:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> dec == null && exp == null || (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
315:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:0.0F |==> 1.0F
316:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:0.0F |==> -1.0F
317:ROR:==(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F |==> f.floatValue() != 0.0F
318:ROR:==(float,float):<(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F |==> f.floatValue() < 0.0F
319:ROR:==(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
320:ROR:==(float,float):>(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F |==> f.floatValue() > 0.0F
321:ROR:==(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
322:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F |==> false
323:ROR:==(float,float):TRUE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F |==> true
324:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F != !allZeros
325:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
326:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F && !allZeros |==> false
327:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
328:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F && !allZeros |==> !allZeros
329:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F && !allZeros |==> true
330:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F || !allZeros
331:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
332:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() && (f.floatValue() == 0.0F && !allZeros)
333:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() == (f.floatValue() == 0.0F && !allZeros)
334:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> false
335:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
336:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
337:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
338:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:0.0 |==> 1.0
339:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:0.0 |==> -1.0
340:ROR:==(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 |==> d.floatValue() != 0.0
341:ROR:==(double,double):<(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 |==> d.floatValue() < 0.0
342:ROR:==(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 |==> d.floatValue() <= 0.0
343:ROR:==(double,double):>(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 |==> d.floatValue() > 0.0
344:ROR:==(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 |==> d.floatValue() >= 0.0
345:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 |==> false
346:ROR:==(double,double):TRUE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 |==> true
347:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 != !allZeros
348:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 == !allZeros
349:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 && !allZeros |==> false
350:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0
351:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 && !allZeros |==> !allZeros
352:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 && !allZeros |==> true
353:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 || !allZeros
354:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.floatValue() == 0.0 && !allZeros)
355:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() && (d.floatValue() == 0.0 && !allZeros)
356:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() == (d.floatValue() == 0.0 && !allZeros)
357:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> false
358:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite()
359:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> (d.floatValue() == 0.0 && !allZeros)
360:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> true
361:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:-1 |==> 0
362:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:-1 |==> 1
363:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 |==> expPos != -1
364:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 |==> expPos < -1
365:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 |==> expPos <= -1
366:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 |==> expPos == -1
367:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 |==> expPos >= -1
368:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 |==> false
369:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 |==> true
370:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:1 |==> 0
371:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:1 |==> -1
372:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:str.length() - 1 |==> str.length() % 1
373:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:str.length() - 1 |==> str.length() * 1
374:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:str.length() - 1 |==> str.length() + 1
375:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:str.length() - 1 |==> str.length() / 1
376:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos < str.length() - 1 |==> expPos != str.length() - 1
377:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos < str.length() - 1 |==> expPos <= str.length() - 1
378:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos < str.length() - 1 |==> expPos == str.length() - 1
379:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos < str.length() - 1 |==> expPos > str.length() - 1
380:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos < str.length() - 1 |==> expPos >= str.length() - 1
381:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos < str.length() - 1 |==> false
382:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos < str.length() - 1 |==> true
383:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 != expPos < str.length() - 1
384:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
385:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 && expPos < str.length() - 1 |==> false
386:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
387:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
388:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 && expPos < str.length() - 1 |==> true
389:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):570:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 || expPos < str.length() - 1
390:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):571:1 |==> 0
391:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):571:1 |==> -1
392:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):571:expPos + 1 |==> expPos % 1
393:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):571:expPos + 1 |==> expPos * 1
394:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):571:expPos + 1 |==> expPos - 1
395:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):571:expPos + 1 |==> expPos / 1
396:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null |==> dec != null
397:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null |==> false
398:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null |==> true
399:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:exp == null |==> exp != null
400:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:exp == null |==> false
401:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:exp == null |==> true
402:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null && exp == null |==> dec == null != (exp == null)
403:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null && exp == null |==> dec == null == (exp == null)
404:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null && exp == null |==> false
405:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null && exp == null |==> dec == null
406:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null && exp == null |==> exp == null
407:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null && exp == null |==> true
408:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):575:dec == null && exp == null |==> dec == null || exp == null
409:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) != isAllZeros(exp)
410:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
411:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):591:isAllZeros(mant) && isAllZeros(exp) |==> false
412:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
413:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
414:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):591:isAllZeros(mant) && isAllZeros(exp) |==> true
415:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) || isAllZeros(exp)
416:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:7 |==> 0
417:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:7 |==> -7
418:ROR:<=(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:numDecimals <= 7 |==> numDecimals != 7
419:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:numDecimals <= 7 |==> numDecimals < 7
420:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:numDecimals <= 7 |==> numDecimals == 7
421:ROR:<=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:numDecimals <= 7 |==> numDecimals > 7
422:ROR:<=(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:numDecimals <= 7 |==> numDecimals >= 7
423:ROR:<=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:numDecimals <= 7 |==> false
424:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):593:numDecimals <= 7 |==> true
425:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:0.0F |==> 1.0F
426:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:0.0F |==> -1.0F
427:ROR:==(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F |==> f.floatValue() != 0.0F
428:ROR:==(float,float):<(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F |==> f.floatValue() < 0.0F
429:ROR:==(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
430:ROR:==(float,float):>(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F |==> f.floatValue() > 0.0F
431:ROR:==(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
432:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F |==> false
433:ROR:==(float,float):TRUE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F |==> true
434:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F != !allZeros
435:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
436:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F && !allZeros |==> false
437:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
438:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F && !allZeros |==> !allZeros
439:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F && !allZeros |==> true
440:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F || !allZeros
441:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
442:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() && (f.floatValue() == 0.0F && !allZeros)
443:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() == (f.floatValue() == 0.0F && !allZeros)
444:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> false
445:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
446:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
447:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
448:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:16 |==> 0
449:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:16 |==> -16
450:ROR:<=(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:numDecimals <= 16 |==> numDecimals != 16
451:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:numDecimals <= 16 |==> numDecimals < 16
452:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:numDecimals <= 16 |==> numDecimals == 16
453:ROR:<=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:numDecimals <= 16 |==> numDecimals > 16
454:ROR:<=(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:numDecimals <= 16 |==> numDecimals >= 16
455:ROR:<=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:numDecimals <= 16 |==> false
456:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):603:numDecimals <= 16 |==> true
457:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:0.0 |==> 1.0
458:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:0.0 |==> -1.0
459:ROR:==(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 |==> d.doubleValue() != 0.0
460:ROR:==(double,double):<(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 |==> d.doubleValue() < 0.0
461:ROR:==(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 |==> d.doubleValue() <= 0.0
462:ROR:==(double,double):>(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 |==> d.doubleValue() > 0.0
463:ROR:==(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 |==> d.doubleValue() >= 0.0
464:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 |==> false
465:ROR:==(double,double):TRUE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 |==> true
466:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 != !allZeros
467:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 == !allZeros
468:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 && !allZeros |==> false
469:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0
470:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 && !allZeros |==> !allZeros
471:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 && !allZeros |==> true
472:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 || !allZeros
473:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.doubleValue() == 0.0 && !allZeros)
474:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() && (d.doubleValue() == 0.0 && !allZeros)
475:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() == (d.doubleValue() == 0.0 && !allZeros)
476:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> false
477:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite()
478:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> (d.doubleValue() == 0.0 && !allZeros)
479:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber(java.lang.String):605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> true
480:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):625:str == null |==> str != null
481:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):625:str == null |==> false
482:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):625:str == null |==> true
483:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):626:true |==> false
484:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:1 |==> 0
485:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:1 |==> -1
486:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:str.length() - 1 |==> str.length() % 1
487:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:str.length() - 1 |==> str.length() * 1
488:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:str.length() - 1 |==> str.length() + 1
489:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:str.length() - 1 |==> str.length() / 1
490:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:0 |==> 1
491:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:0 |==> -1
492:ROR:>=(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:i >= 0 |==> i != 0
493:ROR:>=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:i >= 0 |==> i < 0
494:ROR:>=(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:i >= 0 |==> i <= 0
495:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:i >= 0 |==> i == 0
496:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:i >= 0 |==> i > 0
497:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:i >= 0 |==> false
498:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):628:i >= 0 |==> true
499:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):629:str.charAt(i) != '0' |==> str.charAt(i) < '0'
500:ROR:!=(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):629:str.charAt(i) != '0' |==> str.charAt(i) <= '0'
501:ROR:!=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):629:str.charAt(i) != '0' |==> str.charAt(i) == '0'
502:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):629:str.charAt(i) != '0' |==> str.charAt(i) > '0'
503:ROR:!=(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):629:str.charAt(i) != '0' |==> str.charAt(i) >= '0'
504:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):629:str.charAt(i) != '0' |==> false
505:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):629:str.charAt(i) != '0' |==> true
506:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):630:false |==> true
507:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:0 |==> 1
508:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:0 |==> -1
509:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:str.length() > 0 |==> str.length() != 0
510:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:str.length() > 0 |==> str.length() < 0
511:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:str.length() > 0 |==> str.length() <= 0
512:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:str.length() > 0 |==> str.length() == 0
513:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:str.length() > 0 |==> str.length() >= 0
514:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:str.length() > 0 |==> false
515:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros(java.lang.String):633:str.length() > 0 |==> true
516:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createFloat(java.lang.String):647:str == null |==> str != null
517:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createFloat(java.lang.String):647:str == null |==> false
518:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createFloat(java.lang.String):647:str == null |==> true
519:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createDouble(java.lang.String):663:str == null |==> str != null
520:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createDouble(java.lang.String):663:str == null |==> false
521:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createDouble(java.lang.String):663:str == null |==> true
522:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createInteger(java.lang.String):680:str == null |==> str != null
523:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createInteger(java.lang.String):680:str == null |==> false
524:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createInteger(java.lang.String):680:str == null |==> true
525:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createLong(java.lang.String):698:str == null |==> str != null
526:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createLong(java.lang.String):698:str == null |==> false
527:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createLong(java.lang.String):698:str == null |==> true
528:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):715:str == null |==> str != null
529:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):715:str == null |==> false
530:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):715:str == null |==> true
531:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):718:0 |==> 1
532:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):718:0 |==> -1
533:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):719:10 |==> 0
534:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):719:10 |==> -10
535:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):720:false |==> true
536:COR:str.startsWith("-"):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):721:str.startsWith("-") |==> false
537:COR:str.startsWith("-"):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):721:str.startsWith("-") |==> true
538:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):722:true |==> false
539:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):722:negate = true |==> <NO-OP>
540:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):723:1 |==> 0
541:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):723:1 |==> -1
542:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):723:pos = 1 |==> <NO-OP>
543:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos) != str.startsWith("0x", pos)
544:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos) && str.startsWith("0x", pos)
545:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos) == str.startsWith("0x", pos)
546:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> false
547:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos)
548:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos)
549:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> true
550:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):726:16 |==> 0
551:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):726:16 |==> -16
552:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):726:radix = 16 |==> <NO-OP>
553:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):727:2 |==> 0
554:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):727:2 |==> -2
555:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):727:pos += 2 |==> <NO-OP>
556:COR:str.startsWith("#", pos):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):728:str.startsWith("#", pos) |==> false
557:COR:str.startsWith("#", pos):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):728:str.startsWith("#", pos) |==> true
558:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):729:16 |==> 0
559:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):729:16 |==> -16
560:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):729:radix = 16 |==> <NO-OP>
561:STD:<INC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):730:pos++ |==> <NO-OP>
562:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:1 |==> 0
563:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:1 |==> -1
564:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:pos + 1 |==> pos % 1
565:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:pos + 1 |==> pos * 1
566:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:pos + 1 |==> pos - 1
567:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:pos + 1 |==> pos / 1
568:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.length() > pos + 1 |==> str.length() != pos + 1
569:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.length() > pos + 1 |==> str.length() < pos + 1
570:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.length() > pos + 1 |==> str.length() <= pos + 1
571:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.length() > pos + 1 |==> str.length() == pos + 1
572:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.length() > pos + 1 |==> str.length() >= pos + 1
573:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.length() > pos + 1 |==> false
574:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.length() > pos + 1 |==> true
575:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos) != str.length() > pos + 1
576:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos) == str.length() > pos + 1
577:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.startsWith("0", pos) && str.length() > pos + 1 |==> false
578:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos)
579:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.length() > pos + 1
580:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.startsWith("0", pos) && str.length() > pos + 1 |==> true
581:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos) || str.length() > pos + 1
582:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):732:8 |==> 0
583:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):732:8 |==> -8
584:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):732:radix = 8 |==> <NO-OP>
585:STD:<INC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):733:pos++ |==> <NO-OP>
586:COR:negate:TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):737:negate |==> false
587:COR:negate:FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger(java.lang.String):737:negate |==> true
588:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):750:str == null |==> str != null
589:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):750:str == null |==> false
590:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):750:str == null |==> true
591:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):754:StringUtils.isBlank(str) |==> false
592:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):754:StringUtils.isBlank(str) |==> true
593:COR:str.trim().startsWith("--"):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):757:str.trim().startsWith("--") |==> false
594:COR:str.trim().startsWith("--"):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal(java.lang.String):757:str.trim().startsWith("--") |==> true
595:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long[]):779:validateArray(array) |==> <NO-OP>
596:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(long[]):782:0 |==> 1
597:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(long[]):782:0 |==> -1
598:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(long[]):783:1 |==> 0
599:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(long[]):783:1 |==> -1
600:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):783:i < array.length |==> i != array.length
601:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):783:i < array.length |==> i <= array.length
602:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):783:i < array.length |==> i == array.length
603:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):783:i < array.length |==> i > array.length
604:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):783:i < array.length |==> i >= array.length
605:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):783:i < array.length |==> false
606:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(long[]):783:i < array.length |==> true
607:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):784:array[i] < min |==> array[i] != min
608:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):784:array[i] < min |==> array[i] <= min
609:ROR:<(long,long):==(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):784:array[i] < min |==> array[i] == min
610:ROR:<(long,long):>(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):784:array[i] < min |==> array[i] > min
611:ROR:<(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):784:array[i] < min |==> array[i] >= min
612:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):784:array[i] < min |==> false
613:ROR:<(long,long):TRUE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long[]):784:array[i] < min |==> true
614:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long[]):785:min = array[i] |==> <NO-OP>
615:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int[]):802:validateArray(array) |==> <NO-OP>
616:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(int[]):805:0 |==> 1
617:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(int[]):805:0 |==> -1
618:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(int[]):806:1 |==> 0
619:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(int[]):806:1 |==> -1
620:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):806:j < array.length |==> j != array.length
621:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):806:j < array.length |==> j <= array.length
622:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):806:j < array.length |==> j == array.length
623:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):806:j < array.length |==> j > array.length
624:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):806:j < array.length |==> j >= array.length
625:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):806:j < array.length |==> false
626:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):806:j < array.length |==> true
627:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):807:array[j] < min |==> array[j] != min
628:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):807:array[j] < min |==> array[j] <= min
629:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):807:array[j] < min |==> array[j] == min
630:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):807:array[j] < min |==> array[j] > min
631:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):807:array[j] < min |==> array[j] >= min
632:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):807:array[j] < min |==> false
633:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int[]):807:array[j] < min |==> true
634:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int[]):808:min = array[j] |==> <NO-OP>
635:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short[]):825:validateArray(array) |==> <NO-OP>
636:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(short[]):828:0 |==> 1
637:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(short[]):828:0 |==> -1
638:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(short[]):829:1 |==> 0
639:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(short[]):829:1 |==> -1
640:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):829:i < array.length |==> i != array.length
641:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):829:i < array.length |==> i <= array.length
642:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):829:i < array.length |==> i == array.length
643:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):829:i < array.length |==> i > array.length
644:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):829:i < array.length |==> i >= array.length
645:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):829:i < array.length |==> false
646:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):829:i < array.length |==> true
647:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):830:array[i] < min |==> array[i] != min
648:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):830:array[i] < min |==> array[i] <= min
649:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):830:array[i] < min |==> array[i] == min
650:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):830:array[i] < min |==> array[i] > min
651:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):830:array[i] < min |==> array[i] >= min
652:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):830:array[i] < min |==> false
653:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short[]):830:array[i] < min |==> true
654:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short[]):831:min = array[i] |==> <NO-OP>
655:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte[]):848:validateArray(array) |==> <NO-OP>
656:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(byte[]):851:0 |==> 1
657:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(byte[]):851:0 |==> -1
658:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:1 |==> 0
659:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:1 |==> -1
660:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:i < array.length |==> i != array.length
661:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:i < array.length |==> i <= array.length
662:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:i < array.length |==> i == array.length
663:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:i < array.length |==> i > array.length
664:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:i < array.length |==> i >= array.length
665:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:i < array.length |==> false
666:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):852:i < array.length |==> true
667:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):853:array[i] < min |==> array[i] != min
668:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):853:array[i] < min |==> array[i] <= min
669:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):853:array[i] < min |==> array[i] == min
670:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):853:array[i] < min |==> array[i] > min
671:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):853:array[i] < min |==> array[i] >= min
672:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):853:array[i] < min |==> false
673:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte[]):853:array[i] < min |==> true
674:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte[]):854:min = array[i] |==> <NO-OP>
675:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(double[]):872:validateArray(array) |==> <NO-OP>
676:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(double[]):875:0 |==> 1
677:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(double[]):875:0 |==> -1
678:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(double[]):876:1 |==> 0
679:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(double[]):876:1 |==> -1
680:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):876:i < array.length |==> i != array.length
681:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):876:i < array.length |==> i <= array.length
682:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):876:i < array.length |==> i == array.length
683:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):876:i < array.length |==> i > array.length
684:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):876:i < array.length |==> i >= array.length
685:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):876:i < array.length |==> false
686:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(double[]):876:i < array.length |==> true
687:COR:Double.isNaN(array[i]):TRUE:org.apache.commons.lang3.math.NumberUtils@min(double[]):877:Double.isNaN(array[i]) |==> false
688:COR:Double.isNaN(array[i]):FALSE:org.apache.commons.lang3.math.NumberUtils@min(double[]):877:Double.isNaN(array[i]) |==> true
689:ROR:<(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):880:array[i] < min |==> array[i] != min
690:ROR:<(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):880:array[i] < min |==> array[i] <= min
691:ROR:<(double,double):==(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):880:array[i] < min |==> array[i] == min
692:ROR:<(double,double):>(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):880:array[i] < min |==> array[i] > min
693:ROR:<(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):880:array[i] < min |==> array[i] >= min
694:ROR:<(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):880:array[i] < min |==> false
695:ROR:<(double,double):TRUE(double,double):org.apache.commons.lang3.math.NumberUtils@min(double[]):880:array[i] < min |==> true
696:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(double[]):881:min = array[i] |==> <NO-OP>
697:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(float[]):899:validateArray(array) |==> <NO-OP>
698:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min(float[]):902:0 |==> 1
699:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min(float[]):902:0 |==> -1
700:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min(float[]):903:1 |==> 0
701:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min(float[]):903:1 |==> -1
702:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):903:i < array.length |==> i != array.length
703:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):903:i < array.length |==> i <= array.length
704:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):903:i < array.length |==> i == array.length
705:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):903:i < array.length |==> i > array.length
706:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):903:i < array.length |==> i >= array.length
707:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):903:i < array.length |==> false
708:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(float[]):903:i < array.length |==> true
709:COR:Float.isNaN(array[i]):TRUE:org.apache.commons.lang3.math.NumberUtils@min(float[]):904:Float.isNaN(array[i]) |==> false
710:COR:Float.isNaN(array[i]):FALSE:org.apache.commons.lang3.math.NumberUtils@min(float[]):904:Float.isNaN(array[i]) |==> true
711:ROR:<(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):907:array[i] < min |==> array[i] != min
712:ROR:<(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):907:array[i] < min |==> array[i] <= min
713:ROR:<(float,float):==(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):907:array[i] < min |==> array[i] == min
714:ROR:<(float,float):>(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):907:array[i] < min |==> array[i] > min
715:ROR:<(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):907:array[i] < min |==> array[i] >= min
716:ROR:<(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):907:array[i] < min |==> false
717:ROR:<(float,float):TRUE(float,float):org.apache.commons.lang3.math.NumberUtils@min(float[]):907:array[i] < min |==> true
718:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(float[]):908:min = array[i] |==> <NO-OP>
719:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long[]):927:validateArray(array) |==> <NO-OP>
720:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(long[]):930:0 |==> 1
721:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(long[]):930:0 |==> -1
722:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(long[]):931:1 |==> 0
723:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(long[]):931:1 |==> -1
724:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):931:j < array.length |==> j != array.length
725:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):931:j < array.length |==> j <= array.length
726:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):931:j < array.length |==> j == array.length
727:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):931:j < array.length |==> j > array.length
728:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):931:j < array.length |==> j >= array.length
729:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):931:j < array.length |==> false
730:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(long[]):931:j < array.length |==> true
731:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):932:array[j] > max |==> array[j] != max
732:ROR:>(long,long):<(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):932:array[j] > max |==> array[j] < max
733:ROR:>(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):932:array[j] > max |==> array[j] <= max
734:ROR:>(long,long):==(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):932:array[j] > max |==> array[j] == max
735:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):932:array[j] > max |==> array[j] >= max
736:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):932:array[j] > max |==> false
737:ROR:>(long,long):TRUE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long[]):932:array[j] > max |==> true
738:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long[]):933:max = array[j] |==> <NO-OP>
739:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int[]):950:validateArray(array) |==> <NO-OP>
740:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(int[]):953:0 |==> 1
741:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(int[]):953:0 |==> -1
742:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(int[]):954:1 |==> 0
743:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(int[]):954:1 |==> -1
744:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):954:j < array.length |==> j != array.length
745:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):954:j < array.length |==> j <= array.length
746:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):954:j < array.length |==> j == array.length
747:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):954:j < array.length |==> j > array.length
748:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):954:j < array.length |==> j >= array.length
749:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):954:j < array.length |==> false
750:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):954:j < array.length |==> true
751:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):955:array[j] > max |==> array[j] != max
752:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):955:array[j] > max |==> array[j] < max
753:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):955:array[j] > max |==> array[j] <= max
754:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):955:array[j] > max |==> array[j] == max
755:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):955:array[j] > max |==> array[j] >= max
756:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):955:array[j] > max |==> false
757:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int[]):955:array[j] > max |==> true
758:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int[]):956:max = array[j] |==> <NO-OP>
759:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short[]):973:validateArray(array) |==> <NO-OP>
760:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(short[]):976:0 |==> 1
761:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(short[]):976:0 |==> -1
762:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(short[]):977:1 |==> 0
763:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(short[]):977:1 |==> -1
764:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):977:i < array.length |==> i != array.length
765:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):977:i < array.length |==> i <= array.length
766:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):977:i < array.length |==> i == array.length
767:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):977:i < array.length |==> i > array.length
768:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):977:i < array.length |==> i >= array.length
769:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):977:i < array.length |==> false
770:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):977:i < array.length |==> true
771:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):978:array[i] > max |==> array[i] != max
772:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):978:array[i] > max |==> array[i] < max
773:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):978:array[i] > max |==> array[i] <= max
774:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):978:array[i] > max |==> array[i] == max
775:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):978:array[i] > max |==> array[i] >= max
776:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):978:array[i] > max |==> false
777:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short[]):978:array[i] > max |==> true
778:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short[]):979:max = array[i] |==> <NO-OP>
779:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte[]):996:validateArray(array) |==> <NO-OP>
780:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(byte[]):999:0 |==> 1
781:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(byte[]):999:0 |==> -1
782:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:1 |==> 0
783:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:1 |==> -1
784:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:i < array.length |==> i != array.length
785:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:i < array.length |==> i <= array.length
786:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:i < array.length |==> i == array.length
787:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:i < array.length |==> i > array.length
788:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:i < array.length |==> i >= array.length
789:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:i < array.length |==> false
790:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1000:i < array.length |==> true
791:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1001:array[i] > max |==> array[i] != max
792:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1001:array[i] > max |==> array[i] < max
793:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1001:array[i] > max |==> array[i] <= max
794:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1001:array[i] > max |==> array[i] == max
795:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1001:array[i] > max |==> array[i] >= max
796:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1001:array[i] > max |==> false
797:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte[]):1001:array[i] > max |==> true
798:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte[]):1002:max = array[i] |==> <NO-OP>
799:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(double[]):1020:validateArray(array) |==> <NO-OP>
800:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(double[]):1023:0 |==> 1
801:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(double[]):1023:0 |==> -1
802:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:1 |==> 0
803:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:1 |==> -1
804:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:j < array.length |==> j != array.length
805:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:j < array.length |==> j <= array.length
806:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:j < array.length |==> j == array.length
807:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:j < array.length |==> j > array.length
808:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:j < array.length |==> j >= array.length
809:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:j < array.length |==> false
810:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(double[]):1024:j < array.length |==> true
811:COR:Double.isNaN(array[j]):TRUE:org.apache.commons.lang3.math.NumberUtils@max(double[]):1025:Double.isNaN(array[j]) |==> false
812:COR:Double.isNaN(array[j]):FALSE:org.apache.commons.lang3.math.NumberUtils@max(double[]):1025:Double.isNaN(array[j]) |==> true
813:ROR:>(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1028:array[j] > max |==> array[j] != max
814:ROR:>(double,double):<(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1028:array[j] > max |==> array[j] < max
815:ROR:>(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1028:array[j] > max |==> array[j] <= max
816:ROR:>(double,double):==(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1028:array[j] > max |==> array[j] == max
817:ROR:>(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1028:array[j] > max |==> array[j] >= max
818:ROR:>(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1028:array[j] > max |==> false
819:ROR:>(double,double):TRUE(double,double):org.apache.commons.lang3.math.NumberUtils@max(double[]):1028:array[j] > max |==> true
820:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(double[]):1029:max = array[j] |==> <NO-OP>
821:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(float[]):1047:validateArray(array) |==> <NO-OP>
822:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max(float[]):1050:0 |==> 1
823:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max(float[]):1050:0 |==> -1
824:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:1 |==> 0
825:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:1 |==> -1
826:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:j < array.length |==> j != array.length
827:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:j < array.length |==> j <= array.length
828:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:j < array.length |==> j == array.length
829:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:j < array.length |==> j > array.length
830:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:j < array.length |==> j >= array.length
831:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:j < array.length |==> false
832:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(float[]):1051:j < array.length |==> true
833:COR:Float.isNaN(array[j]):TRUE:org.apache.commons.lang3.math.NumberUtils@max(float[]):1052:Float.isNaN(array[j]) |==> false
834:COR:Float.isNaN(array[j]):FALSE:org.apache.commons.lang3.math.NumberUtils@max(float[]):1052:Float.isNaN(array[j]) |==> true
835:ROR:>(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1055:array[j] > max |==> array[j] != max
836:ROR:>(float,float):<(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1055:array[j] > max |==> array[j] < max
837:ROR:>(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1055:array[j] > max |==> array[j] <= max
838:ROR:>(float,float):==(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1055:array[j] > max |==> array[j] == max
839:ROR:>(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1055:array[j] > max |==> array[j] >= max
840:ROR:>(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1055:array[j] > max |==> false
841:ROR:>(float,float):TRUE(float,float):org.apache.commons.lang3.math.NumberUtils@max(float[]):1055:array[j] > max |==> true
842:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(float[]):1056:max = array[j] |==> <NO-OP>
843:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1070:array == null |==> array != null
844:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1070:array == null |==> false
845:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1070:array == null |==> true
846:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:0 |==> 1
847:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:0 |==> -1
848:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:Array.getLength(array) == 0 |==> Array.getLength(array) != 0
849:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:Array.getLength(array) == 0 |==> Array.getLength(array) < 0
850:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:Array.getLength(array) == 0 |==> Array.getLength(array) <= 0
851:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:Array.getLength(array) == 0 |==> Array.getLength(array) > 0
852:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:Array.getLength(array) == 0 |==> Array.getLength(array) >= 0
853:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:Array.getLength(array) == 0 |==> false
854:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray(java.lang.Object):1072:Array.getLength(array) == 0 |==> true
855:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1088:b < a |==> b != a
856:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1088:b < a |==> b <= a
857:ROR:<(long,long):==(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1088:b < a |==> b == a
858:ROR:<(long,long):>(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1088:b < a |==> b > a
859:ROR:<(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1088:b < a |==> b >= a
860:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1088:b < a |==> false
861:ROR:<(long,long):TRUE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1088:b < a |==> true
862:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1089:a = b |==> <NO-OP>
863:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1091:c < a |==> c != a
864:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1091:c < a |==> c <= a
865:ROR:<(long,long):==(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1091:c < a |==> c == a
866:ROR:<(long,long):>(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1091:c < a |==> c > a
867:ROR:<(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1091:c < a |==> c >= a
868:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1091:c < a |==> false
869:ROR:<(long,long):TRUE(long,long):org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1091:c < a |==> true
870:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(long,long,long):1092:a = c |==> <NO-OP>
871:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1106:b < a |==> b != a
872:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1106:b < a |==> b <= a
873:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1106:b < a |==> b == a
874:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1106:b < a |==> b > a
875:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1106:b < a |==> b >= a
876:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1106:b < a |==> false
877:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1106:b < a |==> true
878:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1107:a = b |==> <NO-OP>
879:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1109:c < a |==> c != a
880:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1109:c < a |==> c <= a
881:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1109:c < a |==> c == a
882:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1109:c < a |==> c > a
883:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1109:c < a |==> c >= a
884:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1109:c < a |==> false
885:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1109:c < a |==> true
886:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(int,int,int):1110:a = c |==> <NO-OP>
887:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1124:b < a |==> b != a
888:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1124:b < a |==> b <= a
889:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1124:b < a |==> b == a
890:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1124:b < a |==> b > a
891:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1124:b < a |==> b >= a
892:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1124:b < a |==> false
893:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1124:b < a |==> true
894:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1125:a = b |==> <NO-OP>
895:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1127:c < a |==> c != a
896:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1127:c < a |==> c <= a
897:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1127:c < a |==> c == a
898:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1127:c < a |==> c > a
899:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1127:c < a |==> c >= a
900:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1127:c < a |==> false
901:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1127:c < a |==> true
902:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(short,short,short):1128:a = c |==> <NO-OP>
903:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1142:b < a |==> b != a
904:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1142:b < a |==> b <= a
905:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1142:b < a |==> b == a
906:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1142:b < a |==> b > a
907:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1142:b < a |==> b >= a
908:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1142:b < a |==> false
909:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1142:b < a |==> true
910:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1143:a = b |==> <NO-OP>
911:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1145:c < a |==> c != a
912:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1145:c < a |==> c <= a
913:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1145:c < a |==> c == a
914:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1145:c < a |==> c > a
915:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1145:c < a |==> c >= a
916:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1145:c < a |==> false
917:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1145:c < a |==> true
918:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min(byte,byte,byte):1146:a = c |==> <NO-OP>
919:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1194:b > a |==> b != a
920:ROR:>(long,long):<(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1194:b > a |==> b < a
921:ROR:>(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1194:b > a |==> b <= a
922:ROR:>(long,long):==(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1194:b > a |==> b == a
923:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1194:b > a |==> b >= a
924:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1194:b > a |==> false
925:ROR:>(long,long):TRUE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1194:b > a |==> true
926:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1195:a = b |==> <NO-OP>
927:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1197:c > a |==> c != a
928:ROR:>(long,long):<(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1197:c > a |==> c < a
929:ROR:>(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1197:c > a |==> c <= a
930:ROR:>(long,long):==(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1197:c > a |==> c == a
931:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1197:c > a |==> c >= a
932:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1197:c > a |==> false
933:ROR:>(long,long):TRUE(long,long):org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1197:c > a |==> true
934:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(long,long,long):1198:a = c |==> <NO-OP>
935:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1212:b > a |==> b != a
936:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1212:b > a |==> b < a
937:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1212:b > a |==> b <= a
938:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1212:b > a |==> b == a
939:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1212:b > a |==> b >= a
940:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1212:b > a |==> false
941:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1212:b > a |==> true
942:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1213:a = b |==> <NO-OP>
943:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1215:c > a |==> c != a
944:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1215:c > a |==> c < a
945:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1215:c > a |==> c <= a
946:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1215:c > a |==> c == a
947:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1215:c > a |==> c >= a
948:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1215:c > a |==> false
949:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1215:c > a |==> true
950:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(int,int,int):1216:a = c |==> <NO-OP>
951:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1230:b > a |==> b != a
952:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1230:b > a |==> b < a
953:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1230:b > a |==> b <= a
954:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1230:b > a |==> b == a
955:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1230:b > a |==> b >= a
956:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1230:b > a |==> false
957:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1230:b > a |==> true
958:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1231:a = b |==> <NO-OP>
959:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1233:c > a |==> c != a
960:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1233:c > a |==> c < a
961:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1233:c > a |==> c <= a
962:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1233:c > a |==> c == a
963:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1233:c > a |==> c >= a
964:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1233:c > a |==> false
965:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1233:c > a |==> true
966:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(short,short,short):1234:a = c |==> <NO-OP>
967:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1248:b > a |==> b != a
968:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1248:b > a |==> b < a
969:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1248:b > a |==> b <= a
970:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1248:b > a |==> b == a
971:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1248:b > a |==> b >= a
972:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1248:b > a |==> false
973:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1248:b > a |==> true
974:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1249:a = b |==> <NO-OP>
975:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1251:c > a |==> c != a
976:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1251:c > a |==> c < a
977:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1251:c > a |==> c <= a
978:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1251:c > a |==> c == a
979:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1251:c > a |==> c >= a
980:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1251:c > a |==> false
981:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1251:c > a |==> true
982:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max(byte,byte,byte):1252:a = c |==> <NO-OP>
983:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1301:StringUtils.isEmpty(str) |==> false
984:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1301:StringUtils.isEmpty(str) |==> true
985:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1302:false |==> true
986:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:0 |==> 1
987:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:0 |==> -1
988:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:i < str.length() |==> i != str.length()
989:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:i < str.length() |==> i <= str.length()
990:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:i < str.length() |==> i == str.length()
991:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:i < str.length() |==> i > str.length()
992:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:i < str.length() |==> i >= str.length()
993:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:i < str.length() |==> false
994:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1304:i < str.length() |==> true
995:COR:Character.isDigit(str.charAt(i)):TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1305:Character.isDigit(str.charAt(i)) |==> false
996:COR:Character.isDigit(str.charAt(i)):FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1305:Character.isDigit(str.charAt(i)) |==> true
997:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1306:false |==> true
998:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits(java.lang.String):1309:true |==> false
999:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1326:StringUtils.isEmpty(str) |==> false
1000:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1326:StringUtils.isEmpty(str) |==> true
1001:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1327:false |==> true
1002:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1331:false |==> true
1003:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1332:false |==> true
1004:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1333:false |==> true
1005:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1334:false |==> true
1006:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:0 |==> 1
1007:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:0 |==> -1
1008:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:chars[0] == '-' |==> chars[0] != '-'
1009:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:chars[0] == '-' |==> chars[0] < '-'
1010:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:chars[0] == '-' |==> chars[0] <= '-'
1011:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:chars[0] == '-' |==> chars[0] > '-'
1012:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:chars[0] == '-' |==> chars[0] >= '-'
1013:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:chars[0] == '-' |==> false
1014:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:chars[0] == '-' |==> true
1015:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:1 |==> 0
1016:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:1 |==> -1
1017:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:0 |==> 1
1018:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1336:0 |==> -1
1019:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:1 |==> 0
1020:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:1 |==> -1
1021:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start % 1
1022:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start * 1
1023:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start - 1
1024:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start / 1
1025:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 |==> sz != start + 1
1026:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 |==> sz < start + 1
1027:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 |==> sz <= start + 1
1028:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 |==> sz == start + 1
1029:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 |==> sz >= start + 1
1030:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 |==> false
1031:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 |==> true
1032:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start] == '0' |==> chars[start] != '0'
1033:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start] == '0' |==> chars[start] < '0'
1034:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start] == '0' |==> chars[start] <= '0'
1035:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start] == '0' |==> chars[start] > '0'
1036:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start] == '0' |==> chars[start] >= '0'
1037:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start] == '0' |==> false
1038:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start] == '0' |==> true
1039:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' |==> sz > start + 1 != (chars[start] == '0')
1040:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' |==> sz > start + 1 == (chars[start] == '0')
1041:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' |==> false
1042:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' |==> sz > start + 1
1043:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' |==> chars[start] == '0'
1044:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' |==> true
1045:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' |==> sz > start + 1 || chars[start] == '0'
1046:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:1 |==> 0
1047:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:1 |==> -1
1048:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start % 1
1049:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start * 1
1050:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start - 1
1051:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:start + 1 |==> start / 1
1052:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start + 1] == 'x' |==> chars[start + 1] != 'x'
1053:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start + 1] == 'x' |==> chars[start + 1] < 'x'
1054:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start + 1] == 'x' |==> chars[start + 1] <= 'x'
1055:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start + 1] == 'x' |==> chars[start + 1] > 'x'
1056:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start + 1] == 'x' |==> chars[start + 1] >= 'x'
1057:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start + 1] == 'x' |==> false
1058:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:chars[start + 1] == 'x' |==> true
1059:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> (sz > start + 1 && chars[start] == '0') != (chars[start + 1] == 'x')
1060:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> (sz > start + 1 && chars[start] == '0') == (chars[start + 1] == 'x')
1061:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> false
1062:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> sz > start + 1 && chars[start] == '0'
1063:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start + 1] == 'x'
1064:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> true
1065:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> sz > start + 1 && chars[start] == '0' || chars[start + 1] == 'x'
1066:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1338:2 |==> 0
1067:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1338:2 |==> -2
1068:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1338:start + 2 |==> start % 2
1069:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1338:start + 2 |==> start * 2
1070:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1338:start + 2 |==> start - 2
1071:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1338:start + 2 |==> start / 2
1072:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1339:i == sz |==> i != sz
1073:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1339:i == sz |==> i < sz
1074:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1339:i == sz |==> i <= sz
1075:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1339:i == sz |==> i > sz
1076:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1339:i == sz |==> i >= sz
1077:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1339:i == sz |==> false
1078:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1339:i == sz |==> true
1079:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1340:false |==> true
1080:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:i < chars.length |==> i != chars.length
1081:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:i < chars.length |==> i <= chars.length
1082:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:i < chars.length |==> i == chars.length
1083:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:i < chars.length |==> i > chars.length
1084:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:i < chars.length |==> i >= chars.length
1085:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:i < chars.length |==> false
1086:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1343:i < chars.length |==> true
1087:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' |==> chars[i] != '0'
1088:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' |==> chars[i] <= '0'
1089:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' |==> chars[i] == '0'
1090:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' |==> chars[i] > '0'
1091:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' |==> chars[i] >= '0'
1092:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' |==> false
1093:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' |==> true
1094:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] > '9' |==> chars[i] != '9'
1095:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] > '9' |==> chars[i] < '9'
1096:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] > '9' |==> chars[i] <= '9'
1097:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] > '9' |==> chars[i] == '9'
1098:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] > '9' |==> chars[i] >= '9'
1099:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] > '9' |==> false
1100:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] > '9' |==> true
1101:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' != chars[i] > '9'
1102:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' && chars[i] > '9'
1103:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' == chars[i] > '9'
1104:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' || chars[i] > '9' |==> false
1105:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0'
1106:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] > '9'
1107:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:chars[i] < '0' || chars[i] > '9' |==> true
1108:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' |==> chars[i] != 'a'
1109:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' |==> chars[i] <= 'a'
1110:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' |==> chars[i] == 'a'
1111:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' |==> chars[i] > 'a'
1112:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' |==> chars[i] >= 'a'
1113:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' |==> false
1114:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' |==> true
1115:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] > 'f' |==> chars[i] != 'f'
1116:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] > 'f' |==> chars[i] < 'f'
1117:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] > 'f' |==> chars[i] <= 'f'
1118:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] > 'f' |==> chars[i] == 'f'
1119:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] > 'f' |==> chars[i] >= 'f'
1120:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] > 'f' |==> false
1121:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] > 'f' |==> true
1122:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' != chars[i] > 'f'
1123:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' && chars[i] > 'f'
1124:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' == chars[i] > 'f'
1125:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' || chars[i] > 'f' |==> false
1126:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a'
1127:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] > 'f'
1128:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:chars[i] < 'a' || chars[i] > 'f' |==> true
1129:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') != (chars[i] < 'a' || chars[i] > 'f')
1130:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') == (chars[i] < 'a' || chars[i] > 'f')
1131:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> false
1132:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9')
1133:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < 'a' || chars[i] > 'f')
1134:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1345:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> true
1135:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') || (chars[i] < 'a' || chars[i] > 'f')
1136:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' |==> chars[i] != 'A'
1137:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' |==> chars[i] <= 'A'
1138:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' |==> chars[i] == 'A'
1139:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' |==> chars[i] > 'A'
1140:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' |==> chars[i] >= 'A'
1141:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' |==> false
1142:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' |==> true
1143:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] > 'F' |==> chars[i] != 'F'
1144:ROR:>(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] > 'F' |==> chars[i] < 'F'
1145:ROR:>(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] > 'F' |==> chars[i] <= 'F'
1146:ROR:>(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] > 'F' |==> chars[i] == 'F'
1147:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] > 'F' |==> chars[i] >= 'F'
1148:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] > 'F' |==> false
1149:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] > 'F' |==> true
1150:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' != chars[i] > 'F'
1151:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' && chars[i] > 'F'
1152:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' == chars[i] > 'F'
1153:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' || chars[i] > 'F' |==> false
1154:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A'
1155:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] > 'F'
1156:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:chars[i] < 'A' || chars[i] > 'F' |==> true
1157:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> ((chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')) != (chars[i] < 'A' || chars[i] > 'F')
1158:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> ((chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')) == (chars[i] < 'A' || chars[i] > 'F')
1159:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> false
1160:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')
1161:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < 'A' || chars[i] > 'F')
1162:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1346:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> true
1163:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') || (chars[i] < 'A' || chars[i] > 'F')
1164:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1347:false |==> true
1165:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1350:true |==> false
1166:STD:<DEC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1352:sz-- |==> <NO-OP>
1167:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz |==> i != sz
1168:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz |==> i <= sz
1169:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz |==> i == sz
1170:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz |==> i > sz
1171:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz |==> i >= sz
1172:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz |==> false
1173:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz |==> true
1174:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:1 |==> 0
1175:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:1 |==> -1
1176:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:sz + 1 |==> sz % 1
1177:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:sz + 1 |==> sz * 1
1178:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:sz + 1 |==> sz - 1
1179:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:sz + 1 |==> sz / 1
1180:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 |==> i != sz + 1
1181:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 |==> i <= sz + 1
1182:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 |==> i == sz + 1
1183:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 |==> i > sz + 1
1184:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 |==> i >= sz + 1
1185:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 |==> false
1186:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 |==> true
1187:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns |==> i < sz + 1 != allowSigns
1188:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns |==> i < sz + 1 == allowSigns
1189:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns |==> false
1190:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns |==> i < sz + 1
1191:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns |==> allowSigns
1192:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns |==> true
1193:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns |==> i < sz + 1 || allowSigns
1194:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns && !foundDigit |==> (i < sz + 1 && allowSigns) != !foundDigit
1195:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns && !foundDigit |==> (i < sz + 1 && allowSigns) == !foundDigit
1196:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns && !foundDigit |==> false
1197:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns && !foundDigit |==> i < sz + 1 && allowSigns
1198:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns && !foundDigit |==> !foundDigit
1199:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns && !foundDigit |==> true
1200:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz + 1 && allowSigns && !foundDigit |==> i < sz + 1 && allowSigns || !foundDigit
1201:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz != (i < sz + 1 && allowSigns && !foundDigit)
1202:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz && (i < sz + 1 && allowSigns && !foundDigit)
1203:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz == (i < sz + 1 && allowSigns && !foundDigit)
1204:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> false
1205:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz
1206:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> (i < sz + 1 && allowSigns && !foundDigit)
1207:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> true
1208:ROR:>=(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' |==> chars[i] != '0'
1209:ROR:>=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' |==> chars[i] < '0'
1210:ROR:>=(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' |==> chars[i] <= '0'
1211:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' |==> chars[i] == '0'
1212:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' |==> chars[i] > '0'
1213:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' |==> false
1214:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' |==> true
1215:ROR:<=(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] <= '9' |==> chars[i] != '9'
1216:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] <= '9' |==> chars[i] < '9'
1217:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] <= '9' |==> chars[i] == '9'
1218:ROR:<=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] <= '9' |==> chars[i] > '9'
1219:ROR:<=(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] <= '9' |==> chars[i] >= '9'
1220:ROR:<=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] <= '9' |==> false
1221:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] <= '9' |==> true
1222:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' != chars[i] <= '9'
1223:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
1224:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' && chars[i] <= '9' |==> false
1225:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
1226:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
1227:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' && chars[i] <= '9' |==> true
1228:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' || chars[i] <= '9'
1229:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1359:true |==> false
1230:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1359:foundDigit = true |==> <NO-OP>
1231:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1360:false |==> true
1232:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1360:allowSigns = false |==> <NO-OP>
1233:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1362:chars[i] == '.' |==> chars[i] != '.'
1234:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1362:chars[i] == '.' |==> chars[i] < '.'
1235:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1362:chars[i] == '.' |==> chars[i] <= '.'
1236:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1362:chars[i] == '.' |==> chars[i] > '.'
1237:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1362:chars[i] == '.' |==> chars[i] >= '.'
1238:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1362:chars[i] == '.' |==> false
1239:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1362:chars[i] == '.' |==> true
1240:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1363:hasDecPoint || hasExp |==> hasDecPoint != hasExp
1241:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1363:hasDecPoint || hasExp |==> hasDecPoint && hasExp
1242:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1363:hasDecPoint || hasExp |==> hasDecPoint == hasExp
1243:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1363:hasDecPoint || hasExp |==> false
1244:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1363:hasDecPoint || hasExp |==> hasDecPoint
1245:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1363:hasDecPoint || hasExp |==> hasExp
1246:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1363:hasDecPoint || hasExp |==> true
1247:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1365:false |==> true
1248:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:true |==> false
1249:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1367:hasDecPoint = true |==> <NO-OP>
1250:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' |==> chars[i] != 'e'
1251:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' |==> chars[i] < 'e'
1252:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' |==> chars[i] <= 'e'
1253:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' |==> chars[i] > 'e'
1254:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' |==> chars[i] >= 'e'
1255:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' |==> false
1256:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' |==> true
1257:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'E' |==> chars[i] != 'E'
1258:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'E' |==> chars[i] < 'E'
1259:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'E' |==> chars[i] <= 'E'
1260:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'E' |==> chars[i] > 'E'
1261:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'E' |==> chars[i] >= 'E'
1262:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'E' |==> false
1263:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'E' |==> true
1264:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
1265:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' && chars[i] == 'E'
1266:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' == (chars[i] == 'E')
1267:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' || chars[i] == 'E' |==> false
1268:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
1269:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
1270:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1368:chars[i] == 'e' || chars[i] == 'E' |==> true
1271:COR:hasExp:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1370:hasExp |==> false
1272:COR:hasExp:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1370:hasExp |==> true
1273:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1372:false |==> true
1274:COR:foundDigit:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1374:foundDigit |==> false
1275:COR:foundDigit:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1374:foundDigit |==> true
1276:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1375:false |==> true
1277:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:true |==> false
1278:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1377:hasExp = true |==> <NO-OP>
1279:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1378:true |==> false
1280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1378:allowSigns = true |==> <NO-OP>
1281:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' |==> chars[i] != '+'
1282:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' |==> chars[i] < '+'
1283:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' |==> chars[i] <= '+'
1284:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' |==> chars[i] > '+'
1285:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' |==> chars[i] >= '+'
1286:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' |==> false
1287:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' |==> true
1288:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '-' |==> chars[i] != '-'
1289:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '-' |==> chars[i] < '-'
1290:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '-' |==> chars[i] <= '-'
1291:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '-' |==> chars[i] > '-'
1292:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '-' |==> chars[i] >= '-'
1293:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '-' |==> false
1294:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '-' |==> true
1295:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' != (chars[i] == '-')
1296:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' && chars[i] == '-'
1297:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' == (chars[i] == '-')
1298:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' || chars[i] == '-' |==> false
1299:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+'
1300:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '-'
1301:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1379:chars[i] == '+' || chars[i] == '-' |==> true
1302:COR:allowSigns:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1380:allowSigns |==> false
1303:COR:allowSigns:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1380:allowSigns |==> true
1304:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1381:false |==> true
1305:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1383:false |==> true
1306:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1383:allowSigns = false |==> <NO-OP>
1307:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1384:false |==> true
1308:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1384:foundDigit = false |==> <NO-OP>
1309:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1386:false |==> true
1310:STD:<INC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1388:i++ |==> <NO-OP>
1311:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:i < chars.length |==> i != chars.length
1312:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:i < chars.length |==> i <= chars.length
1313:ROR:<(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:i < chars.length |==> i == chars.length
1314:ROR:<(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:i < chars.length |==> i > chars.length
1315:ROR:<(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:i < chars.length |==> i >= chars.length
1316:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:i < chars.length |==> false
1317:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1390:i < chars.length |==> true
1318:ROR:>=(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' |==> chars[i] != '0'
1319:ROR:>=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' |==> chars[i] < '0'
1320:ROR:>=(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' |==> chars[i] <= '0'
1321:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' |==> chars[i] == '0'
1322:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' |==> chars[i] > '0'
1323:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' |==> false
1324:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' |==> true
1325:ROR:<=(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] <= '9' |==> chars[i] != '9'
1326:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] <= '9' |==> chars[i] < '9'
1327:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] <= '9' |==> chars[i] == '9'
1328:ROR:<=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] <= '9' |==> chars[i] > '9'
1329:ROR:<=(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] <= '9' |==> chars[i] >= '9'
1330:ROR:<=(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] <= '9' |==> false
1331:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] <= '9' |==> true
1332:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' != chars[i] <= '9'
1333:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
1334:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' && chars[i] <= '9' |==> false
1335:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
1336:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
1337:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' && chars[i] <= '9' |==> true
1338:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' || chars[i] <= '9'
1339:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1393:true |==> false
1340:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' |==> chars[i] != 'e'
1341:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' |==> chars[i] < 'e'
1342:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' |==> chars[i] <= 'e'
1343:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' |==> chars[i] > 'e'
1344:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' |==> chars[i] >= 'e'
1345:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' |==> false
1346:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' |==> true
1347:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'E' |==> chars[i] != 'E'
1348:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'E' |==> chars[i] < 'E'
1349:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'E' |==> chars[i] <= 'E'
1350:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'E' |==> chars[i] > 'E'
1351:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'E' |==> chars[i] >= 'E'
1352:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'E' |==> false
1353:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'E' |==> true
1354:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
1355:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' && chars[i] == 'E'
1356:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' == (chars[i] == 'E')
1357:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' || chars[i] == 'E' |==> false
1358:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
1359:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
1360:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1395:chars[i] == 'e' || chars[i] == 'E' |==> true
1361:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1397:false |==> true
1362:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:chars[i] == '.' |==> chars[i] != '.'
1363:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:chars[i] == '.' |==> chars[i] < '.'
1364:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:chars[i] == '.' |==> chars[i] <= '.'
1365:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:chars[i] == '.' |==> chars[i] > '.'
1366:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:chars[i] == '.' |==> chars[i] >= '.'
1367:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:chars[i] == '.' |==> false
1368:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1399:chars[i] == '.' |==> true
1369:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:hasDecPoint || hasExp |==> hasDecPoint != hasExp
1370:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:hasDecPoint || hasExp |==> hasDecPoint && hasExp
1371:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:hasDecPoint || hasExp |==> hasDecPoint == hasExp
1372:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:hasDecPoint || hasExp |==> false
1373:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:hasDecPoint || hasExp |==> hasDecPoint
1374:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:hasDecPoint || hasExp |==> hasExp
1375:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1400:hasDecPoint || hasExp |==> true
1376:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1402:false |==> true
1377:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' |==> chars[i] != 'd'
1378:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' |==> chars[i] < 'd'
1379:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' |==> chars[i] <= 'd'
1380:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' |==> chars[i] > 'd'
1381:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' |==> chars[i] >= 'd'
1382:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' |==> false
1383:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' |==> true
1384:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'D' |==> chars[i] != 'D'
1385:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'D' |==> chars[i] < 'D'
1386:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'D' |==> chars[i] <= 'D'
1387:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'D' |==> chars[i] > 'D'
1388:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'D' |==> chars[i] >= 'D'
1389:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'D' |==> false
1390:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'D' |==> true
1391:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' != (chars[i] == 'D')
1392:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' && chars[i] == 'D'
1393:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' == (chars[i] == 'D')
1394:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'd' || chars[i] == 'D' |==> false
1395:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd'
1396:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'D'
1397:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1409:chars[i] == 'd' || chars[i] == 'D' |==> true
1398:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'f' |==> chars[i] != 'f'
1399:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'f' |==> chars[i] < 'f'
1400:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'f' |==> chars[i] <= 'f'
1401:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'f' |==> chars[i] > 'f'
1402:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'f' |==> chars[i] >= 'f'
1403:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'f' |==> false
1404:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'f' |==> true
1405:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') != (chars[i] == 'f')
1406:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') && chars[i] == 'f'
1407:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') == (chars[i] == 'f')
1408:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> false
1409:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'd' || chars[i] == 'D'
1410:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'f'
1411:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1410:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> true
1412:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'F' |==> chars[i] != 'F'
1413:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'F' |==> chars[i] < 'F'
1414:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'F' |==> chars[i] <= 'F'
1415:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'F' |==> chars[i] > 'F'
1416:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'F' |==> chars[i] >= 'F'
1417:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'F' |==> false
1418:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'F' |==> true
1419:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') != (chars[i] == 'F')
1420:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') && chars[i] == 'F'
1421:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') == (chars[i] == 'F')
1422:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> false
1423:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f'
1424:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'F'
1425:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1411:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> true
1426:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1407:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns != (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1427:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1407:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns == (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1428:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> false
1429:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1407:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns
1430:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1431:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1408:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> true
1432:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1407:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns || (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1433:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' |==> chars[i] != 'l'
1434:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' |==> chars[i] < 'l'
1435:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' |==> chars[i] <= 'l'
1436:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' |==> chars[i] > 'l'
1437:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' |==> chars[i] >= 'l'
1438:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' |==> false
1439:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' |==> true
1440:ROR:==(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'L' |==> chars[i] != 'L'
1441:ROR:==(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'L' |==> chars[i] < 'L'
1442:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'L' |==> chars[i] <= 'L'
1443:ROR:==(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'L' |==> chars[i] > 'L'
1444:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'L' |==> chars[i] >= 'L'
1445:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'L' |==> false
1446:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'L' |==> true
1447:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' != (chars[i] == 'L')
1448:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' && chars[i] == 'L'
1449:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' == (chars[i] == 'L')
1450:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'l' || chars[i] == 'L' |==> false
1451:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1414:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l'
1452:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'L'
1453:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1415:chars[i] == 'l' || chars[i] == 'L' |==> true
1454:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp |==> foundDigit != !hasExp
1455:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp |==> foundDigit == !hasExp
1456:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp |==> false
1457:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp |==> foundDigit
1458:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp |==> !hasExp
1459:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp |==> true
1460:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp |==> foundDigit || !hasExp
1461:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp && !hasDecPoint |==> (foundDigit && !hasExp) != !hasDecPoint
1462:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp && !hasDecPoint |==> (foundDigit && !hasExp) == !hasDecPoint
1463:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp && !hasDecPoint |==> false
1464:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp && !hasDecPoint |==> foundDigit && !hasExp
1465:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp && !hasDecPoint |==> !hasDecPoint
1466:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp && !hasDecPoint |==> true
1467:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1417:foundDigit && !hasExp && !hasDecPoint |==> foundDigit && !hasExp || !hasDecPoint
1468:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1420:false |==> true
1469:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:!allowSigns && foundDigit |==> !allowSigns != foundDigit
1470:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:!allowSigns && foundDigit |==> !allowSigns == foundDigit
1471:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:!allowSigns && foundDigit |==> false
1472:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:!allowSigns && foundDigit |==> !allowSigns
1473:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:!allowSigns && foundDigit |==> foundDigit
1474:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:!allowSigns && foundDigit |==> true
1475:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber(java.lang.String):1424:!allowSigns && foundDigit |==> !allowSigns || foundDigit
