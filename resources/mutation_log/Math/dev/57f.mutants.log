1:STD:<CALL>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):96:assignPointsToClusters(clusters, points) |==> <NO-OP>
2:LVR:0:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:0 |==> 1
3:LVR:0:NEG:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:0 |==> -1
4:ROR:<(int,int):!=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:maxIterations < 0 |==> maxIterations != 0
5:ROR:<(int,int):<=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:maxIterations < 0 |==> maxIterations <= 0
6:ROR:<(int,int):==(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:maxIterations < 0 |==> maxIterations == 0
7:ROR:<(int,int):>(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:maxIterations < 0 |==> maxIterations > 0
8:ROR:<(int,int):>=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:maxIterations < 0 |==> maxIterations >= 0
9:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:maxIterations < 0 |==> false
10:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):99:maxIterations < 0 |==> true
11:LVR:0:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:0 |==> 1
12:LVR:0:NEG:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:0 |==> -1
13:ROR:<(int,int):!=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:count < max |==> count != max
14:ROR:<(int,int):<=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:count < max |==> count <= max
15:ROR:<(int,int):==(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:count < max |==> count == max
16:ROR:<(int,int):>(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:count < max |==> count > max
17:ROR:<(int,int):>=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:count < max |==> count >= max
18:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:count < max |==> false
19:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):100:count < max |==> true
20:LVR:FALSE:TRUE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):101:false |==> true
21:COR:cluster.getPoints().isEmpty():TRUE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):105:cluster.getPoints().isEmpty() |==> false
22:COR:cluster.getPoints().isEmpty():FALSE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):105:cluster.getPoints().isEmpty() |==> true
23:LVR:TRUE:FALSE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):119:true |==> false
24:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):119:clusteringChanged = true |==> <NO-OP>
25:COR:newCenter.equals(cluster.getCenter()):TRUE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):122:newCenter.equals(cluster.getCenter()) |==> false
26:COR:newCenter.equals(cluster.getCenter()):FALSE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):122:newCenter.equals(cluster.getCenter()) |==> true
27:LVR:TRUE:FALSE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):123:true |==> false
28:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):123:clusteringChanged = true |==> <NO-OP>
29:STD:<CALL>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):126:newClusters.add(new Cluster<T>(newCenter)) |==> <NO-OP>
30:COR:clusteringChanged:TRUE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):128:clusteringChanged |==> false
31:COR:clusteringChanged:FALSE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):128:clusteringChanged |==> true
32:STD:<CALL>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):131:assignPointsToClusters(newClusters, points) |==> <NO-OP>
33:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@cluster(java.util.Collection<T>,int,int):132:clusters = newClusters |==> <NO-OP>
34:STD:<CALL>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@assignPointsToClusters(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,java.util.Collection<T>):148:cluster.addPoint(p) |==> <NO-OP>
35:STD:<CALL>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):169:resultSet.add(new Cluster<T>(firstPoint)) |==> <NO-OP>
36:ROR:<(int,int):!=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):172:resultSet.size() < k |==> resultSet.size() != k
37:ROR:<(int,int):<=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):172:resultSet.size() < k |==> resultSet.size() <= k
38:ROR:<(int,int):==(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):172:resultSet.size() < k |==> resultSet.size() == k
39:ROR:<(int,int):>(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):172:resultSet.size() < k |==> resultSet.size() > k
40:ROR:<(int,int):>=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):172:resultSet.size() < k |==> resultSet.size() >= k
41:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):172:resultSet.size() < k |==> false
42:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):172:resultSet.size() < k |==> true
43:LVR:0:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):175:0 |==> 1
44:LVR:0:NEG:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):175:0 |==> -1
45:LVR:0:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:0 |==> 1
46:LVR:0:NEG:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:0 |==> -1
47:ROR:<(int,int):!=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:i < pointSet.size() |==> i != pointSet.size()
48:ROR:<(int,int):<=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:i < pointSet.size() |==> i <= pointSet.size()
49:ROR:<(int,int):==(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:i < pointSet.size() |==> i == pointSet.size()
50:ROR:<(int,int):>(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:i < pointSet.size() |==> i > pointSet.size()
51:ROR:<(int,int):>=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:i < pointSet.size() |==> i >= pointSet.size()
52:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:i < pointSet.size() |==> false
53:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):176:i < pointSet.size() |==> true
54:AOR:*(double,double):%(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):180:d * d |==> d % d
55:AOR:*(double,double):+(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):180:d * d |==> d + d
56:AOR:*(double,double):-(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):180:d * d |==> d - d
57:AOR:*(double,double):/(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):180:d * d |==> d / d
58:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):180:sum += d * d |==> <NO-OP>
59:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):181:dx2[i] = sum |==> <NO-OP>
60:AOR:*(double,double):%(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):186:random.nextDouble() * sum |==> random.nextDouble() % sum
61:AOR:*(double,double):+(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):186:random.nextDouble() * sum |==> random.nextDouble() + sum
62:AOR:*(double,double):-(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):186:random.nextDouble() * sum |==> random.nextDouble() - sum
63:AOR:*(double,double):/(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):186:random.nextDouble() * sum |==> random.nextDouble() / sum
64:LVR:0:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:0 |==> 1
65:LVR:0:NEG:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:0 |==> -1
66:ROR:<(int,int):!=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:i < dx2.length |==> i != dx2.length
67:ROR:<(int,int):<=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:i < dx2.length |==> i <= dx2.length
68:ROR:<(int,int):==(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:i < dx2.length |==> i == dx2.length
69:ROR:<(int,int):>(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:i < dx2.length |==> i > dx2.length
70:ROR:<(int,int):>=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:i < dx2.length |==> i >= dx2.length
71:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:i < dx2.length |==> false
72:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):187:i < dx2.length |==> true
73:ROR:>=(double,double):!=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):188:dx2[i] >= r |==> dx2[i] != r
74:ROR:>=(double,double):<(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):188:dx2[i] >= r |==> dx2[i] < r
75:ROR:>=(double,double):<=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):188:dx2[i] >= r |==> dx2[i] <= r
76:ROR:>=(double,double):==(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):188:dx2[i] >= r |==> dx2[i] == r
77:ROR:>=(double,double):>(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):188:dx2[i] >= r |==> dx2[i] > r
78:ROR:>=(double,double):FALSE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):188:dx2[i] >= r |==> false
79:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):188:dx2[i] >= r |==> true
80:STD:<CALL>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@chooseInitialCenters(java.util.Collection<T>,int,java.util.Random):190:resultSet.add(new Cluster<T>(p)) |==> <NO-OP>
81:COR:cluster.getPoints().isEmpty():TRUE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):211:cluster.getPoints().isEmpty() |==> false
82:COR:cluster.getPoints().isEmpty():FALSE:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):211:cluster.getPoints().isEmpty() |==> true
83:STD:<CALL>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):217:stat.increment(point.distanceFrom(center)) |==> <NO-OP>
84:ROR:>(double,double):!=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):222:variance > maxVariance |==> variance != maxVariance
85:ROR:>(double,double):<(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):222:variance > maxVariance |==> variance < maxVariance
86:ROR:>(double,double):<=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):222:variance > maxVariance |==> variance <= maxVariance
87:ROR:>(double,double):==(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):222:variance > maxVariance |==> variance == maxVariance
88:ROR:>(double,double):>=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):222:variance > maxVariance |==> variance >= maxVariance
89:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):222:variance > maxVariance |==> false
90:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):222:variance > maxVariance |==> true
91:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):223:maxVariance = variance |==> <NO-OP>
92:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):224:selected = cluster |==> <NO-OP>
93:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):231:selected == null |==> selected != null
94:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):231:selected == null |==> false
95:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestVarianceCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):231:selected == null |==> true
96:LVR:0:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):249:0 |==> 1
97:LVR:0:NEG:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):249:0 |==> -1
98:ROR:>(int,int):!=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):257:number > maxNumber |==> number != maxNumber
99:ROR:>(int,int):<(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):257:number > maxNumber |==> number < maxNumber
100:ROR:>(int,int):<=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):257:number > maxNumber |==> number <= maxNumber
101:ROR:>(int,int):==(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):257:number > maxNumber |==> number == maxNumber
102:ROR:>(int,int):>=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):257:number > maxNumber |==> number >= maxNumber
103:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):257:number > maxNumber |==> false
104:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):257:number > maxNumber |==> true
105:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):258:maxNumber = number |==> <NO-OP>
106:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):259:selected = cluster |==> <NO-OP>
107:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):265:selected == null |==> selected != null
108:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):265:selected == null |==> false
109:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getPointFromLargestNumberCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):265:selected == null |==> true
110:LVR:NEG:0:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):285:-1 |==> 0
111:LVR:NEG:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):285:-1 |==> 1
112:LVR:0:POS:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:0 |==> 1
113:LVR:0:NEG:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:0 |==> -1
114:ROR:<(int,int):!=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:i < points.size() |==> i != points.size()
115:ROR:<(int,int):<=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:i < points.size() |==> i <= points.size()
116:ROR:<(int,int):==(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:i < points.size() |==> i == points.size()
117:ROR:<(int,int):>(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:i < points.size() |==> i > points.size()
118:ROR:<(int,int):>=(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:i < points.size() |==> i >= points.size()
119:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:i < points.size() |==> false
120:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):291:i < points.size() |==> true
121:ROR:>(double,double):!=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):293:distance > maxDistance |==> distance != maxDistance
122:ROR:>(double,double):<(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):293:distance > maxDistance |==> distance < maxDistance
123:ROR:>(double,double):<=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):293:distance > maxDistance |==> distance <= maxDistance
124:ROR:>(double,double):==(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):293:distance > maxDistance |==> distance == maxDistance
125:ROR:>(double,double):>=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):293:distance > maxDistance |==> distance >= maxDistance
126:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):293:distance > maxDistance |==> false
127:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):293:distance > maxDistance |==> true
128:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):294:maxDistance = distance |==> <NO-OP>
129:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):295:selectedCluster = cluster |==> <NO-OP>
130:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):296:selectedPoint = i |==> <NO-OP>
131:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):303:selectedCluster == null |==> selectedCluster != null
132:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):303:selectedCluster == null |==> false
133:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getFarthestPoint(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>):303:selectedCluster == null |==> true
134:ROR:<(double,double):!=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):325:distance < minDistance |==> distance != minDistance
135:ROR:<(double,double):<=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):325:distance < minDistance |==> distance <= minDistance
136:ROR:<(double,double):==(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):325:distance < minDistance |==> distance == minDistance
137:ROR:<(double,double):>(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):325:distance < minDistance |==> distance > minDistance
138:ROR:<(double,double):>=(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):325:distance < minDistance |==> distance >= minDistance
139:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):325:distance < minDistance |==> false
140:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):325:distance < minDistance |==> true
141:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):326:minDistance = distance |==> <NO-OP>
142:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer@getNearestCluster(java.util.Collection<org.apache.commons.math.stat.clustering.Cluster<T>>,T):327:minCluster = c |==> <NO-OP>