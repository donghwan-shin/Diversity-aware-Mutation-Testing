1:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:0 |==> 1
2:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:0 |==> -1
3:ROR:<(int,int):!=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:i < samples.size() |==> i != samples.size()
4:ROR:<(int,int):<=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:i < samples.size() |==> i <= samples.size()
5:ROR:<(int,int):==(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:i < samples.size() |==> i == samples.size()
6:ROR:<(int,int):>(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:i < samples.size() |==> i > samples.size()
7:ROR:<(int,int):>=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:i < samples.size() |==> i >= samples.size()
8:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:i < samples.size() |==> false
9:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):92:i < samples.size() |==> true
10:STD:<CALL>:<NO-OP>:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):94:singletons.add(sample.getKey()) |==> <NO-OP>
11:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:0 |==> 1
12:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:0 |==> -1
13:ROR:<(double,double):!=(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:sample.getValue() < 0 |==> sample.getValue() != 0
14:ROR:<(double,double):<=(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:sample.getValue() < 0 |==> sample.getValue() <= 0
15:ROR:<(double,double):==(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:sample.getValue() < 0 |==> sample.getValue() == 0
16:ROR:<(double,double):>(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:sample.getValue() < 0 |==> sample.getValue() > 0
17:ROR:<(double,double):>=(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:sample.getValue() < 0 |==> sample.getValue() >= 0
18:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:sample.getValue() < 0 |==> false
19:ROR:<(double,double):TRUE(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):95:sample.getValue() < 0 |==> true
20:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):98:probs[i] = sample.getValue() |==> <NO-OP>
21:LVR:POS:0:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):101:1.0 |==> 0.0
22:LVR:POS:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@<init>(org.apache.commons.math3.random.RandomGenerator,java.util.List<org.apache.commons.math3.util.Pair<T,java.lang.Double>>):101:1.0 |==> -1.0
23:STD:<CALL>:<NO-OP>:org.apache.commons.math3.distribution.DiscreteDistribution@reseedRandomGenerator(long):110:random.setSeed(seed) |==> <NO-OP>
24:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):123:0 |==> 1
25:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):123:0 |==> -1
26:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:0 |==> 1
27:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:0 |==> -1
28:ROR:<(int,int):!=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:i < probabilities.length |==> i != probabilities.length
29:ROR:<(int,int):<=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:i < probabilities.length |==> i <= probabilities.length
30:ROR:<(int,int):==(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:i < probabilities.length |==> i == probabilities.length
31:ROR:<(int,int):>(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:i < probabilities.length |==> i > probabilities.length
32:ROR:<(int,int):>=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:i < probabilities.length |==> i >= probabilities.length
33:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:i < probabilities.length |==> false
34:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):125:i < probabilities.length |==> true
35:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null |==> x != null
36:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null |==> false
37:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null |==> true
38:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:singletons.get(i) == null |==> singletons.get(i) != null
39:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:singletons.get(i) == null |==> false
40:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:singletons.get(i) == null |==> true
41:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null && singletons.get(i) == null |==> x == null != (singletons.get(i) == null)
42:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null && singletons.get(i) == null |==> x == null == (singletons.get(i) == null)
43:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null && singletons.get(i) == null |==> false
44:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null && singletons.get(i) == null |==> x == null
45:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null && singletons.get(i) == null |==> singletons.get(i) == null
46:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null && singletons.get(i) == null |==> true
47:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:x == null && singletons.get(i) == null |==> x == null || singletons.get(i) == null
48:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null |==> x == null
49:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null |==> false
50:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null |==> true
51:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null && x.equals(singletons.get(i)) |==> x != null != x.equals(singletons.get(i))
52:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null && x.equals(singletons.get(i)) |==> x != null == x.equals(singletons.get(i))
53:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null && x.equals(singletons.get(i)) |==> false
54:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null && x.equals(singletons.get(i)) |==> x != null
55:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null && x.equals(singletons.get(i)) |==> x.equals(singletons.get(i))
56:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null && x.equals(singletons.get(i)) |==> true
57:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:x != null && x.equals(singletons.get(i)) |==> x != null || x.equals(singletons.get(i))
58:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:(x == null && singletons.get(i) == null) || (x != null && x.equals(singletons.get(i))) |==> (x == null && singletons.get(i) == null) != (x != null && x.equals(singletons.get(i)))
59:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:(x == null && singletons.get(i) == null) || (x != null && x.equals(singletons.get(i))) |==> (x == null && singletons.get(i) == null) && (x != null && x.equals(singletons.get(i)))
60:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:(x == null && singletons.get(i) == null) || (x != null && x.equals(singletons.get(i))) |==> (x == null && singletons.get(i) == null) == (x != null && x.equals(singletons.get(i)))
61:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:(x == null && singletons.get(i) == null) || (x != null && x.equals(singletons.get(i))) |==> false
62:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:(x == null && singletons.get(i) == null) || (x != null && x.equals(singletons.get(i))) |==> (x == null && singletons.get(i) == null)
63:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):127:(x == null && singletons.get(i) == null) || (x != null && x.equals(singletons.get(i))) |==> (x != null && x.equals(singletons.get(i)))
64:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):126:(x == null && singletons.get(i) == null) || (x != null && x.equals(singletons.get(i))) |==> true
65:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.distribution.DiscreteDistribution@probability(T):128:probability += probabilities[i] |==> <NO-OP>
66:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:0 |==> 1
67:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:0 |==> -1
68:ROR:<(int,int):!=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:i < probabilities.length |==> i != probabilities.length
69:ROR:<(int,int):<=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:i < probabilities.length |==> i <= probabilities.length
70:ROR:<(int,int):==(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:i < probabilities.length |==> i == probabilities.length
71:ROR:<(int,int):>(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:i < probabilities.length |==> i > probabilities.length
72:ROR:<(int,int):>=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:i < probabilities.length |==> i >= probabilities.length
73:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:i < probabilities.length |==> false
74:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():144:i < probabilities.length |==> true
75:STD:<CALL>:<NO-OP>:org.apache.commons.math3.distribution.DiscreteDistribution@getSamples():145:samples.add(new Pair<T, Double>(singletons.get(i), probabilities[i])) |==> <NO-OP>
76:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@sample():158:0 |==> 1
77:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@sample():158:0 |==> -1
78:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:0 |==> 1
79:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:0 |==> -1
80:ROR:<(int,int):!=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:i < probabilities.length |==> i != probabilities.length
81:ROR:<(int,int):<=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:i < probabilities.length |==> i <= probabilities.length
82:ROR:<(int,int):==(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:i < probabilities.length |==> i == probabilities.length
83:ROR:<(int,int):>(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:i < probabilities.length |==> i > probabilities.length
84:ROR:<(int,int):>=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:i < probabilities.length |==> i >= probabilities.length
85:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:i < probabilities.length |==> false
86:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():160:i < probabilities.length |==> true
87:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.distribution.DiscreteDistribution@sample():161:sum += probabilities[i] |==> <NO-OP>
88:ROR:<(double,double):!=(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@sample():162:randomValue < sum |==> randomValue != sum
89:ROR:<(double,double):<=(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@sample():162:randomValue < sum |==> randomValue <= sum
90:ROR:<(double,double):==(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@sample():162:randomValue < sum |==> randomValue == sum
91:ROR:<(double,double):>(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@sample():162:randomValue < sum |==> randomValue > sum
92:ROR:<(double,double):>=(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@sample():162:randomValue < sum |==> randomValue >= sum
93:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@sample():162:randomValue < sum |==> false
94:ROR:<(double,double):TRUE(double,double):org.apache.commons.math3.distribution.DiscreteDistribution@sample():162:randomValue < sum |==> true
95:LVR:POS:0:org.apache.commons.math3.distribution.DiscreteDistribution@sample():170:1 |==> 0
96:LVR:POS:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@sample():170:1 |==> -1
97:AOR:-(int,int):%(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():170:singletons.size() - 1 |==> singletons.size() % 1
98:AOR:-(int,int):*(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():170:singletons.size() - 1 |==> singletons.size() * 1
99:AOR:-(int,int):+(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():170:singletons.size() - 1 |==> singletons.size() + 1
100:AOR:-(int,int):/(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample():170:singletons.size() - 1 |==> singletons.size() / 1
101:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:0 |==> 1
102:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:0 |==> -1
103:ROR:<=(int,int):!=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:sampleSize <= 0 |==> sampleSize != 0
104:ROR:<=(int,int):<(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:sampleSize <= 0 |==> sampleSize < 0
105:ROR:<=(int,int):==(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:sampleSize <= 0 |==> sampleSize == 0
106:ROR:<=(int,int):>(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:sampleSize <= 0 |==> sampleSize > 0
107:ROR:<=(int,int):>=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:sampleSize <= 0 |==> sampleSize >= 0
108:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:sampleSize <= 0 |==> false
109:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):182:sampleSize <= 0 |==> true
110:LVR:0:POS:org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:0 |==> 1
111:LVR:0:NEG:org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:0 |==> -1
112:ROR:<(int,int):!=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:i < sampleSize |==> i != sampleSize
113:ROR:<(int,int):<=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:i < sampleSize |==> i <= sampleSize
114:ROR:<(int,int):==(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:i < sampleSize |==> i == sampleSize
115:ROR:<(int,int):>(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:i < sampleSize |==> i > sampleSize
116:ROR:<(int,int):>=(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:i < sampleSize |==> i >= sampleSize
117:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:i < sampleSize |==> false
118:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):189:i < sampleSize |==> true
119:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.distribution.DiscreteDistribution@sample(int):190:out[i] = sample() |==> <NO-OP>