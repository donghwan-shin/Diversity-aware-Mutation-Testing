1:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:42:2 |==> 0
2:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:42:2 |==> -2
3:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:42:1 |==> 0
4:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:42:1 |==> -1
5:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:45:1 |==> 0
6:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:45:1 |==> -1
7:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:45:1 |==> 0
8:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:45:1 |==> -1
9:LVR:0:POS:org.apache.commons.math3.fraction.Fraction:48:0 |==> 1
10:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction:48:0 |==> -1
11:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:48:1 |==> 0
12:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:48:1 |==> -1
13:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:51:4 |==> 0
14:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:51:4 |==> -4
15:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:51:5 |==> 0
16:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:51:5 |==> -5
17:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:54:1 |==> 0
18:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:54:1 |==> -1
19:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:54:5 |==> 0
20:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:54:5 |==> -5
21:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:57:1 |==> 0
22:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:57:1 |==> -1
23:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:57:2 |==> 0
24:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:57:2 |==> -2
25:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:60:1 |==> 0
26:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:60:1 |==> -1
27:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:60:4 |==> 0
28:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:60:4 |==> -4
29:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:63:1 |==> 0
30:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:63:1 |==> -1
31:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:63:3 |==> 0
32:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:63:3 |==> -3
33:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:66:3 |==> 0
34:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:66:3 |==> -3
35:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:66:5 |==> 0
36:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:66:5 |==> -5
37:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:69:3 |==> 0
38:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:69:3 |==> -3
39:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:69:4 |==> 0
40:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:69:4 |==> -4
41:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:72:2 |==> 0
42:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:72:2 |==> -2
43:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:72:5 |==> 0
44:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:72:5 |==> -5
45:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:75:2 |==> 0
46:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:75:2 |==> -2
47:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:75:4 |==> 0
48:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:75:4 |==> -4
49:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:78:2 |==> 0
50:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:78:2 |==> -2
51:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:78:3 |==> 0
52:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:78:3 |==> -3
53:LVR:NEG:0:org.apache.commons.math3.fraction.Fraction:81:-1 |==> 0
54:LVR:NEG:POS:org.apache.commons.math3.fraction.Fraction:81:-1 |==> 1
55:LVR:POS:0:org.apache.commons.math3.fraction.Fraction:81:1 |==> 0
56:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction:81:1 |==> -1
57:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double):99:1.0E-5 |==> 0.0
58:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double):99:1.0E-5 |==> -1.0E-5
59:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double):99:100 |==> 0
60:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double):99:100 |==> -100
61:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:0 |==> 1
62:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:0 |==> -1
63:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:100 |==> 0
64:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,int):141:100 |==> -100
65:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) != overflow
66:ROR:>(long,long):<(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) < overflow
67:ROR:>(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) <= overflow
68:ROR:>(long,long):==(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) == overflow
69:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> FastMath.abs(a0) >= overflow
70:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> false
71:ROR:>(long,long):TRUE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):181:FastMath.abs(a0) > overflow |==> true
72:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):182:1L |==> 0L
73:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):182:1L |==> -1L
74:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 % value
75:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 * value
76:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 + value
77:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:a0 - value |==> a0 / value
78:ROR:<(double,double):!=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) != epsilon
79:ROR:<(double,double):<=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) <= epsilon
80:ROR:<(double,double):==(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) == epsilon
81:ROR:<(double,double):>(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) > epsilon
82:ROR:<(double,double):>=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> FastMath.abs(a0 - value) >= epsilon
83:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> false
84:ROR:<(double,double):TRUE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):187:FastMath.abs(a0 - value) < epsilon |==> true
85:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:1 |==> 0
86:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):189:1 |==> -1
87:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):193:1 |==> 0
88:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):193:1 |==> -1
89:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):194:0 |==> 1
90:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):194:0 |==> -1
91:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):196:1 |==> 0
92:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):196:1 |==> -1
93:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):198:0 |==> 1
94:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):198:0 |==> -1
95:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):199:1 |==> 0
96:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):199:1 |==> -1
97:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):201:0 |==> 1
98:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):201:0 |==> -1
99:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):202:false |==> true
100:STD:<INC>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):204:++n |==> <NO-OP>
101:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 |==> 0.0
102:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 |==> -1.0
103:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 % a0
104:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 * a0
105:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 + a0
106:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:r0 - a0 |==> r0 / a0
107:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 % (r0 - a0)
108:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 * (r0 - a0)
109:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 + (r0 - a0)
110:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):205:1.0 / (r0 - a0) |==> 1.0 - (r0 - a0)
111:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 % p1
112:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 + p1
113:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 - p1
114:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:a1 * p1 |==> a1 / p1
115:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) % p0
116:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) * p0
117:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) - p0
118:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:(a1 * p1) + p0 |==> (a1 * p1) / p0
119:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):207:p2 = (a1 * p1) + p0 |==> <NO-OP>
120:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 % q1
121:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 + q1
122:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 - q1
123:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:a1 * q1 |==> a1 / q1
124:AOR:+(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) % q0
125:AOR:+(long,long):*(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) * q0
126:AOR:+(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) - q0
127:AOR:+(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:(a1 * q1) + q0 |==> (a1 * q1) / q0
128:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):208:q2 = (a1 * q1) + q0 |==> <NO-OP>
129:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) != overflow
130:ROR:>(long,long):<(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) < overflow
131:ROR:>(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) <= overflow
132:ROR:>(long,long):==(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) == overflow
133:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> FastMath.abs(p2) >= overflow
134:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> false
135:ROR:>(long,long):TRUE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(p2) > overflow |==> true
136:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) != overflow
137:ROR:>(long,long):<(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) < overflow
138:ROR:>(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) <= overflow
139:ROR:>(long,long):==(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) == overflow
140:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> FastMath.abs(q2) >= overflow
141:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> false
142:ROR:>(long,long):TRUE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:FastMath.abs(q2) > overflow |==> true
143:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow) != (FastMath.abs(q2) > overflow)
144:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow) && (FastMath.abs(q2) > overflow)
145:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow) == (FastMath.abs(q2) > overflow)
146:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> false
147:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(p2) > overflow)
148:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> (FastMath.abs(q2) > overflow)
149:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):209:(FastMath.abs(p2) > overflow) || (FastMath.abs(q2) > overflow) |==> true
150:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 % (double)q2
151:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 * (double)q2
152:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 + (double)q2
153:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):213:(double)p2 / (double)q2 |==> (double)p2 - (double)q2
154:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> n != maxIterations
155:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> n <= maxIterations
156:ROR:<(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> n == maxIterations
157:ROR:<(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> n > maxIterations
158:ROR:<(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> n >= maxIterations
159:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> false
160:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations |==> true
161:AOR:-(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent % value
162:AOR:-(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent * value
163:AOR:-(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent + value
164:AOR:-(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:convergent - value |==> convergent / value
165:ROR:>(double,double):!=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) != epsilon
166:ROR:>(double,double):<(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) < epsilon
167:ROR:>(double,double):<=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) <= epsilon
168:ROR:>(double,double):==(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) == epsilon
169:ROR:>(double,double):>=(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) >= epsilon
170:ROR:>(double,double):FALSE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> false
171:ROR:>(double,double):TRUE(double,double):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:FastMath.abs(convergent - value) > epsilon |==> true
172:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations != FastMath.abs(convergent - value) > epsilon
173:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations == FastMath.abs(convergent - value) > epsilon
174:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> false
175:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations
176:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> FastMath.abs(convergent - value) > epsilon
177:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> true
178:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon |==> n < maxIterations || FastMath.abs(convergent - value) > epsilon
179:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> q2 != maxDenominator
180:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> q2 <= maxDenominator
181:ROR:<(long,long):==(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> q2 == maxDenominator
182:ROR:<(long,long):>(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> q2 > maxDenominator
183:ROR:<(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> q2 >= maxDenominator
184:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> false
185:ROR:<(long,long):TRUE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:q2 < maxDenominator |==> true
186:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> (n < maxIterations && FastMath.abs(convergent - value) > epsilon) != q2 < maxDenominator
187:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> (n < maxIterations && FastMath.abs(convergent - value) > epsilon) == q2 < maxDenominator
188:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> false
189:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> n < maxIterations && FastMath.abs(convergent - value) > epsilon
190:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> q2 < maxDenominator
191:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> true
192:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):214:n < maxIterations && FastMath.abs(convergent - value) > epsilon && q2 < maxDenominator |==> n < maxIterations && FastMath.abs(convergent - value) > epsilon || q2 < maxDenominator
193:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):215:p0 = p1 |==> <NO-OP>
194:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):216:p1 = p2 |==> <NO-OP>
195:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):217:q0 = q1 |==> <NO-OP>
196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):218:q1 = q2 |==> <NO-OP>
197:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):219:a0 = a1 |==> <NO-OP>
198:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):220:r0 = r1 |==> <NO-OP>
199:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):222:true |==> false
200:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):222:stop = true |==> <NO-OP>
201:ROR:>=(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> n != maxIterations
202:ROR:>=(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> n < maxIterations
203:ROR:>=(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> n <= maxIterations
204:ROR:>=(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> n == maxIterations
205:ROR:>=(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> n > maxIterations
206:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> false
207:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):226:n >= maxIterations |==> true
208:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> q2 != maxDenominator
209:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> q2 <= maxDenominator
210:ROR:<(long,long):==(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> q2 == maxDenominator
211:ROR:<(long,long):>(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> q2 > maxDenominator
212:ROR:<(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> q2 >= maxDenominator
213:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> false
214:ROR:<(long,long):TRUE(long,long):org.apache.commons.math3.fraction.Fraction@<init>(double,double,int,int):230:q2 < maxDenominator |==> true
215:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(int):246:1 |==> 0
216:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int):246:1 |==> -1
217:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:0 |==> 1
218:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:0 |==> -1
219:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> den != 0
220:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> den < 0
221:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> den <= 0
222:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> den > 0
223:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> den >= 0
224:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> false
225:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):257:den == 0 |==> true
226:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:0 |==> 1
227:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:0 |==> -1
228:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> den != 0
229:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> den <= 0
230:ROR:<(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> den == 0
231:ROR:<(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> den > 0
232:ROR:<(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> den >= 0
233:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> false
234:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):261:den < 0 |==> true
235:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> num != Integer.MIN_VALUE
236:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> num < Integer.MIN_VALUE
237:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> num <= Integer.MIN_VALUE
238:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> num > Integer.MIN_VALUE
239:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> num >= Integer.MIN_VALUE
240:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> false
241:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE |==> true
242:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> den != Integer.MIN_VALUE
243:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> den < Integer.MIN_VALUE
244:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> den <= Integer.MIN_VALUE
245:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> den > Integer.MIN_VALUE
246:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> den >= Integer.MIN_VALUE
247:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> false
248:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:den == Integer.MIN_VALUE |==> true
249:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE != (den == Integer.MIN_VALUE)
250:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE && den == Integer.MIN_VALUE
251:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE == (den == Integer.MIN_VALUE)
252:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> false
253:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> num == Integer.MIN_VALUE
254:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):263:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> den == Integer.MIN_VALUE
255:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@<init>(int,int):262:num == Integer.MIN_VALUE || den == Integer.MIN_VALUE |==> true
256:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:-num |==> +num
257:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:-num |==> ~num
258:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):267:num = -num |==> <NO-OP>
259:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:-den |==> +den
260:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:-den |==> ~den
261:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):268:den = -den |==> <NO-OP>
262:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:1 |==> 0
263:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:1 |==> -1
264:ROR:>(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> d != 1
265:ROR:>(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> d < 1
266:ROR:>(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> d <= 1
267:ROR:>(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> d == 1
268:ROR:>(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> d >= 1
269:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> false
270:ROR:>(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):272:d > 1 |==> true
271:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):273:num /= d |==> <NO-OP>
272:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):274:den /= d |==> <NO-OP>
273:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:0 |==> 1
274:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:0 |==> -1
275:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> den != 0
276:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> den <= 0
277:ROR:<(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> den == 0
278:ROR:<(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> den > 0
279:ROR:<(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> den >= 0
280:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> false
281:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):278:den < 0 |==> true
282:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):279:-num |==> +num
283:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):279:-num |==> ~num
284:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):279:num = -num |==> <NO-OP>
285:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):280:-den |==> +den
286:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@<init>(int,int):280:-den |==> ~den
287:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@<init>(int,int):280:den = -den |==> <NO-OP>
288:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@abs():292:0 |==> 1
289:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@abs():292:0 |==> -1
290:ROR:>=(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> numerator != 0
291:ROR:>=(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> numerator < 0
292:ROR:>=(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> numerator <= 0
293:ROR:>=(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> numerator == 0
294:ROR:>=(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> numerator > 0
295:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> false
296:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@abs():292:numerator >= 0 |==> true
297:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) % object.denominator
298:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) + object.denominator
299:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) - object.denominator
300:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):307:((long)numerator) * object.denominator |==> ((long)numerator) / object.denominator
301:AOR:*(long,long):%(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) % object.numerator
302:AOR:*(long,long):+(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) + object.numerator
303:AOR:*(long,long):-(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) - object.numerator
304:AOR:*(long,long):/(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):308:((long)denominator) * object.numerator |==> ((long)denominator) / object.numerator
305:ROR:<(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> nOd != dOn
306:ROR:<(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> nOd <= dOn
307:ROR:<(long,long):==(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> nOd == dOn
308:ROR:<(long,long):>(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> nOd > dOn
309:ROR:<(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> nOd >= dOn
310:ROR:<(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> false
311:ROR:<(long,long):TRUE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd < dOn |==> true
312:LVR:NEG:0:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:-1 |==> 0
313:LVR:NEG:POS:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:-1 |==> 1
314:ROR:>(long,long):!=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> nOd != dOn
315:ROR:>(long,long):<(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> nOd < dOn
316:ROR:>(long,long):<=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> nOd <= dOn
317:ROR:>(long,long):==(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> nOd == dOn
318:ROR:>(long,long):>=(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> nOd >= dOn
319:ROR:>(long,long):FALSE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> false
320:ROR:>(long,long):TRUE(long,long):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:nOd > dOn |==> true
321:ORU:+(int):-(int):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:+1 |==> -1
322:ORU:+(int):~(int):org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:+1 |==> ~1
323:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:1 |==> 0
324:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:1 |==> -1
325:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:0 |==> 1
326:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@compareTo(org.apache.commons.math3.fraction.Fraction):309:0 |==> -1
327:AOR:/(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator % (double)denominator
328:AOR:/(double,double):*(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator * (double)denominator
329:AOR:/(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator + (double)denominator
330:AOR:/(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@doubleValue():319:(double)numerator / (double)denominator |==> (double)numerator - (double)denominator
331:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):333:this == other |==> this != other
332:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):333:this == other |==> false
333:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):333:this == other |==> true
334:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):334:true |==> false
335:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> numerator != rhs.numerator
336:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> numerator < rhs.numerator
337:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> numerator <= rhs.numerator
338:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> numerator > rhs.numerator
339:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> numerator >= rhs.numerator
340:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> false
341:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:numerator == rhs.numerator |==> true
342:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> denominator != rhs.denominator
343:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> denominator < rhs.denominator
344:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> denominator <= rhs.denominator
345:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> denominator > rhs.denominator
346:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> denominator >= rhs.denominator
347:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> false
348:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:denominator == rhs.denominator |==> true
349:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator) != (denominator == rhs.denominator)
350:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator) == (denominator == rhs.denominator)
351:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> false
352:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator)
353:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):341:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (denominator == rhs.denominator)
354:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> true
355:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):340:(numerator == rhs.numerator) && (denominator == rhs.denominator) |==> (numerator == rhs.numerator) || (denominator == rhs.denominator)
356:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@equals(java.lang.Object):343:false |==> true
357:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> 0
358:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> -37
359:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> 0
360:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():378:37 |==> -37
361:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@hashCode():378:17 |==> 0
362:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@hashCode():378:17 |==> -17
363:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 % 17
364:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 + 17
365:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 - 17
366:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 |==> 37 / 17
367:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 % numerator
368:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 * numerator
369:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 - numerator
370:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * 17 + numerator |==> 37 * 17 / numerator
371:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 % (37 * 17 + numerator)
372:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 + (37 * 17 + numerator)
373:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 - (37 * 17 + numerator)
374:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) |==> 37 / (37 * 17 + numerator)
375:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) % denominator
376:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) * denominator
377:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) - denominator
378:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@hashCode():378:37 * (37 * 17 + numerator) + denominator |==> 37 * (37 * 17 + numerator) / denominator
379:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> numerator != Integer.MIN_VALUE
380:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> numerator < Integer.MIN_VALUE
381:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> numerator <= Integer.MIN_VALUE
382:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> numerator > Integer.MIN_VALUE
383:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> numerator >= Integer.MIN_VALUE
384:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> false
385:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@negate():406:numerator == Integer.MIN_VALUE |==> true
386:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@negate():409:-numerator |==> +numerator
387:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@negate():409:-numerator |==> ~numerator
388:LVR:TRUE:FALSE:org.apache.commons.math3.fraction.Fraction@add(org.apache.commons.math3.fraction.Fraction):431:true |==> false
389:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i % denominator
390:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i + denominator
391:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i - denominator
392:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:i * denominator |==> i / denominator
393:AOR:+(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator % (i * denominator)
394:AOR:+(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator * (i * denominator)
395:AOR:+(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator - i * denominator
396:AOR:+(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@add(int):440:numerator + i * denominator |==> numerator / (i * denominator)
397:LVR:FALSE:TRUE:org.apache.commons.math3.fraction.Fraction@subtract(org.apache.commons.math3.fraction.Fraction):454:false |==> true
398:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i % denominator
399:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i + denominator
400:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i - denominator
401:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:i * denominator |==> i / denominator
402:AOR:-(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator % (i * denominator)
403:AOR:-(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator * (i * denominator)
404:AOR:-(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator + i * denominator
405:AOR:-(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@subtract(int):463:numerator - i * denominator |==> numerator / (i * denominator)
406:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):477:fraction == null |==> fraction != null
407:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):477:fraction == null |==> false
408:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):477:fraction == null |==> true
409:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:0 |==> 1
410:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:0 |==> -1
411:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> numerator != 0
412:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> numerator < 0
413:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> numerator <= 0
414:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> numerator > 0
415:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> numerator >= 0
416:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> false
417:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):481:numerator == 0 |==> true
418:COR:isAdd:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):482:isAdd |==> false
419:COR:isAdd:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):482:isAdd |==> true
420:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:0 |==> 1
421:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:0 |==> -1
422:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> fraction.numerator != 0
423:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> fraction.numerator < 0
424:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> fraction.numerator <= 0
425:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> fraction.numerator > 0
426:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> fraction.numerator >= 0
427:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> false
428:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):484:fraction.numerator == 0 |==> true
429:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:1 |==> 0
430:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:1 |==> -1
431:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> d1 != 1
432:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> d1 < 1
433:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> d1 <= 1
434:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> d1 > 1
435:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> d1 >= 1
436:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> false
437:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):490:d1 == 1 |==> true
438:COR:isAdd:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:isAdd |==> false
439:COR:isAdd:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):495:isAdd |==> true
440:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator % d1
441:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator * d1
442:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator + d1
443:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):503:fraction.denominator / d1 |==> fraction.denominator - d1
444:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator % d1
445:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator * d1
446:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator + d1
447:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):505:denominator / d1 |==> denominator - d1
448:COR:isAdd:TRUE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):506:isAdd |==> false
449:COR:isAdd:FALSE:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):506:isAdd |==> true
450:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:0 |==> 1
451:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:0 |==> -1
452:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> tmodd1 != 0
453:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> tmodd1 < 0
454:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> tmodd1 <= 0
455:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> tmodd1 > 0
456:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> tmodd1 >= 0
457:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> false
458:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):510:tmodd1 == 0 |==> true
459:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:31 |==> 0
460:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:31 |==> -31
461:ROR:>(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> w.bitLength() != 31
462:ROR:>(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> w.bitLength() < 31
463:ROR:>(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> w.bitLength() <= 31
464:ROR:>(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> w.bitLength() == 31
465:ROR:>(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> w.bitLength() >= 31
466:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> false
467:ROR:>(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):514:w.bitLength() > 31 |==> true
468:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator % d1
469:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator * d1
470:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator + d1
471:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):519:denominator / d1 |==> denominator - d1
472:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator % d2
473:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator * d2
474:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator + d2
475:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@addSub(org.apache.commons.math3.fraction.Fraction,boolean):520:fraction.denominator / d2 |==> fraction.denominator - d2
476:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):534:fraction == null |==> fraction != null
477:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):534:fraction == null |==> false
478:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):534:fraction == null |==> true
479:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> 1
480:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> -1
481:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> numerator != 0
482:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> numerator < 0
483:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> numerator <= 0
484:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> numerator > 0
485:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> numerator >= 0
486:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> false
487:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 |==> true
488:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> 1
489:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:0 |==> -1
490:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> fraction.numerator != 0
491:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> fraction.numerator < 0
492:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> fraction.numerator <= 0
493:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> fraction.numerator > 0
494:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> fraction.numerator >= 0
495:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> false
496:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:fraction.numerator == 0 |==> true
497:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> numerator == 0 != (fraction.numerator == 0)
498:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> numerator == 0 && fraction.numerator == 0
499:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> numerator == 0 == (fraction.numerator == 0)
500:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> false
501:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> numerator == 0
502:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> fraction.numerator == 0
503:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):537:numerator == 0 || fraction.numerator == 0 |==> true
504:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator % d1
505:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator * d1
506:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator + d1
507:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:numerator / d1 |==> numerator - d1
508:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator % d2
509:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator * d2
510:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator + d2
511:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):545:fraction.numerator / d2 |==> fraction.numerator - d2
512:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator % d2
513:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator * d2
514:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator + d2
515:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:denominator / d2 |==> denominator - d2
516:AOR:/(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator % d1
517:AOR:/(int,int):*(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator * d1
518:AOR:/(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator + d1
519:AOR:/(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(org.apache.commons.math3.fraction.Fraction):546:fraction.denominator / d1 |==> fraction.denominator - d1
520:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator % i
521:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator + i
522:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator - i
523:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@multiply(int):555:numerator * i |==> numerator / i
524:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):569:fraction == null |==> fraction != null
525:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):569:fraction == null |==> false
526:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):569:fraction == null |==> true
527:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:0 |==> 1
528:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:0 |==> -1
529:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> fraction.numerator != 0
530:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> fraction.numerator < 0
531:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> fraction.numerator <= 0
532:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> fraction.numerator > 0
533:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> fraction.numerator >= 0
534:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> false
535:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@divide(org.apache.commons.math3.fraction.Fraction):572:fraction.numerator == 0 |==> true
536:AOR:*(int,int):%(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator % i
537:AOR:*(int,int):+(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator + i
538:AOR:*(int,int):-(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator - i
539:AOR:*(int,int):/(int,int):org.apache.commons.math3.fraction.Fraction@divide(int):585:denominator * i |==> denominator / i
540:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 |==> 0
541:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 |==> -100
542:AOR:*(double,double):%(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 % doubleValue()
543:AOR:*(double,double):+(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 + doubleValue()
544:AOR:*(double,double):-(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 - doubleValue()
545:AOR:*(double,double):/(double,double):org.apache.commons.math3.fraction.Fraction@percentageValue():597:100 * doubleValue() |==> 100 / doubleValue()
546:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:0 |==> 1
547:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:0 |==> -1
548:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> denominator != 0
549:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> denominator < 0
550:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> denominator <= 0
551:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> denominator > 0
552:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> denominator >= 0
553:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> false
554:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):612:denominator == 0 |==> true
555:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:0 |==> 1
556:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:0 |==> -1
557:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> numerator != 0
558:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> numerator < 0
559:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> numerator <= 0
560:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> numerator > 0
561:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> numerator >= 0
562:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> false
563:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):616:numerator == 0 |==> true
564:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> denominator != Integer.MIN_VALUE
565:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> denominator < Integer.MIN_VALUE
566:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> denominator <= Integer.MIN_VALUE
567:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> denominator > Integer.MIN_VALUE
568:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> denominator >= Integer.MIN_VALUE
569:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> false
570:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE |==> true
571:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:1 |==> 0
572:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:1 |==> -1
573:LOR:&(int,int):^(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:numerator & 1 |==> numerator ^ 1
574:LOR:&(int,int):|(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:numerator & 1 |==> numerator | 1
575:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:0 |==> 1
576:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:0 |==> -1
577:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> (numerator & 1) != 0
578:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> (numerator & 1) < 0
579:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> (numerator & 1) <= 0
580:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> (numerator & 1) > 0
581:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> (numerator & 1) >= 0
582:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> false
583:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:(numerator & 1) == 0 |==> true
584:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE != ((numerator & 1) == 0)
585:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE == ((numerator & 1) == 0)
586:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> false
587:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE
588:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> (numerator & 1) == 0
589:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> true
590:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):620:denominator == Integer.MIN_VALUE && (numerator & 1) == 0 |==> denominator == Integer.MIN_VALUE || (numerator & 1) == 0
591:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> 0
592:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> -2
593:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:numerator /= 2 |==> <NO-OP>
594:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> 0
595:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:2 |==> -2
596:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):621:denominator /= 2 |==> <NO-OP>
597:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:0 |==> 1
598:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:0 |==> -1
599:ROR:<(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> denominator != 0
600:ROR:<(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> denominator <= 0
601:ROR:<(int,int):==(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> denominator == 0
602:ROR:<(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> denominator > 0
603:ROR:<(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> denominator >= 0
604:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> false
605:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):623:denominator < 0 |==> true
606:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> numerator != Integer.MIN_VALUE
607:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> numerator < Integer.MIN_VALUE
608:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> numerator <= Integer.MIN_VALUE
609:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> numerator > Integer.MIN_VALUE
610:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> numerator >= Integer.MIN_VALUE
611:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> false
612:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE |==> true
613:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> denominator != Integer.MIN_VALUE
614:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> denominator < Integer.MIN_VALUE
615:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> denominator <= Integer.MIN_VALUE
616:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> denominator > Integer.MIN_VALUE
617:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> denominator >= Integer.MIN_VALUE
618:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> false
619:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:denominator == Integer.MIN_VALUE |==> true
620:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE != (denominator == Integer.MIN_VALUE)
621:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE && denominator == Integer.MIN_VALUE
622:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE == (denominator == Integer.MIN_VALUE)
623:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> false
624:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> numerator == Integer.MIN_VALUE
625:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):625:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> denominator == Integer.MIN_VALUE
626:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):624:numerator == Integer.MIN_VALUE || denominator == Integer.MIN_VALUE |==> true
627:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:-numerator |==> +numerator
628:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:-numerator |==> ~numerator
629:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):629:numerator = -numerator |==> <NO-OP>
630:ORU:-(int):+(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:-denominator |==> +denominator
631:ORU:-(int):~(int):org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:-denominator |==> ~denominator
632:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):630:denominator = -denominator |==> <NO-OP>
633:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):634:numerator /= gcd |==> <NO-OP>
634:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@getReducedFraction(int,int):635:denominator /= gcd |==> <NO-OP>
635:LVR:POS:0:org.apache.commons.math3.fraction.Fraction@toString():651:1 |==> 0
636:LVR:POS:NEG:org.apache.commons.math3.fraction.Fraction@toString():651:1 |==> -1
637:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> denominator != 1
638:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> denominator < 1
639:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> denominator <= 1
640:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> denominator > 1
641:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> denominator >= 1
642:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> false
643:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@toString():651:denominator == 1 |==> true
644:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():652:str = Integer.toString(numerator) |==> <NO-OP>
645:LVR:0:POS:org.apache.commons.math3.fraction.Fraction@toString():653:0 |==> 1
646:LVR:0:NEG:org.apache.commons.math3.fraction.Fraction@toString():653:0 |==> -1
647:ROR:==(int,int):!=(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> numerator != 0
648:ROR:==(int,int):<(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> numerator < 0
649:ROR:==(int,int):<=(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> numerator <= 0
650:ROR:==(int,int):>(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> numerator > 0
651:ROR:==(int,int):>=(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> numerator >= 0
652:ROR:==(int,int):FALSE(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> false
653:ROR:==(int,int):TRUE(int,int):org.apache.commons.math3.fraction.Fraction@toString():653:numerator == 0 |==> true
654:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():654:str = "0" |==> <NO-OP>
655:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.fraction.Fraction@toString():656:str = numerator + " / " + denominator |==> <NO-OP>