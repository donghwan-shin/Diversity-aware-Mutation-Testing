1:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):86:stepHandlers = new ArrayList<StepHandler>() |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):87:stepStart = Double.NaN |==> <NO-OP>
3:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):88:stepSize = Double.NaN |==> <NO-OP>
4:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):89:eventsStates = new ArrayList<EventState>() |==> <NO-OP>
5:LVR:FALSE:TRUE:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):90:false |==> true
6:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):90:statesInitialized = false |==> <NO-OP>
7:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):91:evaluations = new Incrementor() |==> <NO-OP>
8:LVR:NEG:0:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):92:-1 |==> 0
9:LVR:NEG:POS:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):92:-1 |==> 1
10:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):92:setMaxEvaluations(-1) |==> <NO-OP>
11:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@<init>(java.lang.String):93:evaluations.resetCount() |==> <NO-OP>
12:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@addStepHandler(org.apache.commons.math3.ode.sampling.StepHandler):109:stepHandlers.add(handler) |==> <NO-OP>
13:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@clearStepHandlers():119:stepHandlers.clear() |==> <NO-OP>
14:LVR:POS:0:org.apache.commons.math3.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int):129:5 |==> 0
15:LVR:POS:NEG:org.apache.commons.math3.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int):129:5 |==> -5
16:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int):127:addEventHandler(handler, maxCheckInterval, convergence, maxIterationCount, new BracketingNthOrderBrentSolver(convergence, 5)) |==> <NO-OP>
17:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math3.ode.events.EventHandler,double,double,int,org.apache.commons.math3.analysis.solvers.UnivariateSolver):138:eventsStates.add(new EventState(handler, maxCheckInterval, convergence, maxIterationCount, solver)) |==> <NO-OP>
18:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@getEventHandlers():146:list.add(state.getEventHandler()) |==> <NO-OP>
19:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@clearEventHandlers():153:eventsStates.clear() |==> <NO-OP>
20:LVR:0:POS:org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:0 |==> 1
21:LVR:0:NEG:org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:0 |==> -1
22:ROR:<(int,int):!=(int,int):org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:maxEvaluations < 0 |==> maxEvaluations != 0
23:ROR:<(int,int):<=(int,int):org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:maxEvaluations < 0 |==> maxEvaluations <= 0
24:ROR:<(int,int):==(int,int):org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:maxEvaluations < 0 |==> maxEvaluations == 0
25:ROR:<(int,int):>(int,int):org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:maxEvaluations < 0 |==> maxEvaluations > 0
26:ROR:<(int,int):>=(int,int):org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:maxEvaluations < 0 |==> maxEvaluations >= 0
27:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:maxEvaluations < 0 |==> false
28:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:maxEvaluations < 0 |==> true
29:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@setMaxEvaluations(int):168:evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations) |==> <NO-OP>
30:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@initIntegration(double,double[],double):188:evaluations.resetCount() |==> <NO-OP>
31:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@initIntegration(double,double[],double):191:state.getEventHandler().init(t0, y0, t) |==> <NO-OP>
32:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@initIntegration(double,double[],double):195:handler.init(t0, y0, t) |==> <NO-OP>
33:LVR:FALSE:TRUE:org.apache.commons.math3.ode.AbstractIntegrator@initIntegration(double,double[],double):198:false |==> true
34:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@initIntegration(double,double[],double):198:setStateInitialized(false) |==> <NO-OP>
35:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@setEquations(org.apache.commons.math3.ode.ExpandableStatefulODE):206:this.expandable = equations |==> <NO-OP>
36:ROR:!=(int,int):<(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):215:y0.length != equations.getDimension() |==> y0.length < equations.getDimension()
37:ROR:!=(int,int):<=(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):215:y0.length != equations.getDimension() |==> y0.length <= equations.getDimension()
38:ROR:!=(int,int):==(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):215:y0.length != equations.getDimension() |==> y0.length == equations.getDimension()
39:ROR:!=(int,int):>(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):215:y0.length != equations.getDimension() |==> y0.length > equations.getDimension()
40:ROR:!=(int,int):>=(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):215:y0.length != equations.getDimension() |==> y0.length >= equations.getDimension()
41:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):215:y0.length != equations.getDimension() |==> false
42:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):215:y0.length != equations.getDimension() |==> true
43:ROR:!=(int,int):<(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):218:y.length != equations.getDimension() |==> y.length < equations.getDimension()
44:ROR:!=(int,int):<=(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):218:y.length != equations.getDimension() |==> y.length <= equations.getDimension()
45:ROR:!=(int,int):==(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):218:y.length != equations.getDimension() |==> y.length == equations.getDimension()
46:ROR:!=(int,int):>(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):218:y.length != equations.getDimension() |==> y.length > equations.getDimension()
47:ROR:!=(int,int):>=(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):218:y.length != equations.getDimension() |==> y.length >= equations.getDimension()
48:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):218:y.length != equations.getDimension() |==> false
49:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):218:y.length != equations.getDimension() |==> true
50:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):224:expandableODE.setTime(t0) |==> <NO-OP>
51:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):225:expandableODE.setPrimaryState(y0) |==> <NO-OP>
52:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):228:integrate(expandableODE, t) |==> <NO-OP>
53:LVR:0:POS:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):231:0 |==> 1
54:LVR:0:NEG:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):231:0 |==> -1
55:LVR:0:POS:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):231:0 |==> 1
56:LVR:0:NEG:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):231:0 |==> -1
57:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@integrate(org.apache.commons.math3.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):231:System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0, y.length) |==> <NO-OP>
58:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@computeDerivatives(double,double[],double[]):268:evaluations.incrementCount() |==> <NO-OP>
59:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@computeDerivatives(double,double[],double[]):269:expandable.computeDerivatives(t, y, yDot) |==> <NO-OP>
60:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@setStateInitialized(boolean):280:this.statesInitialized = stateInitialized |==> <NO-OP>
61:COR:statesInitialized:TRUE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):304:statesInitialized |==> false
62:COR:statesInitialized:FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):304:statesInitialized |==> true
63:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):306:state.reinitializeBegin(interpolator) |==> <NO-OP>
64:LVR:TRUE:FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):308:true |==> false
65:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):308:statesInitialized = true |==> <NO-OP>
66:COR:interpolator.isForward():TRUE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:interpolator.isForward() |==> false
67:COR:interpolator.isForward():FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:interpolator.isForward() |==> true
68:ORU:+(int):-(int):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:+1 |==> -1
69:ORU:+(int):~(int):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:+1 |==> ~1
70:LVR:POS:0:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:1 |==> 0
71:LVR:POS:NEG:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:1 |==> -1
72:LVR:NEG:0:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:-1 |==> 0
73:LVR:NEG:POS:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:-1 |==> 1
74:AOR:*(int,int):%(int,int):org.apache.commons.math3.ode.AbstractIntegrator$1@compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState):317:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign % Double.compare(es0.getEventTime(), es1.getEventTime())
75:AOR:*(int,int):+(int,int):org.apache.commons.math3.ode.AbstractIntegrator$1@compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState):317:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign + Double.compare(es0.getEventTime(), es1.getEventTime())
76:AOR:*(int,int):-(int,int):org.apache.commons.math3.ode.AbstractIntegrator$1@compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState):317:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign - Double.compare(es0.getEventTime(), es1.getEventTime())
77:AOR:*(int,int):/(int,int):org.apache.commons.math3.ode.AbstractIntegrator$1@compare(org.apache.commons.math3.ode.events.EventState,org.apache.commons.math3.ode.events.EventState):317:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign / Double.compare(es0.getEventTime(), es1.getEventTime())
78:COR:state.evaluateStep(interpolator):TRUE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):323:state.evaluateStep(interpolator) |==> false
79:COR:state.evaluateStep(interpolator):FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):323:state.evaluateStep(interpolator) |==> true
80:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):325:occuringEvents.add(state) |==> <NO-OP>
81:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):334:iterator.remove() |==> <NO-OP>
82:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):338:interpolator.setSoftPreviousTime(previousT) |==> <NO-OP>
83:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):339:interpolator.setSoftCurrentTime(eventT) |==> <NO-OP>
84:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):342:interpolator.setInterpolatedTime(eventT) |==> <NO-OP>
85:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):347:state.stepAccepted(eventT, eventY) |==> <NO-OP>
86:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep || state.stop() |==> isLastStep != state.stop()
87:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep || state.stop() |==> isLastStep && state.stop()
88:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep || state.stop() |==> isLastStep == state.stop()
89:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep || state.stop() |==> false
90:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep || state.stop() |==> isLastStep
91:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep || state.stop() |==> state.stop()
92:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep || state.stop() |==> true
93:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):348:isLastStep = isLastStep || state.stop() |==> <NO-OP>
94:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):353:handler.handleStep(interpolator, isLastStep) |==> <NO-OP>
95:COR:isLastStep:TRUE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):356:isLastStep |==> false
96:COR:isLastStep:FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):356:isLastStep |==> true
97:LVR:0:POS:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):358:0 |==> 1
98:LVR:0:NEG:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):358:0 |==> -1
99:LVR:0:POS:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):358:0 |==> 1
100:LVR:0:NEG:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):358:0 |==> -1
101:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):358:System.arraycopy(eventY, 0, y, 0, y.length) |==> <NO-OP>
102:LVR:FALSE:TRUE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):362:false |==> true
103:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset || state.reset(eventT, eventY) |==> needReset != state.reset(eventT, eventY)
104:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset || state.reset(eventT, eventY) |==> needReset && state.reset(eventT, eventY)
105:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset || state.reset(eventT, eventY) |==> needReset == state.reset(eventT, eventY)
106:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset || state.reset(eventT, eventY) |==> false
107:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset || state.reset(eventT, eventY) |==> needReset
108:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset || state.reset(eventT, eventY) |==> state.reset(eventT, eventY)
109:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset || state.reset(eventT, eventY) |==> true
110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:needReset = needReset || state.reset(eventT, eventY) |==> <NO-OP>
111:COR:needReset:TRUE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):366:needReset |==> false
112:COR:needReset:FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):366:needReset |==> true
113:LVR:0:POS:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):369:0 |==> 1
114:LVR:0:NEG:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):369:0 |==> -1
115:LVR:0:POS:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):369:0 |==> 1
116:LVR:0:NEG:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):369:0 |==> -1
117:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):369:System.arraycopy(eventY, 0, y, 0, y.length) |==> <NO-OP>
118:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:computeDerivatives(eventT, y, yDot) |==> <NO-OP>
119:LVR:TRUE:FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):371:true |==> false
120:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):371:resetOccurred = true |==> <NO-OP>
121:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):376:previousT = eventT |==> <NO-OP>
122:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):377:interpolator.setSoftPreviousTime(eventT) |==> <NO-OP>
123:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):378:interpolator.setSoftCurrentTime(currentT) |==> <NO-OP>
124:COR:currentEvent.evaluateStep(interpolator):TRUE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):381:currentEvent.evaluateStep(interpolator) |==> false
125:COR:currentEvent.evaluateStep(interpolator):FALSE:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):381:currentEvent.evaluateStep(interpolator) |==> true
126:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):383:occuringEvents.add(currentEvent) |==> <NO-OP>
127:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):389:interpolator.setInterpolatedTime(currentT) |==> <NO-OP>
128:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):392:state.stepAccepted(currentT, currentY) |==> <NO-OP>
129:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep || state.stop() |==> isLastStep != state.stop()
130:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep || state.stop() |==> isLastStep && state.stop()
131:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep || state.stop() |==> isLastStep == state.stop()
132:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep || state.stop() |==> false
133:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep || state.stop() |==> isLastStep
134:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep || state.stop() |==> state.stop()
135:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep || state.stop() |==> true
136:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):393:isLastStep = isLastStep || state.stop() |==> <NO-OP>
137:LVR:POS:0:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:1 |==> 0
138:LVR:POS:NEG:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:1 |==> -1
139:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep != Precision.equals(currentT, tEnd, 1)
140:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep && Precision.equals(currentT, tEnd, 1)
141:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep == Precision.equals(currentT, tEnd, 1)
142:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep || Precision.equals(currentT, tEnd, 1) |==> false
143:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep
144:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep || Precision.equals(currentT, tEnd, 1) |==> Precision.equals(currentT, tEnd, 1)
145:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep || Precision.equals(currentT, tEnd, 1) |==> true
146:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):395:isLastStep = isLastStep || Precision.equals(currentT, tEnd, 1) |==> <NO-OP>
147:STD:<CALL>:<NO-OP>:org.apache.commons.math3.ode.AbstractIntegrator@acceptStep(org.apache.commons.math3.ode.sampling.AbstractStepInterpolator,double[],double[],double):399:handler.handleStep(interpolator, isLastStep) |==> <NO-OP>
148:LVR:POS:0:org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):416:1000 |==> 0
149:LVR:POS:NEG:org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):416:1000 |==> -1000
150:AOR:*(double,double):%(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):416:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 % FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
151:AOR:*(double,double):+(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):416:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 + FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
152:AOR:*(double,double):-(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):416:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 - FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
153:AOR:*(double,double):/(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):416:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 / FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
154:AOR:-(double,double):%(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):418:equations.getTime() - t |==> equations.getTime() % t
155:AOR:-(double,double):*(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):418:equations.getTime() - t |==> equations.getTime() * t
156:AOR:-(double,double):+(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):418:equations.getTime() - t |==> equations.getTime() + t
157:AOR:-(double,double):/(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):418:equations.getTime() - t |==> equations.getTime() / t
158:ROR:<=(double,double):!=(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):419:dt <= threshold |==> dt != threshold
159:ROR:<=(double,double):<(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):419:dt <= threshold |==> dt < threshold
160:ROR:<=(double,double):==(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):419:dt <= threshold |==> dt == threshold
161:ROR:<=(double,double):>(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):419:dt <= threshold |==> dt > threshold
162:ROR:<=(double,double):>=(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):419:dt <= threshold |==> dt >= threshold
163:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):419:dt <= threshold |==> false
164:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):419:dt <= threshold |==> true
165:LVR:FALSE:TRUE:org.apache.commons.math3.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math3.ode.ExpandableStatefulODE,double):421:false |==> true
