1:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@<init>(java.lang.String,java.text.NumberFormat,java.text.NumberFormat):111:setImaginaryCharacter(imaginaryCharacter) |==> <NO-OP>
2:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@<init>(java.lang.String,java.text.NumberFormat,java.text.NumberFormat):112:setImaginaryFormat(imaginaryFormat) |==> <NO-OP>
3:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@<init>(java.lang.String,java.text.NumberFormat,java.text.NumberFormat):113:setRealFormat(realFormat) |==> <NO-OP>
4:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):139:0 |==> 1
5:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):139:0 |==> -1
6:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):139:pos.setBeginIndex(0) |==> <NO-OP>
7:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):140:0 |==> 1
8:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):140:0 |==> -1
9:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):140:pos.setEndIndex(0) |==> <NO-OP>
10:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):144:formatDouble(re, getRealFormat(), toAppendTo, pos) |==> <NO-OP>
11:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:0.0 |==> 1.0
12:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:0.0 |==> -1.0
13:ROR:<(double,double):!=(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:im < 0.0 |==> im != 0.0
14:ROR:<(double,double):<=(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:im < 0.0 |==> im <= 0.0
15:ROR:<(double,double):==(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:im < 0.0 |==> im == 0.0
16:ROR:<(double,double):>(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:im < 0.0 |==> im > 0.0
17:ROR:<(double,double):>=(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:im < 0.0 |==> im >= 0.0
18:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:im < 0.0 |==> false
19:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):148:im < 0.0 |==> true
20:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):149:toAppendTo.append(" - ") |==> <NO-OP>
21:ORU:-(double):+(double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):150:-im |==> +im
22:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):150:formatDouble(-im, getImaginaryFormat(), toAppendTo, pos) |==> <NO-OP>
23:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):151:toAppendTo.append(getImaginaryCharacter()) |==> <NO-OP>
24:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:0.0 |==> 1.0
25:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:0.0 |==> -1.0
26:ROR:>(double,double):!=(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 |==> im != 0.0
27:ROR:>(double,double):<(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 |==> im < 0.0
28:ROR:>(double,double):<=(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 |==> im <= 0.0
29:ROR:>(double,double):==(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 |==> im == 0.0
30:ROR:>(double,double):>=(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 |==> im >= 0.0
31:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 |==> false
32:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 |==> true
33:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 || Double.isNaN(im) |==> im > 0.0 != Double.isNaN(im)
34:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 || Double.isNaN(im) |==> im > 0.0 && Double.isNaN(im)
35:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 || Double.isNaN(im) |==> im > 0.0 == Double.isNaN(im)
36:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 || Double.isNaN(im) |==> false
37:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 || Double.isNaN(im) |==> im > 0.0
38:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 || Double.isNaN(im) |==> Double.isNaN(im)
39:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):152:im > 0.0 || Double.isNaN(im) |==> true
40:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):153:toAppendTo.append(" + ") |==> <NO-OP>
41:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):154:formatDouble(im, getImaginaryFormat(), toAppendTo, pos) |==> <NO-OP>
42:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(org.apache.commons.math.complex.Complex,java.lang.StringBuffer,java.text.FieldPosition):155:toAppendTo.append(getImaginaryCharacter()) |==> <NO-OP>
43:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition):180:ret = format((Complex)obj, toAppendTo, pos) |==> <NO-OP>
44:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition):182:0.0 |==> 1.0
45:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition):182:0.0 |==> -1.0
46:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition):182:ret = format(new Complex(((Number)obj).doubleValue(), 0.0), toAppendTo, pos) |==> <NO-OP>
47:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):211:Double.isNaN(value) || Double.isInfinite(value) |==> Double.isNaN(value) != Double.isInfinite(value)
48:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):211:Double.isNaN(value) || Double.isInfinite(value) |==> Double.isNaN(value) && Double.isInfinite(value)
49:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):211:Double.isNaN(value) || Double.isInfinite(value) |==> Double.isNaN(value) == Double.isInfinite(value)
50:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):211:Double.isNaN(value) || Double.isInfinite(value) |==> false
51:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):211:Double.isNaN(value) || Double.isInfinite(value) |==> Double.isNaN(value)
52:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):211:Double.isNaN(value) || Double.isInfinite(value) |==> Double.isInfinite(value)
53:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):211:Double.isNaN(value) || Double.isInfinite(value) |==> true
54:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):212:toAppendTo.append('(') |==> <NO-OP>
55:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):213:toAppendTo.append(value) |==> <NO-OP>
56:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):214:toAppendTo.append(')') |==> <NO-OP>
57:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@formatDouble(double,java.text.NumberFormat,java.lang.StringBuffer,java.text.FieldPosition):216:format.format(value, toAppendTo, pos) |==> <NO-OP>
58:LVR:POS:0:org.apache.commons.math.complex.ComplexFormat@getDefaultNumberFormat(java.util.Locale):249:2 |==> 0
59:LVR:POS:NEG:org.apache.commons.math.complex.ComplexFormat@getDefaultNumberFormat(java.util.Locale):249:2 |==> -2
60:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@getDefaultNumberFormat(java.util.Locale):249:nf.setMaximumFractionDigits(2) |==> <NO-OP>
61:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):304:0 |==> 1
62:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):304:0 |==> -1
63:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:0 |==> 1
64:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:0 |==> -1
65:ROR:==(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:parsePosition.getIndex() == 0 |==> parsePosition.getIndex() != 0
66:ROR:==(int,int):<(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:parsePosition.getIndex() == 0 |==> parsePosition.getIndex() < 0
67:ROR:==(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:parsePosition.getIndex() == 0 |==> parsePosition.getIndex() <= 0
68:ROR:==(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:parsePosition.getIndex() == 0 |==> parsePosition.getIndex() > 0
69:ROR:==(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:parsePosition.getIndex() == 0 |==> parsePosition.getIndex() >= 0
70:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:parsePosition.getIndex() == 0 |==> false
71:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String):306:parsePosition.getIndex() == 0 |==> true
72:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):324:parseAndIgnoreWhitespace(source, pos) |==> <NO-OP>
73:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):328:re == null |==> re != null
74:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):328:re == null |==> false
75:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):328:re == null |==> true
76:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):332:pos.setIndex(initialIndex) |==> <NO-OP>
77:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):339:0 |==> 1
78:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):339:0 |==> -1
79:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):344:0.0 |==> 1.0
80:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):344:0.0 |==> -1.0
81:LVR:NEG:0:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):346:-1 |==> 0
82:LVR:NEG:POS:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):346:-1 |==> 1
83:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):346:sign = -1 |==> <NO-OP>
84:LVR:POS:0:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):349:1 |==> 0
85:LVR:POS:NEG:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):349:1 |==> -1
86:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):349:sign = 1 |==> <NO-OP>
87:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):355:pos.setIndex(initialIndex) |==> <NO-OP>
88:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):356:pos.setErrorIndex(startIndex) |==> <NO-OP>
89:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):361:parseAndIgnoreWhitespace(source, pos) |==> <NO-OP>
90:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):365:im == null |==> im != null
91:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):365:im == null |==> false
92:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):365:im == null |==> true
93:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):369:pos.setIndex(initialIndex) |==> <NO-OP>
94:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):375:startIndex = pos.getIndex() |==> <NO-OP>
95:AOR:+(int,int):%(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):376:startIndex + n |==> startIndex % n
96:AOR:+(int,int):*(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):376:startIndex + n |==> startIndex * n
97:AOR:+(int,int):-(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):376:startIndex + n |==> startIndex - n
98:AOR:+(int,int):/(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):376:startIndex + n |==> startIndex / n
99:ROR:>=(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:startIndex >= source.length() |==> startIndex != source.length()
100:ROR:>=(int,int):<(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:startIndex >= source.length() |==> startIndex < source.length()
101:ROR:>=(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:startIndex >= source.length() |==> startIndex <= source.length()
102:ROR:>=(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:startIndex >= source.length() |==> startIndex == source.length()
103:ROR:>=(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:startIndex >= source.length() |==> startIndex > source.length()
104:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:startIndex >= source.length() |==> false
105:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:startIndex >= source.length() |==> true
106:ROR:>(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:endIndex > source.length() |==> endIndex != source.length()
107:ROR:>(int,int):<(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:endIndex > source.length() |==> endIndex < source.length()
108:ROR:>(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:endIndex > source.length() |==> endIndex <= source.length()
109:ROR:>(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:endIndex > source.length() |==> endIndex == source.length()
110:ROR:>(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:endIndex > source.length() |==> endIndex >= source.length()
111:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:endIndex > source.length() |==> false
112:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:endIndex > source.length() |==> true
113:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) |==> (startIndex >= source.length()) != (endIndex > source.length())
114:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) |==> (startIndex >= source.length()) && (endIndex > source.length())
115:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) |==> (startIndex >= source.length()) == (endIndex > source.length())
116:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) |==> false
117:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) |==> (startIndex >= source.length())
118:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:(startIndex >= source.length()) || (endIndex > source.length()) |==> (endIndex > source.length())
119:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) |==> true
120:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):380:0 |==> 1
121:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):380:0 |==> -1
122:ROR:!=(int,int):<(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):379:source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) < 0
123:ROR:!=(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):379:source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) <= 0
124:ROR:!=(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):379:source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) == 0
125:ROR:!=(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):379:source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) > 0
126:ROR:!=(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):379:source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) >= 0
127:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):380:source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> false
128:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):380:source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> true
129:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) || source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> ((startIndex >= source.length()) || (endIndex > source.length())) != (source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0)
130:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) || source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> ((startIndex >= source.length()) || (endIndex > source.length())) && source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0
131:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) || source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> ((startIndex >= source.length()) || (endIndex > source.length())) == (source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0)
132:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:(startIndex >= source.length()) || (endIndex > source.length()) || source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> false
133:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):377:(startIndex >= source.length()) || (endIndex > source.length()) || source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> (startIndex >= source.length()) || (endIndex > source.length())
134:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):379:(startIndex >= source.length()) || (endIndex > source.length()) || source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0
135:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):378:(startIndex >= source.length()) || (endIndex > source.length()) || source.substring(startIndex, endIndex).compareTo(getImaginaryCharacter()) != 0 |==> true
136:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):383:pos.setIndex(initialIndex) |==> <NO-OP>
137:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):384:pos.setErrorIndex(startIndex) |==> <NO-OP>
138:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):387:pos.setIndex(endIndex) |==> <NO-OP>
139:AOR:*(double,double):%(double,double):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):389:im.doubleValue() * sign |==> im.doubleValue() % sign
140:AOR:*(double,double):+(double,double):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):389:im.doubleValue() * sign |==> im.doubleValue() + sign
141:AOR:*(double,double):-(double,double):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):389:im.doubleValue() * sign |==> im.doubleValue() - sign
142:AOR:*(double,double):/(double,double):org.apache.commons.math.complex.ComplexFormat@parse(java.lang.String,java.text.ParsePosition):389:im.doubleValue() * sign |==> im.doubleValue() / sign
143:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):400:parseNextCharacter(source, pos) |==> <NO-OP>
144:LVR:POS:0:org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):401:1 |==> 0
145:LVR:POS:NEG:org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):401:1 |==> -1
146:AOR:-(int,int):%(int,int):org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):401:pos.getIndex() - 1 |==> pos.getIndex() % 1
147:AOR:-(int,int):*(int,int):org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):401:pos.getIndex() - 1 |==> pos.getIndex() * 1
148:AOR:-(int,int):+(int,int):org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):401:pos.getIndex() - 1 |==> pos.getIndex() + 1
149:AOR:-(int,int):/(int,int):org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):401:pos.getIndex() - 1 |==> pos.getIndex() / 1
150:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseAndIgnoreWhitespace(java.lang.String,java.text.ParsePosition):401:pos.setIndex(pos.getIndex() - 1) |==> <NO-OP>
151:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):414:0 |==> 1
152:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):414:0 |==> -1
153:ROR:<(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):416:index < n |==> index != n
154:ROR:<(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):416:index < n |==> index <= n
155:ROR:<(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):416:index < n |==> index == n
156:ROR:<(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):416:index < n |==> index > n
157:ROR:<(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):416:index < n |==> index >= n
158:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):416:index < n |==> false
159:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):416:index < n |==> true
160:ROR:<(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:index < n |==> index != n
161:ROR:<(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:index < n |==> index <= n
162:ROR:<(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:index < n |==> index == n
163:ROR:<(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:index < n |==> index > n
164:ROR:<(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:index < n |==> index >= n
165:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:index < n |==> false
166:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:index < n |==> true
167:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:Character.isWhitespace(c) && index < n |==> Character.isWhitespace(c) != index < n
168:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:Character.isWhitespace(c) && index < n |==> Character.isWhitespace(c) == index < n
169:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:Character.isWhitespace(c) && index < n |==> false
170:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:Character.isWhitespace(c) && index < n |==> Character.isWhitespace(c)
171:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:Character.isWhitespace(c) && index < n |==> index < n
172:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:Character.isWhitespace(c) && index < n |==> true
173:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):420:Character.isWhitespace(c) && index < n |==> Character.isWhitespace(c) || index < n
174:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):421:pos.setIndex(index) |==> <NO-OP>
175:ROR:<(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):423:index < n |==> index != n
176:ROR:<(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):423:index < n |==> index <= n
177:ROR:<(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):423:index < n |==> index == n
178:ROR:<(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):423:index < n |==> index > n
179:ROR:<(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):423:index < n |==> index >= n
180:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):423:index < n |==> false
181:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):423:index < n |==> true
182:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNextCharacter(java.lang.String,java.text.ParsePosition):424:ret = c |==> <NO-OP>
183:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):444:sb.append('(') |==> <NO-OP>
184:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):445:sb.append(value) |==> <NO-OP>
185:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):446:sb.append(')') |==> <NO-OP>
186:AOR:+(int,int):%(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):450:startIndex + n |==> startIndex % n
187:AOR:+(int,int):*(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):450:startIndex + n |==> startIndex * n
188:AOR:+(int,int):-(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):450:startIndex + n |==> startIndex - n
189:AOR:+(int,int):/(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):450:startIndex + n |==> startIndex / n
190:ROR:<(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):451:endIndex < source.length() |==> endIndex != source.length()
191:ROR:<(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):451:endIndex < source.length() |==> endIndex <= source.length()
192:ROR:<(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):451:endIndex < source.length() |==> endIndex == source.length()
193:ROR:<(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):451:endIndex < source.length() |==> endIndex > source.length()
194:ROR:<(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):451:endIndex < source.length() |==> endIndex >= source.length()
195:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):451:endIndex < source.length() |==> false
196:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):451:endIndex < source.length() |==> true
197:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:0 |==> 1
198:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:0 |==> -1
199:ROR:==(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0 |==> source.substring(startIndex, endIndex).compareTo(sb.toString()) != 0
200:ROR:==(int,int):<(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0 |==> source.substring(startIndex, endIndex).compareTo(sb.toString()) < 0
201:ROR:==(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0 |==> source.substring(startIndex, endIndex).compareTo(sb.toString()) <= 0
202:ROR:==(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0 |==> source.substring(startIndex, endIndex).compareTo(sb.toString()) > 0
203:ROR:==(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0 |==> source.substring(startIndex, endIndex).compareTo(sb.toString()) >= 0
204:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0 |==> false
205:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):452:source.substring(startIndex, endIndex).compareTo(sb.toString()) == 0 |==> true
206:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):453:ret = new Double(value) |==> <NO-OP>
207:STD:<CALL>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,double,java.text.ParsePosition):454:pos.setIndex(endIndex) |==> <NO-OP>
208:ROR:==(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):477:startIndex == endIndex |==> startIndex != endIndex
209:ROR:==(int,int):<(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):477:startIndex == endIndex |==> startIndex < endIndex
210:ROR:==(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):477:startIndex == endIndex |==> startIndex <= endIndex
211:ROR:==(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):477:startIndex == endIndex |==> startIndex > endIndex
212:ROR:==(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):477:startIndex == endIndex |==> startIndex >= endIndex
213:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):477:startIndex == endIndex |==> false
214:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):477:startIndex == endIndex |==> true
215:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:0 |==> 1
216:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:0 |==> -1
217:ROR:<(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:i < special.length |==> i != special.length
218:ROR:<(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:i < special.length |==> i <= special.length
219:ROR:<(int,int):==(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:i < special.length |==> i == special.length
220:ROR:<(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:i < special.length |==> i > special.length
221:ROR:<(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:i < special.length |==> i >= special.length
222:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:i < special.length |==> false
223:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):480:i < special.length |==> true
224:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):481:number = parseNumber(source, special[i], pos) |==> <NO-OP>
225:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):482:number != null |==> number == null
226:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):482:number != null |==> false
227:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@parseNumber(java.lang.String,java.text.NumberFormat,java.text.ParsePosition):482:number != null |==> true
228:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null |==> imaginaryCharacter != null
229:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null |==> false
230:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null |==> true
231:LVR:0:POS:org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:0 |==> 1
232:LVR:0:NEG:org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:0 |==> -1
233:ROR:==(int,int):!=(int,int):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter.length() == 0 |==> imaginaryCharacter.length() != 0
234:ROR:==(int,int):<(int,int):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter.length() == 0 |==> imaginaryCharacter.length() < 0
235:ROR:==(int,int):<=(int,int):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter.length() == 0 |==> imaginaryCharacter.length() <= 0
236:ROR:==(int,int):>(int,int):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter.length() == 0 |==> imaginaryCharacter.length() > 0
237:ROR:==(int,int):>=(int,int):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter.length() == 0 |==> imaginaryCharacter.length() >= 0
238:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter.length() == 0 |==> false
239:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter.length() == 0 |==> true
240:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null || imaginaryCharacter.length() == 0 |==> imaginaryCharacter == null != (imaginaryCharacter.length() == 0)
241:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null || imaginaryCharacter.length() == 0 |==> imaginaryCharacter == null && imaginaryCharacter.length() == 0
242:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null || imaginaryCharacter.length() == 0 |==> imaginaryCharacter == null == (imaginaryCharacter.length() == 0)
243:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null || imaginaryCharacter.length() == 0 |==> false
244:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null || imaginaryCharacter.length() == 0 |==> imaginaryCharacter == null
245:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null || imaginaryCharacter.length() == 0 |==> imaginaryCharacter.length() == 0
246:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):509:imaginaryCharacter == null || imaginaryCharacter.length() == 0 |==> true
247:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@setImaginaryCharacter(java.lang.String):513:this.imaginaryCharacter = imaginaryCharacter |==> <NO-OP>
248:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setImaginaryFormat(java.text.NumberFormat):523:imaginaryFormat == null |==> imaginaryFormat != null
249:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setImaginaryFormat(java.text.NumberFormat):523:imaginaryFormat == null |==> false
250:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setImaginaryFormat(java.text.NumberFormat):523:imaginaryFormat == null |==> true
251:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@setImaginaryFormat(java.text.NumberFormat):527:this.imaginaryFormat = imaginaryFormat |==> <NO-OP>
252:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setRealFormat(java.text.NumberFormat):537:realFormat == null |==> realFormat != null
253:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setRealFormat(java.text.NumberFormat):537:realFormat == null |==> false
254:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.complex.ComplexFormat@setRealFormat(java.text.NumberFormat):537:realFormat == null |==> true
255:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.complex.ComplexFormat@setRealFormat(java.text.NumberFormat):541:this.realFormat = realFormat |==> <NO-OP>
