1:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>():56:0 |==> 1
2:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>():56:0 |==> -1
3:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(int,double):76:0.0 |==> 1.0
4:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(int,double):76:0.0 |==> -1.0
5:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.OpenMapRealVector,int):87:v.getDimension() + resize |==> v.getDimension() % resize
6:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.OpenMapRealVector,int):87:v.getDimension() + resize |==> v.getDimension() * resize
7:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.OpenMapRealVector,int):87:v.getDimension() + resize |==> v.getDimension() - resize
8:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.OpenMapRealVector,int):87:v.getDimension() + resize |==> v.getDimension() / resize
9:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(int,int,double):112:0.0 |==> 1.0
10:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(int,int,double):112:0.0 |==> -1.0
11:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):135:0.0 |==> 1.0
12:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):135:0.0 |==> -1.0
13:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:0 |==> 1
14:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:0 |==> -1
15:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:key < values.length |==> key != values.length
16:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:key < values.length |==> key <= values.length
17:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:key < values.length |==> key == values.length
18:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:key < values.length |==> key > values.length
19:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:key < values.length |==> key >= values.length
20:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:key < values.length |==> false
21:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):137:key < values.length |==> true
22:COR:isDefaultValue(value):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):139:isDefaultValue(value) |==> false
23:COR:isDefaultValue(value):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):139:isDefaultValue(value) |==> true
24:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@<init>(double[],double):140:entries.put(key, value) |==> <NO-OP>
25:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):164:0.0 |==> 1.0
26:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):164:0.0 |==> -1.0
27:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:0 |==> 1
28:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:0 |==> -1
29:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:key < values.length |==> key != values.length
30:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:key < values.length |==> key <= values.length
31:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:key < values.length |==> key == values.length
32:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:key < values.length |==> key > values.length
33:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:key < values.length |==> key >= values.length
34:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:key < values.length |==> false
35:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):166:key < values.length |==> true
36:COR:isDefaultValue(value):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):168:isDefaultValue(value) |==> false
37:COR:isDefaultValue(value):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):168:isDefaultValue(value) |==> true
38:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@<init>(java.lang.Double[],double):169:entries.put(key, value) |==> <NO-OP>
39:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):192:0.0 |==> 1.0
40:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):192:0.0 |==> -1.0
41:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:0 |==> 1
42:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:0 |==> -1
43:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:key < virtualSize |==> key != virtualSize
44:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:key < virtualSize |==> key <= virtualSize
45:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:key < virtualSize |==> key == virtualSize
46:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:key < virtualSize |==> key > virtualSize
47:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:key < virtualSize |==> key >= virtualSize
48:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:key < virtualSize |==> false
49:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):194:key < virtualSize |==> true
50:COR:isDefaultValue(value):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):196:isDefaultValue(value) |==> false
51:COR:isDefaultValue(value):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):196:isDefaultValue(value) |==> true
52:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@<init>(org.apache.commons.math3.linear.RealVector):197:entries.put(key, value) |==> <NO-OP>
53:ROR:<(double,double):!=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@isDefaultValue(double):220:FastMath.abs(value) < epsilon |==> FastMath.abs(value) != epsilon
54:ROR:<(double,double):<=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@isDefaultValue(double):220:FastMath.abs(value) < epsilon |==> FastMath.abs(value) <= epsilon
55:ROR:<(double,double):==(double,double):org.apache.commons.math3.linear.OpenMapRealVector@isDefaultValue(double):220:FastMath.abs(value) < epsilon |==> FastMath.abs(value) == epsilon
56:ROR:<(double,double):>(double,double):org.apache.commons.math3.linear.OpenMapRealVector@isDefaultValue(double):220:FastMath.abs(value) < epsilon |==> FastMath.abs(value) > epsilon
57:ROR:<(double,double):>=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@isDefaultValue(double):220:FastMath.abs(value) < epsilon |==> FastMath.abs(value) >= epsilon
58:ROR:<(double,double):FALSE(double,double):org.apache.commons.math3.linear.OpenMapRealVector@isDefaultValue(double):220:FastMath.abs(value) < epsilon |==> false
59:ROR:<(double,double):TRUE(double,double):org.apache.commons.math3.linear.OpenMapRealVector@isDefaultValue(double):220:FastMath.abs(value) < epsilon |==> true
60:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.RealVector):226:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
61:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):244:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
62:ROR:>(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):245:entries.size() > v.entries.size() |==> entries.size() != v.entries.size()
63:ROR:>(int,int):<(int,int):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):245:entries.size() > v.entries.size() |==> entries.size() < v.entries.size()
64:ROR:>(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):245:entries.size() > v.entries.size() |==> entries.size() <= v.entries.size()
65:ROR:>(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):245:entries.size() > v.entries.size() |==> entries.size() == v.entries.size()
66:ROR:>(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):245:entries.size() > v.entries.size() |==> entries.size() >= v.entries.size()
67:ROR:>(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):245:entries.size() > v.entries.size() |==> false
68:ROR:>(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):245:entries.size() > v.entries.size() |==> true
69:COR:copyThis:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):246:copyThis |==> false
70:COR:copyThis:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):246:copyThis |==> true
71:COR:copyThis:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):247:copyThis |==> false
72:COR:copyThis:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):247:copyThis |==> true
73:COR:copyThis:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):248:copyThis |==> false
74:COR:copyThis:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):248:copyThis |==> true
75:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):250:iter.advance() |==> <NO-OP>
76:COR:randomAccess.containsKey(key):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):252:randomAccess.containsKey(key) |==> false
77:COR:randomAccess.containsKey(key):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):252:randomAccess.containsKey(key) |==> true
78:AOR:+(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):253:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) % iter.value()
79:AOR:+(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):253:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) * iter.value()
80:AOR:+(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):253:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) - iter.value()
81:AOR:+(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):253:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) / iter.value()
82:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):253:res.setEntry(key, randomAccess.get(key) + iter.value()) |==> <NO-OP>
83:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@add(org.apache.commons.math3.linear.OpenMapRealVector):255:res.setEntry(key, iter.value()) |==> <NO-OP>
84:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.OpenMapRealVector):270:iter.advance() |==> <NO-OP>
85:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.OpenMapRealVector):271:iter.key() + virtualSize |==> iter.key() % virtualSize
86:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.OpenMapRealVector):271:iter.key() + virtualSize |==> iter.key() * virtualSize
87:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.OpenMapRealVector):271:iter.key() + virtualSize |==> iter.key() - virtualSize
88:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.OpenMapRealVector):271:iter.key() + virtualSize |==> iter.key() / virtualSize
89:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.OpenMapRealVector):271:res.setEntry(iter.key() + virtualSize, iter.value()) |==> <NO-OP>
90:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:0 |==> 1
91:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:0 |==> -1
92:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:i < v.getDimension() |==> i != v.getDimension()
93:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:i < v.getDimension() |==> i <= v.getDimension()
94:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:i < v.getDimension() |==> i == v.getDimension()
95:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:i < v.getDimension() |==> i > v.getDimension()
96:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:i < v.getDimension() |==> i >= v.getDimension()
97:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:i < v.getDimension() |==> false
98:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):283:i < v.getDimension() |==> true
99:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):284:i + virtualSize |==> i % virtualSize
100:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):284:i + virtualSize |==> i * virtualSize
101:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):284:i + virtualSize |==> i - virtualSize
102:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):284:i + virtualSize |==> i / virtualSize
103:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@append(org.apache.commons.math3.linear.RealVector):284:res.setEntry(i + virtualSize, v.getEntry(i)) |==> <NO-OP>
104:LVR:POS:0:org.apache.commons.math3.linear.OpenMapRealVector@append(double):293:1 |==> 0
105:LVR:POS:NEG:org.apache.commons.math3.linear.OpenMapRealVector@append(double):293:1 |==> -1
106:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@append(double):294:res.setEntry(virtualSize, d) |==> <NO-OP>
107:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):317:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
108:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):318:entries.size() < v.entries.size() |==> entries.size() != v.entries.size()
109:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):318:entries.size() < v.entries.size() |==> entries.size() <= v.entries.size()
110:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):318:entries.size() < v.entries.size() |==> entries.size() == v.entries.size()
111:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):318:entries.size() < v.entries.size() |==> entries.size() > v.entries.size()
112:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):318:entries.size() < v.entries.size() |==> entries.size() >= v.entries.size()
113:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):318:entries.size() < v.entries.size() |==> false
114:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):318:entries.size() < v.entries.size() |==> true
115:COR:thisIsSmaller:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):319:thisIsSmaller |==> false
116:COR:thisIsSmaller:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):319:thisIsSmaller |==> true
117:COR:thisIsSmaller:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):320:thisIsSmaller |==> false
118:COR:thisIsSmaller:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):320:thisIsSmaller |==> true
119:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):321:0 |==> 1
120:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):321:0 |==> -1
121:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):323:iter.advance() |==> <NO-OP>
122:AOR:*(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):324:iter.value() * larger.get(iter.key()) |==> iter.value() % larger.get(iter.key())
123:AOR:*(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):324:iter.value() * larger.get(iter.key()) |==> iter.value() + larger.get(iter.key())
124:AOR:*(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):324:iter.value() * larger.get(iter.key()) |==> iter.value() - larger.get(iter.key())
125:AOR:*(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):324:iter.value() * larger.get(iter.key()) |==> iter.value() / larger.get(iter.key())
126:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@dotProduct(org.apache.commons.math3.linear.OpenMapRealVector):324:d += iter.value() * larger.get(iter.key()) |==> <NO-OP>
127:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):342:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
128:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:0 |==> 1
129:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:0 |==> -1
130:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:i < n |==> i != n
131:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:i < n |==> i <= n
132:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:i < n |==> i == n
133:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:i < n |==> i > n
134:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:i < n |==> i >= n
135:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:i < n |==> false
136:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):350:i < n |==> true
137:AOR:/(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):351:this.getEntry(i) / v.getEntry(i) |==> this.getEntry(i) % v.getEntry(i)
138:AOR:/(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):351:this.getEntry(i) / v.getEntry(i) |==> this.getEntry(i) * v.getEntry(i)
139:AOR:/(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):351:this.getEntry(i) / v.getEntry(i) |==> this.getEntry(i) + v.getEntry(i)
140:AOR:/(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):351:this.getEntry(i) / v.getEntry(i) |==> this.getEntry(i) - v.getEntry(i)
141:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math3.linear.RealVector):351:res.setEntry(i, this.getEntry(i) / v.getEntry(i)) |==> <NO-OP>
142:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):359:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
143:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):363:iter.advance() |==> <NO-OP>
144:AOR:*(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):364:iter.value() * v.getEntry(iter.key()) |==> iter.value() % v.getEntry(iter.key())
145:AOR:*(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):364:iter.value() * v.getEntry(iter.key()) |==> iter.value() + v.getEntry(iter.key())
146:AOR:*(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):364:iter.value() * v.getEntry(iter.key()) |==> iter.value() - v.getEntry(iter.key())
147:AOR:*(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):364:iter.value() * v.getEntry(iter.key()) |==> iter.value() / v.getEntry(iter.key())
148:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):364:res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())) |==> <NO-OP>
149:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):373:v.isNaN() || v.isInfinite() |==> v.isNaN() != v.isInfinite()
150:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):373:v.isNaN() || v.isInfinite() |==> v.isNaN() && v.isInfinite()
151:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):373:v.isNaN() || v.isInfinite() |==> v.isNaN() == v.isInfinite()
152:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):373:v.isNaN() || v.isInfinite() |==> false
153:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):373:v.isNaN() || v.isInfinite() |==> v.isNaN()
154:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):373:v.isNaN() || v.isInfinite() |==> v.isInfinite()
155:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):373:v.isNaN() || v.isInfinite() |==> true
156:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:0 |==> 1
157:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:0 |==> -1
158:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:i < n |==> i != n
159:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:i < n |==> i <= n
160:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:i < n |==> i == n
161:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:i < n |==> i > n
162:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:i < n |==> i >= n
163:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:i < n |==> false
164:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):375:i < n |==> true
165:COR:Double.isNaN(y):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):377:Double.isNaN(y) |==> false
166:COR:Double.isNaN(y):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):377:Double.isNaN(y) |==> true
167:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):378:res.setEntry(i, Double.NaN) |==> <NO-OP>
168:COR:Double.isInfinite(y):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):379:Double.isInfinite(y) |==> false
169:COR:Double.isInfinite(y):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):379:Double.isInfinite(y) |==> true
170:AOR:*(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):381:x * y |==> x % y
171:AOR:*(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):381:x * y |==> x + y
172:AOR:*(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):381:x * y |==> x - y
173:AOR:*(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):381:x * y |==> x / y
174:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math3.linear.RealVector):381:res.setEntry(i, x * y) |==> <NO-OP>
175:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):391:checkIndex(index) |==> <NO-OP>
176:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:0 |==> 1
177:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:0 |==> -1
178:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:n < 0 |==> n != 0
179:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:n < 0 |==> n <= 0
180:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:n < 0 |==> n == 0
181:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:n < 0 |==> n > 0
182:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:n < 0 |==> n >= 0
183:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:n < 0 |==> false
184:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):392:n < 0 |==> true
185:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n |==> index % n
186:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n |==> index * n
187:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n |==> index - n
188:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n |==> index / n
189:LVR:POS:0:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:1 |==> 0
190:LVR:POS:NEG:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:1 |==> -1
191:AOR:-(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n - 1 |==> (index + n) % 1
192:AOR:-(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n - 1 |==> (index + n) * 1
193:AOR:-(int,int):+(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n - 1 |==> index + n + 1
194:AOR:-(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:index + n - 1 |==> (index + n) / 1
195:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):395:checkIndex(index + n - 1) |==> <NO-OP>
196:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):397:index + n |==> index % n
197:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):397:index + n |==> index * n
198:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):397:index + n |==> index - n
199:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):397:index + n |==> index / n
200:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):400:iter.advance() |==> <NO-OP>
201:ROR:>=(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index |==> key != index
202:ROR:>=(int,int):<(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index |==> key < index
203:ROR:>=(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index |==> key <= index
204:ROR:>=(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index |==> key == index
205:ROR:>=(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index |==> key > index
206:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index |==> false
207:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index |==> true
208:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key < end |==> key != end
209:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key < end |==> key <= end
210:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key < end |==> key == end
211:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key < end |==> key > end
212:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key < end |==> key >= end
213:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key < end |==> false
214:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key < end |==> true
215:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index && key < end |==> key >= index != key < end
216:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index && key < end |==> key >= index == key < end
217:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index && key < end |==> false
218:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index && key < end |==> key >= index
219:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index && key < end |==> key < end
220:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index && key < end |==> true
221:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):402:key >= index && key < end |==> key >= index || key < end
222:AOR:-(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):403:key - index |==> key % index
223:AOR:-(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):403:key - index |==> key * index
224:AOR:-(int,int):+(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):403:key - index |==> key + index
225:AOR:-(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):403:key - index |==> key / index
226:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getSubVector(int,int):403:res.setEntry(key - index, iter.value()) |==> <NO-OP>
227:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):425:0 |==> 1
228:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):425:0 |==> -1
229:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):427:iter.advance() |==> <NO-OP>
230:AOR:-(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):430:iter.value() - v.getEntry(key) |==> iter.value() % v.getEntry(key)
231:AOR:-(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):430:iter.value() - v.getEntry(key) |==> iter.value() * v.getEntry(key)
232:AOR:-(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):430:iter.value() - v.getEntry(key) |==> iter.value() + v.getEntry(key)
233:AOR:-(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):430:iter.value() - v.getEntry(key) |==> iter.value() / v.getEntry(key)
234:AOR:*(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):431:delta * delta |==> delta % delta
235:AOR:*(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):431:delta * delta |==> delta + delta
236:AOR:*(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):431:delta * delta |==> delta - delta
237:AOR:*(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):431:delta * delta |==> delta / delta
238:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):431:res += delta * delta |==> <NO-OP>
239:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):433:iter = v.getEntries().iterator() |==> <NO-OP>
240:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):435:iter.advance() |==> <NO-OP>
241:COR:entries.containsKey(key):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):437:entries.containsKey(key) |==> false
242:COR:entries.containsKey(key):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):437:entries.containsKey(key) |==> true
243:AOR:*(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):439:value * value |==> value % value
244:AOR:*(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):439:value * value |==> value + value
245:AOR:*(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):439:value * value |==> value - value
246:AOR:*(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):439:value * value |==> value / value
247:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.OpenMapRealVector):439:res += value * value |==> <NO-OP>
248:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getDistance(org.apache.commons.math3.linear.RealVector):448:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
249:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getEntry(int):459:checkIndex(index) |==> <NO-OP>
250:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):473:0 |==> 1
251:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):473:0 |==> -1
252:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):476:iter.advance() |==> <NO-OP>
253:AOR:-(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):477:iter.value() - v.getEntry(iter.key()) |==> iter.value() % v.getEntry(iter.key())
254:AOR:-(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):477:iter.value() - v.getEntry(iter.key()) |==> iter.value() * v.getEntry(iter.key())
255:AOR:-(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):477:iter.value() - v.getEntry(iter.key()) |==> iter.value() + v.getEntry(iter.key())
256:AOR:-(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):477:iter.value() - v.getEntry(iter.key()) |==> iter.value() / v.getEntry(iter.key())
257:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):478:max += delta |==> <NO-OP>
258:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):480:iter = v.getEntries().iterator() |==> <NO-OP>
259:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):482:iter.advance() |==> <NO-OP>
260:COR:entries.containsKey(key):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):484:entries.containsKey(key) |==> false
261:COR:entries.containsKey(key):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):484:entries.containsKey(key) |==> true
262:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.OpenMapRealVector):486:max += FastMath.abs(delta) |==> <NO-OP>
263:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math3.linear.RealVector):495:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
264:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):510:0 |==> 1
265:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):510:0 |==> -1
266:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):513:iter.advance() |==> <NO-OP>
267:AOR:-(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):514:iter.value() - v.getEntry(iter.key()) |==> iter.value() % v.getEntry(iter.key())
268:AOR:-(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):514:iter.value() - v.getEntry(iter.key()) |==> iter.value() * v.getEntry(iter.key())
269:AOR:-(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):514:iter.value() - v.getEntry(iter.key()) |==> iter.value() + v.getEntry(iter.key())
270:AOR:-(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):514:iter.value() - v.getEntry(iter.key()) |==> iter.value() / v.getEntry(iter.key())
271:ROR:>(double,double):!=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):515:delta > max |==> delta != max
272:ROR:>(double,double):<(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):515:delta > max |==> delta < max
273:ROR:>(double,double):<=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):515:delta > max |==> delta <= max
274:ROR:>(double,double):==(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):515:delta > max |==> delta == max
275:ROR:>(double,double):>=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):515:delta > max |==> delta >= max
276:ROR:>(double,double):FALSE(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):515:delta > max |==> false
277:ROR:>(double,double):TRUE(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):515:delta > max |==> true
278:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):516:max = delta |==> <NO-OP>
279:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):519:iter = v.getEntries().iterator() |==> <NO-OP>
280:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):521:iter.advance() |==> <NO-OP>
281:COR:entries.containsKey(key):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):523:entries.containsKey(key) |==> false
282:COR:entries.containsKey(key):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):523:entries.containsKey(key) |==> true
283:ROR:>(double,double):!=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):524:iter.value() > max |==> iter.value() != max
284:ROR:>(double,double):<(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):524:iter.value() > max |==> iter.value() < max
285:ROR:>(double,double):<=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):524:iter.value() > max |==> iter.value() <= max
286:ROR:>(double,double):==(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):524:iter.value() > max |==> iter.value() == max
287:ROR:>(double,double):>=(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):524:iter.value() > max |==> iter.value() >= max
288:ROR:>(double,double):FALSE(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):524:iter.value() > max |==> false
289:ROR:>(double,double):TRUE(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):524:iter.value() > max |==> true
290:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.OpenMapRealVector):525:max = iter.value() |==> <NO-OP>
291:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math3.linear.RealVector):535:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
292:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():546:false |==> true
293:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():549:iter.advance() |==> <NO-OP>
294:COR:Double.isNaN(value):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():551:Double.isNaN(value) |==> false
295:COR:Double.isNaN(value):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():551:Double.isNaN(value) |==> true
296:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():552:false |==> true
297:COR:Double.isInfinite(value):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():554:Double.isInfinite(value) |==> false
298:COR:Double.isInfinite(value):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():554:Double.isInfinite(value) |==> true
299:LVR:TRUE:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():555:true |==> false
300:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@isInfinite():555:infiniteFound = true |==> <NO-OP>
301:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@isNaN():566:iter.advance() |==> <NO-OP>
302:COR:Double.isNaN(iter.value()):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@isNaN():567:Double.isNaN(iter.value()) |==> false
303:COR:Double.isNaN(iter.value()):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@isNaN():567:Double.isNaN(iter.value()) |==> true
304:LVR:TRUE:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@isNaN():568:true |==> false
305:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@isNaN():571:false |==> true
306:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:0 |==> 1
307:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:0 |==> -1
308:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:i < virtualSize |==> i != virtualSize
309:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:i < virtualSize |==> i <= virtualSize
310:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:i < virtualSize |==> i == virtualSize
311:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:i < virtualSize |==> i > virtualSize
312:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:i < virtualSize |==> i >= virtualSize
313:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:i < virtualSize |==> false
314:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):583:i < virtualSize |==> true
315:AOR:+(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):584:getEntry(i) + d |==> getEntry(i) % d
316:AOR:+(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):584:getEntry(i) + d |==> getEntry(i) * d
317:AOR:+(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):584:getEntry(i) + d |==> getEntry(i) - d
318:AOR:+(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):584:getEntry(i) + d |==> getEntry(i) / d
319:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@mapAddToSelf(double):584:setEntry(i, getEntry(i) + d) |==> <NO-OP>
320:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@projection(org.apache.commons.math3.linear.RealVector):592:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
321:AOR:/(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@projection(org.apache.commons.math3.linear.RealVector):593:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) % v.dotProduct(v)
322:AOR:/(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@projection(org.apache.commons.math3.linear.RealVector):593:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) * v.dotProduct(v)
323:AOR:/(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@projection(org.apache.commons.math3.linear.RealVector):593:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) + v.dotProduct(v)
324:AOR:/(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@projection(org.apache.commons.math3.linear.RealVector):593:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) - v.dotProduct(v)
325:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@setEntry(int,double):599:checkIndex(index) |==> <NO-OP>
326:COR:isDefaultValue(value):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@setEntry(int,double):600:isDefaultValue(value) |==> false
327:COR:isDefaultValue(value):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@setEntry(int,double):600:isDefaultValue(value) |==> true
328:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@setEntry(int,double):601:entries.put(index, value) |==> <NO-OP>
329:COR:entries.containsKey(index):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@setEntry(int,double):602:entries.containsKey(index) |==> false
330:COR:entries.containsKey(index):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@setEntry(int,double):602:entries.containsKey(index) |==> true
331:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@setEntry(int,double):603:entries.remove(index) |==> <NO-OP>
332:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):610:checkIndex(index) |==> <NO-OP>
333:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() |==> index % v.getDimension()
334:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() |==> index * v.getDimension()
335:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() |==> index - v.getDimension()
336:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() |==> index / v.getDimension()
337:LVR:POS:0:org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:1 |==> 0
338:LVR:POS:NEG:org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:1 |==> -1
339:AOR:-(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() - 1 |==> (index + v.getDimension()) % 1
340:AOR:-(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() - 1 |==> (index + v.getDimension()) * 1
341:AOR:-(int,int):+(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() - 1 |==> index + v.getDimension() + 1
342:AOR:-(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:index + v.getDimension() - 1 |==> (index + v.getDimension()) / 1
343:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):611:checkIndex(index + v.getDimension() - 1) |==> <NO-OP>
344:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:0 |==> 1
345:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:0 |==> -1
346:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:i < v.getDimension() |==> i != v.getDimension()
347:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:i < v.getDimension() |==> i <= v.getDimension()
348:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:i < v.getDimension() |==> i == v.getDimension()
349:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:i < v.getDimension() |==> i > v.getDimension()
350:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:i < v.getDimension() |==> i >= v.getDimension()
351:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:i < v.getDimension() |==> false
352:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):612:i < v.getDimension() |==> true
353:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):613:i + index |==> i % index
354:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):613:i + index |==> i * index
355:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):613:i + index |==> i - index
356:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):613:i + index |==> i / index
357:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math3.linear.RealVector):613:setEntry(i + index, v.getEntry(i)) |==> <NO-OP>
358:LVR:0:POS:org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:0 |==> 1
359:LVR:0:NEG:org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:0 |==> -1
360:ROR:<(int,int):!=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:i < virtualSize |==> i != virtualSize
361:ROR:<(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:i < virtualSize |==> i <= virtualSize
362:ROR:<(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:i < virtualSize |==> i == virtualSize
363:ROR:<(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:i < virtualSize |==> i > virtualSize
364:ROR:<(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:i < virtualSize |==> i >= virtualSize
365:ROR:<(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:i < virtualSize |==> false
366:ROR:<(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@set(double):620:i < virtualSize |==> true
367:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@set(double):621:setEntry(i, value) |==> <NO-OP>
368:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):634:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
369:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):638:iter.advance() |==> <NO-OP>
370:COR:entries.containsKey(key):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):640:entries.containsKey(key) |==> false
371:COR:entries.containsKey(key):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):640:entries.containsKey(key) |==> true
372:AOR:-(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):641:entries.get(key) - iter.value() |==> entries.get(key) % iter.value()
373:AOR:-(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):641:entries.get(key) - iter.value() |==> entries.get(key) * iter.value()
374:AOR:-(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):641:entries.get(key) - iter.value() |==> entries.get(key) + iter.value()
375:AOR:-(double,double):/(double,double):org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):641:entries.get(key) - iter.value() |==> entries.get(key) / iter.value()
376:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):641:res.setEntry(key, entries.get(key) - iter.value()) |==> <NO-OP>
377:ORU:-(double):+(double):org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):643:-iter.value() |==> +iter.value()
378:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.OpenMapRealVector):643:res.setEntry(key, -iter.value()) |==> <NO-OP>
379:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@subtract(org.apache.commons.math3.linear.RealVector):652:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
380:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@unitVector():664:res.unitize() |==> <NO-OP>
381:COR:isDefaultValue(norm):TRUE:org.apache.commons.math3.linear.OpenMapRealVector@unitize():672:isDefaultValue(norm) |==> false
382:COR:isDefaultValue(norm):FALSE:org.apache.commons.math3.linear.OpenMapRealVector@unitize():672:isDefaultValue(norm) |==> true
383:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@unitize():677:iter.advance() |==> <NO-OP>
384:AOR:/(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@unitize():678:iter.value() / norm |==> iter.value() % norm
385:AOR:/(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@unitize():678:iter.value() / norm |==> iter.value() * norm
386:AOR:/(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@unitize():678:iter.value() / norm |==> iter.value() + norm
387:AOR:/(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@unitize():678:iter.value() / norm |==> iter.value() - norm
388:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@unitize():678:entries.put(iter.key(), iter.value() / norm) |==> <NO-OP>
389:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@toArray():688:iter.advance() |==> <NO-OP>
390:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@toArray():689:res[iter.key()] = iter.value() |==> <NO-OP>
391:LVR:POS:0:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():703:1 |==> 0
392:LVR:POS:NEG:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():703:1 |==> -1
393:AOR:*(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result |==> prime % result
394:AOR:*(int,int):+(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result |==> prime + result
395:AOR:*(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result |==> prime - result
396:AOR:*(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result |==> prime / result
397:LVR:POS:0:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:32 |==> 0
398:LVR:POS:NEG:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:32 |==> -32
399:SOR:>>>(long,int):<<(long,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:temp >>> 32 |==> temp << 32
400:SOR:>>>(long,int):>>(long,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:temp >>> 32 |==> temp >> 32
401:LOR:^(long,long):&(long,long):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:temp ^ (temp >>> 32) |==> temp & (temp >>> 32)
402:LOR:^(long,long):|(long,long):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:temp ^ (temp >>> 32) |==> temp | (temp >>> 32)
403:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result % (int)(temp ^ (temp >>> 32))
404:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result * (int)(temp ^ (temp >>> 32))
405:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result - (int)(temp ^ (temp >>> 32))
406:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result / (int)(temp ^ (temp >>> 32))
407:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():706:result = prime * result + (int)(temp ^ (temp >>> 32)) |==> <NO-OP>
408:AOR:*(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result |==> prime % result
409:AOR:*(int,int):+(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result |==> prime + result
410:AOR:*(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result |==> prime - result
411:AOR:*(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result |==> prime / result
412:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result + virtualSize |==> prime * result % virtualSize
413:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result + virtualSize |==> prime * result * virtualSize
414:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result + virtualSize |==> prime * result - virtualSize
415:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:prime * result + virtualSize |==> prime * result / virtualSize
416:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():707:result = prime * result + virtualSize |==> <NO-OP>
417:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():710:iter.advance() |==> <NO-OP>
418:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():711:temp = Double.doubleToLongBits(iter.value()) |==> <NO-OP>
419:AOR:*(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result |==> prime % result
420:AOR:*(int,int):+(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result |==> prime + result
421:AOR:*(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result |==> prime - result
422:AOR:*(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result |==> prime / result
423:LVR:POS:0:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:32 |==> 0
424:LVR:POS:NEG:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:32 |==> -32
425:SOR:>>(long,int):<<(long,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:temp >> 32 |==> temp << 32
426:SOR:>>(long,int):>>>(long,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:temp >> 32 |==> temp >>> 32
427:LOR:^(long,long):&(long,long):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:temp ^ (temp >> 32) |==> temp & (temp >> 32)
428:LOR:^(long,long):|(long,long):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:temp ^ (temp >> 32) |==> temp | (temp >> 32)
429:AOR:+(int,int):%(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result % (int)(temp ^ (temp >> 32))
430:AOR:+(int,int):*(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result * (int)(temp ^ (temp >> 32))
431:AOR:+(int,int):-(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result - (int)(temp ^ (temp >> 32))
432:AOR:+(int,int):/(int,int):org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result / (int)(temp ^ (temp >> 32))
433:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@hashCode():712:result = prime * result + (int)(temp ^ (temp >> 32)) |==> <NO-OP>
434:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):725:this == obj |==> this != obj
435:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):725:this == obj |==> false
436:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):725:this == obj |==> true
437:LVR:TRUE:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):726:true |==> false
438:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):729:false |==> true
439:ROR:!=(int,int):<(int,int):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):732:virtualSize != other.virtualSize |==> virtualSize < other.virtualSize
440:ROR:!=(int,int):<=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):732:virtualSize != other.virtualSize |==> virtualSize <= other.virtualSize
441:ROR:!=(int,int):==(int,int):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):732:virtualSize != other.virtualSize |==> virtualSize == other.virtualSize
442:ROR:!=(int,int):>(int,int):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):732:virtualSize != other.virtualSize |==> virtualSize > other.virtualSize
443:ROR:!=(int,int):>=(int,int):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):732:virtualSize != other.virtualSize |==> virtualSize >= other.virtualSize
444:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):732:virtualSize != other.virtualSize |==> false
445:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):732:virtualSize != other.virtualSize |==> true
446:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):733:false |==> true
447:ROR:!=(long,long):<(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):735:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) < Double.doubleToLongBits(other.epsilon)
448:ROR:!=(long,long):<=(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):735:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) <= Double.doubleToLongBits(other.epsilon)
449:ROR:!=(long,long):==(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):735:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) == Double.doubleToLongBits(other.epsilon)
450:ROR:!=(long,long):>(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):735:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) > Double.doubleToLongBits(other.epsilon)
451:ROR:!=(long,long):>=(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):735:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) >= Double.doubleToLongBits(other.epsilon)
452:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):735:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> false
453:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):735:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> true
454:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):737:false |==> true
455:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):741:iter.advance() |==> <NO-OP>
456:ROR:!=(long,long):<(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):743:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) < Double.doubleToLongBits(iter.value())
457:ROR:!=(long,long):<=(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):743:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) <= Double.doubleToLongBits(iter.value())
458:ROR:!=(long,long):==(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):743:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) == Double.doubleToLongBits(iter.value())
459:ROR:!=(long,long):>(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):743:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) > Double.doubleToLongBits(iter.value())
460:ROR:!=(long,long):>=(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):743:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) >= Double.doubleToLongBits(iter.value())
461:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):743:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> false
462:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):743:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> true
463:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):744:false |==> true
464:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):747:iter = other.getEntries().iterator() |==> <NO-OP>
465:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):749:iter.advance() |==> <NO-OP>
466:ROR:!=(long,long):<(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):751:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) < Double.doubleToLongBits(getEntry(iter.key()))
467:ROR:!=(long,long):<=(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):751:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) <= Double.doubleToLongBits(getEntry(iter.key()))
468:ROR:!=(long,long):==(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):751:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) == Double.doubleToLongBits(getEntry(iter.key()))
469:ROR:!=(long,long):>(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):751:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) > Double.doubleToLongBits(getEntry(iter.key()))
470:ROR:!=(long,long):>=(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):751:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) >= Double.doubleToLongBits(getEntry(iter.key()))
471:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):751:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> false
472:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):751:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> true
473:LVR:FALSE:TRUE:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):752:false |==> true
474:LVR:TRUE:FALSE:org.apache.commons.math3.linear.OpenMapRealVector@equals(java.lang.Object):755:true |==> false
475:AOR:/(double,double):%(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getSparsity():764:(double)entries.size() / (double)getDimension() |==> (double)entries.size() % (double)getDimension()
476:AOR:/(double,double):*(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getSparsity():764:(double)entries.size() / (double)getDimension() |==> (double)entries.size() * (double)getDimension()
477:AOR:/(double,double):+(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getSparsity():764:(double)entries.size() / (double)getDimension() |==> (double)entries.size() + (double)getDimension()
478:AOR:/(double,double):-(double,double):org.apache.commons.math3.linear.OpenMapRealVector@getSparsity():764:(double)entries.size() / (double)getDimension() |==> (double)entries.size() - (double)getDimension()
479:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector$OpenMapEntry@setValue(double):800:entries.put(iter.key(), value) |==> <NO-OP>
480:STD:<CALL>:<NO-OP>:org.apache.commons.math3.linear.OpenMapRealVector$OpenMapSparseIterator@next():835:iter.advance() |==> <NO-OP>
