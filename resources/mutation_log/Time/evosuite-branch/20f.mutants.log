1:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@<init>():84:iElementPairs = new ArrayList<Object>() |==> <NO-OP>
2:COR:isPrinter(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():106:isPrinter(f) |==> false
3:COR:isPrinter(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():106:isPrinter(f) |==> true
4:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():107:printer = (DateTimePrinter)f |==> <NO-OP>
5:COR:isParser(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():110:isParser(f) |==> false
6:COR:isParser(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():110:isParser(f) |==> true
7:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@toFormatter():111:parser = (DateTimeParser)f |==> <NO-OP>
8:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null |==> printer == null
9:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null |==> false
10:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null |==> true
11:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:parser != null |==> parser == null
12:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:parser != null |==> false
13:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:parser != null |==> true
14:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null || parser != null |==> printer != null != (parser != null)
15:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null || parser != null |==> printer != null && parser != null
16:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null || parser != null |==> printer != null == (parser != null)
17:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null || parser != null |==> false
18:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null || parser != null |==> printer != null
19:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null || parser != null |==> parser != null
20:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@toFormatter():113:printer != null || parser != null |==> true
21:COR:isPrinter(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toPrinter():133:isPrinter(f) |==> false
22:COR:isPrinter(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toPrinter():133:isPrinter(f) |==> true
23:COR:isParser(f):TRUE:org.joda.time.format.DateTimeFormatterBuilder@toParser():153:isParser(f) |==> false
24:COR:isParser(f):FALSE:org.joda.time.format.DateTimeFormatterBuilder@toParser():153:isParser(f) |==> true
25:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@clear():196:iFormatter = null |==> <NO-OP>
26:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@clear():197:iElementPairs.clear() |==> <NO-OP>
27:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimeFormatter):209:formatter == null |==> formatter != null
28:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimeFormatter):209:formatter == null |==> false
29:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimeFormatter):209:formatter == null |==> true
30:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter):224:checkPrinter(printer) |==> <NO-OP>
31:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimeParser):237:checkParser(parser) |==> <NO-OP>
32:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):250:checkPrinter(printer) |==> <NO-OP>
33:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):251:checkParser(parser) |==> <NO-OP>
34:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):273:printer != null |==> printer == null
35:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):273:printer != null |==> false
36:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):273:printer != null |==> true
37:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):274:checkPrinter(printer) |==> <NO-OP>
38:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):276:parsers == null |==> parsers != null
39:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):276:parsers == null |==> false
40:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):276:parsers == null |==> true
41:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:1 |==> 0
42:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:1 |==> -1
43:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:length == 1 |==> length != 1
44:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:length == 1 |==> length < 1
45:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:length == 1 |==> length <= 1
46:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:length == 1 |==> length > 1
47:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:length == 1 |==> length >= 1
48:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:length == 1 |==> false
49:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):280:length == 1 |==> true
50:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):281:0 |==> 1
51:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):281:0 |==> -1
52:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):281:parsers[0] == null |==> parsers[0] != null
53:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):281:parsers[0] == null |==> false
54:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):281:parsers[0] == null |==> true
55:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):284:0 |==> 1
56:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):284:0 |==> -1
57:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:0 |==> 1
58:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:0 |==> -1
59:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:1 |==> 0
60:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:1 |==> -1
61:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:length - 1 |==> length % 1
62:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:length - 1 |==> length * 1
63:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:length - 1 |==> length + 1
64:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:length - 1 |==> length / 1
65:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:i < length - 1 |==> i != length - 1
66:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:i < length - 1 |==> i <= length - 1
67:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:i < length - 1 |==> i == length - 1
68:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:i < length - 1 |==> i > length - 1
69:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:i < length - 1 |==> i >= length - 1
70:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:i < length - 1 |==> false
71:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):289:i < length - 1 |==> true
72:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):290:(copyOfParsers[i] = parsers[i]) == null |==> (copyOfParsers[i] = parsers[i]) != null
73:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):290:(copyOfParsers[i] = parsers[i]) == null |==> false
74:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):290:(copyOfParsers[i] = parsers[i]) == null |==> true
75:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser[]):294:copyOfParsers[i] = parsers[i] |==> <NO-OP>
76:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendOptional(org.joda.time.format.DateTimeParser):307:checkParser(parser) |==> <NO-OP>
77:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkParser(org.joda.time.format.DateTimeParser):319:parser == null |==> parser != null
78:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkParser(org.joda.time.format.DateTimeParser):319:parser == null |==> false
79:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkParser(org.joda.time.format.DateTimeParser):319:parser == null |==> true
80:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkPrinter(org.joda.time.format.DateTimePrinter):330:printer == null |==> printer != null
81:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkPrinter(org.joda.time.format.DateTimePrinter):330:printer == null |==> false
82:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@checkPrinter(org.joda.time.format.DateTimePrinter):330:printer == null |==> true
83:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(java.lang.Object):336:iFormatter = null |==> <NO-OP>
84:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(java.lang.Object):338:iElementPairs.add(element) |==> <NO-OP>
85:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(java.lang.Object):339:iElementPairs.add(element) |==> <NO-OP>
86:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):345:iFormatter = null |==> <NO-OP>
87:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):346:iElementPairs.add(printer) |==> <NO-OP>
88:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@append0(org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeParser):347:iElementPairs.add(parser) |==> <NO-OP>
89:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):370:text == null |==> text != null
90:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):370:text == null |==> false
91:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):370:text == null |==> true
92:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):377:0 |==> 1
93:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendLiteral(java.lang.String):377:0 |==> -1
94:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):396:fieldType == null |==> fieldType != null
95:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):396:fieldType == null |==> false
96:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):396:fieldType == null |==> true
97:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):399:maxDigits < minDigits |==> maxDigits != minDigits
98:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):399:maxDigits < minDigits |==> maxDigits <= minDigits
99:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):399:maxDigits < minDigits |==> maxDigits == minDigits
100:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):399:maxDigits < minDigits |==> maxDigits > minDigits
101:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):399:maxDigits < minDigits |==> maxDigits >= minDigits
102:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):399:maxDigits < minDigits |==> false
103:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):399:maxDigits < minDigits |==> true
104:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):400:maxDigits = minDigits |==> <NO-OP>
105:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:0 |==> 1
106:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:0 |==> -1
107:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 |==> minDigits != 0
108:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 |==> minDigits <= 0
109:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 |==> minDigits == 0
110:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 |==> minDigits > 0
111:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 |==> minDigits >= 0
112:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 |==> false
113:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 |==> true
114:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:0 |==> 1
115:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:0 |==> -1
116:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:maxDigits <= 0 |==> maxDigits != 0
117:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:maxDigits <= 0 |==> maxDigits < 0
118:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:maxDigits <= 0 |==> maxDigits == 0
119:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:maxDigits <= 0 |==> maxDigits > 0
120:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:maxDigits <= 0 |==> maxDigits >= 0
121:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:maxDigits <= 0 |==> false
122:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:maxDigits <= 0 |==> true
123:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 != maxDigits <= 0
124:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 && maxDigits <= 0
125:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 == maxDigits <= 0
126:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 || maxDigits <= 0 |==> false
127:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0
128:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 || maxDigits <= 0 |==> maxDigits <= 0
129:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):402:minDigits < 0 || maxDigits <= 0 |==> true
130:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:1 |==> 0
131:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:1 |==> -1
132:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:minDigits <= 1 |==> minDigits != 1
133:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:minDigits <= 1 |==> minDigits < 1
134:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:minDigits <= 1 |==> minDigits == 1
135:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:minDigits <= 1 |==> minDigits > 1
136:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:minDigits <= 1 |==> minDigits >= 1
137:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:minDigits <= 1 |==> false
138:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):405:minDigits <= 1 |==> true
139:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):406:false |==> true
140:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendDecimal(org.joda.time.DateTimeFieldType,int,int):408:false |==> true
141:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):426:fieldType == null |==> fieldType != null
142:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):426:fieldType == null |==> false
143:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):426:fieldType == null |==> true
144:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:0 |==> 1
145:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:0 |==> -1
146:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:numDigits <= 0 |==> numDigits != 0
147:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:numDigits <= 0 |==> numDigits < 0
148:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:numDigits <= 0 |==> numDigits == 0
149:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:numDigits <= 0 |==> numDigits > 0
150:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:numDigits <= 0 |==> numDigits >= 0
151:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:numDigits <= 0 |==> false
152:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):429:numDigits <= 0 |==> true
153:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendFixedDecimal(org.joda.time.DateTimeFieldType,int):432:false |==> true
154:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):448:fieldType == null |==> fieldType != null
155:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):448:fieldType == null |==> false
156:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):448:fieldType == null |==> true
157:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):451:maxDigits < minDigits |==> maxDigits != minDigits
158:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):451:maxDigits < minDigits |==> maxDigits <= minDigits
159:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):451:maxDigits < minDigits |==> maxDigits == minDigits
160:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):451:maxDigits < minDigits |==> maxDigits > minDigits
161:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):451:maxDigits < minDigits |==> maxDigits >= minDigits
162:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):451:maxDigits < minDigits |==> false
163:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):451:maxDigits < minDigits |==> true
164:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):452:maxDigits = minDigits |==> <NO-OP>
165:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:0 |==> 1
166:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:0 |==> -1
167:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 |==> minDigits != 0
168:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 |==> minDigits <= 0
169:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 |==> minDigits == 0
170:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 |==> minDigits > 0
171:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 |==> minDigits >= 0
172:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 |==> false
173:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 |==> true
174:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:0 |==> 1
175:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:0 |==> -1
176:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:maxDigits <= 0 |==> maxDigits != 0
177:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:maxDigits <= 0 |==> maxDigits < 0
178:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:maxDigits <= 0 |==> maxDigits == 0
179:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:maxDigits <= 0 |==> maxDigits > 0
180:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:maxDigits <= 0 |==> maxDigits >= 0
181:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:maxDigits <= 0 |==> false
182:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:maxDigits <= 0 |==> true
183:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 != maxDigits <= 0
184:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 && maxDigits <= 0
185:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 == maxDigits <= 0
186:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 || maxDigits <= 0 |==> false
187:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0
188:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 || maxDigits <= 0 |==> maxDigits <= 0
189:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):454:minDigits < 0 || maxDigits <= 0 |==> true
190:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:1 |==> 0
191:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:1 |==> -1
192:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:minDigits <= 1 |==> minDigits != 1
193:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:minDigits <= 1 |==> minDigits < 1
194:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:minDigits <= 1 |==> minDigits == 1
195:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:minDigits <= 1 |==> minDigits > 1
196:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:minDigits <= 1 |==> minDigits >= 1
197:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:minDigits <= 1 |==> false
198:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):457:minDigits <= 1 |==> true
199:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):458:true |==> false
200:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int):460:true |==> false
201:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):478:fieldType == null |==> fieldType != null
202:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):478:fieldType == null |==> false
203:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):478:fieldType == null |==> true
204:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:0 |==> 1
205:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:0 |==> -1
206:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:numDigits <= 0 |==> numDigits != 0
207:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:numDigits <= 0 |==> numDigits < 0
208:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:numDigits <= 0 |==> numDigits == 0
209:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:numDigits <= 0 |==> numDigits > 0
210:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:numDigits <= 0 |==> numDigits >= 0
211:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:numDigits <= 0 |==> false
212:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):481:numDigits <= 0 |==> true
213:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendFixedSignedDecimal(org.joda.time.DateTimeFieldType,int):484:true |==> false
214:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendText(org.joda.time.DateTimeFieldType):496:fieldType == null |==> fieldType != null
215:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendText(org.joda.time.DateTimeFieldType):496:fieldType == null |==> false
216:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendText(org.joda.time.DateTimeFieldType):496:fieldType == null |==> true
217:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendText(org.joda.time.DateTimeFieldType):499:false |==> true
218:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendShortText(org.joda.time.DateTimeFieldType):511:fieldType == null |==> fieldType != null
219:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendShortText(org.joda.time.DateTimeFieldType):511:fieldType == null |==> false
220:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendShortText(org.joda.time.DateTimeFieldType):511:fieldType == null |==> true
221:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@appendShortText(org.joda.time.DateTimeFieldType):514:true |==> false
222:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):532:fieldType == null |==> fieldType != null
223:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):532:fieldType == null |==> false
224:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):532:fieldType == null |==> true
225:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):535:maxDigits < minDigits |==> maxDigits != minDigits
226:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):535:maxDigits < minDigits |==> maxDigits <= minDigits
227:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):535:maxDigits < minDigits |==> maxDigits == minDigits
228:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):535:maxDigits < minDigits |==> maxDigits > minDigits
229:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):535:maxDigits < minDigits |==> maxDigits >= minDigits
230:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):535:maxDigits < minDigits |==> false
231:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):535:maxDigits < minDigits |==> true
232:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):536:maxDigits = minDigits |==> <NO-OP>
233:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:0 |==> 1
234:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:0 |==> -1
235:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 |==> minDigits != 0
236:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 |==> minDigits <= 0
237:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 |==> minDigits == 0
238:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 |==> minDigits > 0
239:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 |==> minDigits >= 0
240:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 |==> false
241:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 |==> true
242:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:0 |==> 1
243:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:0 |==> -1
244:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:maxDigits <= 0 |==> maxDigits != 0
245:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:maxDigits <= 0 |==> maxDigits < 0
246:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:maxDigits <= 0 |==> maxDigits == 0
247:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:maxDigits <= 0 |==> maxDigits > 0
248:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:maxDigits <= 0 |==> maxDigits >= 0
249:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:maxDigits <= 0 |==> false
250:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:maxDigits <= 0 |==> true
251:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 != maxDigits <= 0
252:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 && maxDigits <= 0
253:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0 == maxDigits <= 0
254:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 || maxDigits <= 0 |==> false
255:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 || maxDigits <= 0 |==> minDigits < 0
256:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 || maxDigits <= 0 |==> maxDigits <= 0
257:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@appendFraction(org.joda.time.DateTimeFieldType,int,int):538:minDigits < 0 || maxDigits <= 0 |==> true
258:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfSecond(int):627:3 |==> 0
259:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfSecond(int):627:3 |==> -3
260:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfDay(int):637:8 |==> 0
261:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMillisOfDay(int):637:8 |==> -8
262:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfMinute(int):647:2 |==> 0
263:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfMinute(int):647:2 |==> -2
264:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfDay(int):657:5 |==> 0
265:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendSecondOfDay(int):657:5 |==> -5
266:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfHour(int):667:2 |==> 0
267:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfHour(int):667:2 |==> -2
268:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfDay(int):677:4 |==> 0
269:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMinuteOfDay(int):677:4 |==> -4
270:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfDay(int):687:2 |==> 0
271:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfDay(int):687:2 |==> -2
272:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfDay(int):697:2 |==> 0
273:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfDay(int):697:2 |==> -2
274:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfHalfday(int):707:2 |==> 0
275:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendHourOfHalfday(int):707:2 |==> -2
276:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfHalfday(int):717:2 |==> 0
277:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendClockhourOfHalfday(int):717:2 |==> -2
278:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfWeek(int):727:1 |==> 0
279:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfWeek(int):727:1 |==> -1
280:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfMonth(int):737:2 |==> 0
281:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfMonth(int):737:2 |==> -2
282:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfYear(int):747:3 |==> 0
283:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendDayOfYear(int):747:3 |==> -3
284:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendWeekOfWeekyear(int):757:2 |==> 0
285:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendWeekOfWeekyear(int):757:2 |==> -2
286:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@appendMonthOfYear(int):779:2 |==> 0
287:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendMonthOfYear(int):779:2 |==> -2
288:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendTwoDigitYear(int):813:false |==> true
289:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@appendTwoDigitWeekyear(int):853:false |==> true
290:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendPattern(java.lang.String):1094:DateTimeFormat.appendPatternTo(this, pattern) |==> <NO-OP>
291:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1102:f == null |==> f != null
292:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1102:f == null |==> false
293:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1102:f == null |==> true
294:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:2 |==> 0
295:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:2 |==> -2
296:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:iElementPairs.size() == 2 |==> iElementPairs.size() != 2
297:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:iElementPairs.size() == 2 |==> iElementPairs.size() < 2
298:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:iElementPairs.size() == 2 |==> iElementPairs.size() <= 2
299:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:iElementPairs.size() == 2 |==> iElementPairs.size() > 2
300:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:iElementPairs.size() == 2 |==> iElementPairs.size() >= 2
301:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:iElementPairs.size() == 2 |==> false
302:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1103:iElementPairs.size() == 2 |==> true
303:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1104:0 |==> 1
304:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1104:0 |==> -1
305:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1105:1 |==> 0
306:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1105:1 |==> -1
307:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1107:printer != null |==> printer == null
308:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1107:printer != null |==> false
309:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1107:printer != null |==> true
310:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser |==> printer != parser
311:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser |==> false
312:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser |==> true
313:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:parser == null |==> parser != null
314:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:parser == null |==> false
315:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:parser == null |==> true
316:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser || parser == null |==> printer == parser != (parser == null)
317:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser || parser == null |==> printer == parser && parser == null
318:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser || parser == null |==> printer == parser == (parser == null)
319:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser || parser == null |==> false
320:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser || parser == null |==> printer == parser
321:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser || parser == null |==> parser == null
322:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1108:printer == parser || parser == null |==> true
323:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1109:f = printer |==> <NO-OP>
324:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1112:f = parser |==> <NO-OP>
325:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1116:f == null |==> f != null
326:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1116:f == null |==> false
327:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1116:f == null |==> true
328:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1117:f = new Composite(iElementPairs) |==> <NO-OP>
329:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@getFormatter():1120:iFormatter = f |==> <NO-OP>
330:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@isPrinter(java.lang.Object):1131:true |==> false
331:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@isPrinter(java.lang.Object):1133:false |==> true
332:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder@isParser(java.lang.Object):1141:true |==> false
333:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder@isParser(java.lang.Object):1143:false |==> true
334:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1147:isPrinter(f) || isParser(f) |==> isPrinter(f) != isParser(f)
335:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1147:isPrinter(f) || isParser(f) |==> isPrinter(f) && isParser(f)
336:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1147:isPrinter(f) || isParser(f) |==> isPrinter(f) == isParser(f)
337:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1147:isPrinter(f) || isParser(f) |==> false
338:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1147:isPrinter(f) || isParser(f) |==> isPrinter(f)
339:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1147:isPrinter(f) || isParser(f) |==> isParser(f)
340:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder@isFormatter(java.lang.Object):1147:isPrinter(f) || isParser(f) |==> true
341:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:0 |==> 1
342:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:0 |==> -1
343:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:--i >= 0 |==> --i != 0
344:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:--i >= 0 |==> --i < 0
345:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:--i >= 0 |==> --i <= 0
346:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:--i >= 0 |==> --i == 0
347:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:--i >= 0 |==> --i > 0
348:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:--i >= 0 |==> false
349:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1151:--i >= 0 |==> true
350:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@appendUnknownString(java.lang.StringBuffer,int):1152:buf.append('\ufffd') |==> <NO-OP>
351:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:0 |==> 1
352:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:0 |==> -1
353:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:--i >= 0 |==> --i != 0
354:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:--i >= 0 |==> --i < 0
355:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:--i >= 0 |==> --i <= 0
356:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:--i >= 0 |==> --i == 0
357:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:--i >= 0 |==> --i > 0
358:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:--i >= 0 |==> false
359:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1157:--i >= 0 |==> true
360:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder@printUnknownString(java.io.Writer,int):1158:out.write('\ufffd') |==> <NO-OP>
361:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimatePrintedLength():1174:1 |==> 0
362:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimatePrintedLength():1174:1 |==> -1
363:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1180:buf.append(iValue) |==> <NO-OP>
364:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1186:out.write(iValue) |==> <NO-OP>
365:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1190:buf.append(iValue) |==> <NO-OP>
366:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1194:out.write(iValue) |==> <NO-OP>
367:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimateParsedLength():1198:1 |==> 0
368:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@estimateParsedLength():1198:1 |==> -1
369:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1202:position >= text.length() |==> position != text.length()
370:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1202:position >= text.length() |==> position < text.length()
371:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1202:position >= text.length() |==> position <= text.length()
372:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1202:position >= text.length() |==> position == text.length()
373:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1202:position >= text.length() |==> position > text.length()
374:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1202:position >= text.length() |==> false
375:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1202:position >= text.length() |==> true
376:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1203:~position |==> +position
377:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1203:~position |==> -position
378:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1209:a != b |==> a < b
379:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1209:a != b |==> a <= b
380:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1209:a != b |==> a == b
381:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1209:a != b |==> a > b
382:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1209:a != b |==> a >= b
383:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1209:a != b |==> false
384:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1209:a != b |==> true
385:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1210:a = Character.toUpperCase(a) |==> <NO-OP>
386:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1211:b = Character.toUpperCase(b) |==> <NO-OP>
387:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1212:a != b |==> a < b
388:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1212:a != b |==> a <= b
389:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1212:a != b |==> a == b
390:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1212:a != b |==> a > b
391:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1212:a != b |==> a >= b
392:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1212:a != b |==> false
393:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1212:a != b |==> true
394:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1213:a = Character.toLowerCase(a) |==> <NO-OP>
395:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1214:b = Character.toLowerCase(b) |==> <NO-OP>
396:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1215:a != b |==> a < b
397:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1215:a != b |==> a <= b
398:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1215:a != b |==> a == b
399:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1215:a != b |==> a > b
400:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1215:a != b |==> a >= b
401:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1215:a != b |==> false
402:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1215:a != b |==> true
403:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1216:~position |==> +position
404:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1216:~position |==> -position
405:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1221:1 |==> 0
406:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1221:1 |==> -1
407:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1221:position + 1 |==> position % 1
408:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1221:position + 1 |==> position * 1
409:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1221:position + 1 |==> position - 1
410:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1221:position + 1 |==> position / 1
411:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1243:buf.append(iValue) |==> <NO-OP>
412:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1249:out.write(iValue) |==> <NO-OP>
413:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1253:buf.append(iValue) |==> <NO-OP>
414:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1257:out.write(iValue) |==> <NO-OP>
415:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1265:true |==> false
416:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1265:0 |==> 1
417:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1265:0 |==> -1
418:COR:text.regionMatches(true, position, iValue, 0, iValue.length()):TRUE:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1265:text.regionMatches(true, position, iValue, 0, iValue.length()) |==> false
419:COR:text.regionMatches(true, position, iValue, 0, iValue.length()):FALSE:org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1265:text.regionMatches(true, position, iValue, 0, iValue.length()) |==> true
420:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1266:position + iValue.length() |==> position % iValue.length()
421:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1266:position + iValue.length() |==> position * iValue.length()
422:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1266:position + iValue.length() |==> position - iValue.length()
423:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1266:position + iValue.length() |==> position / iValue.length()
424:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1268:~position |==> +position
425:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$StringLiteral@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1268:~position |==> -position
426:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1292:text.length() - position |==> text.length() % position
427:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1292:text.length() - position |==> text.length() * position
428:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1292:text.length() - position |==> text.length() + position
429:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1292:text.length() - position |==> text.length() / position
430:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1294:false |==> true
431:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1295:0 |==> 1
432:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1295:0 |==> -1
433:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1296:length < limit |==> length != limit
434:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1296:length < limit |==> length <= limit
435:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1296:length < limit |==> length == limit
436:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1296:length < limit |==> length > limit
437:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1296:length < limit |==> length >= limit
438:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1296:length < limit |==> false
439:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1296:length < limit |==> true
440:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1297:position + length |==> position % length
441:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1297:position + length |==> position * length
442:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1297:position + length |==> position - length
443:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1297:position + length |==> position / length
444:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:0 |==> 1
445:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:0 |==> -1
446:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 |==> length != 0
447:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 |==> length < 0
448:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 |==> length <= 0
449:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 |==> length > 0
450:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 |==> length >= 0
451:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 |==> false
452:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 |==> true
453:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' |==> c != '-'
454:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' |==> c < '-'
455:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' |==> c <= '-'
456:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' |==> c > '-'
457:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' |==> c >= '-'
458:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' |==> false
459:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' |==> true
460:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '+' |==> c != '+'
461:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '+' |==> c < '+'
462:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '+' |==> c <= '+'
463:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '+' |==> c > '+'
464:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '+' |==> c >= '+'
465:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '+' |==> false
466:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '+' |==> true
467:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' || c == '+' |==> c == '-' != (c == '+')
468:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' || c == '+' |==> c == '-' && c == '+'
469:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' || c == '+' |==> c == '-' == (c == '+')
470:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' || c == '+' |==> false
471:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' || c == '+' |==> c == '-'
472:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' || c == '+' |==> c == '+'
473:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:c == '-' || c == '+' |==> true
474:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') |==> length == 0 != (c == '-' || c == '+')
475:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
476:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') |==> false
477:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') |==> length == 0
478:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
479:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') |==> true
480:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') |==> length == 0 || (c == '-' || c == '+')
481:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') && iSigned |==> (length == 0 && (c == '-' || c == '+')) != iSigned
482:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') && iSigned |==> (length == 0 && (c == '-' || c == '+')) == iSigned
483:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') && iSigned |==> false
484:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') && iSigned |==> length == 0 && (c == '-' || c == '+')
485:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') && iSigned |==> iSigned
486:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') && iSigned |==> true
487:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1298:length == 0 && (c == '-' || c == '+') && iSigned |==> length == 0 && (c == '-' || c == '+') || iSigned
488:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:c == '-' |==> c != '-'
489:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:c == '-' |==> c < '-'
490:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:c == '-' |==> c <= '-'
491:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:c == '-' |==> c > '-'
492:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:c == '-' |==> c >= '-'
493:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:c == '-' |==> false
494:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:c == '-' |==> true
495:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1299:negative = c == '-' |==> <NO-OP>
496:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:1 |==> 0
497:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:1 |==> -1
498:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 |==> length % 1
499:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 |==> length * 1
500:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 |==> length - 1
501:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 |==> length / 1
502:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit |==> length + 1 != limit
503:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit |==> length + 1 < limit
504:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit |==> length + 1 <= limit
505:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit |==> length + 1 == limit
506:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit |==> length + 1 > limit
507:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit |==> false
508:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit |==> true
509:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length |==> position % length
510:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length |==> position * length
511:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length |==> position - length
512:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length |==> position / length
513:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:1 |==> 0
514:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:1 |==> -1
515:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length + 1 |==> (position + length) % 1
516:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length + 1 |==> (position + length) * 1
517:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length + 1 |==> position + length - 1
518:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:position + length + 1 |==> (position + length) / 1
519:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) != '0'
520:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) <= '0'
521:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) == '0'
522:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) > '0'
523:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) >= '0'
524:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:(c = text.charAt(position + length + 1)) < '0' |==> false
525:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:(c = text.charAt(position + length + 1)) < '0' |==> true
526:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit != (c = text.charAt(position + length + 1)) < '0'
527:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit && (c = text.charAt(position + length + 1)) < '0'
528:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit == (c = text.charAt(position + length + 1)) < '0'
529:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> false
530:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit
531:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) < '0'
532:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> true
533:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:c > '9' |==> c != '9'
534:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:c > '9' |==> c < '9'
535:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:c > '9' |==> c <= '9'
536:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:c > '9' |==> c == '9'
537:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:c > '9' |==> c >= '9'
538:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:c > '9' |==> false
539:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:c > '9' |==> true
540:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') != c > '9'
541:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') && c > '9'
542:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') == c > '9'
543:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> false
544:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1302:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0'
545:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> c > '9'
546:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1303:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> true
547:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1308:negative |==> false
548:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1308:negative |==> true
549:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1309:length++ |==> <NO-OP>
550:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1312:position++ |==> <NO-OP>
551:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:1 |==> 0
552:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:1 |==> -1
553:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:limit + 1 |==> limit % 1
554:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:limit + 1 |==> limit * 1
555:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:limit + 1 |==> limit - 1
556:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:limit + 1 |==> limit / 1
557:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:text.length() - position |==> text.length() % position
558:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:text.length() - position |==> text.length() * position
559:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:text.length() - position |==> text.length() + position
560:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:text.length() - position |==> text.length() / position
561:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1315:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
562:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' |==> c != '0'
563:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' |==> c <= '0'
564:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' |==> c == '0'
565:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' |==> c > '0'
566:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' |==> c >= '0'
567:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' |==> false
568:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' |==> true
569:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c > '9' |==> c != '9'
570:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c > '9' |==> c < '9'
571:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c > '9' |==> c <= '9'
572:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c > '9' |==> c == '9'
573:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c > '9' |==> c >= '9'
574:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c > '9' |==> false
575:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c > '9' |==> true
576:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' || c > '9' |==> c < '0' != c > '9'
577:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' || c > '9' |==> c < '0' && c > '9'
578:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' || c > '9' |==> c < '0' == c > '9'
579:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' || c > '9' |==> false
580:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' || c > '9' |==> c < '0'
581:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' || c > '9' |==> c > '9'
582:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1318:c < '0' || c > '9' |==> true
583:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1321:length++ |==> <NO-OP>
584:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:0 |==> 1
585:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:0 |==> -1
586:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:length == 0 |==> length != 0
587:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:length == 0 |==> length < 0
588:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:length == 0 |==> length <= 0
589:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:length == 0 |==> length > 0
590:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:length == 0 |==> length >= 0
591:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:length == 0 |==> false
592:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1324:length == 0 |==> true
593:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1325:~position |==> +position
594:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1325:~position |==> -position
595:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:9 |==> 0
596:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:9 |==> -9
597:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:length >= 9 |==> length != 9
598:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:length >= 9 |==> length < 9
599:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:length >= 9 |==> length <= 9
600:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:length >= 9 |==> length == 9
601:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:length >= 9 |==> length > 9
602:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:length >= 9 |==> false
603:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1329:length >= 9 |==> true
604:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1335:negative |==> false
605:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1335:negative |==> true
606:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1336:i++ |==> <NO-OP>
607:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1339:text.charAt(i++) - '0' |==> text.charAt(i++) % '0'
608:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1339:text.charAt(i++) - '0' |==> text.charAt(i++) * '0'
609:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1339:text.charAt(i++) - '0' |==> text.charAt(i++) + '0'
610:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1339:text.charAt(i++) - '0' |==> text.charAt(i++) / '0'
611:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:~position |==> +position
612:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1341:~position |==> -position
613:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1343:position += length |==> <NO-OP>
614:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1344:i < position |==> i != position
615:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1344:i < position |==> i <= position
616:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1344:i < position |==> i == position
617:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1344:i < position |==> i > position
618:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1344:i < position |==> i >= position
619:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1344:i < position |==> false
620:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1344:i < position |==> true
621:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:3 |==> 0
622:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:3 |==> -3
623:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:value << 3 |==> value >> 3
624:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:value << 3 |==> value >>> 3
625:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:1 |==> 0
626:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:1 |==> -1
627:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:value << 1 |==> value >> 1
628:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:value << 1 |==> value >>> 1
629:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
630:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
631:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
632:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
633:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) % text.charAt(i++)
634:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) * text.charAt(i++)
635:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) - text.charAt(i++)
636:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) / text.charAt(i++)
637:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) % '0'
638:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) * '0'
639:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(i++) + '0'
640:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) / '0'
641:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1345:value = ((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> <NO-OP>
642:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1347:negative |==> false
643:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1347:negative |==> true
644:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1348:-value |==> +value
645:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1348:-value |==> ~value
646:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1348:value = -value |==> <NO-OP>
647:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1352:bucket.saveField(iFieldType, value) |==> <NO-OP>
648:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1375:FormatUtils.appendUnpaddedInteger(buf, field.get(instant)) |==> <NO-OP>
649:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1377:buf.append('\ufffd') |==> <NO-OP>
650:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1386:FormatUtils.writeUnpaddedInteger(out, field.get(instant)) |==> <NO-OP>
651:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1388:out.write('\ufffd') |==> <NO-OP>
652:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1393:partial.isSupported(iFieldType) |==> false
653:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1393:partial.isSupported(iFieldType) |==> true
654:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1395:FormatUtils.appendUnpaddedInteger(buf, partial.get(iFieldType)) |==> <NO-OP>
655:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1397:buf.append('\ufffd') |==> <NO-OP>
656:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1400:buf.append('\ufffd') |==> <NO-OP>
657:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1405:partial.isSupported(iFieldType) |==> false
658:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1405:partial.isSupported(iFieldType) |==> true
659:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1407:FormatUtils.writeUnpaddedInteger(out, partial.get(iFieldType)) |==> <NO-OP>
660:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1409:out.write('\ufffd') |==> <NO-OP>
661:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1412:out.write('\ufffd') |==> <NO-OP>
662:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1438:FormatUtils.appendPaddedInteger(buf, field.get(instant), iMinPrintedDigits) |==> <NO-OP>
663:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1440:appendUnknownString(buf, iMinPrintedDigits) |==> <NO-OP>
664:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1449:FormatUtils.writePaddedInteger(out, field.get(instant), iMinPrintedDigits) |==> <NO-OP>
665:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1451:printUnknownString(out, iMinPrintedDigits) |==> <NO-OP>
666:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1456:partial.isSupported(iFieldType) |==> false
667:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1456:partial.isSupported(iFieldType) |==> true
668:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1458:FormatUtils.appendPaddedInteger(buf, partial.get(iFieldType), iMinPrintedDigits) |==> <NO-OP>
669:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1460:appendUnknownString(buf, iMinPrintedDigits) |==> <NO-OP>
670:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1463:appendUnknownString(buf, iMinPrintedDigits) |==> <NO-OP>
671:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1468:partial.isSupported(iFieldType) |==> false
672:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1468:partial.isSupported(iFieldType) |==> true
673:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1470:FormatUtils.writePaddedInteger(out, partial.get(iFieldType), iMinPrintedDigits) |==> <NO-OP>
674:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1472:printUnknownString(out, iMinPrintedDigits) |==> <NO-OP>
675:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1475:printUnknownString(out, iMinPrintedDigits) |==> <NO-OP>
676:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:0 |==> 1
677:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:0 |==> -1
678:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:newPos < 0 |==> newPos != 0
679:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:newPos < 0 |==> newPos <= 0
680:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:newPos < 0 |==> newPos == 0
681:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:newPos < 0 |==> newPos > 0
682:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:newPos < 0 |==> newPos >= 0
683:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:newPos < 0 |==> false
684:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1489:newPos < 0 |==> true
685:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1492:position + iMaxParsedDigits |==> position % iMaxParsedDigits
686:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1492:position + iMaxParsedDigits |==> position * iMaxParsedDigits
687:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1492:position + iMaxParsedDigits |==> position - iMaxParsedDigits
688:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1492:position + iMaxParsedDigits |==> position / iMaxParsedDigits
689:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1493:newPos != expectedPos |==> newPos < expectedPos
690:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1493:newPos != expectedPos |==> newPos <= expectedPos
691:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1493:newPos != expectedPos |==> newPos == expectedPos
692:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1493:newPos != expectedPos |==> newPos > expectedPos
693:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1493:newPos != expectedPos |==> newPos >= expectedPos
694:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1493:newPos != expectedPos |==> false
695:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1493:newPos != expectedPos |==> true
696:COR:iSigned:TRUE:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1494:iSigned |==> false
697:COR:iSigned:FALSE:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1494:iSigned |==> true
698:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' |==> c != '-'
699:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' |==> c < '-'
700:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' |==> c <= '-'
701:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' |==> c > '-'
702:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' |==> c >= '-'
703:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' |==> false
704:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' |==> true
705:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '+' |==> c != '+'
706:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '+' |==> c < '+'
707:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '+' |==> c <= '+'
708:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '+' |==> c > '+'
709:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '+' |==> c >= '+'
710:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '+' |==> false
711:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '+' |==> true
712:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' || c == '+' |==> c == '-' != (c == '+')
713:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' || c == '+' |==> c == '-' && c == '+'
714:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' || c == '+' |==> c == '-' == (c == '+')
715:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' || c == '+' |==> false
716:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' || c == '+' |==> c == '-'
717:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' || c == '+' |==> c == '+'
718:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1496:c == '-' || c == '+' |==> true
719:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1497:expectedPos++ |==> <NO-OP>
720:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1500:newPos > expectedPos |==> newPos != expectedPos
721:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1500:newPos > expectedPos |==> newPos < expectedPos
722:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1500:newPos > expectedPos |==> newPos <= expectedPos
723:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1500:newPos > expectedPos |==> newPos == expectedPos
724:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1500:newPos > expectedPos |==> newPos >= expectedPos
725:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1500:newPos > expectedPos |==> false
726:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1500:newPos > expectedPos |==> true
727:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:~(expectedPos + 1) |==> +(expectedPos + 1)
728:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:~(expectedPos + 1) |==> -(expectedPos + 1)
729:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:1 |==> 0
730:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:1 |==> -1
731:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:expectedPos + 1 |==> expectedPos % 1
732:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:expectedPos + 1 |==> expectedPos * 1
733:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:expectedPos + 1 |==> expectedPos - 1
734:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1502:expectedPos + 1 |==> expectedPos / 1
735:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1503:newPos < expectedPos |==> newPos != expectedPos
736:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1503:newPos < expectedPos |==> newPos <= expectedPos
737:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1503:newPos < expectedPos |==> newPos == expectedPos
738:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1503:newPos < expectedPos |==> newPos > expectedPos
739:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1503:newPos < expectedPos |==> newPos >= expectedPos
740:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1503:newPos < expectedPos |==> false
741:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1503:newPos < expectedPos |==> true
742:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1505:~newPos |==> +newPos
743:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$FixedNumber@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1505:~newPos |==> -newPos
744:COR:iLenientParse:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1530:iLenientParse |==> false
745:COR:iLenientParse:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1530:iLenientParse |==> true
746:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1530:4 |==> 0
747:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1530:4 |==> -4
748:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1530:2 |==> 0
749:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimateParsedLength():1530:2 |==> -2
750:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:text.length() - position |==> text.length() % position
751:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:text.length() - position |==> text.length() * position
752:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:text.length() - position |==> text.length() + position
753:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1534:text.length() - position |==> text.length() / position
754:COR:iLenientParse:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1536:iLenientParse |==> false
755:COR:iLenientParse:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1536:iLenientParse |==> true
756:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1537:2 |==> 0
757:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1537:2 |==> -2
758:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1537:limit = Math.min(2, limit) |==> <NO-OP>
759:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:2 |==> 0
760:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:2 |==> -2
761:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:limit < 2 |==> limit != 2
762:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:limit < 2 |==> limit <= 2
763:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:limit < 2 |==> limit == 2
764:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:limit < 2 |==> limit > 2
765:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:limit < 2 |==> limit >= 2
766:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:limit < 2 |==> false
767:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1538:limit < 2 |==> true
768:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1539:~position |==> +position
769:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1539:~position |==> -position
770:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1542:false |==> true
771:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1543:false |==> true
772:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1544:0 |==> 1
773:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1544:0 |==> -1
774:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1545:length < limit |==> length != limit
775:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1545:length < limit |==> length <= limit
776:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1545:length < limit |==> length == limit
777:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1545:length < limit |==> length > limit
778:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1545:length < limit |==> length >= limit
779:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1545:length < limit |==> false
780:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1545:length < limit |==> true
781:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1546:position + length |==> position % length
782:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1546:position + length |==> position * length
783:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1546:position + length |==> position - length
784:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1546:position + length |==> position / length
785:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:0 |==> 1
786:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:0 |==> -1
787:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 |==> length != 0
788:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 |==> length < 0
789:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 |==> length <= 0
790:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 |==> length > 0
791:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 |==> length >= 0
792:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 |==> false
793:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 |==> true
794:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' |==> c != '-'
795:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' |==> c < '-'
796:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' |==> c <= '-'
797:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' |==> c > '-'
798:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' |==> c >= '-'
799:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' |==> false
800:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' |==> true
801:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '+' |==> c != '+'
802:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '+' |==> c < '+'
803:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '+' |==> c <= '+'
804:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '+' |==> c > '+'
805:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '+' |==> c >= '+'
806:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '+' |==> false
807:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '+' |==> true
808:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' || c == '+' |==> c == '-' != (c == '+')
809:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' || c == '+' |==> c == '-' && c == '+'
810:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' || c == '+' |==> c == '-' == (c == '+')
811:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' || c == '+' |==> false
812:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' || c == '+' |==> c == '-'
813:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' || c == '+' |==> c == '+'
814:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:c == '-' || c == '+' |==> true
815:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 && (c == '-' || c == '+') |==> length == 0 != (c == '-' || c == '+')
816:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
817:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 && (c == '-' || c == '+') |==> false
818:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 && (c == '-' || c == '+') |==> length == 0
819:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
820:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 && (c == '-' || c == '+') |==> true
821:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1547:length == 0 && (c == '-' || c == '+') |==> length == 0 || (c == '-' || c == '+')
822:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1548:true |==> false
823:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1548:hasSignChar = true |==> <NO-OP>
824:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:c == '-' |==> c != '-'
825:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:c == '-' |==> c < '-'
826:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:c == '-' |==> c <= '-'
827:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:c == '-' |==> c > '-'
828:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:c == '-' |==> c >= '-'
829:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:c == '-' |==> false
830:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:c == '-' |==> true
831:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1549:negative = c == '-' |==> <NO-OP>
832:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1550:negative |==> false
833:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1550:negative |==> true
834:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1551:length++ |==> <NO-OP>
835:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1554:position++ |==> <NO-OP>
836:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1555:limit-- |==> <NO-OP>
837:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' |==> c != '0'
838:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' |==> c <= '0'
839:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' |==> c == '0'
840:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' |==> c > '0'
841:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' |==> c >= '0'
842:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' |==> false
843:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' |==> true
844:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c > '9' |==> c != '9'
845:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c > '9' |==> c < '9'
846:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c > '9' |==> c <= '9'
847:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c > '9' |==> c == '9'
848:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c > '9' |==> c >= '9'
849:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c > '9' |==> false
850:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c > '9' |==> true
851:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' || c > '9' |==> c < '0' != c > '9'
852:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' || c > '9' |==> c < '0' && c > '9'
853:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' || c > '9' |==> c < '0' == c > '9'
854:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' || c > '9' |==> false
855:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' || c > '9' |==> c < '0'
856:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' || c > '9' |==> c > '9'
857:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1559:c < '0' || c > '9' |==> true
858:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1562:length++ |==> <NO-OP>
859:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:0 |==> 1
860:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:0 |==> -1
861:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:length == 0 |==> length != 0
862:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:length == 0 |==> length < 0
863:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:length == 0 |==> length <= 0
864:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:length == 0 |==> length > 0
865:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:length == 0 |==> length >= 0
866:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:length == 0 |==> false
867:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1565:length == 0 |==> true
868:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1566:~position |==> +position
869:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1566:~position |==> -position
870:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:2 |==> 0
871:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:2 |==> -2
872:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:length != 2 |==> length < 2
873:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:length != 2 |==> length <= 2
874:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:length != 2 |==> length == 2
875:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:length != 2 |==> length > 2
876:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:length != 2 |==> length >= 2
877:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:length != 2 |==> false
878:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:length != 2 |==> true
879:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:hasSignChar || length != 2 |==> hasSignChar != (length != 2)
880:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:hasSignChar || length != 2 |==> hasSignChar && length != 2
881:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:hasSignChar || length != 2 |==> hasSignChar == (length != 2)
882:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:hasSignChar || length != 2 |==> false
883:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:hasSignChar || length != 2 |==> hasSignChar
884:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:hasSignChar || length != 2 |==> length != 2
885:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1569:hasSignChar || length != 2 |==> true
886:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:9 |==> 0
887:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:9 |==> -9
888:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:length >= 9 |==> length != 9
889:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:length >= 9 |==> length < 9
890:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:length >= 9 |==> length <= 9
891:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:length >= 9 |==> length == 9
892:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:length >= 9 |==> length > 9
893:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:length >= 9 |==> false
894:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1571:length >= 9 |==> true
895:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1577:negative |==> false
896:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1577:negative |==> true
897:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1578:i++ |==> <NO-OP>
898:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1581:text.charAt(i++) - '0' |==> text.charAt(i++) % '0'
899:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1581:text.charAt(i++) - '0' |==> text.charAt(i++) * '0'
900:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1581:text.charAt(i++) - '0' |==> text.charAt(i++) + '0'
901:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1581:text.charAt(i++) - '0' |==> text.charAt(i++) / '0'
902:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1583:~position |==> +position
903:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1583:~position |==> -position
904:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1585:position += length |==> <NO-OP>
905:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:i < position |==> i != position
906:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:i < position |==> i <= position
907:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:i < position |==> i == position
908:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:i < position |==> i > position
909:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:i < position |==> i >= position
910:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:i < position |==> false
911:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1586:i < position |==> true
912:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:3 |==> 0
913:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:3 |==> -3
914:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:value << 3 |==> value >> 3
915:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:value << 3 |==> value >>> 3
916:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:1 |==> 0
917:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:1 |==> -1
918:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:value << 1 |==> value >> 1
919:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:value << 1 |==> value >>> 1
920:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
921:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
922:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
923:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
924:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) % text.charAt(i++)
925:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) * text.charAt(i++)
926:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) - text.charAt(i++)
927:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) |==> ((value << 3) + (value << 1)) / text.charAt(i++)
928:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) % '0'
929:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) * '0'
930:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(i++) + '0'
931:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(i++)) / '0'
932:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1587:value = ((value << 3) + (value << 1)) + text.charAt(i++) - '0' |==> <NO-OP>
933:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1589:negative |==> false
934:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1589:negative |==> true
935:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1590:-value |==> +value
936:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1590:-value |==> ~value
937:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1590:value = -value |==> <NO-OP>
938:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1594:bucket.saveField(iType, value) |==> <NO-OP>
939:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' |==> c != '0'
940:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' |==> c <= '0'
941:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' |==> c == '0'
942:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' |==> c > '0'
943:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' |==> c >= '0'
944:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' |==> false
945:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' |==> true
946:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c > '9' |==> c != '9'
947:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c > '9' |==> c < '9'
948:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c > '9' |==> c <= '9'
949:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c > '9' |==> c == '9'
950:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c > '9' |==> c >= '9'
951:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c > '9' |==> false
952:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c > '9' |==> true
953:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' || c > '9' |==> c < '0' != c > '9'
954:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' || c > '9' |==> c < '0' && c > '9'
955:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' || c > '9' |==> c < '0' == c > '9'
956:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' || c > '9' |==> false
957:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' || c > '9' |==> c < '0'
958:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' || c > '9' |==> c > '9'
959:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1601:c < '0' || c > '9' |==> true
960:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1602:~position |==> +position
961:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1602:~position |==> -position
962:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1604:c - '0' |==> c % '0'
963:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1604:c - '0' |==> c * '0'
964:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1604:c - '0' |==> c + '0'
965:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1604:c - '0' |==> c / '0'
966:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1605:1 |==> 0
967:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1605:1 |==> -1
968:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1605:position + 1 |==> position % 1
969:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1605:position + 1 |==> position * 1
970:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1605:position + 1 |==> position - 1
971:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1605:position + 1 |==> position / 1
972:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1605:c = text.charAt(position + 1) |==> <NO-OP>
973:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' |==> c != '0'
974:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' |==> c <= '0'
975:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' |==> c == '0'
976:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' |==> c > '0'
977:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' |==> c >= '0'
978:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' |==> false
979:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' |==> true
980:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c > '9' |==> c != '9'
981:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c > '9' |==> c < '9'
982:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c > '9' |==> c <= '9'
983:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c > '9' |==> c == '9'
984:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c > '9' |==> c >= '9'
985:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c > '9' |==> false
986:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c > '9' |==> true
987:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' || c > '9' |==> c < '0' != c > '9'
988:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' || c > '9' |==> c < '0' && c > '9'
989:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' || c > '9' |==> c < '0' == c > '9'
990:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' || c > '9' |==> false
991:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' || c > '9' |==> c < '0'
992:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' || c > '9' |==> c > '9'
993:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1606:c < '0' || c > '9' |==> true
994:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:~position |==> +position
995:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1607:~position |==> -position
996:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:3 |==> 0
997:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:3 |==> -3
998:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:year << 3 |==> year >> 3
999:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:year << 3 |==> year >>> 3
1000:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:1 |==> 0
1001:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:1 |==> -1
1002:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:year << 1 |==> year >> 1
1003:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:year << 1 |==> year >>> 1
1004:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:(year << 3) + (year << 1) |==> (year << 3) % (year << 1)
1005:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:(year << 3) + (year << 1) |==> (year << 3) * (year << 1)
1006:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:(year << 3) + (year << 1) |==> (year << 3) - (year << 1)
1007:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:(year << 3) + (year << 1) |==> (year << 3) / (year << 1)
1008:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) % c
1009:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) * c
1010:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) - c
1011:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c |==> ((year << 3) + (year << 1)) / c
1012:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c - '0' |==> (((year << 3) + (year << 1)) + c) % '0'
1013:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c - '0' |==> (((year << 3) + (year << 1)) + c) * '0'
1014:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c - '0' |==> ((year << 3) + (year << 1)) + c + '0'
1015:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:((year << 3) + (year << 1)) + c - '0' |==> (((year << 3) + (year << 1)) + c) / '0'
1016:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1609:year = ((year << 3) + (year << 1)) + c - '0' |==> <NO-OP>
1017:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1613:bucket.getPivotYear() != null |==> bucket.getPivotYear() == null
1018:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1613:bucket.getPivotYear() != null |==> false
1019:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1613:bucket.getPivotYear() != null |==> true
1020:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1614:pivot = bucket.getPivotYear().intValue() |==> <NO-OP>
1021:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1617:50 |==> 0
1022:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1617:50 |==> -50
1023:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1617:pivot - 50 |==> pivot % 50
1024:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1617:pivot - 50 |==> pivot * 50
1025:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1617:pivot - 50 |==> pivot + 50
1026:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1617:pivot - 50 |==> pivot / 50
1027:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:0 |==> 1
1028:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:0 |==> -1
1029:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:low >= 0 |==> low != 0
1030:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:low >= 0 |==> low < 0
1031:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:low >= 0 |==> low <= 0
1032:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:low >= 0 |==> low == 0
1033:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:low >= 0 |==> low > 0
1034:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:low >= 0 |==> false
1035:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1620:low >= 0 |==> true
1036:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:100 |==> 0
1037:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:100 |==> -100
1038:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:low % 100 |==> low * 100
1039:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:low % 100 |==> low + 100
1040:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:low % 100 |==> low - 100
1041:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1621:low % 100 |==> low / 100
1042:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:99 |==> 0
1043:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:99 |==> -99
1044:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:1 |==> 0
1045:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:1 |==> -1
1046:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:low + 1 |==> low % 1
1047:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:low + 1 |==> low * 1
1048:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:low + 1 |==> low - 1
1049:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:low + 1 |==> low / 1
1050:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:100 |==> 0
1051:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:100 |==> -100
1052:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:(low + 1) % 100 |==> (low + 1) * 100
1053:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:(low + 1) % 100 |==> (low + 1) + 100
1054:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:(low + 1) % 100 |==> (low + 1) - 100
1055:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:(low + 1) % 100 |==> (low + 1) / 100
1056:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:99 + ((low + 1) % 100) |==> 99 % ((low + 1) % 100)
1057:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:99 + ((low + 1) % 100) |==> 99 * ((low + 1) % 100)
1058:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:99 + ((low + 1) % 100) |==> 99 - ((low + 1) % 100)
1059:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1623:99 + ((low + 1) % 100) |==> 99 / ((low + 1) % 100)
1060:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year < t |==> year != t
1061:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year < t |==> year <= t
1062:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year < t |==> year == t
1063:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year < t |==> year > t
1064:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year < t |==> year >= t
1065:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year < t |==> false
1066:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year < t |==> true
1067:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:100 |==> 0
1068:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:100 |==> -100
1069:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:0 |==> 1
1070:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:0 |==> -1
1071:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) |==> low % ((year < t) ? 100 : 0)
1072:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) |==> low * ((year < t) ? 100 : 0)
1073:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) |==> low - ((year < t) ? 100 : 0)
1074:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) |==> low / ((year < t) ? 100 : 0)
1075:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) - t |==> (low + ((year < t) ? 100 : 0)) % t
1076:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) - t |==> (low + ((year < t) ? 100 : 0)) * t
1077:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) - t |==> low + ((year < t) ? 100 : 0) + t
1078:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:low + ((year < t) ? 100 : 0) - t |==> (low + ((year < t) ? 100 : 0)) / t
1079:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1626:year += low + ((year < t) ? 100 : 0) - t |==> <NO-OP>
1080:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1628:bucket.saveField(iType, year) |==> <NO-OP>
1081:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1629:2 |==> 0
1082:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1629:2 |==> -2
1083:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1629:position + 2 |==> position % 2
1084:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1629:position + 2 |==> position * 2
1085:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1629:position + 2 |==> position - 2
1086:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1629:position + 2 |==> position / 2
1087:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimatePrintedLength():1633:2 |==> 0
1088:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@estimatePrintedLength():1633:2 |==> -2
1089:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:0 |==> 1
1090:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:0 |==> -1
1091:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:year < 0 |==> year != 0
1092:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:year < 0 |==> year <= 0
1093:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:year < 0 |==> year == 0
1094:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:year < 0 |==> year > 0
1095:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:year < 0 |==> year >= 0
1096:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:year < 0 |==> false
1097:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1640:year < 0 |==> true
1098:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1641:buf.append('\ufffd') |==> <NO-OP>
1099:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1642:buf.append('\ufffd') |==> <NO-OP>
1100:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1644:2 |==> 0
1101:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1644:2 |==> -2
1102:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1644:FormatUtils.appendPaddedInteger(buf, year, 2) |==> <NO-OP>
1103:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:0 |==> 1
1104:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:0 |==> -1
1105:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:year < 0 |==> year != 0
1106:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:year < 0 |==> year <= 0
1107:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:year < 0 |==> year == 0
1108:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:year < 0 |==> year > 0
1109:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:year < 0 |==> year >= 0
1110:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:year < 0 |==> false
1111:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1652:year < 0 |==> true
1112:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1653:out.write('\ufffd') |==> <NO-OP>
1113:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1654:out.write('\ufffd') |==> <NO-OP>
1114:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1656:2 |==> 0
1115:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1656:2 |==> -2
1116:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1656:FormatUtils.writePaddedInteger(out, year, 2) |==> <NO-OP>
1117:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:0 |==> 1
1118:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:0 |==> -1
1119:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:year < 0 |==> year != 0
1120:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:year < 0 |==> year <= 0
1121:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:year < 0 |==> year == 0
1122:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:year < 0 |==> year > 0
1123:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:year < 0 |==> year >= 0
1124:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:year < 0 |==> false
1125:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1663:year < 0 |==> true
1126:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1664:-year |==> +year
1127:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1664:-year |==> ~year
1128:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1664:year = -year |==> <NO-OP>
1129:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1666:100 |==> 0
1130:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1666:100 |==> -100
1131:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1666:year % 100 |==> year * 100
1132:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1666:year % 100 |==> year + 100
1133:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1666:year % 100 |==> year - 100
1134:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1666:year % 100 |==> year / 100
1135:LVR:NEG:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1668:-1 |==> 0
1136:LVR:NEG:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(long,org.joda.time.Chronology):1668:-1 |==> 1
1137:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:0 |==> 1
1138:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:0 |==> -1
1139:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:year < 0 |==> year != 0
1140:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:year < 0 |==> year <= 0
1141:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:year < 0 |==> year == 0
1142:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:year < 0 |==> year > 0
1143:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:year < 0 |==> year >= 0
1144:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:year < 0 |==> false
1145:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1674:year < 0 |==> true
1146:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1675:buf.append('\ufffd') |==> <NO-OP>
1147:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1676:buf.append('\ufffd') |==> <NO-OP>
1148:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1678:2 |==> 0
1149:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1678:2 |==> -2
1150:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1678:FormatUtils.appendPaddedInteger(buf, year, 2) |==> <NO-OP>
1151:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:0 |==> 1
1152:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:0 |==> -1
1153:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:year < 0 |==> year != 0
1154:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:year < 0 |==> year <= 0
1155:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:year < 0 |==> year == 0
1156:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:year < 0 |==> year > 0
1157:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:year < 0 |==> year >= 0
1158:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:year < 0 |==> false
1159:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1684:year < 0 |==> true
1160:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1685:out.write('\ufffd') |==> <NO-OP>
1161:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1686:out.write('\ufffd') |==> <NO-OP>
1162:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1688:2 |==> 0
1163:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1688:2 |==> -2
1164:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1688:FormatUtils.writePaddedInteger(out, year, 2) |==> <NO-OP>
1165:COR:partial.isSupported(iType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1693:partial.isSupported(iType) |==> false
1166:COR:partial.isSupported(iType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1693:partial.isSupported(iType) |==> true
1167:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:0 |==> 1
1168:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:0 |==> -1
1169:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:year < 0 |==> year != 0
1170:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:year < 0 |==> year <= 0
1171:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:year < 0 |==> year == 0
1172:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:year < 0 |==> year > 0
1173:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:year < 0 |==> year >= 0
1174:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:year < 0 |==> false
1175:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1696:year < 0 |==> true
1176:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1697:-year |==> +year
1177:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1697:-year |==> ~year
1178:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1697:year = -year |==> <NO-OP>
1179:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1699:100 |==> 0
1180:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1699:100 |==> -100
1181:AOR:%(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1699:year % 100 |==> year * 100
1182:AOR:%(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1699:year % 100 |==> year + 100
1183:AOR:%(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1699:year % 100 |==> year - 100
1184:AOR:%(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1699:year % 100 |==> year / 100
1185:LVR:NEG:0:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1702:-1 |==> 0
1186:LVR:NEG:POS:org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear@getTwoDigitYear(org.joda.time.ReadablePartial):1702:-1 |==> 1
1187:COR:iShort:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1722:iShort |==> false
1188:COR:iShort:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1722:iShort |==> true
1189:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1722:6 |==> 0
1190:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1722:6 |==> -6
1191:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1722:20 |==> 0
1192:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@estimatePrintedLength():1722:20 |==> -20
1193:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1729:buf.append(print(instant, chrono, locale)) |==> <NO-OP>
1194:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1731:buf.append('\ufffd') |==> <NO-OP>
1195:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1739:out.write(print(instant, chrono, locale)) |==> <NO-OP>
1196:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1741:out.write('\ufffd') |==> <NO-OP>
1197:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1747:buf.append(print(partial, locale)) |==> <NO-OP>
1198:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1749:buf.append('\ufffd') |==> <NO-OP>
1199:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1755:out.write(print(partial, locale)) |==> <NO-OP>
1200:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1757:out.write('\ufffd') |==> <NO-OP>
1201:COR:iShort:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(long,org.joda.time.Chronology,java.util.Locale):1763:iShort |==> false
1202:COR:iShort:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(long,org.joda.time.Chronology,java.util.Locale):1763:iShort |==> true
1203:COR:partial.isSupported(iFieldType):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1771:partial.isSupported(iFieldType) |==> false
1204:COR:partial.isSupported(iFieldType):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1771:partial.isSupported(iFieldType) |==> true
1205:COR:iShort:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1773:iShort |==> false
1206:COR:iShort:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@print(org.joda.time.ReadablePartial,java.util.Locale):1773:iShort |==> true
1207:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1793:0 |==> 1
1208:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1793:0 |==> -1
1209:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1796:innerMap == null |==> innerMap != null
1210:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1796:innerMap == null |==> false
1211:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1796:innerMap == null |==> true
1212:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1797:innerMap = new HashMap<DateTimeFieldType, Object[]>() |==> <NO-OP>
1213:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1798:cParseCache.put(locale, innerMap) |==> <NO-OP>
1214:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1801:array == null |==> array != null
1215:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1801:array == null |==> false
1216:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1801:array == null |==> true
1217:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1802:32 |==> 0
1218:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1802:32 |==> -32
1219:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1802:validValues = new HashSet<String>(32) |==> <NO-OP>
1220:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1803:0L |==> 1L
1221:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1803:0L |==> -1L
1222:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min |==> max % min
1223:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min |==> max * min
1224:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min |==> max + min
1225:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min |==> max / min
1226:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:32 |==> 0
1227:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:32 |==> -32
1228:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min > 32 |==> max - min != 32
1229:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min > 32 |==> max - min < 32
1230:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min > 32 |==> max - min <= 32
1231:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min > 32 |==> max - min == 32
1232:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min > 32 |==> max - min >= 32
1233:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min > 32 |==> false
1234:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1807:max - min > 32 |==> true
1235:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1808:~position |==> +position
1236:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1808:~position |==> -position
1237:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1810:maxLength = property.getMaximumTextLength(locale) |==> <NO-OP>
1238:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1811:i <= max |==> i != max
1239:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1811:i <= max |==> i < max
1240:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1811:i <= max |==> i == max
1241:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1811:i <= max |==> i > max
1242:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1811:i <= max |==> i >= max
1243:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1811:i <= max |==> false
1244:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1811:i <= max |==> true
1245:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1812:property.set(i) |==> <NO-OP>
1246:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1813:validValues.add(property.getAsShortText(locale)) |==> <NO-OP>
1247:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1814:validValues.add(property.getAsShortText(locale).toLowerCase(locale)) |==> <NO-OP>
1248:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1815:validValues.add(property.getAsShortText(locale).toUpperCase(locale)) |==> <NO-OP>
1249:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1816:validValues.add(property.getAsText(locale)) |==> <NO-OP>
1250:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1817:validValues.add(property.getAsText(locale).toLowerCase(locale)) |==> <NO-OP>
1251:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1818:validValues.add(property.getAsText(locale).toUpperCase(locale)) |==> <NO-OP>
1252:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:iFieldType == DateTimeFieldType.era() |==> iFieldType != DateTimeFieldType.era()
1253:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:iFieldType == DateTimeFieldType.era() |==> false
1254:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:iFieldType == DateTimeFieldType.era() |==> true
1255:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> "en".equals(locale.getLanguage()) != (iFieldType == DateTimeFieldType.era())
1256:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> "en".equals(locale.getLanguage()) == (iFieldType == DateTimeFieldType.era())
1257:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> false
1258:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> "en".equals(locale.getLanguage())
1259:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> iFieldType == DateTimeFieldType.era()
1260:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> true
1261:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1820:"en".equals(locale.getLanguage()) && iFieldType == DateTimeFieldType.era() |==> "en".equals(locale.getLanguage()) || iFieldType == DateTimeFieldType.era()
1262:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1822:validValues.add("BCE") |==> <NO-OP>
1263:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1823:validValues.add("bce") |==> <NO-OP>
1264:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1824:validValues.add("CE") |==> <NO-OP>
1265:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1825:validValues.add("ce") |==> <NO-OP>
1266:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1826:3 |==> 0
1267:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1826:3 |==> -3
1268:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1826:maxLength = 3 |==> <NO-OP>
1269:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1828:array = new Object[]{validValues, Integer.valueOf(maxLength)} |==> <NO-OP>
1270:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1829:innerMap.put(iFieldType, array) |==> <NO-OP>
1271:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1831:0 |==> 1
1272:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1831:0 |==> -1
1273:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1831:validValues = (Set<String>)array[0] |==> <NO-OP>
1274:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1832:1 |==> 0
1275:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1832:1 |==> -1
1276:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1832:maxLength = ((Integer)array[1]).intValue() |==> <NO-OP>
1277:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1836:position + maxLength |==> position % maxLength
1278:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1836:position + maxLength |==> position * maxLength
1279:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1836:position + maxLength |==> position - maxLength
1280:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1836:position + maxLength |==> position / maxLength
1281:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1837:i > position |==> i != position
1282:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1837:i > position |==> i < position
1283:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1837:i > position |==> i <= position
1284:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1837:i > position |==> i == position
1285:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1837:i > position |==> i >= position
1286:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1837:i > position |==> false
1287:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1837:i > position |==> true
1288:COR:validValues.contains(match):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1839:validValues.contains(match) |==> false
1289:COR:validValues.contains(match):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1839:validValues.contains(match) |==> true
1290:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1840:bucket.saveField(iFieldType, match, locale) |==> <NO-OP>
1291:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1844:~position |==> +position
1292:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TextField@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):1844:~position |==> -position
1293:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:18 |==> 0
1294:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:18 |==> -18
1295:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:maxDigits > 18 |==> maxDigits != 18
1296:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:maxDigits > 18 |==> maxDigits < 18
1297:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:maxDigits > 18 |==> maxDigits <= 18
1298:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:maxDigits > 18 |==> maxDigits == 18
1299:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:maxDigits > 18 |==> maxDigits >= 18
1300:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:maxDigits > 18 |==> false
1301:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1860:maxDigits > 18 |==> true
1302:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1861:18 |==> 0
1303:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1861:18 |==> -18
1304:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1861:maxDigits = 18 |==> <NO-OP>
1305:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1863:iMinDigits = minDigits |==> <NO-OP>
1306:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@<init>(org.joda.time.DateTimeFieldType,int,int):1864:iMaxDigits = maxDigits |==> <NO-OP>
1307:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1875:printTo(buf, null, instant, chrono) |==> <NO-OP>
1308:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):1884:printTo(null, out, instant, chrono) |==> <NO-OP>
1309:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1890:0L |==> 1L
1310:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1890:0L |==> -1L
1311:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):1892:printTo(buf, null, millis, partial.getChronology()) |==> <NO-OP>
1312:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1901:0L |==> 1L
1313:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1901:0L |==> -1L
1314:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):1902:printTo(null, out, millis, partial.getChronology()) |==> <NO-OP>
1315:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1915:buf != null |==> buf == null
1316:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1915:buf != null |==> false
1317:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1915:buf != null |==> true
1318:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1916:appendUnknownString(buf, minDigits) |==> <NO-OP>
1319:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1918:printUnknownString(out, minDigits) |==> <NO-OP>
1320:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:0 |==> 1
1321:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:0 |==> -1
1322:ROR:==(long,long):!=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:fraction == 0 |==> fraction != 0
1323:ROR:==(long,long):<(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:fraction == 0 |==> fraction < 0
1324:ROR:==(long,long):<=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:fraction == 0 |==> fraction <= 0
1325:ROR:==(long,long):>(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:fraction == 0 |==> fraction > 0
1326:ROR:==(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:fraction == 0 |==> fraction >= 0
1327:ROR:==(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:fraction == 0 |==> false
1328:ROR:==(long,long):TRUE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1923:fraction == 0 |==> true
1329:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1924:buf != null |==> buf == null
1330:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1924:buf != null |==> false
1331:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1924:buf != null |==> true
1332:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:0 |==> 1
1333:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:0 |==> -1
1334:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:--minDigits >= 0 |==> --minDigits != 0
1335:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:--minDigits >= 0 |==> --minDigits < 0
1336:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:--minDigits >= 0 |==> --minDigits <= 0
1337:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:--minDigits >= 0 |==> --minDigits == 0
1338:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:--minDigits >= 0 |==> --minDigits > 0
1339:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:--minDigits >= 0 |==> false
1340:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1925:--minDigits >= 0 |==> true
1341:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1926:buf.append('0') |==> <NO-OP>
1342:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:0 |==> 1
1343:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:0 |==> -1
1344:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:--minDigits >= 0 |==> --minDigits != 0
1345:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:--minDigits >= 0 |==> --minDigits < 0
1346:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:--minDigits >= 0 |==> --minDigits <= 0
1347:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:--minDigits >= 0 |==> --minDigits == 0
1348:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:--minDigits >= 0 |==> --minDigits > 0
1349:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:--minDigits >= 0 |==> false
1350:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1929:--minDigits >= 0 |==> true
1351:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1930:out.write('0') |==> <NO-OP>
1352:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1938:0 |==> 1
1353:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1938:0 |==> -1
1354:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1939:1 |==> 0
1355:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1939:1 |==> -1
1356:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:2147483647 |==> 0
1357:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:2147483647 |==> -2147483647
1358:LOR:&(long,long):^(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:scaled & 2147483647 |==> scaled ^ 2147483647
1359:LOR:&(long,long):|(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:scaled & 2147483647 |==> scaled | 2147483647
1360:ROR:==(long,long):!=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:(scaled & 2147483647) == scaled |==> (scaled & 2147483647) != scaled
1361:ROR:==(long,long):<(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:(scaled & 2147483647) == scaled |==> (scaled & 2147483647) < scaled
1362:ROR:==(long,long):<=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:(scaled & 2147483647) == scaled |==> (scaled & 2147483647) <= scaled
1363:ROR:==(long,long):>(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:(scaled & 2147483647) == scaled |==> (scaled & 2147483647) > scaled
1364:ROR:==(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:(scaled & 2147483647) == scaled |==> (scaled & 2147483647) >= scaled
1365:ROR:==(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:(scaled & 2147483647) == scaled |==> false
1366:ROR:==(long,long):TRUE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1941:(scaled & 2147483647) == scaled |==> true
1367:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1949:length < digits |==> length != digits
1368:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1949:length < digits |==> length <= digits
1369:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1949:length < digits |==> length == digits
1370:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1949:length < digits |==> length > digits
1371:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1949:length < digits |==> length >= digits
1372:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1949:length < digits |==> false
1373:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1949:length < digits |==> true
1374:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1950:buf != null |==> buf == null
1375:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1950:buf != null |==> false
1376:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1950:buf != null |==> true
1377:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1951:buf.append('0') |==> <NO-OP>
1378:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1953:out.write('0') |==> <NO-OP>
1379:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1955:minDigits-- |==> <NO-OP>
1380:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1956:digits-- |==> <NO-OP>
1381:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1959:minDigits < digits |==> minDigits != digits
1382:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1959:minDigits < digits |==> minDigits <= digits
1383:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1959:minDigits < digits |==> minDigits == digits
1384:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1959:minDigits < digits |==> minDigits > digits
1385:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1959:minDigits < digits |==> minDigits >= digits
1386:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1959:minDigits < digits |==> false
1387:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1959:minDigits < digits |==> true
1388:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:minDigits < digits |==> minDigits != digits
1389:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:minDigits < digits |==> minDigits <= digits
1390:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:minDigits < digits |==> minDigits == digits
1391:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:minDigits < digits |==> minDigits > digits
1392:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:minDigits < digits |==> minDigits >= digits
1393:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:minDigits < digits |==> false
1394:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1961:minDigits < digits |==> true
1395:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:1 |==> 0
1396:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:1 |==> -1
1397:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 |==> length != 1
1398:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 |==> length < 1
1399:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 |==> length == 1
1400:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 |==> length > 1
1401:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 |==> length >= 1
1402:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 |==> false
1403:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 |==> true
1404:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:1 |==> 0
1405:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:1 |==> -1
1406:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length - 1 |==> length % 1
1407:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length - 1 |==> length * 1
1408:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length - 1 |==> length + 1
1409:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length - 1 |==> length / 1
1410:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:str.charAt(length - 1) != '0' |==> str.charAt(length - 1) < '0'
1411:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:str.charAt(length - 1) != '0' |==> str.charAt(length - 1) <= '0'
1412:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:str.charAt(length - 1) != '0' |==> str.charAt(length - 1) == '0'
1413:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:str.charAt(length - 1) != '0' |==> str.charAt(length - 1) > '0'
1414:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:str.charAt(length - 1) != '0' |==> str.charAt(length - 1) >= '0'
1415:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:str.charAt(length - 1) != '0' |==> false
1416:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:str.charAt(length - 1) != '0' |==> true
1417:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 || str.charAt(length - 1) != '0' |==> length <= 1 != (str.charAt(length - 1) != '0')
1418:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 || str.charAt(length - 1) != '0' |==> length <= 1 && str.charAt(length - 1) != '0'
1419:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 || str.charAt(length - 1) != '0' |==> length <= 1 == (str.charAt(length - 1) != '0')
1420:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 || str.charAt(length - 1) != '0' |==> false
1421:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 || str.charAt(length - 1) != '0' |==> length <= 1
1422:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 || str.charAt(length - 1) != '0' |==> str.charAt(length - 1) != '0'
1423:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1962:length <= 1 || str.charAt(length - 1) != '0' |==> true
1424:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1965:digits-- |==> <NO-OP>
1425:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1966:length-- |==> <NO-OP>
1426:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:length < str.length() |==> length != str.length()
1427:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:length < str.length() |==> length <= str.length()
1428:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:length < str.length() |==> length == str.length()
1429:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:length < str.length() |==> length > str.length()
1430:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:length < str.length() |==> length >= str.length()
1431:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:length < str.length() |==> false
1432:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1968:length < str.length() |==> true
1433:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1969:buf != null |==> buf == null
1434:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1969:buf != null |==> false
1435:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1969:buf != null |==> true
1436:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:0 |==> 1
1437:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:0 |==> -1
1438:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:i < length |==> i != length
1439:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:i < length |==> i <= length
1440:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:i < length |==> i == length
1441:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:i < length |==> i > length
1442:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:i < length |==> i >= length
1443:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:i < length |==> false
1444:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1970:i < length |==> true
1445:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1971:buf.append(str.charAt(i)) |==> <NO-OP>
1446:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:0 |==> 1
1447:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:0 |==> -1
1448:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:i < length |==> i != length
1449:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:i < length |==> i <= length
1450:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:i < length |==> i == length
1451:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:i < length |==> i > length
1452:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:i < length |==> i >= length
1453:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:i < length |==> false
1454:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1974:i < length |==> true
1455:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1975:out.write(str.charAt(i)) |==> <NO-OP>
1456:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1982:buf != null |==> buf == null
1457:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1982:buf != null |==> false
1458:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1982:buf != null |==> true
1459:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1983:buf.append(str) |==> <NO-OP>
1460:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@printTo(java.lang.StringBuffer,java.io.Writer,long,org.joda.time.Chronology):1985:out.write(str) |==> <NO-OP>
1461:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1995:1L |==> 0L
1462:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1995:1L |==> -1L
1463:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1996:10L |==> 0L
1464:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1996:10L |==> -10L
1465:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1997:100L |==> 0L
1466:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1997:100L |==> -100L
1467:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1998:1000L |==> 0L
1468:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1998:1000L |==> -1000L
1469:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1999:10000L |==> 0L
1470:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):1999:10000L |==> -10000L
1471:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2000:100000L |==> 0L
1472:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2000:100000L |==> -100000L
1473:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2001:1000000L |==> 0L
1474:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2001:1000000L |==> -1000000L
1475:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2002:10000000L |==> 0L
1476:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2002:10000000L |==> -10000000L
1477:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2003:100000000L |==> 0L
1478:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2003:100000000L |==> -100000000L
1479:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2004:1000000000L |==> 0L
1480:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2004:1000000000L |==> -1000000000L
1481:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2005:10000000000L |==> 0L
1482:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2005:10000000000L |==> -10000000000L
1483:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2006:100000000000L |==> 0L
1484:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2006:100000000000L |==> -100000000000L
1485:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2007:1000000000000L |==> 0L
1486:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2007:1000000000000L |==> -1000000000000L
1487:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2008:10000000000000L |==> 0L
1488:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2008:10000000000000L |==> -10000000000000L
1489:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2009:100000000000000L |==> 0L
1490:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2009:100000000000000L |==> -100000000000000L
1491:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2010:1000000000000000L |==> 0L
1492:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2010:1000000000000000L |==> -1000000000000000L
1493:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2011:10000000000000000L |==> 0L
1494:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2011:10000000000000000L |==> -10000000000000000L
1495:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2012:100000000000000000L |==> 0L
1496:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2012:100000000000000000L |==> -100000000000000000L
1497:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2013:1000000000000000000L |==> 0L
1498:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2013:1000000000000000000L |==> -1000000000000000000L
1499:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:rangeMillis * scalar |==> rangeMillis % scalar
1500:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:rangeMillis * scalar |==> rangeMillis + scalar
1501:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:rangeMillis * scalar |==> rangeMillis - scalar
1502:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:rangeMillis * scalar |==> rangeMillis / scalar
1503:AOR:/(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) % scalar
1504:AOR:/(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) * scalar
1505:AOR:/(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) + scalar
1506:AOR:/(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:(rangeMillis * scalar) / scalar |==> (rangeMillis * scalar) - scalar
1507:ROR:==(long,long):!=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:((rangeMillis * scalar) / scalar) == rangeMillis |==> ((rangeMillis * scalar) / scalar) != rangeMillis
1508:ROR:==(long,long):<(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:((rangeMillis * scalar) / scalar) == rangeMillis |==> ((rangeMillis * scalar) / scalar) < rangeMillis
1509:ROR:==(long,long):<=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:((rangeMillis * scalar) / scalar) == rangeMillis |==> ((rangeMillis * scalar) / scalar) <= rangeMillis
1510:ROR:==(long,long):>(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:((rangeMillis * scalar) / scalar) == rangeMillis |==> ((rangeMillis * scalar) / scalar) > rangeMillis
1511:ROR:==(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:((rangeMillis * scalar) / scalar) == rangeMillis |==> ((rangeMillis * scalar) / scalar) >= rangeMillis
1512:ROR:==(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:((rangeMillis * scalar) / scalar) == rangeMillis |==> false
1513:ROR:==(long,long):TRUE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2015:((rangeMillis * scalar) / scalar) == rangeMillis |==> true
1514:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2019:maxDigits-- |==> <NO-OP>
1515:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar |==> fraction % scalar
1516:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar |==> fraction + scalar
1517:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar |==> fraction - scalar
1518:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar |==> fraction / scalar
1519:AOR:/(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar / rangeMillis |==> fraction * scalar % rangeMillis
1520:AOR:/(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar / rangeMillis |==> fraction * scalar * rangeMillis
1521:AOR:/(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar / rangeMillis |==> fraction * scalar + rangeMillis
1522:AOR:/(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@getFractionData(long,org.joda.time.DateTimeField):2022:fraction * scalar / rangeMillis |==> fraction * scalar - rangeMillis
1523:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2032:text.length() - position |==> text.length() % position
1524:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2032:text.length() - position |==> text.length() * position
1525:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2032:text.length() - position |==> text.length() + position
1526:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2032:text.length() - position |==> text.length() / position
1527:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2034:0 |==> 1
1528:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2034:0 |==> -1
1529:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2035:10 |==> 0
1530:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2035:10 |==> -10
1531:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2035:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() % 10
1532:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2035:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() + 10
1533:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2035:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() - 10
1534:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2035:field.getDurationField().getUnitMillis() * 10 |==> field.getDurationField().getUnitMillis() / 10
1535:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2036:0 |==> 1
1536:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2036:0 |==> -1
1537:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2037:length < limit |==> length != limit
1538:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2037:length < limit |==> length <= limit
1539:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2037:length < limit |==> length == limit
1540:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2037:length < limit |==> length > limit
1541:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2037:length < limit |==> length >= limit
1542:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2037:length < limit |==> false
1543:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2037:length < limit |==> true
1544:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2038:position + length |==> position % length
1545:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2038:position + length |==> position * length
1546:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2038:position + length |==> position - length
1547:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2038:position + length |==> position / length
1548:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' |==> c != '0'
1549:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' |==> c <= '0'
1550:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' |==> c == '0'
1551:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' |==> c > '0'
1552:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' |==> c >= '0'
1553:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' |==> false
1554:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' |==> true
1555:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c > '9' |==> c != '9'
1556:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c > '9' |==> c < '9'
1557:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c > '9' |==> c <= '9'
1558:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c > '9' |==> c == '9'
1559:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c > '9' |==> c >= '9'
1560:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c > '9' |==> false
1561:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c > '9' |==> true
1562:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' || c > '9' |==> c < '0' != c > '9'
1563:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' || c > '9' |==> c < '0' && c > '9'
1564:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' || c > '9' |==> c < '0' == c > '9'
1565:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' || c > '9' |==> false
1566:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' || c > '9' |==> c < '0'
1567:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' || c > '9' |==> c > '9'
1568:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2039:c < '0' || c > '9' |==> true
1569:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2042:length++ |==> <NO-OP>
1570:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2043:10 |==> 0
1571:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2043:10 |==> -10
1572:AOR:/(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2043:n / 10 |==> n % 10
1573:AOR:/(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2043:n / 10 |==> n * 10
1574:AOR:/(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2043:n / 10 |==> n + 10
1575:AOR:/(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2043:n / 10 |==> n - 10
1576:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:c - '0' |==> c % '0'
1577:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:c - '0' |==> c * '0'
1578:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:c - '0' |==> c + '0'
1579:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:c - '0' |==> c / '0'
1580:AOR:*(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:(c - '0') * nn |==> (c - '0') % nn
1581:AOR:*(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:(c - '0') * nn |==> (c - '0') + nn
1582:AOR:*(long,long):-(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:(c - '0') * nn |==> (c - '0') - nn
1583:AOR:*(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:(c - '0') * nn |==> (c - '0') / nn
1584:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2044:value += (c - '0') * nn |==> <NO-OP>
1585:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2045:n = nn |==> <NO-OP>
1586:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2048:10 |==> 0
1587:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2048:10 |==> -10
1588:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2048:value /= 10 |==> <NO-OP>
1589:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:0 |==> 1
1590:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:0 |==> -1
1591:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:length == 0 |==> length != 0
1592:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:length == 0 |==> length < 0
1593:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:length == 0 |==> length <= 0
1594:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:length == 0 |==> length > 0
1595:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:length == 0 |==> length >= 0
1596:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:length == 0 |==> false
1597:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2050:length == 0 |==> true
1598:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2051:~position |==> +position
1599:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2051:~position |==> -position
1600:ROR:>(long,long):!=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2054:value > Integer.MAX_VALUE |==> value != Integer.MAX_VALUE
1601:ROR:>(long,long):<(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2054:value > Integer.MAX_VALUE |==> value < Integer.MAX_VALUE
1602:ROR:>(long,long):<=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2054:value > Integer.MAX_VALUE |==> value <= Integer.MAX_VALUE
1603:ROR:>(long,long):==(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2054:value > Integer.MAX_VALUE |==> value == Integer.MAX_VALUE
1604:ROR:>(long,long):>=(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2054:value > Integer.MAX_VALUE |==> value >= Integer.MAX_VALUE
1605:ROR:>(long,long):FALSE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2054:value > Integer.MAX_VALUE |==> false
1606:ROR:>(long,long):TRUE(long,long):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2054:value > Integer.MAX_VALUE |==> true
1607:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2055:~position |==> +position
1608:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2055:~position |==> -position
1609:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2063:bucket.saveField(parseField, (int)value) |==> <NO-OP>
1610:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2065:position + length |==> position % length
1611:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2065:position + length |==> position * length
1612:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2065:position + length |==> position - length
1613:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Fraction@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2065:position + length |==> position / length
1614:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:0 |==> 1
1615:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:0 |==> -1
1616:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 |==> minFields != 0
1617:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 |==> minFields < 0
1618:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 |==> minFields == 0
1619:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 |==> minFields > 0
1620:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 |==> minFields >= 0
1621:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 |==> false
1622:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 |==> true
1623:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:maxFields < minFields |==> maxFields != minFields
1624:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:maxFields < minFields |==> maxFields <= minFields
1625:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:maxFields < minFields |==> maxFields == minFields
1626:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:maxFields < minFields |==> maxFields > minFields
1627:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:maxFields < minFields |==> maxFields >= minFields
1628:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:maxFields < minFields |==> false
1629:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:maxFields < minFields |==> true
1630:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 || maxFields < minFields |==> minFields <= 0 != maxFields < minFields
1631:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 || maxFields < minFields |==> minFields <= 0 && maxFields < minFields
1632:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 || maxFields < minFields |==> minFields <= 0 == maxFields < minFields
1633:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 || maxFields < minFields |==> false
1634:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 || maxFields < minFields |==> minFields <= 0
1635:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 || maxFields < minFields |==> maxFields < minFields
1636:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2087:minFields <= 0 || maxFields < minFields |==> true
1637:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:4 |==> 0
1638:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:4 |==> -4
1639:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:minFields > 4 |==> minFields != 4
1640:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:minFields > 4 |==> minFields < 4
1641:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:minFields > 4 |==> minFields <= 4
1642:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:minFields > 4 |==> minFields == 4
1643:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:minFields > 4 |==> minFields >= 4
1644:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:minFields > 4 |==> false
1645:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2090:minFields > 4 |==> true
1646:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2091:4 |==> 0
1647:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2091:4 |==> -4
1648:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2091:minFields = 4 |==> <NO-OP>
1649:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2092:4 |==> 0
1650:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2092:4 |==> -4
1651:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@<init>(java.lang.String,java.lang.String,boolean,int,int):2092:maxFields = 4 |==> <NO-OP>
1652:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 |==> 0
1653:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 |==> -1
1654:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 + iMinFields |==> 1 % iMinFields
1655:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 + iMinFields |==> 1 * iMinFields
1656:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 + iMinFields |==> 1 - iMinFields
1657:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 + iMinFields |==> 1 / iMinFields
1658:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 |==> 0
1659:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 |==> -1
1660:SOR:<<(int,int):>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 + iMinFields << 1 |==> 1 + iMinFields >> 1
1661:SOR:<<(int,int):>>>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2099:1 + iMinFields << 1 |==> 1 + iMinFields >>> 1
1662:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2100:iShowSeparators |==> false
1663:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2100:iShowSeparators |==> true
1664:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2101:1 |==> 0
1665:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2101:1 |==> -1
1666:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2101:iMinFields - 1 |==> iMinFields % 1
1667:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2101:iMinFields - 1 |==> iMinFields * 1
1668:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2101:iMinFields - 1 |==> iMinFields + 1
1669:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2101:iMinFields - 1 |==> iMinFields / 1
1670:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2101:est += iMinFields - 1 |==> <NO-OP>
1671:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null |==> iZeroOffsetPrintText == null
1672:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null |==> false
1673:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null |==> true
1674:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() != est
1675:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() < est
1676:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() <= est
1677:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() == est
1678:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() >= est
1679:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText.length() > est |==> false
1680:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText.length() > est |==> true
1681:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText != null != iZeroOffsetPrintText.length() > est
1682:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText != null == iZeroOffsetPrintText.length() > est
1683:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> false
1684:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText != null
1685:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText.length() > est
1686:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> true
1687:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2103:iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est |==> iZeroOffsetPrintText != null || iZeroOffsetPrintText.length() > est
1688:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@estimatePrintedLength():2104:est = iZeroOffsetPrintText.length() |==> <NO-OP>
1689:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2112:displayZone == null |==> displayZone != null
1690:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2112:displayZone == null |==> false
1691:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2112:displayZone == null |==> true
1692:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:0 |==> 1
1693:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:0 |==> -1
1694:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 |==> displayOffset != 0
1695:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 |==> displayOffset < 0
1696:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 |==> displayOffset <= 0
1697:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 |==> displayOffset > 0
1698:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 |==> displayOffset >= 0
1699:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 |==> false
1700:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 |==> true
1701:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:iZeroOffsetPrintText != null |==> iZeroOffsetPrintText == null
1702:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:iZeroOffsetPrintText != null |==> false
1703:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:iZeroOffsetPrintText != null |==> true
1704:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 != (iZeroOffsetPrintText != null)
1705:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 == (iZeroOffsetPrintText != null)
1706:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 && iZeroOffsetPrintText != null |==> false
1707:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0
1708:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 && iZeroOffsetPrintText != null |==> iZeroOffsetPrintText != null
1709:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 && iZeroOffsetPrintText != null |==> true
1710:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2115:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 || iZeroOffsetPrintText != null
1711:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2116:buf.append(iZeroOffsetPrintText) |==> <NO-OP>
1712:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:0 |==> 1
1713:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:0 |==> -1
1714:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:displayOffset >= 0 |==> displayOffset != 0
1715:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:displayOffset >= 0 |==> displayOffset < 0
1716:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:displayOffset >= 0 |==> displayOffset <= 0
1717:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:displayOffset >= 0 |==> displayOffset == 0
1718:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:displayOffset >= 0 |==> displayOffset > 0
1719:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:displayOffset >= 0 |==> false
1720:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2119:displayOffset >= 0 |==> true
1721:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2120:buf.append('+') |==> <NO-OP>
1722:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2122:buf.append('-') |==> <NO-OP>
1723:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2123:-displayOffset |==> +displayOffset
1724:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2123:-displayOffset |==> ~displayOffset
1725:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2123:displayOffset = -displayOffset |==> <NO-OP>
1726:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2126:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset % DateTimeConstants.MILLIS_PER_HOUR
1727:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2126:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset * DateTimeConstants.MILLIS_PER_HOUR
1728:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2126:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset + DateTimeConstants.MILLIS_PER_HOUR
1729:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2126:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset - DateTimeConstants.MILLIS_PER_HOUR
1730:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2127:2 |==> 0
1731:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2127:2 |==> -2
1732:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2127:FormatUtils.appendPaddedInteger(buf, hours, 2) |==> <NO-OP>
1733:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:1 |==> 0
1734:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:1 |==> -1
1735:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:iMaxFields == 1 |==> iMaxFields != 1
1736:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:iMaxFields == 1 |==> iMaxFields < 1
1737:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:iMaxFields == 1 |==> iMaxFields <= 1
1738:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:iMaxFields == 1 |==> iMaxFields > 1
1739:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:iMaxFields == 1 |==> iMaxFields >= 1
1740:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:iMaxFields == 1 |==> false
1741:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2128:iMaxFields == 1 |==> true
1742:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2131:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
1743:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2131:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
1744:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2131:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
1745:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2131:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
1746:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2131:displayOffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
1747:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:0 |==> 1
1748:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:0 |==> -1
1749:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 |==> displayOffset != 0
1750:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 |==> displayOffset < 0
1751:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 |==> displayOffset <= 0
1752:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 |==> displayOffset > 0
1753:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 |==> displayOffset >= 0
1754:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 |==> false
1755:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 |==> true
1756:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:1 |==> 0
1757:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:1 |==> -1
1758:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:iMinFields <= 1 |==> iMinFields != 1
1759:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:iMinFields <= 1 |==> iMinFields < 1
1760:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:iMinFields <= 1 |==> iMinFields == 1
1761:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:iMinFields <= 1 |==> iMinFields > 1
1762:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:iMinFields <= 1 |==> iMinFields >= 1
1763:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:iMinFields <= 1 |==> false
1764:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:iMinFields <= 1 |==> true
1765:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 && iMinFields <= 1 |==> displayOffset == 0 != iMinFields <= 1
1766:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 && iMinFields <= 1 |==> displayOffset == 0 == iMinFields <= 1
1767:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 && iMinFields <= 1 |==> false
1768:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 && iMinFields <= 1 |==> displayOffset == 0
1769:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 && iMinFields <= 1 |==> iMinFields <= 1
1770:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 && iMinFields <= 1 |==> true
1771:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2132:displayOffset == 0 && iMinFields <= 1 |==> displayOffset == 0 || iMinFields <= 1
1772:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2136:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset % DateTimeConstants.MILLIS_PER_MINUTE
1773:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2136:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset * DateTimeConstants.MILLIS_PER_MINUTE
1774:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2136:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset + DateTimeConstants.MILLIS_PER_MINUTE
1775:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2136:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset - DateTimeConstants.MILLIS_PER_MINUTE
1776:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2137:iShowSeparators |==> false
1777:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2137:iShowSeparators |==> true
1778:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2138:buf.append(':') |==> <NO-OP>
1779:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2140:2 |==> 0
1780:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2140:2 |==> -2
1781:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2140:FormatUtils.appendPaddedInteger(buf, minutes, 2) |==> <NO-OP>
1782:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:2 |==> 0
1783:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:2 |==> -2
1784:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:iMaxFields == 2 |==> iMaxFields != 2
1785:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:iMaxFields == 2 |==> iMaxFields < 2
1786:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:iMaxFields == 2 |==> iMaxFields <= 2
1787:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:iMaxFields == 2 |==> iMaxFields > 2
1788:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:iMaxFields == 2 |==> iMaxFields >= 2
1789:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:iMaxFields == 2 |==> false
1790:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2141:iMaxFields == 2 |==> true
1791:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2144:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
1792:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2144:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
1793:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2144:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
1794:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2144:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
1795:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2144:displayOffset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
1796:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:0 |==> 1
1797:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:0 |==> -1
1798:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 |==> displayOffset != 0
1799:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 |==> displayOffset < 0
1800:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 |==> displayOffset <= 0
1801:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 |==> displayOffset > 0
1802:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 |==> displayOffset >= 0
1803:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 |==> false
1804:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 |==> true
1805:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:2 |==> 0
1806:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:2 |==> -2
1807:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:iMinFields <= 2 |==> iMinFields != 2
1808:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:iMinFields <= 2 |==> iMinFields < 2
1809:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:iMinFields <= 2 |==> iMinFields == 2
1810:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:iMinFields <= 2 |==> iMinFields > 2
1811:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:iMinFields <= 2 |==> iMinFields >= 2
1812:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:iMinFields <= 2 |==> false
1813:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:iMinFields <= 2 |==> true
1814:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 && iMinFields <= 2 |==> displayOffset == 0 != iMinFields <= 2
1815:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 && iMinFields <= 2 |==> displayOffset == 0 == iMinFields <= 2
1816:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 && iMinFields <= 2 |==> false
1817:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 && iMinFields <= 2 |==> displayOffset == 0
1818:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 && iMinFields <= 2 |==> iMinFields <= 2
1819:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 && iMinFields <= 2 |==> true
1820:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2145:displayOffset == 0 && iMinFields <= 2 |==> displayOffset == 0 || iMinFields <= 2
1821:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2149:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset % DateTimeConstants.MILLIS_PER_SECOND
1822:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2149:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset * DateTimeConstants.MILLIS_PER_SECOND
1823:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2149:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset + DateTimeConstants.MILLIS_PER_SECOND
1824:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2149:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset - DateTimeConstants.MILLIS_PER_SECOND
1825:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2150:iShowSeparators |==> false
1826:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2150:iShowSeparators |==> true
1827:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2151:buf.append(':') |==> <NO-OP>
1828:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:2 |==> 0
1829:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:2 |==> -2
1830:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2153:FormatUtils.appendPaddedInteger(buf, seconds, 2) |==> <NO-OP>
1831:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:3 |==> 0
1832:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:3 |==> -3
1833:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:iMaxFields == 3 |==> iMaxFields != 3
1834:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:iMaxFields == 3 |==> iMaxFields < 3
1835:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:iMaxFields == 3 |==> iMaxFields <= 3
1836:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:iMaxFields == 3 |==> iMaxFields > 3
1837:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:iMaxFields == 3 |==> iMaxFields >= 3
1838:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:iMaxFields == 3 |==> false
1839:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2154:iMaxFields == 3 |==> true
1840:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
1841:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
1842:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
1843:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
1844:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2157:displayOffset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
1845:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:0 |==> 1
1846:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:0 |==> -1
1847:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 |==> displayOffset != 0
1848:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 |==> displayOffset < 0
1849:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 |==> displayOffset <= 0
1850:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 |==> displayOffset > 0
1851:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 |==> displayOffset >= 0
1852:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 |==> false
1853:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 |==> true
1854:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:3 |==> 0
1855:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:3 |==> -3
1856:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:iMinFields <= 3 |==> iMinFields != 3
1857:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:iMinFields <= 3 |==> iMinFields < 3
1858:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:iMinFields <= 3 |==> iMinFields == 3
1859:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:iMinFields <= 3 |==> iMinFields > 3
1860:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:iMinFields <= 3 |==> iMinFields >= 3
1861:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:iMinFields <= 3 |==> false
1862:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:iMinFields <= 3 |==> true
1863:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 && iMinFields <= 3 |==> displayOffset == 0 != iMinFields <= 3
1864:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 && iMinFields <= 3 |==> displayOffset == 0 == iMinFields <= 3
1865:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 && iMinFields <= 3 |==> false
1866:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 && iMinFields <= 3 |==> displayOffset == 0
1867:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 && iMinFields <= 3 |==> iMinFields <= 3
1868:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 && iMinFields <= 3 |==> true
1869:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2158:displayOffset == 0 && iMinFields <= 3 |==> displayOffset == 0 || iMinFields <= 3
1870:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2162:iShowSeparators |==> false
1871:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2162:iShowSeparators |==> true
1872:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2163:buf.append('.') |==> <NO-OP>
1873:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2165:3 |==> 0
1874:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2165:3 |==> -3
1875:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2165:FormatUtils.appendPaddedInteger(buf, displayOffset, 3) |==> <NO-OP>
1876:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2171:displayZone == null |==> displayZone != null
1877:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2171:displayZone == null |==> false
1878:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2171:displayZone == null |==> true
1879:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:0 |==> 1
1880:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:0 |==> -1
1881:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 |==> displayOffset != 0
1882:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 |==> displayOffset < 0
1883:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 |==> displayOffset <= 0
1884:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 |==> displayOffset > 0
1885:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 |==> displayOffset >= 0
1886:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 |==> false
1887:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 |==> true
1888:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:iZeroOffsetPrintText != null |==> iZeroOffsetPrintText == null
1889:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:iZeroOffsetPrintText != null |==> false
1890:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:iZeroOffsetPrintText != null |==> true
1891:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 != (iZeroOffsetPrintText != null)
1892:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 == (iZeroOffsetPrintText != null)
1893:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 && iZeroOffsetPrintText != null |==> false
1894:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0
1895:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 && iZeroOffsetPrintText != null |==> iZeroOffsetPrintText != null
1896:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 && iZeroOffsetPrintText != null |==> true
1897:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2174:displayOffset == 0 && iZeroOffsetPrintText != null |==> displayOffset == 0 || iZeroOffsetPrintText != null
1898:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2175:out.write(iZeroOffsetPrintText) |==> <NO-OP>
1899:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:0 |==> 1
1900:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:0 |==> -1
1901:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:displayOffset >= 0 |==> displayOffset != 0
1902:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:displayOffset >= 0 |==> displayOffset < 0
1903:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:displayOffset >= 0 |==> displayOffset <= 0
1904:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:displayOffset >= 0 |==> displayOffset == 0
1905:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:displayOffset >= 0 |==> displayOffset > 0
1906:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:displayOffset >= 0 |==> false
1907:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2178:displayOffset >= 0 |==> true
1908:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2179:out.write('+') |==> <NO-OP>
1909:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2181:out.write('-') |==> <NO-OP>
1910:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:-displayOffset |==> +displayOffset
1911:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:-displayOffset |==> ~displayOffset
1912:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2182:displayOffset = -displayOffset |==> <NO-OP>
1913:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2185:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset % DateTimeConstants.MILLIS_PER_HOUR
1914:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2185:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset * DateTimeConstants.MILLIS_PER_HOUR
1915:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2185:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset + DateTimeConstants.MILLIS_PER_HOUR
1916:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2185:displayOffset / DateTimeConstants.MILLIS_PER_HOUR |==> displayOffset - DateTimeConstants.MILLIS_PER_HOUR
1917:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2186:2 |==> 0
1918:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2186:2 |==> -2
1919:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2186:FormatUtils.writePaddedInteger(out, hours, 2) |==> <NO-OP>
1920:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:1 |==> 0
1921:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:1 |==> -1
1922:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:iMaxFields == 1 |==> iMaxFields != 1
1923:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:iMaxFields == 1 |==> iMaxFields < 1
1924:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:iMaxFields == 1 |==> iMaxFields <= 1
1925:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:iMaxFields == 1 |==> iMaxFields > 1
1926:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:iMaxFields == 1 |==> iMaxFields >= 1
1927:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:iMaxFields == 1 |==> false
1928:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2187:iMaxFields == 1 |==> true
1929:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2190:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
1930:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2190:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
1931:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2190:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
1932:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2190:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
1933:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2190:displayOffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
1934:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:0 |==> 1
1935:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:0 |==> -1
1936:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 |==> displayOffset != 0
1937:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 |==> displayOffset < 0
1938:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 |==> displayOffset <= 0
1939:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 |==> displayOffset > 0
1940:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 |==> displayOffset >= 0
1941:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 |==> false
1942:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 |==> true
1943:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:1 |==> 0
1944:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:1 |==> -1
1945:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:iMinFields == 1 |==> iMinFields != 1
1946:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:iMinFields == 1 |==> iMinFields < 1
1947:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:iMinFields == 1 |==> iMinFields <= 1
1948:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:iMinFields == 1 |==> iMinFields > 1
1949:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:iMinFields == 1 |==> iMinFields >= 1
1950:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:iMinFields == 1 |==> false
1951:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:iMinFields == 1 |==> true
1952:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 && iMinFields == 1 |==> displayOffset == 0 != (iMinFields == 1)
1953:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 && iMinFields == 1 |==> displayOffset == 0 == (iMinFields == 1)
1954:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 && iMinFields == 1 |==> false
1955:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 && iMinFields == 1 |==> displayOffset == 0
1956:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 && iMinFields == 1 |==> iMinFields == 1
1957:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 && iMinFields == 1 |==> true
1958:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2191:displayOffset == 0 && iMinFields == 1 |==> displayOffset == 0 || iMinFields == 1
1959:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset % DateTimeConstants.MILLIS_PER_MINUTE
1960:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset * DateTimeConstants.MILLIS_PER_MINUTE
1961:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset + DateTimeConstants.MILLIS_PER_MINUTE
1962:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2195:displayOffset / DateTimeConstants.MILLIS_PER_MINUTE |==> displayOffset - DateTimeConstants.MILLIS_PER_MINUTE
1963:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:iShowSeparators |==> false
1964:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2196:iShowSeparators |==> true
1965:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2197:out.write(':') |==> <NO-OP>
1966:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2199:2 |==> 0
1967:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2199:2 |==> -2
1968:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2199:FormatUtils.writePaddedInteger(out, minutes, 2) |==> <NO-OP>
1969:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:2 |==> 0
1970:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:2 |==> -2
1971:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iMaxFields == 2 |==> iMaxFields != 2
1972:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iMaxFields == 2 |==> iMaxFields < 2
1973:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iMaxFields == 2 |==> iMaxFields <= 2
1974:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iMaxFields == 2 |==> iMaxFields > 2
1975:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iMaxFields == 2 |==> iMaxFields >= 2
1976:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iMaxFields == 2 |==> false
1977:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2200:iMaxFields == 2 |==> true
1978:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
1979:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
1980:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
1981:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
1982:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2203:displayOffset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
1983:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:0 |==> 1
1984:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:0 |==> -1
1985:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 |==> displayOffset != 0
1986:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 |==> displayOffset < 0
1987:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 |==> displayOffset <= 0
1988:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 |==> displayOffset > 0
1989:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 |==> displayOffset >= 0
1990:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 |==> false
1991:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 |==> true
1992:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:2 |==> 0
1993:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:2 |==> -2
1994:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:iMinFields == 2 |==> iMinFields != 2
1995:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:iMinFields == 2 |==> iMinFields < 2
1996:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:iMinFields == 2 |==> iMinFields <= 2
1997:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:iMinFields == 2 |==> iMinFields > 2
1998:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:iMinFields == 2 |==> iMinFields >= 2
1999:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:iMinFields == 2 |==> false
2000:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:iMinFields == 2 |==> true
2001:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 && iMinFields == 2 |==> displayOffset == 0 != (iMinFields == 2)
2002:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 && iMinFields == 2 |==> displayOffset == 0 == (iMinFields == 2)
2003:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 && iMinFields == 2 |==> false
2004:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 && iMinFields == 2 |==> displayOffset == 0
2005:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 && iMinFields == 2 |==> iMinFields == 2
2006:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 && iMinFields == 2 |==> true
2007:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2204:displayOffset == 0 && iMinFields == 2 |==> displayOffset == 0 || iMinFields == 2
2008:AOR:/(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2208:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset % DateTimeConstants.MILLIS_PER_SECOND
2009:AOR:/(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2208:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset * DateTimeConstants.MILLIS_PER_SECOND
2010:AOR:/(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2208:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset + DateTimeConstants.MILLIS_PER_SECOND
2011:AOR:/(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2208:displayOffset / DateTimeConstants.MILLIS_PER_SECOND |==> displayOffset - DateTimeConstants.MILLIS_PER_SECOND
2012:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2209:iShowSeparators |==> false
2013:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2209:iShowSeparators |==> true
2014:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2210:out.write(':') |==> <NO-OP>
2015:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:2 |==> 0
2016:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:2 |==> -2
2017:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2212:FormatUtils.writePaddedInteger(out, seconds, 2) |==> <NO-OP>
2018:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:3 |==> 0
2019:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:3 |==> -3
2020:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:iMaxFields == 3 |==> iMaxFields != 3
2021:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:iMaxFields == 3 |==> iMaxFields < 3
2022:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:iMaxFields == 3 |==> iMaxFields <= 3
2023:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:iMaxFields == 3 |==> iMaxFields > 3
2024:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:iMaxFields == 3 |==> iMaxFields >= 3
2025:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:iMaxFields == 3 |==> false
2026:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2213:iMaxFields == 3 |==> true
2027:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
2028:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
2029:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
2030:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
2031:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2216:displayOffset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
2032:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:0 |==> 1
2033:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:0 |==> -1
2034:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 |==> displayOffset != 0
2035:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 |==> displayOffset < 0
2036:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 |==> displayOffset <= 0
2037:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 |==> displayOffset > 0
2038:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 |==> displayOffset >= 0
2039:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 |==> false
2040:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 |==> true
2041:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:3 |==> 0
2042:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:3 |==> -3
2043:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:iMinFields == 3 |==> iMinFields != 3
2044:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:iMinFields == 3 |==> iMinFields < 3
2045:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:iMinFields == 3 |==> iMinFields <= 3
2046:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:iMinFields == 3 |==> iMinFields > 3
2047:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:iMinFields == 3 |==> iMinFields >= 3
2048:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:iMinFields == 3 |==> false
2049:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:iMinFields == 3 |==> true
2050:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 && iMinFields == 3 |==> displayOffset == 0 != (iMinFields == 3)
2051:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 && iMinFields == 3 |==> displayOffset == 0 == (iMinFields == 3)
2052:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 && iMinFields == 3 |==> false
2053:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 && iMinFields == 3 |==> displayOffset == 0
2054:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 && iMinFields == 3 |==> iMinFields == 3
2055:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 && iMinFields == 3 |==> true
2056:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2217:displayOffset == 0 && iMinFields == 3 |==> displayOffset == 0 || iMinFields == 3
2057:COR:iShowSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2221:iShowSeparators |==> false
2058:COR:iShowSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2221:iShowSeparators |==> true
2059:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2222:out.write('.') |==> <NO-OP>
2060:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2224:3 |==> 0
2061:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2224:3 |==> -3
2062:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2224:FormatUtils.writePaddedInteger(out, displayOffset, 3) |==> <NO-OP>
2063:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2240:text.length() - position |==> text.length() % position
2064:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2240:text.length() - position |==> text.length() * position
2065:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2240:text.length() - position |==> text.length() + position
2066:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2240:text.length() - position |==> text.length() / position
2067:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2243:iZeroOffsetParseText != null |==> iZeroOffsetParseText == null
2068:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2243:iZeroOffsetParseText != null |==> false
2069:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2243:iZeroOffsetParseText != null |==> true
2070:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:0 |==> 1
2071:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:0 |==> -1
2072:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:iZeroOffsetParseText.length() == 0 |==> iZeroOffsetParseText.length() != 0
2073:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:iZeroOffsetParseText.length() == 0 |==> iZeroOffsetParseText.length() < 0
2074:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:iZeroOffsetParseText.length() == 0 |==> iZeroOffsetParseText.length() <= 0
2075:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:iZeroOffsetParseText.length() == 0 |==> iZeroOffsetParseText.length() > 0
2076:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:iZeroOffsetParseText.length() == 0 |==> iZeroOffsetParseText.length() >= 0
2077:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:iZeroOffsetParseText.length() == 0 |==> false
2078:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2244:iZeroOffsetParseText.length() == 0 |==> true
2079:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:0 |==> 1
2080:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:0 |==> -1
2081:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:limit > 0 |==> limit != 0
2082:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:limit > 0 |==> limit < 0
2083:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:limit > 0 |==> limit <= 0
2084:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:limit > 0 |==> limit == 0
2085:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:limit > 0 |==> limit >= 0
2086:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:limit > 0 |==> false
2087:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2246:limit > 0 |==> true
2088:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' |==> c != '-'
2089:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' |==> c < '-'
2090:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' |==> c <= '-'
2091:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' |==> c > '-'
2092:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' |==> c >= '-'
2093:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' |==> false
2094:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' |==> true
2095:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '+' |==> c != '+'
2096:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '+' |==> c < '+'
2097:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '+' |==> c <= '+'
2098:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '+' |==> c > '+'
2099:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '+' |==> c >= '+'
2100:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '+' |==> false
2101:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '+' |==> true
2102:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' || c == '+' |==> c == '-' != (c == '+')
2103:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' || c == '+' |==> c == '-' && c == '+'
2104:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' || c == '+' |==> c == '-' == (c == '+')
2105:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' || c == '+' |==> false
2106:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' || c == '+' |==> c == '-'
2107:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' || c == '+' |==> c == '+'
2108:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2248:c == '-' || c == '+' |==> true
2109:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2252:0 |==> 1
2110:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2252:0 |==> -1
2111:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2252:bucket.setOffset(Integer.valueOf(0)) |==> <NO-OP>
2112:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2255:true |==> false
2113:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2255:0 |==> 1
2114:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2255:0 |==> -1
2115:COR:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2255:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()) |==> false
2116:COR:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2255:text.regionMatches(true, position, iZeroOffsetParseText, 0, iZeroOffsetParseText.length()) |==> true
2117:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2256:0 |==> 1
2118:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2256:0 |==> -1
2119:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2256:bucket.setOffset(Integer.valueOf(0)) |==> <NO-OP>
2120:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2257:position + iZeroOffsetParseText.length() |==> position % iZeroOffsetParseText.length()
2121:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2257:position + iZeroOffsetParseText.length() |==> position * iZeroOffsetParseText.length()
2122:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2257:position + iZeroOffsetParseText.length() |==> position - iZeroOffsetParseText.length()
2123:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2257:position + iZeroOffsetParseText.length() |==> position / iZeroOffsetParseText.length()
2124:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:1 |==> 0
2125:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:1 |==> -1
2126:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:limit <= 1 |==> limit != 1
2127:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:limit <= 1 |==> limit < 1
2128:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:limit <= 1 |==> limit == 1
2129:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:limit <= 1 |==> limit > 1
2130:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:limit <= 1 |==> limit >= 1
2131:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:limit <= 1 |==> false
2132:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2263:limit <= 1 |==> true
2133:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2264:~position |==> +position
2134:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2264:~position |==> -position
2135:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2269:c == '-' |==> c != '-'
2136:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2269:c == '-' |==> c < '-'
2137:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2269:c == '-' |==> c <= '-'
2138:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2269:c == '-' |==> c > '-'
2139:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2269:c == '-' |==> c >= '-'
2140:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2269:c == '-' |==> false
2141:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2269:c == '-' |==> true
2142:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2270:true |==> false
2143:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2271:c == '+' |==> c != '+'
2144:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2271:c == '+' |==> c < '+'
2145:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2271:c == '+' |==> c <= '+'
2146:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2271:c == '+' |==> c > '+'
2147:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2271:c == '+' |==> c >= '+'
2148:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2271:c == '+' |==> false
2149:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2271:c == '+' |==> true
2150:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2272:false |==> true
2151:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2274:~position |==> +position
2152:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2274:~position |==> -position
2153:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2277:limit-- |==> <NO-OP>
2154:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2278:position++ |==> <NO-OP>
2155:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:2 |==> 0
2156:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:2 |==> -2
2157:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:2 |==> 0
2158:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:2 |==> -2
2159:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:digitCount(text, position, 2) < 2 |==> digitCount(text, position, 2) != 2
2160:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:digitCount(text, position, 2) < 2 |==> digitCount(text, position, 2) <= 2
2161:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:digitCount(text, position, 2) < 2 |==> digitCount(text, position, 2) == 2
2162:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:digitCount(text, position, 2) < 2 |==> digitCount(text, position, 2) > 2
2163:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:digitCount(text, position, 2) < 2 |==> digitCount(text, position, 2) >= 2
2164:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:digitCount(text, position, 2) < 2 |==> false
2165:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2292:digitCount(text, position, 2) < 2 |==> true
2166:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2294:~position |==> +position
2167:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2294:~position |==> -position
2168:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:23 |==> 0
2169:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:23 |==> -23
2170:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:hours > 23 |==> hours != 23
2171:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:hours > 23 |==> hours < 23
2172:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:hours > 23 |==> hours <= 23
2173:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:hours > 23 |==> hours == 23
2174:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:hours > 23 |==> hours >= 23
2175:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:hours > 23 |==> false
2176:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2300:hours > 23 |==> true
2177:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2301:~position |==> +position
2178:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2301:~position |==> -position
2179:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2303:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours % DateTimeConstants.MILLIS_PER_HOUR
2180:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2303:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours + DateTimeConstants.MILLIS_PER_HOUR
2181:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2303:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours - DateTimeConstants.MILLIS_PER_HOUR
2182:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2303:hours * DateTimeConstants.MILLIS_PER_HOUR |==> hours / DateTimeConstants.MILLIS_PER_HOUR
2183:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2304:2 |==> 0
2184:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2304:2 |==> -2
2185:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2304:limit -= 2 |==> <NO-OP>
2186:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2305:2 |==> 0
2187:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2305:2 |==> -2
2188:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2305:position += 2 |==> <NO-OP>
2189:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:0 |==> 1
2190:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:0 |==> -1
2191:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:limit <= 0 |==> limit != 0
2192:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:limit <= 0 |==> limit < 0
2193:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:limit <= 0 |==> limit == 0
2194:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:limit <= 0 |==> limit > 0
2195:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:limit <= 0 |==> limit >= 0
2196:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:limit <= 0 |==> false
2197:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2311:limit <= 0 |==> true
2198:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2316:c = text.charAt(position) |==> <NO-OP>
2199:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2317:c == ':' |==> c != ':'
2200:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2317:c == ':' |==> c < ':'
2201:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2317:c == ':' |==> c <= ':'
2202:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2317:c == ':' |==> c > ':'
2203:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2317:c == ':' |==> c >= ':'
2204:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2317:c == ':' |==> false
2205:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2317:c == ':' |==> true
2206:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2318:true |==> false
2207:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2319:limit-- |==> <NO-OP>
2208:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2320:position++ |==> <NO-OP>
2209:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' |==> c != '0'
2210:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' |==> c < '0'
2211:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' |==> c <= '0'
2212:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' |==> c == '0'
2213:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' |==> c > '0'
2214:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' |==> false
2215:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' |==> true
2216:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c <= '9' |==> c != '9'
2217:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c <= '9' |==> c < '9'
2218:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c <= '9' |==> c == '9'
2219:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c <= '9' |==> c > '9'
2220:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c <= '9' |==> c >= '9'
2221:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c <= '9' |==> false
2222:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c <= '9' |==> true
2223:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' && c <= '9' |==> c >= '0' != c <= '9'
2224:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' && c <= '9' |==> c >= '0' == c <= '9'
2225:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' && c <= '9' |==> false
2226:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' && c <= '9' |==> c >= '0'
2227:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' && c <= '9' |==> c <= '9'
2228:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' && c <= '9' |==> true
2229:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2321:c >= '0' && c <= '9' |==> c >= '0' || c <= '9'
2230:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2322:false |==> true
2231:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2329:2 |==> 0
2232:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2329:2 |==> -2
2233:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:0 |==> 1
2234:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:0 |==> -1
2235:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 |==> count != 0
2236:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 |==> count < 0
2237:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 |==> count <= 0
2238:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 |==> count > 0
2239:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 |==> count >= 0
2240:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 |==> false
2241:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 |==> true
2242:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 && !expectSeparators |==> count == 0 != !expectSeparators
2243:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 && !expectSeparators |==> count == 0 == !expectSeparators
2244:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 && !expectSeparators |==> false
2245:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 && !expectSeparators |==> count == 0
2246:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 && !expectSeparators |==> !expectSeparators
2247:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 && !expectSeparators |==> true
2248:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2330:count == 0 && !expectSeparators |==> count == 0 || !expectSeparators
2249:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:2 |==> 0
2250:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:2 |==> -2
2251:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:count < 2 |==> count != 2
2252:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:count < 2 |==> count <= 2
2253:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:count < 2 |==> count == 2
2254:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:count < 2 |==> count > 2
2255:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:count < 2 |==> count >= 2
2256:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:count < 2 |==> false
2257:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2332:count < 2 |==> true
2258:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2334:~position |==> +position
2259:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2334:~position |==> -position
2260:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:59 |==> 0
2261:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:59 |==> -59
2262:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:minutes > 59 |==> minutes != 59
2263:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:minutes > 59 |==> minutes < 59
2264:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:minutes > 59 |==> minutes <= 59
2265:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:minutes > 59 |==> minutes == 59
2266:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:minutes > 59 |==> minutes >= 59
2267:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:minutes > 59 |==> false
2268:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2338:minutes > 59 |==> true
2269:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2339:~position |==> +position
2270:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2339:~position |==> -position
2271:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
2272:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
2273:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
2274:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
2275:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2341:offset += minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
2276:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2342:2 |==> 0
2277:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2342:2 |==> -2
2278:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2342:limit -= 2 |==> <NO-OP>
2279:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2343:2 |==> 0
2280:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2343:2 |==> -2
2281:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2343:position += 2 |==> <NO-OP>
2282:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:0 |==> 1
2283:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:0 |==> -1
2284:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:limit <= 0 |==> limit != 0
2285:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:limit <= 0 |==> limit < 0
2286:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:limit <= 0 |==> limit == 0
2287:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:limit <= 0 |==> limit > 0
2288:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:limit <= 0 |==> limit >= 0
2289:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:limit <= 0 |==> false
2290:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2347:limit <= 0 |==> true
2291:COR:expectSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2351:expectSeparators |==> false
2292:COR:expectSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2351:expectSeparators |==> true
2293:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2352:text.charAt(position) != ':' |==> text.charAt(position) < ':'
2294:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2352:text.charAt(position) != ':' |==> text.charAt(position) <= ':'
2295:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2352:text.charAt(position) != ':' |==> text.charAt(position) == ':'
2296:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2352:text.charAt(position) != ':' |==> text.charAt(position) > ':'
2297:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2352:text.charAt(position) != ':' |==> text.charAt(position) >= ':'
2298:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2352:text.charAt(position) != ':' |==> false
2299:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2352:text.charAt(position) != ':' |==> true
2300:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2355:limit-- |==> <NO-OP>
2301:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2356:position++ |==> <NO-OP>
2302:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:2 |==> 0
2303:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:2 |==> -2
2304:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2359:count = digitCount(text, position, 2) |==> <NO-OP>
2305:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:0 |==> 1
2306:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:0 |==> -1
2307:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 |==> count != 0
2308:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 |==> count < 0
2309:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 |==> count <= 0
2310:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 |==> count > 0
2311:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 |==> count >= 0
2312:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 |==> false
2313:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 |==> true
2314:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 && !expectSeparators |==> count == 0 != !expectSeparators
2315:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 && !expectSeparators |==> count == 0 == !expectSeparators
2316:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 && !expectSeparators |==> false
2317:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 && !expectSeparators |==> count == 0
2318:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 && !expectSeparators |==> !expectSeparators
2319:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 && !expectSeparators |==> true
2320:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2360:count == 0 && !expectSeparators |==> count == 0 || !expectSeparators
2321:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:2 |==> 0
2322:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:2 |==> -2
2323:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:count < 2 |==> count != 2
2324:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:count < 2 |==> count <= 2
2325:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:count < 2 |==> count == 2
2326:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:count < 2 |==> count > 2
2327:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:count < 2 |==> count >= 2
2328:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:count < 2 |==> false
2329:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2362:count < 2 |==> true
2330:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2364:~position |==> +position
2331:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2364:~position |==> -position
2332:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:59 |==> 0
2333:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:59 |==> -59
2334:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:seconds > 59 |==> seconds != 59
2335:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:seconds > 59 |==> seconds < 59
2336:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:seconds > 59 |==> seconds <= 59
2337:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:seconds > 59 |==> seconds == 59
2338:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:seconds > 59 |==> seconds >= 59
2339:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:seconds > 59 |==> false
2340:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2368:seconds > 59 |==> true
2341:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2369:~position |==> +position
2342:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2369:~position |==> -position
2343:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2371:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
2344:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2371:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
2345:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2371:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
2346:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2371:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
2347:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2371:offset += seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
2348:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2372:2 |==> 0
2349:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2372:2 |==> -2
2350:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2372:limit -= 2 |==> <NO-OP>
2351:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2373:2 |==> 0
2352:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2373:2 |==> -2
2353:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2373:position += 2 |==> <NO-OP>
2354:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:0 |==> 1
2355:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:0 |==> -1
2356:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:limit <= 0 |==> limit != 0
2357:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:limit <= 0 |==> limit < 0
2358:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:limit <= 0 |==> limit == 0
2359:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:limit <= 0 |==> limit > 0
2360:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:limit <= 0 |==> limit >= 0
2361:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:limit <= 0 |==> false
2362:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2377:limit <= 0 |==> true
2363:COR:expectSeparators:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2381:expectSeparators |==> false
2364:COR:expectSeparators:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2381:expectSeparators |==> true
2365:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' |==> text.charAt(position) < '.'
2366:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' |==> text.charAt(position) <= '.'
2367:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' |==> text.charAt(position) == '.'
2368:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' |==> text.charAt(position) > '.'
2369:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' |==> text.charAt(position) >= '.'
2370:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' |==> false
2371:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' |==> true
2372:ROR:!=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != ',' |==> text.charAt(position) < ','
2373:ROR:!=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != ',' |==> text.charAt(position) <= ','
2374:ROR:!=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != ',' |==> text.charAt(position) == ','
2375:ROR:!=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != ',' |==> text.charAt(position) > ','
2376:ROR:!=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != ',' |==> text.charAt(position) >= ','
2377:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != ',' |==> false
2378:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != ',' |==> true
2379:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != '.' != (text.charAt(position) != ',')
2380:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != '.' == (text.charAt(position) != ',')
2381:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' && text.charAt(position) != ',' |==> false
2382:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != '.'
2383:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != ','
2384:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' && text.charAt(position) != ',' |==> true
2385:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2382:text.charAt(position) != '.' && text.charAt(position) != ',' |==> text.charAt(position) != '.' || text.charAt(position) != ','
2386:STD:<DEC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2385:limit-- |==> <NO-OP>
2387:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2386:position++ |==> <NO-OP>
2388:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2389:3 |==> 0
2389:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2389:3 |==> -3
2390:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2389:count = digitCount(text, position, 3) |==> <NO-OP>
2391:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:0 |==> 1
2392:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:0 |==> -1
2393:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 |==> count != 0
2394:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 |==> count < 0
2395:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 |==> count <= 0
2396:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 |==> count > 0
2397:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 |==> count >= 0
2398:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 |==> false
2399:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 |==> true
2400:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 && !expectSeparators |==> count == 0 != !expectSeparators
2401:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 && !expectSeparators |==> count == 0 == !expectSeparators
2402:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 && !expectSeparators |==> false
2403:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 && !expectSeparators |==> count == 0
2404:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 && !expectSeparators |==> !expectSeparators
2405:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 && !expectSeparators |==> true
2406:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2390:count == 0 && !expectSeparators |==> count == 0 || !expectSeparators
2407:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:1 |==> 0
2408:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:1 |==> -1
2409:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:count < 1 |==> count != 1
2410:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:count < 1 |==> count <= 1
2411:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:count < 1 |==> count == 1
2412:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:count < 1 |==> count > 1
2413:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:count < 1 |==> count >= 1
2414:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:count < 1 |==> false
2415:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2392:count < 1 |==> true
2416:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2394:~position |==> +position
2417:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2394:~position |==> -position
2418:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:text.charAt(position++) - '0' |==> text.charAt(position++) % '0'
2419:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:text.charAt(position++) - '0' |==> text.charAt(position++) * '0'
2420:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:text.charAt(position++) - '0' |==> text.charAt(position++) + '0'
2421:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:text.charAt(position++) - '0' |==> text.charAt(position++) / '0'
2422:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:100 |==> 0
2423:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:100 |==> -100
2424:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') % 100
2425:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') + 100
2426:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') - 100
2427:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:(text.charAt(position++) - '0') * 100 |==> (text.charAt(position++) - '0') / 100
2428:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2397:offset += (text.charAt(position++) - '0') * 100 |==> <NO-OP>
2429:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:1 |==> 0
2430:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:1 |==> -1
2431:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count > 1 |==> count != 1
2432:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count > 1 |==> count < 1
2433:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count > 1 |==> count <= 1
2434:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count > 1 |==> count == 1
2435:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count > 1 |==> count >= 1
2436:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count > 1 |==> false
2437:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2398:count > 1 |==> true
2438:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:text.charAt(position++) - '0' |==> text.charAt(position++) % '0'
2439:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:text.charAt(position++) - '0' |==> text.charAt(position++) * '0'
2440:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:text.charAt(position++) - '0' |==> text.charAt(position++) + '0'
2441:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:text.charAt(position++) - '0' |==> text.charAt(position++) / '0'
2442:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:10 |==> 0
2443:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:10 |==> -10
2444:AOR:*(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') % 10
2445:AOR:*(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') + 10
2446:AOR:*(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') - 10
2447:AOR:*(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:(text.charAt(position++) - '0') * 10 |==> (text.charAt(position++) - '0') / 10
2448:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2399:offset += (text.charAt(position++) - '0') * 10 |==> <NO-OP>
2449:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:2 |==> 0
2450:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:2 |==> -2
2451:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count > 2 |==> count != 2
2452:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count > 2 |==> count < 2
2453:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count > 2 |==> count <= 2
2454:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count > 2 |==> count == 2
2455:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count > 2 |==> count >= 2
2456:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count > 2 |==> false
2457:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2400:count > 2 |==> true
2458:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2401:text.charAt(position++) - '0' |==> text.charAt(position++) % '0'
2459:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2401:text.charAt(position++) - '0' |==> text.charAt(position++) * '0'
2460:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2401:text.charAt(position++) - '0' |==> text.charAt(position++) + '0'
2461:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2401:text.charAt(position++) - '0' |==> text.charAt(position++) / '0'
2462:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2401:offset += text.charAt(position++) - '0' |==> <NO-OP>
2463:COR:negative:TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:negative |==> false
2464:COR:negative:FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:negative |==> true
2465:ORU:-(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:-offset |==> +offset
2466:ORU:-(int):~(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:-offset |==> ~offset
2467:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2406:bucket.setOffset(Integer.valueOf(negative ? -offset : offset)) |==> <NO-OP>
2468:AOR:-(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2415:text.length() - position |==> text.length() % position
2469:AOR:-(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2415:text.length() - position |==> text.length() * position
2470:AOR:-(int,int):+(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2415:text.length() - position |==> text.length() + position
2471:AOR:-(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2415:text.length() - position |==> text.length() / position
2472:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2416:0 |==> 1
2473:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2416:0 |==> -1
2474:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2416:amount = 0 |==> <NO-OP>
2475:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:0 |==> 1
2476:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:0 |==> -1
2477:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:limit > 0 |==> limit != 0
2478:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:limit > 0 |==> limit < 0
2479:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:limit > 0 |==> limit <= 0
2480:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:limit > 0 |==> limit == 0
2481:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:limit > 0 |==> limit >= 0
2482:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:limit > 0 |==> false
2483:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2417:limit > 0 |==> true
2484:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2418:position + amount |==> position % amount
2485:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2418:position + amount |==> position * amount
2486:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2418:position + amount |==> position - amount
2487:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2418:position + amount |==> position / amount
2488:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' |==> c != '0'
2489:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' |==> c <= '0'
2490:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' |==> c == '0'
2491:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' |==> c > '0'
2492:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' |==> c >= '0'
2493:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' |==> false
2494:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' |==> true
2495:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c > '9' |==> c != '9'
2496:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c > '9' |==> c < '9'
2497:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c > '9' |==> c <= '9'
2498:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c > '9' |==> c == '9'
2499:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c > '9' |==> c >= '9'
2500:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c > '9' |==> false
2501:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c > '9' |==> true
2502:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' || c > '9' |==> c < '0' != c > '9'
2503:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' || c > '9' |==> c < '0' && c > '9'
2504:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' || c > '9' |==> c < '0' == c > '9'
2505:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' || c > '9' |==> false
2506:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' || c > '9' |==> c < '0'
2507:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' || c > '9' |==> c > '9'
2508:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2419:c < '0' || c > '9' |==> true
2509:STD:<INC>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset@digitCount(java.lang.String,int,int):2422:amount++ |==> <NO-OP>
2510:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:iType == SHORT_NAME |==> iType != SHORT_NAME
2511:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:iType == SHORT_NAME |==> iType < SHORT_NAME
2512:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:iType == SHORT_NAME |==> iType <= SHORT_NAME
2513:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:iType == SHORT_NAME |==> iType > SHORT_NAME
2514:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:iType == SHORT_NAME |==> iType >= SHORT_NAME
2515:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:iType == SHORT_NAME |==> false
2516:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:iType == SHORT_NAME |==> true
2517:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:4 |==> 0
2518:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:4 |==> -4
2519:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:20 |==> 0
2520:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimatePrintedLength():2445:20 |==> -20
2521:AOR:-(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2451:instant - displayOffset |==> instant % displayOffset
2522:AOR:-(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2451:instant - displayOffset |==> instant * displayOffset
2523:AOR:-(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2451:instant - displayOffset |==> instant + displayOffset
2524:AOR:-(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2451:instant - displayOffset |==> instant / displayOffset
2525:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2451:buf.append(print(instant - displayOffset, displayZone, locale)) |==> <NO-OP>
2526:AOR:-(long,long):%(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2457:instant - displayOffset |==> instant % displayOffset
2527:AOR:-(long,long):*(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2457:instant - displayOffset |==> instant * displayOffset
2528:AOR:-(long,long):+(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2457:instant - displayOffset |==> instant + displayOffset
2529:AOR:-(long,long):/(long,long):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2457:instant - displayOffset |==> instant / displayOffset
2530:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2457:out.write(print(instant - displayOffset, displayZone, locale)) |==> <NO-OP>
2531:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@print(long,org.joda.time.DateTimeZone,java.util.Locale):2461:displayZone == null |==> displayZone != null
2532:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@print(long,org.joda.time.DateTimeZone,java.util.Locale):2461:displayZone == null |==> false
2533:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@print(long,org.joda.time.DateTimeZone,java.util.Locale):2461:displayZone == null |==> true
2534:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:iType == SHORT_NAME |==> iType != SHORT_NAME
2535:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:iType == SHORT_NAME |==> iType < SHORT_NAME
2536:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:iType == SHORT_NAME |==> iType <= SHORT_NAME
2537:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:iType == SHORT_NAME |==> iType > SHORT_NAME
2538:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:iType == SHORT_NAME |==> iType >= SHORT_NAME
2539:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:iType == SHORT_NAME |==> false
2540:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:iType == SHORT_NAME |==> true
2541:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:4 |==> 0
2542:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:4 |==> -4
2543:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:20 |==> 0
2544:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@estimateParsedLength():2482:20 |==> -20
2545:COR:str.startsWith(name):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2488:str.startsWith(name) |==> false
2546:COR:str.startsWith(name):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2488:str.startsWith(name) |==> true
2547:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2489:bucket.setZone(iParseLookup.get(name)) |==> <NO-OP>
2548:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2490:position + name.length() |==> position % name.length()
2549:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2490:position + name.length() |==> position * name.length()
2550:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2490:position + name.length() |==> position - name.length()
2551:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2490:position + name.length() |==> position / name.length()
2552:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2493:~position |==> +position
2553:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2493:~position |==> -position
2554:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:2505:0 |==> 1
2555:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:2505:0 |==> -1
2556:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:2507:max = Math.max(max, id.length()) |==> <NO-OP>
2557:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2519:displayZone != null |==> displayZone == null
2558:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2519:displayZone != null |==> false
2559:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2519:displayZone != null |==> true
2560:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2519:buf.append(displayZone != null ? displayZone.getID() : "") |==> <NO-OP>
2561:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2525:displayZone != null |==> displayZone == null
2562:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2525:displayZone != null |==> false
2563:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2525:displayZone != null |==> true
2564:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2525:out.write(displayZone != null ? displayZone.getID() : "") |==> <NO-OP>
2565:COR:str.startsWith(id):TRUE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2544:str.startsWith(id) |==> false
2566:COR:str.startsWith(id):FALSE:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2544:str.startsWith(id) |==> true
2567:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null |==> best != null
2568:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null |==> false
2569:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null |==> true
2570:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:id.length() > best.length() |==> id.length() != best.length()
2571:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:id.length() > best.length() |==> id.length() < best.length()
2572:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:id.length() > best.length() |==> id.length() <= best.length()
2573:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:id.length() > best.length() |==> id.length() == best.length()
2574:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:id.length() > best.length() |==> id.length() >= best.length()
2575:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:id.length() > best.length() |==> false
2576:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:id.length() > best.length() |==> true
2577:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null || id.length() > best.length() |==> best == null != id.length() > best.length()
2578:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null || id.length() > best.length() |==> best == null && id.length() > best.length()
2579:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null || id.length() > best.length() |==> best == null == id.length() > best.length()
2580:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null || id.length() > best.length() |==> false
2581:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null || id.length() > best.length() |==> best == null
2582:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null || id.length() > best.length() |==> id.length() > best.length()
2583:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2545:best == null || id.length() > best.length() |==> true
2584:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2546:best = id |==> <NO-OP>
2585:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2550:best != null |==> best == null
2586:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2550:best != null |==> false
2587:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2550:best != null |==> true
2588:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2551:bucket.setZone(DateTimeZone.forID(best)) |==> <NO-OP>
2589:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2552:position + best.length() |==> position % best.length()
2590:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2552:position + best.length() |==> position * best.length()
2591:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2552:position + best.length() |==> position - best.length()
2592:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2552:position + best.length() |==> position / best.length()
2593:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2554:~position |==> +position
2594:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2554:~position |==> -position
2595:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2574:decompose(elementPairs, printerList, parserList) |==> <NO-OP>
2596:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:0 |==> 1
2597:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:0 |==> -1
2598:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:printerList.size() <= 0 |==> printerList.size() != 0
2599:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:printerList.size() <= 0 |==> printerList.size() < 0
2600:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:printerList.size() <= 0 |==> printerList.size() == 0
2601:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:printerList.size() <= 0 |==> printerList.size() > 0
2602:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:printerList.size() <= 0 |==> printerList.size() >= 0
2603:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:printerList.size() <= 0 |==> false
2604:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2576:printerList.size() <= 0 |==> true
2605:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2578:0 |==> 1
2606:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2578:0 |==> -1
2607:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2582:0 |==> 1
2608:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2582:0 |==> -1
2609:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:0 |==> 1
2610:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:0 |==> -1
2611:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:i < size |==> i != size
2612:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:i < size |==> i <= size
2613:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:i < size |==> i == size
2614:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:i < size |==> i > size
2615:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:i < size |==> i >= size
2616:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:i < size |==> false
2617:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2583:i < size |==> true
2618:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2585:printEst += printer.estimatePrintedLength() |==> <NO-OP>
2619:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2586:iPrinters[i] = printer |==> <NO-OP>
2620:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:0 |==> 1
2621:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:0 |==> -1
2622:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:parserList.size() <= 0 |==> parserList.size() != 0
2623:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:parserList.size() <= 0 |==> parserList.size() < 0
2624:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:parserList.size() <= 0 |==> parserList.size() == 0
2625:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:parserList.size() <= 0 |==> parserList.size() > 0
2626:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:parserList.size() <= 0 |==> parserList.size() >= 0
2627:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:parserList.size() <= 0 |==> false
2628:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2591:parserList.size() <= 0 |==> true
2629:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2593:0 |==> 1
2630:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2593:0 |==> -1
2631:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2597:0 |==> 1
2632:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2597:0 |==> -1
2633:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:0 |==> 1
2634:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:0 |==> -1
2635:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:i < size |==> i != size
2636:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:i < size |==> i <= size
2637:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:i < size |==> i == size
2638:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:i < size |==> i > size
2639:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:i < size |==> i >= size
2640:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:i < size |==> false
2641:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2598:i < size |==> true
2642:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2600:parseEst += parser.estimateParsedLength() |==> <NO-OP>
2643:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):2601:iParsers[i] = parser |==> <NO-OP>
2644:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2615:elements == null |==> elements != null
2645:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2615:elements == null |==> false
2646:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2615:elements == null |==> true
2647:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2619:locale == null |==> locale != null
2648:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2619:locale == null |==> false
2649:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2619:locale == null |==> true
2650:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2621:locale = Locale.getDefault() |==> <NO-OP>
2651:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:0 |==> 1
2652:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:0 |==> -1
2653:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:i < len |==> i != len
2654:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:i < len |==> i <= len
2655:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:i < len |==> i == len
2656:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:i < len |==> i > len
2657:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:i < len |==> i >= len
2658:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:i < len |==> false
2659:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2625:i < len |==> true
2660:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2626:elements[i].printTo(buf, instant, chrono, displayOffset, displayZone, locale) |==> <NO-OP>
2661:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2634:elements == null |==> elements != null
2662:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2634:elements == null |==> false
2663:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2634:elements == null |==> true
2664:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2638:locale == null |==> locale != null
2665:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2638:locale == null |==> false
2666:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2638:locale == null |==> true
2667:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2640:locale = Locale.getDefault() |==> <NO-OP>
2668:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:0 |==> 1
2669:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:0 |==> -1
2670:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:i < len |==> i != len
2671:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:i < len |==> i <= len
2672:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:i < len |==> i == len
2673:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:i < len |==> i > len
2674:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:i < len |==> i >= len
2675:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:i < len |==> false
2676:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2644:i < len |==> true
2677:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale):2645:elements[i].printTo(out, instant, chrono, displayOffset, displayZone, locale) |==> <NO-OP>
2678:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2651:elements == null |==> elements != null
2679:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2651:elements == null |==> false
2680:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2651:elements == null |==> true
2681:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2655:locale == null |==> locale != null
2682:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2655:locale == null |==> false
2683:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2655:locale == null |==> true
2684:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2657:locale = Locale.getDefault() |==> <NO-OP>
2685:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:0 |==> 1
2686:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:0 |==> -1
2687:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:i < len |==> i != len
2688:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:i < len |==> i <= len
2689:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:i < len |==> i == len
2690:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:i < len |==> i > len
2691:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:i < len |==> i >= len
2692:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:i < len |==> false
2693:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2661:i < len |==> true
2694:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale):2662:elements[i].printTo(buf, partial, locale) |==> <NO-OP>
2695:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2668:elements == null |==> elements != null
2696:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2668:elements == null |==> false
2697:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2668:elements == null |==> true
2698:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2672:locale == null |==> locale != null
2699:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2672:locale == null |==> false
2700:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2672:locale == null |==> true
2701:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2674:locale = Locale.getDefault() |==> <NO-OP>
2702:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:0 |==> 1
2703:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:0 |==> -1
2704:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:i < len |==> i != len
2705:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:i < len |==> i <= len
2706:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:i < len |==> i == len
2707:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:i < len |==> i > len
2708:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:i < len |==> i >= len
2709:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:i < len |==> false
2710:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2678:i < len |==> true
2711:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale):2679:elements[i].printTo(out, partial, locale) |==> <NO-OP>
2712:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2689:elements == null |==> elements != null
2713:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2689:elements == null |==> false
2714:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2689:elements == null |==> true
2715:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:0 |==> 1
2716:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:0 |==> -1
2717:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len |==> i != len
2718:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len |==> i <= len
2719:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len |==> i == len
2720:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len |==> i > len
2721:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len |==> i >= len
2722:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len |==> false
2723:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len |==> true
2724:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:0 |==> 1
2725:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:0 |==> -1
2726:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:position >= 0 |==> position != 0
2727:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:position >= 0 |==> position < 0
2728:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:position >= 0 |==> position <= 0
2729:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:position >= 0 |==> position == 0
2730:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:position >= 0 |==> position > 0
2731:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:position >= 0 |==> false
2732:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:position >= 0 |==> true
2733:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len && position >= 0 |==> i < len != position >= 0
2734:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len && position >= 0 |==> i < len == position >= 0
2735:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len && position >= 0 |==> false
2736:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len && position >= 0 |==> i < len
2737:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len && position >= 0 |==> position >= 0
2738:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len && position >= 0 |==> true
2739:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2694:i < len && position >= 0 |==> i < len || position >= 0
2740:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2695:position = elements[i].parseInto(bucket, text, position) |==> <NO-OP>
2741:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isPrinter():2701:iPrinters != null |==> iPrinters == null
2742:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isPrinter():2701:iPrinters != null |==> false
2743:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isPrinter():2701:iPrinters != null |==> true
2744:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isParser():2705:iParsers != null |==> iParsers == null
2745:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isParser():2705:iParsers != null |==> false
2746:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@isParser():2705:iParsers != null |==> true
2747:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:0 |==> 1
2748:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:0 |==> -1
2749:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:i < size |==> i != size
2750:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:i < size |==> i <= size
2751:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:i < size |==> i == size
2752:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:i < size |==> i > size
2753:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:i < size |==> i >= size
2754:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:i < size |==> false
2755:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:i < size |==> true
2756:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:2 |==> 0
2757:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2714:2 |==> -2
2758:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2718:addArrayToList(printerList, ((Composite)element).iPrinters) |==> <NO-OP>
2759:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2720:printerList.add(element) |==> <NO-OP>
2760:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2724:1 |==> 0
2761:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2724:1 |==> -1
2762:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2724:i + 1 |==> i % 1
2763:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2724:i + 1 |==> i * 1
2764:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2724:i + 1 |==> i - 1
2765:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2724:i + 1 |==> i / 1
2766:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2724:element = elementPairs.get(i + 1) |==> <NO-OP>
2767:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2727:addArrayToList(parserList, ((Composite)element).iParsers) |==> <NO-OP>
2768:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):2729:parserList.add(element) |==> <NO-OP>
2769:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2736:array != null |==> array == null
2770:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2736:array != null |==> false
2771:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2736:array != null |==> true
2772:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:0 |==> 1
2773:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:0 |==> -1
2774:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:i < array.length |==> i != array.length
2775:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:i < array.length |==> i <= array.length
2776:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:i < array.length |==> i == array.length
2777:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:i < array.length |==> i > array.length
2778:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:i < array.length |==> i >= array.length
2779:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:i < array.length |==> false
2780:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2737:i < array.length |==> true
2781:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):2738:list.add(array[i]) |==> <NO-OP>
2782:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2754:0 |==> 1
2783:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2754:0 |==> -1
2784:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:0 |==> 1
2785:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:0 |==> -1
2786:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:--i >= 0 |==> --i != 0
2787:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:--i >= 0 |==> --i < 0
2788:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:--i >= 0 |==> --i <= 0
2789:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:--i >= 0 |==> --i == 0
2790:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:--i >= 0 |==> --i > 0
2791:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:--i >= 0 |==> false
2792:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2755:--i >= 0 |==> true
2793:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2757:parser != null |==> parser == null
2794:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2757:parser != null |==> false
2795:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2757:parser != null |==> true
2796:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2759:len > est |==> len != est
2797:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2759:len > est |==> len < est
2798:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2759:len > est |==> len <= est
2799:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2759:len > est |==> len == est
2800:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2759:len > est |==> len >= est
2801:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2759:len > est |==> false
2802:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2759:len > est |==> true
2803:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@<init>(org.joda.time.format.DateTimeParser[]):2760:est = len |==> <NO-OP>
2804:LVR:FALSE:TRUE:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2776:false |==> true
2805:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:0 |==> 1
2806:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:0 |==> -1
2807:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:i < length |==> i != length
2808:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:i < length |==> i <= length
2809:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:i < length |==> i == length
2810:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:i < length |==> i > length
2811:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:i < length |==> i >= length
2812:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:i < length |==> false
2813:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2783:i < length |==> true
2814:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2785:parser == null |==> parser != null
2815:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2785:parser == null |==> false
2816:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2785:parser == null |==> true
2817:ROR:<=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2787:bestValidPos <= position |==> bestValidPos != position
2818:ROR:<=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2787:bestValidPos <= position |==> bestValidPos < position
2819:ROR:<=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2787:bestValidPos <= position |==> bestValidPos == position
2820:ROR:<=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2787:bestValidPos <= position |==> bestValidPos > position
2821:ROR:<=(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2787:bestValidPos <= position |==> bestValidPos >= position
2822:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2787:bestValidPos <= position |==> false
2823:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2787:bestValidPos <= position |==> true
2824:LVR:TRUE:FALSE:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2790:true |==> false
2825:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2790:isOptional = true |==> <NO-OP>
2826:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2794:parsePos >= position |==> parsePos != position
2827:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2794:parsePos >= position |==> parsePos < position
2828:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2794:parsePos >= position |==> parsePos <= position
2829:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2794:parsePos >= position |==> parsePos == position
2830:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2794:parsePos >= position |==> parsePos > position
2831:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2794:parsePos >= position |==> false
2832:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2794:parsePos >= position |==> true
2833:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2795:parsePos > bestValidPos |==> parsePos != bestValidPos
2834:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2795:parsePos > bestValidPos |==> parsePos < bestValidPos
2835:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2795:parsePos > bestValidPos |==> parsePos <= bestValidPos
2836:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2795:parsePos > bestValidPos |==> parsePos == bestValidPos
2837:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2795:parsePos > bestValidPos |==> parsePos >= bestValidPos
2838:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2795:parsePos > bestValidPos |==> false
2839:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2795:parsePos > bestValidPos |==> true
2840:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() |==> parsePos != text.length()
2841:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() |==> parsePos < text.length()
2842:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() |==> parsePos <= text.length()
2843:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() |==> parsePos == text.length()
2844:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() |==> parsePos > text.length()
2845:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() |==> false
2846:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() |==> true
2847:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:1 |==> 0
2848:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:1 |==> -1
2849:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i % 1
2850:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i * 1
2851:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i - 1
2852:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i / 1
2853:ROR:>=(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:(i + 1) >= length |==> (i + 1) != length
2854:ROR:>=(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:(i + 1) >= length |==> (i + 1) < length
2855:ROR:>=(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:(i + 1) >= length |==> (i + 1) <= length
2856:ROR:>=(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:(i + 1) >= length |==> (i + 1) == length
2857:ROR:>=(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:(i + 1) >= length |==> (i + 1) > length
2858:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:(i + 1) >= length |==> false
2859:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:(i + 1) >= length |==> true
2860:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length |==> parsePos >= text.length() != (i + 1) >= length
2861:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length |==> parsePos >= text.length() && (i + 1) >= length
2862:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length |==> parsePos >= text.length() == (i + 1) >= length
2863:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length |==> false
2864:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length |==> parsePos >= text.length()
2865:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:parsePos >= text.length() || (i + 1) >= length |==> (i + 1) >= length
2866:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length |==> true
2867:LVR:POS:0:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:1 |==> 0
2868:LVR:POS:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:1 |==> -1
2869:AOR:+(int,int):%(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i % 1
2870:AOR:+(int,int):*(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i * 1
2871:AOR:+(int,int):-(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i - 1
2872:AOR:+(int,int):/(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:i + 1 |==> i / 1
2873:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:parsers[i + 1] == null |==> parsers[i + 1] != null
2874:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:parsers[i + 1] == null |==> false
2875:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:parsers[i + 1] == null |==> true
2876:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> (parsePos >= text.length() || (i + 1) >= length) != (parsers[i + 1] == null)
2877:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> (parsePos >= text.length() || (i + 1) >= length) && parsers[i + 1] == null
2878:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> (parsePos >= text.length() || (i + 1) >= length) == (parsers[i + 1] == null)
2879:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> false
2880:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2796:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> parsePos >= text.length() || (i + 1) >= length
2881:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> parsers[i + 1] == null
2882:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2797:parsePos >= text.length() || (i + 1) >= length || parsers[i + 1] == null |==> true
2883:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2803:bestValidPos = parsePos |==> <NO-OP>
2884:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2804:bestValidState = bucket.saveState() |==> <NO-OP>
2885:LVR:0:POS:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:0 |==> 1
2886:LVR:0:NEG:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:0 |==> -1
2887:ROR:<(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:parsePos < 0 |==> parsePos != 0
2888:ROR:<(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:parsePos < 0 |==> parsePos <= 0
2889:ROR:<(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:parsePos < 0 |==> parsePos == 0
2890:ROR:<(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:parsePos < 0 |==> parsePos > 0
2891:ROR:<(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:parsePos < 0 |==> parsePos >= 0
2892:ROR:<(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:parsePos < 0 |==> false
2893:ROR:<(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2807:parsePos < 0 |==> true
2894:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2808:~parsePos |==> +parsePos
2895:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2808:~parsePos |==> -parsePos
2896:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2808:parsePos = ~parsePos |==> <NO-OP>
2897:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2809:parsePos > bestInvalidPos |==> parsePos != bestInvalidPos
2898:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2809:parsePos > bestInvalidPos |==> parsePos < bestInvalidPos
2899:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2809:parsePos > bestInvalidPos |==> parsePos <= bestInvalidPos
2900:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2809:parsePos > bestInvalidPos |==> parsePos == bestInvalidPos
2901:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2809:parsePos > bestInvalidPos |==> parsePos >= bestInvalidPos
2902:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2809:parsePos > bestInvalidPos |==> false
2903:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2809:parsePos > bestInvalidPos |==> true
2904:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2810:bestInvalidPos = parsePos |==> <NO-OP>
2905:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2814:bucket.restoreState(originalState) |==> <NO-OP>
2906:ROR:>(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position |==> bestValidPos != position
2907:ROR:>(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position |==> bestValidPos < position
2908:ROR:>(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position |==> bestValidPos <= position
2909:ROR:>(int,int):==(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position |==> bestValidPos == position
2910:ROR:>(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position |==> bestValidPos >= position
2911:ROR:>(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position |==> false
2912:ROR:>(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position |==> true
2913:ROR:==(int,int):!=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position |==> bestValidPos != position
2914:ROR:==(int,int):<(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position |==> bestValidPos < position
2915:ROR:==(int,int):<=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position |==> bestValidPos <= position
2916:ROR:==(int,int):>(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position |==> bestValidPos > position
2917:ROR:==(int,int):>=(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position |==> bestValidPos >= position
2918:ROR:==(int,int):FALSE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position |==> false
2919:ROR:==(int,int):TRUE(int,int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position |==> true
2920:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position && isOptional |==> bestValidPos == position != isOptional
2921:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position && isOptional |==> bestValidPos == position == isOptional
2922:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position && isOptional |==> false
2923:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position && isOptional |==> bestValidPos == position
2924:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position && isOptional |==> isOptional
2925:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position && isOptional |==> true
2926:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos == position && isOptional |==> bestValidPos == position || isOptional
2927:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position || (bestValidPos == position && isOptional) |==> bestValidPos > position != (bestValidPos == position && isOptional)
2928:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position || (bestValidPos == position && isOptional) |==> bestValidPos > position && (bestValidPos == position && isOptional)
2929:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position || (bestValidPos == position && isOptional) |==> bestValidPos > position == (bestValidPos == position && isOptional)
2930:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position || (bestValidPos == position && isOptional) |==> false
2931:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position || (bestValidPos == position && isOptional) |==> bestValidPos > position
2932:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position || (bestValidPos == position && isOptional) |==> (bestValidPos == position && isOptional)
2933:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2817:bestValidPos > position || (bestValidPos == position && isOptional) |==> true
2934:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2819:bestValidState != null |==> bestValidState == null
2935:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2819:bestValidState != null |==> false
2936:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2819:bestValidState != null |==> true
2937:STD:<CALL>:<NO-OP>:org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2820:bucket.restoreState(bestValidState) |==> <NO-OP>
2938:ORU:~(int):+(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2825:~bestInvalidPos |==> +bestInvalidPos
2939:ORU:~(int):-(int):org.joda.time.format.DateTimeFormatterBuilder$MatchingParser@parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int):2825:~bestInvalidPos |==> -bestInvalidPos
