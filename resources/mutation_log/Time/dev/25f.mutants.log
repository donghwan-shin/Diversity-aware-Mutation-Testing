1:LVR:0:POS:org.joda.time.DateTimeZone:95:0 |==> 1
2:LVR:0:NEG:org.joda.time.DateTimeZone:95:0 |==> -1
3:LVR:0:POS:org.joda.time.DateTimeZone:95:0 |==> 1
4:LVR:0:NEG:org.joda.time.DateTimeZone:95:0 |==> -1
5:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:115:setProvider0(null) |==> <NO-OP>
6:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:116:setNameProvider0(null) |==> <NO-OP>
7:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():134:zone == null |==> zone != null
8:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():134:zone == null |==> false
9:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():134:zone == null |==> true
10:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():136:zone = cDefault |==> <NO-OP>
11:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():137:zone == null |==> zone != null
12:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():137:zone == null |==> false
13:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():137:zone == null |==> true
14:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():142:id != null |==> id == null
15:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():142:id != null |==> false
16:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():142:id != null |==> true
17:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():143:temp = forID(id) |==> <NO-OP>
18:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():148:temp == null |==> temp != null
19:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():148:temp == null |==> false
20:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():148:temp == null |==> true
21:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():149:temp = forTimeZone(TimeZone.getDefault()) |==> <NO-OP>
22:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():154:temp == null |==> temp != null
23:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():154:temp == null |==> false
24:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():154:temp == null |==> true
25:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():155:temp = UTC |==> <NO-OP>
26:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():157:cDefault = zone = temp |==> <NO-OP>
27:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):175:sm != null |==> sm == null
28:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):175:sm != null |==> false
29:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):175:sm != null |==> true
30:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault")) |==> <NO-OP>
31:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):178:zone == null |==> zone != null
32:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):178:zone == null |==> false
33:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):178:zone == null |==> true
34:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):182:cDefault = zone |==> <NO-OP>
35:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):204:id == null |==> id != null
36:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):204:id == null |==> false
37:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):204:id == null |==> true
38:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forID(java.lang.String):207:id.equals("UTC") |==> false
39:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forID(java.lang.String):207:id.equals("UTC") |==> true
40:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):211:zone != null |==> zone == null
41:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):211:zone != null |==> false
42:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):211:zone != null |==> true
43:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):214:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") != id.startsWith("-")
44:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):214:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") && id.startsWith("-")
45:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):214:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") == id.startsWith("-")
46:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):214:id.startsWith("+") || id.startsWith("-") |==> false
47:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):214:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+")
48:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):214:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("-")
49:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):214:id.startsWith("+") || id.startsWith("-") |==> true
50:LVR:0:POS:org.joda.time.DateTimeZone@forID(java.lang.String):216:0L |==> 1L
51:LVR:0:NEG:org.joda.time.DateTimeZone@forID(java.lang.String):216:0L |==> -1L
52:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):216:offset == 0L |==> offset != 0L
53:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):216:offset == 0L |==> offset < 0L
54:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):216:offset == 0L |==> offset <= 0L
55:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):216:offset == 0L |==> offset > 0L
56:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):216:offset == 0L |==> offset >= 0L
57:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):216:offset == 0L |==> false
58:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):216:offset == 0L |==> true
59:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forID(java.lang.String):219:id = printOffset(offset) |==> <NO-OP>
60:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHours(int):237:0 |==> 1
61:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHours(int):237:0 |==> -1
62:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:0 |==> 1
63:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:0 |==> -1
64:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 |==> hoursOffset != 0
65:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 |==> hoursOffset < 0
66:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 |==> hoursOffset <= 0
67:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 |==> hoursOffset > 0
68:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 |==> hoursOffset >= 0
69:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 |==> false
70:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 |==> true
71:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:0 |==> 1
72:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:0 |==> -1
73:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:minutesOffset == 0 |==> minutesOffset != 0
74:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:minutesOffset == 0 |==> minutesOffset < 0
75:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:minutesOffset == 0 |==> minutesOffset <= 0
76:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:minutesOffset == 0 |==> minutesOffset > 0
77:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:minutesOffset == 0 |==> minutesOffset >= 0
78:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:minutesOffset == 0 |==> false
79:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:minutesOffset == 0 |==> true
80:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 != (minutesOffset == 0)
81:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 == (minutesOffset == 0)
82:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 && minutesOffset == 0 |==> false
83:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0
84:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 && minutesOffset == 0 |==> minutesOffset == 0
85:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 && minutesOffset == 0 |==> true
86:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):254:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 || minutesOffset == 0
87:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:0 |==> 1
88:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:0 |==> -1
89:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 |==> minutesOffset != 0
90:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 |==> minutesOffset <= 0
91:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 |==> minutesOffset == 0
92:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 |==> minutesOffset > 0
93:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 |==> minutesOffset >= 0
94:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 |==> false
95:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 |==> true
96:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:59 |==> 0
97:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:59 |==> -59
98:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset > 59 |==> minutesOffset != 59
99:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset > 59 |==> minutesOffset < 59
100:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset > 59 |==> minutesOffset <= 59
101:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset > 59 |==> minutesOffset == 59
102:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset > 59 |==> minutesOffset >= 59
103:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset > 59 |==> false
104:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset > 59 |==> true
105:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0 != minutesOffset > 59
106:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0 && minutesOffset > 59
107:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0 == minutesOffset > 59
108:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 || minutesOffset > 59 |==> false
109:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0
110:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset > 59
111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):257:minutesOffset < 0 || minutesOffset > 59 |==> true
112:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):260:0 |==> 1
113:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):260:0 |==> -1
114:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):262:60 |==> 0
115:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):262:60 |==> -60
116:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:0 |==> 1
117:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:0 |==> -1
118:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:hoursInMinutes < 0 |==> hoursInMinutes != 0
119:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:hoursInMinutes < 0 |==> hoursInMinutes <= 0
120:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:hoursInMinutes < 0 |==> hoursInMinutes == 0
121:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:hoursInMinutes < 0 |==> hoursInMinutes > 0
122:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:hoursInMinutes < 0 |==> hoursInMinutes >= 0
123:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:hoursInMinutes < 0 |==> false
124:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):263:hoursInMinutes < 0 |==> true
125:ORU:-(int):+(int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):264:-minutesOffset |==> +minutesOffset
126:ORU:-(int):~(int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):264:-minutesOffset |==> ~minutesOffset
127:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):264:minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset) |==> <NO-OP>
128:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):266:minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset) |==> <NO-OP>
129:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):268:offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE) |==> <NO-OP>
130:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):302:zone == null |==> zone != null
131:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):302:zone == null |==> false
132:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):302:zone == null |==> true
133:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):306:id.equals("UTC") |==> false
134:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):306:id.equals("UTC") |==> true
135:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):313:convId != null |==> convId == null
136:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):313:convId != null |==> false
137:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):313:convId != null |==> true
138:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):314:dtz = cProvider.getZone(convId) |==> <NO-OP>
139:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):316:dtz == null |==> dtz != null
140:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):316:dtz == null |==> false
141:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):316:dtz == null |==> true
142:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):317:dtz = cProvider.getZone(id) |==> <NO-OP>
143:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):319:dtz != null |==> dtz == null
144:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):319:dtz != null |==> false
145:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):319:dtz != null |==> true
146:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):324:convId == null |==> convId != null
147:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):324:convId == null |==> false
148:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):324:convId == null |==> true
149:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):325:convId = zone.getDisplayName() |==> <NO-OP>
150:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") != convId.startsWith("GMT-")
151:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") && convId.startsWith("GMT-")
152:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") == convId.startsWith("GMT-")
153:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> false
154:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+")
155:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT-")
156:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> true
157:LVR:POS:0:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):327:3 |==> 0
158:LVR:POS:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):327:3 |==> -3
159:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):327:convId = convId.substring(3) |==> <NO-OP>
160:LVR:0:POS:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:0L |==> 1L
161:LVR:0:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:0L |==> -1L
162:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:offset == 0L |==> offset != 0L
163:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:offset == 0L |==> offset < 0L
164:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:offset == 0L |==> offset <= 0L
165:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:offset == 0L |==> offset > 0L
166:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:offset == 0L |==> offset >= 0L
167:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:offset == 0L |==> false
168:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):329:offset == 0L |==> true
169:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):332:convId = printOffset(offset) |==> <NO-OP>
170:LVR:0:POS:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:0 |==> 1
171:LVR:0:NEG:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:0 |==> -1
172:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:offset == 0 |==> offset != 0
173:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:offset == 0 |==> offset < 0
174:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:offset == 0 |==> offset <= 0
175:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:offset == 0 |==> offset > 0
176:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:offset == 0 |==> offset >= 0
177:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:offset == 0 |==> false
178:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):349:offset == 0 |==> true
179:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):352:iFixedOffsetCache == null |==> iFixedOffsetCache != null
180:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):352:iFixedOffsetCache == null |==> false
181:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):352:iFixedOffsetCache == null |==> true
182:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):353:iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>() |==> <NO-OP>
183:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):357:ref != null |==> ref == null
184:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):357:ref != null |==> false
185:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):357:ref != null |==> true
186:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):359:zone != null |==> zone == null
187:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):359:zone != null |==> false
188:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):359:zone != null |==> true
189:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):364:iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone)) |==> <NO-OP>
190:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):402:sm != null |==> sm == null
191:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):402:sm != null |==> false
192:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):402:sm != null |==> true
193:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):403:sm.checkPermission(new JodaTimePermission("DateTimeZone.setProvider")) |==> <NO-OP>
194:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):405:setProvider0(provider) |==> <NO-OP>
195:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):415:provider == null |==> provider != null
196:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):415:provider == null |==> false
197:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):415:provider == null |==> true
198:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):416:provider = getDefaultProvider() |==> <NO-OP>
199:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null |==> ids != null
200:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null |==> false
201:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null |==> true
202:LVR:0:POS:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:0 |==> 1
203:LVR:0:NEG:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:0 |==> -1
204:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids.size() == 0 |==> ids.size() != 0
205:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids.size() == 0 |==> ids.size() < 0
206:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids.size() == 0 |==> ids.size() <= 0
207:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids.size() == 0 |==> ids.size() > 0
208:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids.size() == 0 |==> ids.size() >= 0
209:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids.size() == 0 |==> false
210:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids.size() == 0 |==> true
211:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null || ids.size() == 0 |==> ids == null != (ids.size() == 0)
212:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null || ids.size() == 0 |==> ids == null && ids.size() == 0
213:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null || ids.size() == 0 |==> ids == null == (ids.size() == 0)
214:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null || ids.size() == 0 |==> false
215:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null || ids.size() == 0 |==> ids == null
216:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null || ids.size() == 0 |==> ids.size() == 0
217:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):419:ids == null || ids.size() == 0 |==> true
218:COR:ids.contains("UTC"):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):423:ids.contains("UTC") |==> false
219:COR:ids.contains("UTC"):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):423:ids.contains("UTC") |==> true
220:COR:UTC.equals(provider.getZone("UTC")):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:UTC.equals(provider.getZone("UTC")) |==> false
221:COR:UTC.equals(provider.getZone("UTC")):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:UTC.equals(provider.getZone("UTC")) |==> true
222:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):429:cProvider = provider |==> <NO-OP>
223:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):430:cAvailableIDs = ids |==> <NO-OP>
224:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():448:providerClass != null |==> providerClass == null
225:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():448:providerClass != null |==> false
226:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():448:providerClass != null |==> true
227:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():450:provider = (Provider)Class.forName(providerClass).newInstance() |==> <NO-OP>
228:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():453:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
229:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():460:provider == null |==> provider != null
230:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():460:provider == null |==> false
231:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():460:provider == null |==> true
232:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():462:provider = new ZoneInfoProvider("org/joda/time/tz/data") |==> <NO-OP>
233:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():465:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
234:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():469:provider == null |==> provider != null
235:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():469:provider == null |==> false
236:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():469:provider == null |==> true
237:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():470:provider = new UTCProvider() |==> <NO-OP>
238:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):501:sm != null |==> sm == null
239:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):501:sm != null |==> false
240:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):501:sm != null |==> true
241:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):502:sm.checkPermission(new JodaTimePermission("DateTimeZone.setNameProvider")) |==> <NO-OP>
242:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):504:setNameProvider0(nameProvider) |==> <NO-OP>
243:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):514:nameProvider == null |==> nameProvider != null
244:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):514:nameProvider == null |==> false
245:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):514:nameProvider == null |==> true
246:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):515:nameProvider = getDefaultNameProvider() |==> <NO-OP>
247:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):517:cNameProvider = nameProvider |==> <NO-OP>
248:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():532:providerClass != null |==> providerClass == null
249:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():532:providerClass != null |==> false
250:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():532:providerClass != null |==> true
251:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():534:nameProvider = (NameProvider)Class.forName(providerClass).newInstance() |==> <NO-OP>
252:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():537:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
253:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():544:nameProvider == null |==> nameProvider != null
254:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():544:nameProvider == null |==> false
255:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():544:nameProvider == null |==> true
256:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():545:nameProvider = new DefaultNameProvider() |==> <NO-OP>
257:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):560:map == null |==> map != null
258:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):560:map == null |==> false
259:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):560:map == null |==> true
260:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):562:map = new HashMap<String, String>() |==> <NO-OP>
261:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):563:map.put("GMT", "UTC") |==> <NO-OP>
262:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):564:map.put("MIT", "Pacific/Apia") |==> <NO-OP>
263:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):565:map.put("HST", "Pacific/Honolulu") |==> <NO-OP>
264:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):566:map.put("AST", "America/Anchorage") |==> <NO-OP>
265:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):567:map.put("PST", "America/Los_Angeles") |==> <NO-OP>
266:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):568:map.put("MST", "America/Denver") |==> <NO-OP>
267:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):569:map.put("PNT", "America/Phoenix") |==> <NO-OP>
268:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):570:map.put("CST", "America/Chicago") |==> <NO-OP>
269:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):571:map.put("EST", "America/New_York") |==> <NO-OP>
270:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):572:map.put("IET", "America/Indianapolis") |==> <NO-OP>
271:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):573:map.put("PRT", "America/Puerto_Rico") |==> <NO-OP>
272:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):574:map.put("CNT", "America/St_Johns") |==> <NO-OP>
273:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):575:map.put("AGT", "America/Buenos_Aires") |==> <NO-OP>
274:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):576:map.put("BET", "America/Sao_Paulo") |==> <NO-OP>
275:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):577:map.put("WET", "Europe/London") |==> <NO-OP>
276:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):578:map.put("ECT", "Europe/Paris") |==> <NO-OP>
277:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):579:map.put("ART", "Africa/Cairo") |==> <NO-OP>
278:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):580:map.put("CAT", "Africa/Harare") |==> <NO-OP>
279:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):581:map.put("EET", "Europe/Bucharest") |==> <NO-OP>
280:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):582:map.put("EAT", "Africa/Addis_Ababa") |==> <NO-OP>
281:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):583:map.put("MET", "Asia/Tehran") |==> <NO-OP>
282:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):584:map.put("NET", "Asia/Yerevan") |==> <NO-OP>
283:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):585:map.put("PLT", "Asia/Karachi") |==> <NO-OP>
284:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):586:map.put("IST", "Asia/Calcutta") |==> <NO-OP>
285:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):587:map.put("BST", "Asia/Dhaka") |==> <NO-OP>
286:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):588:map.put("VST", "Asia/Saigon") |==> <NO-OP>
287:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):589:map.put("CTT", "Asia/Shanghai") |==> <NO-OP>
288:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):590:map.put("JST", "Asia/Tokyo") |==> <NO-OP>
289:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):591:map.put("ACT", "Australia/Darwin") |==> <NO-OP>
290:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):592:map.put("AET", "Australia/Sydney") |==> <NO-OP>
291:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):593:map.put("SST", "Pacific/Guadalcanal") |==> <NO-OP>
292:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):594:map.put("NST", "Pacific/Auckland") |==> <NO-OP>
293:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):595:cZoneIdConversion = map |==> <NO-OP>
294:ORU:-(int):+(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):617:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> +(int)offsetFormatter().withChronology(chrono).parseMillis(str)
295:ORU:-(int):~(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):617:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> ~(int)offsetFormatter().withChronology(chrono).parseMillis(str)
296:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):631:0 |==> 1
297:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):631:0 |==> -1
298:ROR:>=(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):631:offset >= 0 |==> offset != 0
299:ROR:>=(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):631:offset >= 0 |==> offset < 0
300:ROR:>=(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):631:offset >= 0 |==> offset <= 0
301:ROR:>=(int,int):==(int,int):org.joda.time.DateTimeZone@printOffset(int):631:offset >= 0 |==> offset == 0
302:ROR:>=(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):631:offset >= 0 |==> offset > 0
303:ROR:>=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):631:offset >= 0 |==> false
304:ROR:>=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):631:offset >= 0 |==> true
305:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):632:buf.append('+') |==> <NO-OP>
306:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):634:buf.append('-') |==> <NO-OP>
307:ORU:-(int):+(int):org.joda.time.DateTimeZone@printOffset(int):635:-offset |==> +offset
308:ORU:-(int):~(int):org.joda.time.DateTimeZone@printOffset(int):635:-offset |==> ~offset
309:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):635:offset = -offset |==> <NO-OP>
310:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):638:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset % DateTimeConstants.MILLIS_PER_HOUR
311:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):638:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset * DateTimeConstants.MILLIS_PER_HOUR
312:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):638:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset + DateTimeConstants.MILLIS_PER_HOUR
313:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):638:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset - DateTimeConstants.MILLIS_PER_HOUR
314:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):639:2 |==> 0
315:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):639:2 |==> -2
316:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):639:FormatUtils.appendPaddedInteger(buf, hours, 2) |==> <NO-OP>
317:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):640:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
318:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):640:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
319:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):640:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
320:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):640:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
321:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):640:offset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
322:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):642:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset % DateTimeConstants.MILLIS_PER_MINUTE
323:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):642:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset * DateTimeConstants.MILLIS_PER_MINUTE
324:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):642:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset + DateTimeConstants.MILLIS_PER_MINUTE
325:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):642:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset - DateTimeConstants.MILLIS_PER_MINUTE
326:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):643:buf.append(':') |==> <NO-OP>
327:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):644:2 |==> 0
328:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):644:2 |==> -2
329:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):644:FormatUtils.appendPaddedInteger(buf, minutes, 2) |==> <NO-OP>
330:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):645:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
331:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):645:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
332:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):645:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
333:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):645:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
334:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):645:offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
335:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):646:0 |==> 1
336:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):646:0 |==> -1
337:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset == 0 |==> offset != 0
338:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset == 0 |==> offset < 0
339:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset == 0 |==> offset <= 0
340:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset == 0 |==> offset > 0
341:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset == 0 |==> offset >= 0
342:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset == 0 |==> false
343:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset == 0 |==> true
344:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset % DateTimeConstants.MILLIS_PER_SECOND
345:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset * DateTimeConstants.MILLIS_PER_SECOND
346:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset + DateTimeConstants.MILLIS_PER_SECOND
347:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset - DateTimeConstants.MILLIS_PER_SECOND
348:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):651:buf.append(':') |==> <NO-OP>
349:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):652:2 |==> 0
350:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):652:2 |==> -2
351:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):652:FormatUtils.appendPaddedInteger(buf, seconds, 2) |==> <NO-OP>
352:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):653:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
353:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):653:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
354:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):653:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
355:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):653:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
356:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):653:offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
357:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):654:0 |==> 1
358:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):654:0 |==> -1
359:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset != 0
360:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset < 0
361:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset <= 0
362:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset > 0
363:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset >= 0
364:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> false
365:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> true
366:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):658:buf.append('.') |==> <NO-OP>
367:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):659:3 |==> 0
368:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):659:3 |==> -3
369:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):659:FormatUtils.appendPaddedInteger(buf, offset, 3) |==> <NO-OP>
370:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():669:cOffsetFormatter == null |==> cOffsetFormatter != null
371:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():669:cOffsetFormatter == null |==> false
372:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():669:cOffsetFormatter == null |==> true
373:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@offsetFormatter():671:true |==> false
374:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():671:2 |==> 0
375:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():671:2 |==> -2
376:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():671:4 |==> 0
377:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():671:4 |==> -4
378:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@offsetFormatter():670:cOffsetFormatter = new DateTimeFormatterBuilder().appendTimeZoneOffset(null, true, 2, 4).toFormatter() |==> <NO-OP>
379:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):689:id == null |==> id != null
380:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):689:id == null |==> false
381:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):689:id == null |==> true
382:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):743:locale == null |==> locale != null
383:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):743:locale == null |==> false
384:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):743:locale == null |==> true
385:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):744:locale = Locale.getDefault() |==> <NO-OP>
386:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):747:nameKey == null |==> nameKey != null
387:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):747:nameKey == null |==> false
388:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):747:nameKey == null |==> true
389:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):751:name != null |==> name == null
390:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):751:name != null |==> false
391:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):751:name != null |==> true
392:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):783:locale == null |==> locale != null
393:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):783:locale == null |==> false
394:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):783:locale == null |==> true
395:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getName(long,java.util.Locale):784:locale = Locale.getDefault() |==> <NO-OP>
396:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):787:nameKey == null |==> nameKey != null
397:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):787:nameKey == null |==> false
398:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):787:nameKey == null |==> true
399:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):791:name != null |==> name == null
400:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):791:name != null |==> false
401:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):791:name != null |==> true
402:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):812:instant == null |==> instant != null
403:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):812:instant == null |==> false
404:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):812:instant == null |==> true
405:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):843:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) != getStandardOffset(instant)
406:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):843:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) < getStandardOffset(instant)
407:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):843:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) <= getStandardOffset(instant)
408:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):843:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) > getStandardOffset(instant)
409:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):843:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) >= getStandardOffset(instant)
410:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):843:getOffset(instant) == getStandardOffset(instant) |==> false
411:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):843:getOffset(instant) == getStandardOffset(instant) |==> true
412:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):883:instantLocal - offsetLocal |==> instantLocal % offsetLocal
413:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):883:instantLocal - offsetLocal |==> instantLocal * offsetLocal
414:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):883:instantLocal - offsetLocal |==> instantLocal + offsetLocal
415:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):883:instantLocal - offsetLocal |==> instantLocal / offsetLocal
416:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):886:offsetLocal != offsetAdjusted |==> offsetLocal < offsetAdjusted
417:ROR:!=(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):886:offsetLocal != offsetAdjusted |==> offsetLocal <= offsetAdjusted
418:ROR:!=(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):886:offsetLocal != offsetAdjusted |==> offsetLocal == offsetAdjusted
419:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):886:offsetLocal != offsetAdjusted |==> offsetLocal > offsetAdjusted
420:ROR:!=(int,int):>=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):886:offsetLocal != offsetAdjusted |==> offsetLocal >= offsetAdjusted
421:ROR:!=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):886:offsetLocal != offsetAdjusted |==> false
422:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):886:offsetLocal != offsetAdjusted |==> true
423:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:offsetLocal - offsetAdjusted |==> offsetLocal % offsetAdjusted
424:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:offsetLocal - offsetAdjusted |==> offsetLocal * offsetAdjusted
425:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:offsetLocal - offsetAdjusted |==> offsetLocal + offsetAdjusted
426:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:offsetLocal - offsetAdjusted |==> offsetLocal / offsetAdjusted
427:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:0 |==> 1
428:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:0 |==> -1
429:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) != 0
430:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) <= 0
431:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) == 0
432:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) > 0
433:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) >= 0
434:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:(offsetLocal - offsetAdjusted) < 0 |==> false
435:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):889:(offsetLocal - offsetAdjusted) < 0 |==> true
436:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:instantLocal - offsetAdjusted |==> instantLocal % offsetAdjusted
437:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:instantLocal - offsetAdjusted |==> instantLocal * offsetAdjusted
438:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:instantLocal - offsetAdjusted |==> instantLocal + offsetAdjusted
439:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:instantLocal - offsetAdjusted |==> instantLocal / offsetAdjusted
440:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):895:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
441:ROR:!=(long,long):<=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):895:nextLocal != nextAdjusted |==> nextLocal <= nextAdjusted
442:ROR:!=(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):895:nextLocal != nextAdjusted |==> nextLocal == nextAdjusted
443:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):895:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
444:ROR:!=(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):895:nextLocal != nextAdjusted |==> nextLocal >= nextAdjusted
445:ROR:!=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):895:nextLocal != nextAdjusted |==> false
446:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):895:nextLocal != nextAdjusted |==> true
447:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:0 |==> 1
448:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:0 |==> -1
449:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:offsetLocal > 0 |==> offsetLocal != 0
450:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:offsetLocal > 0 |==> offsetLocal < 0
451:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:offsetLocal > 0 |==> offsetLocal <= 0
452:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:offsetLocal > 0 |==> offsetLocal == 0
453:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:offsetLocal > 0 |==> offsetLocal >= 0
454:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:offsetLocal > 0 |==> false
455:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):899:offsetLocal > 0 |==> true
456:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):901:prev < instantAdjusted |==> prev != instantAdjusted
457:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):901:prev < instantAdjusted |==> prev <= instantAdjusted
458:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):901:prev < instantAdjusted |==> prev == instantAdjusted
459:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):901:prev < instantAdjusted |==> prev > instantAdjusted
460:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):901:prev < instantAdjusted |==> prev >= instantAdjusted
461:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):901:prev < instantAdjusted |==> false
462:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):901:prev < instantAdjusted |==> true
463:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:offsetPrev - offsetLocal |==> offsetPrev % offsetLocal
464:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:offsetPrev - offsetLocal |==> offsetPrev * offsetLocal
465:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:offsetPrev - offsetLocal |==> offsetPrev + offsetLocal
466:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:offsetPrev - offsetLocal |==> offsetPrev / offsetLocal
467:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev |==> instantAdjusted % prev
468:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev |==> instantAdjusted * prev
469:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev |==> instantAdjusted + prev
470:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev |==> instantAdjusted / prev
471:ROR:<=(long,long):!=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev <= diff |==> instantAdjusted - prev != diff
472:ROR:<=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev <= diff |==> instantAdjusted - prev < diff
473:ROR:<=(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev <= diff |==> instantAdjusted - prev == diff
474:ROR:<=(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev <= diff |==> instantAdjusted - prev > diff
475:ROR:<=(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev <= diff |==> instantAdjusted - prev >= diff
476:ROR:<=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev <= diff |==> false
477:ROR:<=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):904:instantAdjusted - prev <= diff |==> true
478:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):924:instantUTC + offset |==> instantUTC % offset
479:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):924:instantUTC + offset |==> instantUTC * offset
480:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):924:instantUTC + offset |==> instantUTC - offset
481:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):924:instantUTC + offset |==> instantUTC / offset
482:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:instantUTC ^ instantLocal |==> instantUTC & instantLocal
483:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:instantUTC ^ instantLocal |==> instantUTC | instantLocal
484:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):926:0 |==> 1
485:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):926:0 |==> -1
486:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) != 0
487:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) <= 0
488:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) == 0
489:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) > 0
490:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) >= 0
491:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 |==> false
492:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 |==> true
493:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:instantUTC ^ offset |==> instantUTC & offset
494:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:instantUTC ^ offset |==> instantUTC | offset
495:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):926:0 |==> 1
496:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):926:0 |==> -1
497:ROR:>=(long,long):!=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) != 0
498:ROR:>=(long,long):<(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) < 0
499:ROR:>=(long,long):<=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) <= 0
500:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) == 0
501:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) > 0
502:ROR:>=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ offset) >= 0 |==> false
503:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ offset) >= 0 |==> true
504:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 != (instantUTC ^ offset) >= 0
505:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 == (instantUTC ^ offset) >= 0
506:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> false
507:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0
508:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) >= 0
509:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> true
510:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):926:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 || (instantUTC ^ offset) >= 0
511:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):951:instantLocal - offsetOriginal |==> instantLocal % offsetOriginal
512:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):951:instantLocal - offsetOriginal |==> instantLocal * offsetOriginal
513:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):951:instantLocal - offsetOriginal |==> instantLocal + offsetOriginal
514:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):951:instantLocal - offsetOriginal |==> instantLocal / offsetOriginal
515:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):953:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal != offsetOriginal
516:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):953:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal < offsetOriginal
517:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):953:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal <= offsetOriginal
518:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):953:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal > offsetOriginal
519:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):953:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal >= offsetOriginal
520:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):953:offsetLocalFromOriginal == offsetOriginal |==> false
521:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):953:offsetLocalFromOriginal == offsetOriginal |==> true
522:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):975:instantLocal - offsetLocal |==> instantLocal % offsetLocal
523:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):975:instantLocal - offsetLocal |==> instantLocal * offsetLocal
524:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):975:instantLocal - offsetLocal |==> instantLocal + offsetLocal
525:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):975:instantLocal - offsetLocal |==> instantLocal / offsetLocal
526:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):977:offsetLocal != offset |==> offsetLocal < offset
527:ROR:!=(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):977:offsetLocal != offset |==> offsetLocal <= offset
528:ROR:!=(int,int):==(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):977:offsetLocal != offset |==> offsetLocal == offset
529:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):977:offsetLocal != offset |==> offsetLocal > offset
530:ROR:!=(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):977:offsetLocal != offset |==> offsetLocal >= offset
531:ROR:!=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):977:offsetLocal != offset |==> false
532:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):977:offsetLocal != offset |==> true
533:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:0 |==> 1
534:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:0 |==> -1
535:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:offsetLocal < 0 |==> offsetLocal != 0
536:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:offsetLocal < 0 |==> offsetLocal <= 0
537:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:offsetLocal < 0 |==> offsetLocal == 0
538:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:offsetLocal < 0 |==> offsetLocal > 0
539:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:offsetLocal < 0 |==> offsetLocal >= 0
540:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:offsetLocal < 0 |==> false
541:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:offsetLocal < 0 |==> true
542:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:strict || offsetLocal < 0 |==> strict != offsetLocal < 0
543:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:strict || offsetLocal < 0 |==> strict && offsetLocal < 0
544:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:strict || offsetLocal < 0 |==> strict == offsetLocal < 0
545:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:strict || offsetLocal < 0 |==> false
546:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:strict || offsetLocal < 0 |==> strict
547:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:strict || offsetLocal < 0 |==> offsetLocal < 0
548:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):981:strict || offsetLocal < 0 |==> true
549:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal % offsetLocal
550:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal * offsetLocal
551:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal + offsetLocal
552:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal / offsetLocal
553:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:instantLocal - offsetLocal |==> instantLocal % offsetLocal
554:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:instantLocal - offsetLocal |==> instantLocal * offsetLocal
555:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:instantLocal - offsetLocal |==> instantLocal + offsetLocal
556:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:instantLocal - offsetLocal |==> instantLocal / offsetLocal
557:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:nextLocal == (instantLocal - offsetLocal) |==> nextLocal != (instantLocal - offsetLocal)
558:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:nextLocal == (instantLocal - offsetLocal) |==> nextLocal < (instantLocal - offsetLocal)
559:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:nextLocal == (instantLocal - offsetLocal) |==> nextLocal <= (instantLocal - offsetLocal)
560:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:nextLocal == (instantLocal - offsetLocal) |==> nextLocal > (instantLocal - offsetLocal)
561:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:nextLocal == (instantLocal - offsetLocal) |==> nextLocal >= (instantLocal - offsetLocal)
562:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:nextLocal == (instantLocal - offsetLocal) |==> false
563:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):984:nextLocal == (instantLocal - offsetLocal) |==> true
564:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:nextLocal = Long.MAX_VALUE |==> <NO-OP>
565:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):987:instantLocal - offset |==> instantLocal % offset
566:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):987:instantLocal - offset |==> instantLocal * offset
567:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):987:instantLocal - offset |==> instantLocal + offset
568:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):987:instantLocal - offset |==> instantLocal / offset
569:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:instantLocal - offset |==> instantLocal % offset
570:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:instantLocal - offset |==> instantLocal * offset
571:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:instantLocal - offset |==> instantLocal + offset
572:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:instantLocal - offset |==> instantLocal / offset
573:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:nextAdjusted == (instantLocal - offset) |==> nextAdjusted != (instantLocal - offset)
574:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:nextAdjusted == (instantLocal - offset) |==> nextAdjusted < (instantLocal - offset)
575:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:nextAdjusted == (instantLocal - offset) |==> nextAdjusted <= (instantLocal - offset)
576:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:nextAdjusted == (instantLocal - offset) |==> nextAdjusted > (instantLocal - offset)
577:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:nextAdjusted == (instantLocal - offset) |==> nextAdjusted >= (instantLocal - offset)
578:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:nextAdjusted == (instantLocal - offset) |==> false
579:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):988:nextAdjusted == (instantLocal - offset) |==> true
580:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:nextAdjusted = Long.MAX_VALUE |==> <NO-OP>
581:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
582:ROR:!=(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:nextLocal != nextAdjusted |==> nextLocal <= nextAdjusted
583:ROR:!=(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:nextLocal != nextAdjusted |==> nextLocal == nextAdjusted
584:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
585:ROR:!=(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:nextLocal != nextAdjusted |==> nextLocal >= nextAdjusted
586:ROR:!=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:nextLocal != nextAdjusted |==> false
587:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:nextLocal != nextAdjusted |==> true
588:COR:strict:TRUE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):993:strict |==> false
589:COR:strict:FALSE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):993:strict |==> true
590:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1002:offset = offsetLocal |==> <NO-OP>
591:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1008:instantLocal - offset |==> instantLocal % offset
592:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1008:instantLocal - offset |==> instantLocal * offset
593:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1008:instantLocal - offset |==> instantLocal + offset
594:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1008:instantLocal - offset |==> instantLocal / offset
595:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal ^ instantUTC |==> instantLocal & instantUTC
596:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal ^ instantUTC |==> instantLocal | instantUTC
597:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:0 |==> 1
598:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:0 |==> -1
599:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) != 0
600:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) <= 0
601:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) == 0
602:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) > 0
603:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) >= 0
604:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 |==> false
605:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 |==> true
606:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal ^ offset |==> instantLocal & offset
607:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:instantLocal ^ offset |==> instantLocal | offset
608:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:0 |==> 1
609:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:0 |==> -1
610:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) != 0
611:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) <= 0
612:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) == 0
613:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) > 0
614:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) >= 0
615:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ offset) < 0 |==> false
616:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ offset) < 0 |==> true
617:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 != (instantLocal ^ offset) < 0
618:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 == (instantLocal ^ offset) < 0
619:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> false
620:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0
621:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) < 0
622:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> true
623:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 || (instantLocal ^ offset) < 0
624:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1027:newZone == null |==> newZone != null
625:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1027:newZone == null |==> false
626:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1027:newZone == null |==> true
627:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1028:newZone = DateTimeZone.getDefault() |==> <NO-OP>
628:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1030:newZone == this |==> newZone != this
629:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1030:newZone == this |==> false
630:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1030:newZone == this |==> true
631:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1033:oldInstant + getOffset(oldInstant) |==> oldInstant % getOffset(oldInstant)
632:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1033:oldInstant + getOffset(oldInstant) |==> oldInstant * getOffset(oldInstant)
633:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1033:oldInstant + getOffset(oldInstant) |==> oldInstant - getOffset(oldInstant)
634:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1033:oldInstant + getOffset(oldInstant) |==> oldInstant / getOffset(oldInstant)
635:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1034:instantLocal - newZone.getOffsetFromLocal(instantLocal) |==> instantLocal % newZone.getOffsetFromLocal(instantLocal)
636:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1034:instantLocal - newZone.getOffsetFromLocal(instantLocal) |==> instantLocal * newZone.getOffsetFromLocal(instantLocal)
637:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1034:instantLocal - newZone.getOffsetFromLocal(instantLocal) |==> instantLocal + newZone.getOffsetFromLocal(instantLocal)
638:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1034:instantLocal - newZone.getOffsetFromLocal(instantLocal) |==> instantLocal / newZone.getOffsetFromLocal(instantLocal)
639:COR:isFixed():TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1144:isFixed() |==> false
640:COR:isFixed():FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1144:isFixed() |==> true
641:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1145:false |==> true
642:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1148:localDateTime.toDateTime(this) |==> <NO-OP>
643:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1149:false |==> true
644:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1151:true |==> false
645:LVR:POS:0:org.joda.time.DateTimeZone@hashCode():1209:57 |==> 0
646:LVR:POS:NEG:org.joda.time.DateTimeZone@hashCode():1209:57 |==> -57
647:AOR:+(int,int):%(int,int):org.joda.time.DateTimeZone@hashCode():1209:57 + getID().hashCode() |==> 57 % getID().hashCode()
648:AOR:+(int,int):*(int,int):org.joda.time.DateTimeZone@hashCode():1209:57 + getID().hashCode() |==> 57 * getID().hashCode()
649:AOR:+(int,int):-(int,int):org.joda.time.DateTimeZone@hashCode():1209:57 + getID().hashCode() |==> 57 - getID().hashCode()
650:AOR:+(int,int):/(int,int):org.joda.time.DateTimeZone@hashCode():1209:57 + getID().hashCode() |==> 57 / getID().hashCode()
651:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@<init>(java.lang.String):1244:iID = id |==> <NO-OP>
652:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone$Stub@writeObject(java.io.ObjectOutputStream):1248:out.writeUTF(iID) |==> <NO-OP>
653:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@readObject(java.io.ObjectInputStream):1252:iID = in.readUTF() |==> <NO-OP>