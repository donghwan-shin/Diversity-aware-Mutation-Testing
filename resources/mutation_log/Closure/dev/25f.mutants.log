1:COR:isUnflowable(var):TRUE:com.google.javascript.jscomp.TypeInference@<init>(com.google.javascript.jscomp.AbstractCompiler,com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>,com.google.javascript.jscomp.type.ReverseAbstractInterpreter,com.google.javascript.jscomp.Scope,java.util.Map<java.lang.String,com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec>):102:isUnflowable(var) |==> false
2:COR:isUnflowable(var):FALSE:com.google.javascript.jscomp.TypeInference@<init>(com.google.javascript.jscomp.AbstractCompiler,com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>,com.google.javascript.jscomp.type.ReverseAbstractInterpreter,com.google.javascript.jscomp.Scope,java.util.Map<java.lang.String,com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec>):102:isUnflowable(var) |==> true
3:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@<init>(com.google.javascript.jscomp.AbstractCompiler,com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node>,com.google.javascript.jscomp.type.ReverseAbstractInterpreter,com.google.javascript.jscomp.Scope,java.util.Map<java.lang.String,com.google.javascript.jscomp.CodingConvention.AssertionFunctionSpec>):106:this.functionScope.inferSlotType(var.getName(), getNativeType(VOID_TYPE)) |==> <NO-OP>
4:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@flowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):128:input == bottomScope |==> input != bottomScope
5:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@flowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):128:input == bottomScope |==> false
6:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@flowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):128:input == bottomScope |==> true
7:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@flowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):133:output = traverse(n, output) |==> <NO-OP>
8:COR:NodeUtil.isForIn(source):TRUE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):158:NodeUtil.isForIn(source) |==> false
9:COR:NodeUtil.isForIn(source):FALSE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):158:NodeUtil.isForIn(source) |==> true
10:COR:item.isVar():TRUE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):165:item.isVar() |==> false
11:COR:item.isVar():FALSE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):165:item.isVar() |==> true
12:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):166:item = item.getFirstChild() |==> <NO-OP>
13:COR:item.isName():TRUE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):168:item.isName() |==> false
14:COR:item.isName():FALSE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):168:item.isName() |==> true
15:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):171:objType == null |==> objType != null
16:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):171:objType == null |==> false
17:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):171:objType == null |==> true
18:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null |==> objIndexType == null
19:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null |==> false
20:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null |==> true
21:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null && !objIndexType.isUnknownType() |==> objIndexType != null != !objIndexType.isUnknownType()
22:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null && !objIndexType.isUnknownType() |==> objIndexType != null == !objIndexType.isUnknownType()
23:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null && !objIndexType.isUnknownType() |==> false
24:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null && !objIndexType.isUnknownType() |==> objIndexType != null
25:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null && !objIndexType.isUnknownType() |==> !objIndexType.isUnknownType()
26:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null && !objIndexType.isUnknownType() |==> true
27:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):173:objIndexType != null && !objIndexType.isUnknownType() |==> objIndexType != null || !objIndexType.isUnknownType()
28:COR:narrowedKeyType.isEmptyType():TRUE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):176:narrowedKeyType.isEmptyType() |==> false
29:COR:narrowedKeyType.isEmptyType():FALSE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):176:narrowedKeyType.isEmptyType() |==> true
30:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):177:iterKeyType = narrowedKeyType |==> <NO-OP>
31:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):180:redeclareSimpleVar(informed, item, iterKeyType) |==> <NO-OP>
32:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):182:newScope = informed |==> <NO-OP>
33:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):189:condition == null |==> condition != null
34:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):189:condition == null |==> false
35:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):189:condition == null |==> true
36:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):190:condition = NodeUtil.getConditionExpression(source) |==> <NO-OP>
37:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null |==> condition != null
38:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null |==> false
39:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null |==> true
40:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null && source.isCase() |==> condition == null != source.isCase()
41:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null && source.isCase() |==> condition == null == source.isCase()
42:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null && source.isCase() |==> false
43:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null && source.isCase() |==> condition == null
44:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null && source.isCase() |==> source.isCase()
45:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null && source.isCase() |==> true
46:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):191:condition == null && source.isCase() |==> condition == null || source.isCase()
47:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):192:condition = source |==> <NO-OP>
48:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):196:conditionFlowScope == null |==> conditionFlowScope != null
49:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):196:conditionFlowScope == null |==> false
50:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):196:conditionFlowScope == null |==> true
51:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):197:conditionFlowScope = traverse(condition.getFirstChild(), output.createChildFlowScope()) |==> <NO-OP>
52:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):203:condition != null |==> condition == null
53:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):203:condition != null |==> false
54:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):203:condition != null |==> true
55:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):204:condition.isAnd() || condition.isOr() |==> condition.isAnd() != condition.isOr()
56:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):204:condition.isAnd() || condition.isOr() |==> condition.isAnd() && condition.isOr()
57:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):204:condition.isAnd() || condition.isOr() |==> condition.isAnd() == condition.isOr()
58:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):204:condition.isAnd() || condition.isOr() |==> false
59:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):204:condition.isAnd() || condition.isOr() |==> condition.isAnd()
60:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):205:condition.isAnd() || condition.isOr() |==> condition.isOr()
61:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):204:condition.isAnd() || condition.isOr() |==> true
62:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):220:conditionOutcomes == null |==> conditionOutcomes != null
63:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):220:conditionOutcomes == null |==> false
64:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):220:conditionOutcomes == null |==> true
65:COR:condition.isAnd():TRUE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):221:condition.isAnd() |==> false
66:COR:condition.isAnd():FALSE:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):221:condition.isAnd() |==> true
67:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):221:conditionOutcomes = condition.isAnd() ? traverseAnd(condition, output.createChildFlowScope()) : traverseOr(condition, output.createChildFlowScope()) |==> <NO-OP>
68:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):229:branch == Branch.ON_TRUE |==> branch != Branch.ON_TRUE
69:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):229:branch == Branch.ON_TRUE |==> false
70:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):229:branch == Branch.ON_TRUE |==> true
71:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):230:branch == Branch.ON_TRUE |==> branch != Branch.ON_TRUE
72:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):230:branch == Branch.ON_TRUE |==> false
73:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):230:branch == Branch.ON_TRUE |==> true
74:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):225:newScope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(condition, conditionOutcomes.getOutcomeFlowScope(condition.getType(), branch == Branch.ON_TRUE), branch == Branch.ON_TRUE) |==> <NO-OP>
75:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):234:conditionFlowScope == null |==> conditionFlowScope != null
76:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):234:conditionFlowScope == null |==> false
77:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):234:conditionFlowScope == null |==> true
78:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):235:conditionFlowScope = traverse(condition, output.createChildFlowScope()) |==> <NO-OP>
79:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):240:branch == Branch.ON_TRUE |==> branch != Branch.ON_TRUE
80:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):240:branch == Branch.ON_TRUE |==> false
81:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):240:branch == Branch.ON_TRUE |==> true
82:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):238:newScope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(condition, conditionFlowScope, branch == Branch.ON_TRUE) |==> <NO-OP>
83:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@branchedFlowThrough(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):246:result.add(newScope.optimize()) |==> <NO-OP>
84:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):254:scope = traverseAssign(n, scope) |==> <NO-OP>
85:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):258:scope = traverseName(n, scope) |==> <NO-OP>
86:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):262:scope = traverseGetProp(n, scope) |==> <NO-OP>
87:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):266:scope = traverseAnd(n, scope).getJoinedFlowScope().createChildFlowScope() |==> <NO-OP>
88:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):271:scope = traverseOr(n, scope).getJoinedFlowScope().createChildFlowScope() |==> <NO-OP>
89:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):276:scope = traverseHook(n, scope) |==> <NO-OP>
90:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):280:scope = traverseObjectLiteral(n, scope) |==> <NO-OP>
91:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):284:scope = traverseCall(n, scope) |==> <NO-OP>
92:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):288:scope = traverseNew(n, scope) |==> <NO-OP>
93:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):293:scope = traverseAdd(n, scope) |==> <NO-OP>
94:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):298:scope = traverse(n.getFirstChild(), scope) |==> <NO-OP>
95:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):299:n.setJSType(getNativeType(NUMBER_TYPE)) |==> <NO-OP>
96:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):303:scope = traverseArrayLiteral(n, scope) |==> <NO-OP>
97:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):307:n.setJSType(scope.getTypeOfThis()) |==> <NO-OP>
98:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):333:scope = traverseChildren(n, scope) |==> <NO-OP>
99:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):334:n.setJSType(getNativeType(NUMBER_TYPE)) |==> <NO-OP>
100:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):338:scope = traverse(n.getFirstChild(), scope) |==> <NO-OP>
101:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):339:n.setJSType(getJSType(n.getFirstChild())) |==> <NO-OP>
102:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):343:scope = traverseChildren(n, scope) |==> <NO-OP>
103:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):344:n.setJSType(getJSType(n.getLastChild())) |==> <NO-OP>
104:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):348:scope = traverseChildren(n, scope) |==> <NO-OP>
105:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):349:n.setJSType(getNativeType(STRING_TYPE)) |==> <NO-OP>
106:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):364:scope = traverseChildren(n, scope) |==> <NO-OP>
107:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):365:n.setJSType(getNativeType(BOOLEAN_TYPE)) |==> <NO-OP>
108:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):369:scope = traverseGetElem(n, scope) |==> <NO-OP>
109:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):373:scope = traverseChildren(n, scope) |==> <NO-OP>
110:COR:n.getFirstChild().isGetProp():TRUE:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):374:n.getFirstChild().isGetProp() |==> false
111:COR:n.getFirstChild().isGetProp():FALSE:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):374:n.getFirstChild().isGetProp() |==> true
112:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):375:ensurePropertyDeclared(n.getFirstChild()) |==> <NO-OP>
113:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):380:scope = traverse(n.getFirstChild(), scope) |==> <NO-OP>
114:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):384:scope = traverseReturn(n, scope) |==> <NO-OP>
115:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):389:scope = traverseChildren(n, scope) |==> <NO-OP>
116:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):393:scope = traverseCatch(n, scope) |==> <NO-OP>
117:COR:n.isFunction():TRUE:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):396:n.isFunction() |==> false
118:COR:n.isFunction():FALSE:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):396:n.isFunction() |==> true
119:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null |==> info == null
120:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null |==> false
121:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null |==> true
122:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null && info.hasType() |==> info != null != info.hasType()
123:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null && info.hasType() |==> info != null == info.hasType()
124:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null && info.hasType() |==> false
125:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null && info.hasType() |==> info != null
126:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null && info.hasType() |==> info.hasType()
127:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null && info.hasType() |==> true
128:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):398:info != null && info.hasType() |==> info != null || info.hasType()
129:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):404:n.isQualifiedName() && n.getParent().isExprResult() |==> n.isQualifiedName() != n.getParent().isExprResult()
130:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):404:n.isQualifiedName() && n.getParent().isExprResult() |==> n.isQualifiedName() == n.getParent().isExprResult()
131:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):404:n.isQualifiedName() && n.getParent().isExprResult() |==> false
132:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):404:n.isQualifiedName() && n.getParent().isExprResult() |==> n.isQualifiedName()
133:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):405:n.isQualifiedName() && n.getParent().isExprResult() |==> n.getParent().isExprResult()
134:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):404:n.isQualifiedName() && n.getParent().isExprResult() |==> true
135:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):404:n.isQualifiedName() && n.getParent().isExprResult() |==> n.isQualifiedName() || n.getParent().isExprResult()
136:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):406:updateScopeForTypeChange(scope, n, n.getJSType(), castType) |==> <NO-OP>
137:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverse(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):409:n.setJSType(castType) |==> <NO-OP>
138:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):420:scope = traverseChildren(n, scope) |==> <NO-OP>
139:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):423:retValue != null |==> retValue == null
140:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):423:retValue != null |==> false
141:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):423:retValue != null |==> true
142:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):425:type != null |==> type == null
143:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):425:type != null |==> false
144:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):425:type != null |==> true
145:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):427:fnType != null |==> fnType == null
146:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):427:fnType != null |==> false
147:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):427:fnType != null |==> true
148:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseReturn(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):428:inferPropertyTypesToMatchConstraint(retValue.getJSType(), fnType.getReturnType()) |==> <NO-OP>
149:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseCatch(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):443:name.setJSType(type) |==> <NO-OP>
150:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseCatch(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):444:redeclareSimpleVar(scope, name, type) |==> <NO-OP>
151:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAssign(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):451:scope = traverseChildren(n, scope) |==> <NO-OP>
152:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAssign(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):455:n.setJSType(rightType) |==> <NO-OP>
153:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAssign(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):457:updateScopeForTypeChange(scope, left, leftType, rightType) |==> <NO-OP>
154:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):467:Preconditions.checkNotNull(resultType) |==> <NO-OP>
155:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:var == null |==> var != null
156:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:var == null |==> false
157:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:var == null |==> true
158:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null |==> !isVarDeclaration != (var == null)
159:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null |==> !isVarDeclaration && var == null
160:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null |==> !isVarDeclaration == (var == null)
161:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null |==> false
162:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null |==> !isVarDeclaration
163:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null |==> var == null
164:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null |==> true
165:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null || var.isTypeInferred() |==> (!isVarDeclaration || var == null) != var.isTypeInferred()
166:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null || var.isTypeInferred() |==> (!isVarDeclaration || var == null) && var.isTypeInferred()
167:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null || var.isTypeInferred() |==> (!isVarDeclaration || var == null) == var.isTypeInferred()
168:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null || var.isTypeInferred() |==> false
169:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null || var.isTypeInferred() |==> !isVarDeclaration || var == null
170:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null || var.isTypeInferred() |==> var.isTypeInferred()
171:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):484:!isVarDeclaration || var == null || var.isTypeInferred() |==> true
172:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):485:redeclareSimpleVar(scope, left, resultType) |==> <NO-OP>
173:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:leftType == null |==> leftType != null
174:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:leftType == null |==> false
175:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:leftType == null |==> true
176:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:isVarDeclaration || leftType == null |==> isVarDeclaration != (leftType == null)
177:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:isVarDeclaration || leftType == null |==> isVarDeclaration && leftType == null
178:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:isVarDeclaration || leftType == null |==> isVarDeclaration == (leftType == null)
179:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:isVarDeclaration || leftType == null |==> false
180:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:isVarDeclaration || leftType == null |==> isVarDeclaration
181:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:isVarDeclaration || leftType == null |==> leftType == null
182:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:isVarDeclaration || leftType == null |==> true
183:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):487:left.setJSType(isVarDeclaration || leftType == null ? resultType : null) |==> <NO-OP>
184:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null |==> var == null
185:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null |==> false
186:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null |==> true
187:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null && var.isTypeInferred() |==> var != null != var.isTypeInferred()
188:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null && var.isTypeInferred() |==> var != null == var.isTypeInferred()
189:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null && var.isTypeInferred() |==> false
190:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null && var.isTypeInferred() |==> var != null
191:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null && var.isTypeInferred() |==> var.isTypeInferred()
192:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null && var.isTypeInferred() |==> true
193:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):490:var != null && var.isTypeInferred() |==> var != null || var.isTypeInferred()
194:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):492:oldType == null |==> oldType != null
195:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):492:oldType == null |==> false
196:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):492:oldType == null |==> true
197:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):492:var.setType(oldType == null ? resultType : oldType.getLeastSupertype(resultType)) |==> <NO-OP>
198:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):498:qualifiedName != null |==> qualifiedName == null
199:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):498:qualifiedName != null |==> false
200:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):498:qualifiedName != null |==> true
201:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):500:leftType == null |==> leftType != null
202:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):500:leftType == null |==> false
203:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):500:leftType == null |==> true
204:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):499:scope.inferQualifiedSlot(left, qualifiedName, leftType == null ? getNativeType(UNKNOWN_TYPE) : leftType, resultType) |==> <NO-OP>
205:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):504:left.setJSType(resultType) |==> <NO-OP>
206:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateScopeForTypeChange(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):505:ensurePropertyDefined(left, resultType) |==> <NO-OP>
207:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):518:objectType == null |==> objectType != null
208:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):518:objectType == null |==> false
209:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):518:objectType == null |==> true
210:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):519:registry.registerPropertyOnType(propName, nodeType) |==> <NO-OP>
211:COR:ensurePropertyDeclaredHelper(getprop, objectType):TRUE:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):521:ensurePropertyDeclaredHelper(getprop, objectType) |==> false
212:COR:ensurePropertyDeclaredHelper(getprop, objectType):FALSE:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):521:ensurePropertyDeclaredHelper(getprop, objectType) |==> true
213:COR:objectType.isPropertyTypeDeclared(propName):TRUE:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):525:objectType.isPropertyTypeDeclared(propName) |==> false
214:COR:objectType.isPropertyTypeDeclared(propName):FALSE:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):525:objectType.isPropertyTypeDeclared(propName) |==> true
215:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):538:objectType.hasProperty(propName) || !objectType.isInstanceType() |==> objectType.hasProperty(propName) != !objectType.isInstanceType()
216:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):538:objectType.hasProperty(propName) || !objectType.isInstanceType() |==> objectType.hasProperty(propName) && !objectType.isInstanceType()
217:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):538:objectType.hasProperty(propName) || !objectType.isInstanceType() |==> objectType.hasProperty(propName) == !objectType.isInstanceType()
218:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):538:objectType.hasProperty(propName) || !objectType.isInstanceType() |==> false
219:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):538:objectType.hasProperty(propName) || !objectType.isInstanceType() |==> objectType.hasProperty(propName)
220:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):539:objectType.hasProperty(propName) || !objectType.isInstanceType() |==> !objectType.isInstanceType()
221:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):538:objectType.hasProperty(propName) || !objectType.isInstanceType() |==> true
222:COR:"prototype".equals(propName):TRUE:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):540:"prototype".equals(propName) |==> false
223:COR:"prototype".equals(propName):FALSE:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):540:"prototype".equals(propName) |==> true
224:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):541:objectType.defineDeclaredProperty(propName, rightType, getprop) |==> <NO-OP>
225:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):544:objectType.defineInferredProperty(propName, rightType, getprop) |==> <NO-OP>
226:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):548:getprop.getFirstChild().isThis() && getJSType(syntacticScope.getRootNode()).isConstructor() |==> getprop.getFirstChild().isThis() != getJSType(syntacticScope.getRootNode()).isConstructor()
227:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):548:getprop.getFirstChild().isThis() && getJSType(syntacticScope.getRootNode()).isConstructor() |==> getprop.getFirstChild().isThis() == getJSType(syntacticScope.getRootNode()).isConstructor()
228:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):548:getprop.getFirstChild().isThis() && getJSType(syntacticScope.getRootNode()).isConstructor() |==> false
229:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):548:getprop.getFirstChild().isThis() && getJSType(syntacticScope.getRootNode()).isConstructor() |==> getprop.getFirstChild().isThis()
230:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):549:getprop.getFirstChild().isThis() && getJSType(syntacticScope.getRootNode()).isConstructor() |==> getJSType(syntacticScope.getRootNode()).isConstructor()
231:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):548:getprop.getFirstChild().isThis() && getJSType(syntacticScope.getRootNode()).isConstructor() |==> true
232:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):548:getprop.getFirstChild().isThis() && getJSType(syntacticScope.getRootNode()).isConstructor() |==> getprop.getFirstChild().isThis() || getJSType(syntacticScope.getRootNode()).isConstructor()
233:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):550:objectType.defineInferredProperty(propName, rightType, getprop) |==> <NO-OP>
234:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@ensurePropertyDefined(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):553:registry.registerPropertyOnType(propName, objectType) |==> <NO-OP>
235:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclared(com.google.javascript.rhino.Node):570:ownerType != null |==> ownerType == null
236:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclared(com.google.javascript.rhino.Node):570:ownerType != null |==> false
237:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclared(com.google.javascript.rhino.Node):570:ownerType != null |==> true
238:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@ensurePropertyDeclared(com.google.javascript.rhino.Node):571:ensurePropertyDeclaredHelper(getprop, ownerType) |==> <NO-OP>
239:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):583:qName != null |==> qName == null
240:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):583:qName != null |==> false
241:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):583:qName != null |==> true
242:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null |==> var == null
243:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null |==> false
244:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null |==> true
245:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null && !var.isTypeInferred() |==> var != null != !var.isTypeInferred()
246:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null && !var.isTypeInferred() |==> var != null == !var.isTypeInferred()
247:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null && !var.isTypeInferred() |==> false
248:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null && !var.isTypeInferred() |==> var != null
249:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null && !var.isTypeInferred() |==> !var.isTypeInferred()
250:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null && !var.isTypeInferred() |==> true
251:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):585:var != null && !var.isTypeInferred() |==> var != null || !var.isTypeInferred()
252:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:var.isExtern() && !objectType.isNativeObjectType() |==> var.isExtern() != !objectType.isNativeObjectType()
253:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:var.isExtern() && !objectType.isNativeObjectType() |==> var.isExtern() == !objectType.isNativeObjectType()
254:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:var.isExtern() && !objectType.isNativeObjectType() |==> false
255:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:var.isExtern() && !objectType.isNativeObjectType() |==> var.isExtern()
256:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:var.isExtern() && !objectType.isNativeObjectType() |==> !objectType.isNativeObjectType()
257:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:var.isExtern() && !objectType.isNativeObjectType() |==> true
258:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:var.isExtern() && !objectType.isNativeObjectType() |==> var.isExtern() || !objectType.isNativeObjectType()
259:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):590:!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()) |==> !objectType.isInstanceType() != (var.isExtern() && !objectType.isNativeObjectType())
260:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):590:!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()) |==> !objectType.isInstanceType() && (var.isExtern() && !objectType.isNativeObjectType())
261:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):590:!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()) |==> !objectType.isInstanceType() == (var.isExtern() && !objectType.isNativeObjectType())
262:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):590:!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()) |==> false
263:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):590:!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()) |==> !objectType.isInstanceType()
264:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):591:!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()) |==> (var.isExtern() && !objectType.isNativeObjectType())
265:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):590:!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()) |==> true
266:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):589:!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())) |==> !objectType.hasOwnProperty(propName) != (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))
267:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):589:!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())) |==> !objectType.hasOwnProperty(propName) == (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))
268:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):589:!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())) |==> false
269:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):589:!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())) |==> !objectType.hasOwnProperty(propName)
270:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):590:!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())) |==> (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))
271:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):589:!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())) |==> true
272:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):589:!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())) |==> !objectType.hasOwnProperty(propName) || (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))
273:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):587:propName.equals("prototype") || (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))) |==> propName.equals("prototype") != (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())))
274:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):587:propName.equals("prototype") || (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))) |==> propName.equals("prototype") && (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())))
275:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):587:propName.equals("prototype") || (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))) |==> propName.equals("prototype") == (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())))
276:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):587:propName.equals("prototype") || (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))) |==> false
277:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):587:propName.equals("prototype") || (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))) |==> propName.equals("prototype")
278:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):589:propName.equals("prototype") || (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))) |==> (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType())))
279:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):587:propName.equals("prototype") || (!objectType.hasOwnProperty(propName) && (!objectType.isInstanceType() || (var.isExtern() && !objectType.isNativeObjectType()))) |==> true
280:LVR:FALSE:TRUE:com.google.javascript.jscomp.TypeInference@ensurePropertyDeclaredHelper(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.ObjectType):597:false |==> true
281:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):604:value != null |==> value == null
282:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):604:value != null |==> false
283:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):604:value != null |==> true
284:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):605:scope = traverse(value, scope) |==> <NO-OP>
285:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):606:updateScopeForTypeChange(scope, n, n.getJSType(), getJSType(value)) |==> <NO-OP>
286:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):611:var != null |==> var == null
287:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):611:var != null |==> false
288:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):611:var != null |==> true
289:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):618:isInferred && isUnflowable(syntacticScope.getVar(varName)) |==> isInferred != isUnflowable(syntacticScope.getVar(varName))
290:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):618:isInferred && isUnflowable(syntacticScope.getVar(varName)) |==> isInferred == isUnflowable(syntacticScope.getVar(varName))
291:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):618:isInferred && isUnflowable(syntacticScope.getVar(varName)) |==> false
292:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):618:isInferred && isUnflowable(syntacticScope.getVar(varName)) |==> isInferred
293:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):619:isInferred && isUnflowable(syntacticScope.getVar(varName)) |==> isUnflowable(syntacticScope.getVar(varName))
294:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):618:isInferred && isUnflowable(syntacticScope.getVar(varName)) |==> true
295:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):618:isInferred && isUnflowable(syntacticScope.getVar(varName)) |==> isInferred || isUnflowable(syntacticScope.getVar(varName))
296:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):626:syntacticScope.getParent() != null |==> syntacticScope.getParent() == null
297:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):626:syntacticScope.getParent() != null |==> false
298:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):626:syntacticScope.getParent() != null |==> true
299:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null |==> isInferred != (syntacticScope.getParent() != null)
300:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null |==> isInferred == (syntacticScope.getParent() != null)
301:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null |==> false
302:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null |==> isInferred
303:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):626:isInferred && syntacticScope.getParent() != null |==> syntacticScope.getParent() != null
304:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null |==> true
305:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null |==> isInferred || syntacticScope.getParent() != null
306:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):627:var == syntacticScope.getParent().getSlot(varName) |==> var != syntacticScope.getParent().getSlot(varName)
307:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):627:var == syntacticScope.getParent().getSlot(varName) |==> false
308:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):627:var == syntacticScope.getParent().getSlot(varName) |==> true
309:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null && var == syntacticScope.getParent().getSlot(varName) |==> (isInferred && syntacticScope.getParent() != null) != (var == syntacticScope.getParent().getSlot(varName))
310:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null && var == syntacticScope.getParent().getSlot(varName) |==> (isInferred && syntacticScope.getParent() != null) == (var == syntacticScope.getParent().getSlot(varName))
311:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):626:isInferred && syntacticScope.getParent() != null && var == syntacticScope.getParent().getSlot(varName) |==> false
312:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null && var == syntacticScope.getParent().getSlot(varName) |==> isInferred && syntacticScope.getParent() != null
313:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):627:isInferred && syntacticScope.getParent() != null && var == syntacticScope.getParent().getSlot(varName) |==> var == syntacticScope.getParent().getSlot(varName)
314:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):626:isInferred && syntacticScope.getParent() != null && var == syntacticScope.getParent().getSlot(varName) |==> true
315:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):625:isInferred && syntacticScope.getParent() != null && var == syntacticScope.getParent().getSlot(varName) |==> isInferred && syntacticScope.getParent() != null || var == syntacticScope.getParent().getSlot(varName)
316:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):629:!unflowable && !nonLocalInferredSlot |==> !unflowable != !nonLocalInferredSlot
317:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):629:!unflowable && !nonLocalInferredSlot |==> !unflowable == !nonLocalInferredSlot
318:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):629:!unflowable && !nonLocalInferredSlot |==> false
319:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):629:!unflowable && !nonLocalInferredSlot |==> !unflowable
320:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):629:!unflowable && !nonLocalInferredSlot |==> !nonLocalInferredSlot
321:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):629:!unflowable && !nonLocalInferredSlot |==> true
322:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):629:!unflowable && !nonLocalInferredSlot |==> !unflowable || !nonLocalInferredSlot
323:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):630:type = var.getType() |==> <NO-OP>
324:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):631:type == null |==> type != null
325:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):631:type == null |==> false
326:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):631:type == null |==> true
327:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):632:type = getNativeType(UNKNOWN_TYPE) |==> <NO-OP>
328:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseName(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):637:n.setJSType(type) |==> <NO-OP>
329:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseArrayLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):643:scope = traverseChildren(n, scope) |==> <NO-OP>
330:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseArrayLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):644:n.setJSType(getNativeType(ARRAY_TYPE)) |==> <NO-OP>
331:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):650:Preconditions.checkNotNull(type) |==> <NO-OP>
332:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):652:name != null |==> name == null
333:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):652:name != null |==> false
334:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):652:name != null |==> true
335:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):653:scope = traverse(name.getFirstChild(), scope) |==> <NO-OP>
336:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):663:objectType == null |==> objectType != null
337:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):663:objectType == null |==> false
338:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):663:objectType == null |==> true
339:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null |==> n.getJSDocInfo() == null
340:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null |==> false
341:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null |==> true
342:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):668:n.getJSDocInfo().getLendsName() != null |==> n.getJSDocInfo().getLendsName() == null
343:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):668:n.getJSDocInfo().getLendsName() != null |==> false
344:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):668:n.getJSDocInfo().getLendsName() != null |==> true
345:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null && n.getJSDocInfo().getLendsName() != null |==> n.getJSDocInfo() != null != (n.getJSDocInfo().getLendsName() != null)
346:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null && n.getJSDocInfo().getLendsName() != null |==> n.getJSDocInfo() != null == (n.getJSDocInfo().getLendsName() != null)
347:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null && n.getJSDocInfo().getLendsName() != null |==> false
348:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null && n.getJSDocInfo().getLendsName() != null |==> n.getJSDocInfo() != null
349:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):668:n.getJSDocInfo() != null && n.getJSDocInfo().getLendsName() != null |==> n.getJSDocInfo().getLendsName() != null
350:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null && n.getJSDocInfo().getLendsName() != null |==> true
351:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):667:n.getJSDocInfo() != null && n.getJSDocInfo().getLendsName() != null |==> n.getJSDocInfo() != null || n.getJSDocInfo().getLendsName() != null
352:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):669:objectType.hasReferenceName() && !hasLendsName |==> objectType.hasReferenceName() != !hasLendsName
353:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):669:objectType.hasReferenceName() && !hasLendsName |==> objectType.hasReferenceName() == !hasLendsName
354:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):669:objectType.hasReferenceName() && !hasLendsName |==> false
355:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):669:objectType.hasReferenceName() && !hasLendsName |==> objectType.hasReferenceName()
356:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):669:objectType.hasReferenceName() && !hasLendsName |==> !hasLendsName
357:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):669:objectType.hasReferenceName() && !hasLendsName |==> true
358:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):669:objectType.hasReferenceName() && !hasLendsName |==> objectType.hasReferenceName() || !hasLendsName
359:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):675:name != null |==> name == null
360:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):675:name != null |==> false
361:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):675:name != null |==> true
362:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):679:memberName != null |==> memberName == null
363:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):679:memberName != null |==> false
364:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):679:memberName != null |==> true
365:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):683:valueType == null |==> valueType != null
366:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):683:valueType == null |==> false
367:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):683:valueType == null |==> true
368:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):684:valueType = getNativeType(UNKNOWN_TYPE) |==> <NO-OP>
369:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):686:objectType.defineInferredProperty(memberName, valueType, name) |==> <NO-OP>
370:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null |==> qObjName == null
371:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null |==> false
372:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null |==> true
373:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null && name.isStringKey() |==> qObjName != null != name.isStringKey()
374:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null && name.isStringKey() |==> qObjName != null == name.isStringKey()
375:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null && name.isStringKey() |==> false
376:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null && name.isStringKey() |==> qObjName != null
377:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null && name.isStringKey() |==> name.isStringKey()
378:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null && name.isStringKey() |==> true
379:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):689:qObjName != null && name.isStringKey() |==> qObjName != null || name.isStringKey()
380:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):692:var == null |==> var != null
381:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):692:var == null |==> false
382:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):692:var == null |==> true
383:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null |==> var == null
384:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null |==> false
385:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null |==> true
386:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null && var.isTypeInferred() |==> var != null != var.isTypeInferred()
387:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null && var.isTypeInferred() |==> var != null == var.isTypeInferred()
388:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null && var.isTypeInferred() |==> false
389:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null && var.isTypeInferred() |==> var != null
390:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null && var.isTypeInferred() |==> var.isTypeInferred()
391:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null && var.isTypeInferred() |==> true
392:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):693:var != null && var.isTypeInferred() |==> var != null || var.isTypeInferred()
393:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):694:oldType == null |==> oldType != null
394:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):694:oldType == null |==> false
395:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):694:oldType == null |==> true
396:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):694:var.setType(oldType == null ? valueType : oldType.getLeastSupertype(oldType)) |==> <NO-OP>
397:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):699:oldType == null |==> oldType != null
398:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):699:oldType == null |==> false
399:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):699:oldType == null |==> true
400:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):698:scope.inferQualifiedSlot(name, qKeyName, oldType == null ? getNativeType(UNKNOWN_TYPE) : oldType, valueType) |==> <NO-OP>
401:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseObjectLiteral(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):703:n.setJSType(getNativeType(UNKNOWN_TYPE)) |==> <NO-OP>
402:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):712:scope = traverseChildren(n, scope) |==> <NO-OP>
403:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null |==> leftType == null
404:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null |==> false
405:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null |==> true
406:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:rightType != null |==> rightType == null
407:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:rightType != null |==> false
408:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:rightType != null |==> true
409:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null && rightType != null |==> leftType != null != (rightType != null)
410:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null && rightType != null |==> leftType != null == (rightType != null)
411:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null && rightType != null |==> false
412:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null && rightType != null |==> leftType != null
413:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null && rightType != null |==> rightType != null
414:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null && rightType != null |==> true
415:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):718:leftType != null && rightType != null |==> leftType != null || rightType != null
416:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):721:leftIsUnknown && rightIsUnknown |==> leftIsUnknown != rightIsUnknown
417:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):721:leftIsUnknown && rightIsUnknown |==> leftIsUnknown == rightIsUnknown
418:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):721:leftIsUnknown && rightIsUnknown |==> false
419:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):721:leftIsUnknown && rightIsUnknown |==> leftIsUnknown
420:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):721:leftIsUnknown && rightIsUnknown |==> rightIsUnknown
421:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):721:leftIsUnknown && rightIsUnknown |==> true
422:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):721:leftIsUnknown && rightIsUnknown |==> leftIsUnknown || rightIsUnknown
423:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):722:type = getNativeType(UNKNOWN_TYPE) |==> <NO-OP>
424:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:!leftIsUnknown && leftType.isString() |==> !leftIsUnknown != leftType.isString()
425:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:!leftIsUnknown && leftType.isString() |==> !leftIsUnknown == leftType.isString()
426:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:!leftIsUnknown && leftType.isString() |==> false
427:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:!leftIsUnknown && leftType.isString() |==> !leftIsUnknown
428:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:!leftIsUnknown && leftType.isString() |==> leftType.isString()
429:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:!leftIsUnknown && leftType.isString() |==> true
430:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:!leftIsUnknown && leftType.isString() |==> !leftIsUnknown || leftType.isString()
431:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:!rightIsUnknown && rightType.isString() |==> !rightIsUnknown != rightType.isString()
432:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:!rightIsUnknown && rightType.isString() |==> !rightIsUnknown == rightType.isString()
433:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:!rightIsUnknown && rightType.isString() |==> false
434:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:!rightIsUnknown && rightType.isString() |==> !rightIsUnknown
435:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:!rightIsUnknown && rightType.isString() |==> rightType.isString()
436:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:!rightIsUnknown && rightType.isString() |==> true
437:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:!rightIsUnknown && rightType.isString() |==> !rightIsUnknown || rightType.isString()
438:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:(!leftIsUnknown && leftType.isString()) || (!rightIsUnknown && rightType.isString()) |==> (!leftIsUnknown && leftType.isString()) != (!rightIsUnknown && rightType.isString())
439:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:(!leftIsUnknown && leftType.isString()) || (!rightIsUnknown && rightType.isString()) |==> (!leftIsUnknown && leftType.isString()) && (!rightIsUnknown && rightType.isString())
440:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:(!leftIsUnknown && leftType.isString()) || (!rightIsUnknown && rightType.isString()) |==> (!leftIsUnknown && leftType.isString()) == (!rightIsUnknown && rightType.isString())
441:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:(!leftIsUnknown && leftType.isString()) || (!rightIsUnknown && rightType.isString()) |==> false
442:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:(!leftIsUnknown && leftType.isString()) || (!rightIsUnknown && rightType.isString()) |==> (!leftIsUnknown && leftType.isString())
443:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):724:(!leftIsUnknown && leftType.isString()) || (!rightIsUnknown && rightType.isString()) |==> (!rightIsUnknown && rightType.isString())
444:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):723:(!leftIsUnknown && leftType.isString()) || (!rightIsUnknown && rightType.isString()) |==> true
445:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):725:type = getNativeType(STRING_TYPE) |==> <NO-OP>
446:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):726:leftIsUnknown || rightIsUnknown |==> leftIsUnknown != rightIsUnknown
447:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):726:leftIsUnknown || rightIsUnknown |==> leftIsUnknown && rightIsUnknown
448:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):726:leftIsUnknown || rightIsUnknown |==> leftIsUnknown == rightIsUnknown
449:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):726:leftIsUnknown || rightIsUnknown |==> false
450:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):726:leftIsUnknown || rightIsUnknown |==> leftIsUnknown
451:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):726:leftIsUnknown || rightIsUnknown |==> rightIsUnknown
452:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):726:leftIsUnknown || rightIsUnknown |==> true
453:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):727:type = getNativeType(UNKNOWN_TYPE) |==> <NO-OP>
454:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):728:isAddedAsNumber(leftType) && isAddedAsNumber(rightType) |==> isAddedAsNumber(leftType) != isAddedAsNumber(rightType)
455:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):728:isAddedAsNumber(leftType) && isAddedAsNumber(rightType) |==> isAddedAsNumber(leftType) == isAddedAsNumber(rightType)
456:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):728:isAddedAsNumber(leftType) && isAddedAsNumber(rightType) |==> false
457:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):728:isAddedAsNumber(leftType) && isAddedAsNumber(rightType) |==> isAddedAsNumber(leftType)
458:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):728:isAddedAsNumber(leftType) && isAddedAsNumber(rightType) |==> isAddedAsNumber(rightType)
459:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):728:isAddedAsNumber(leftType) && isAddedAsNumber(rightType) |==> true
460:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):728:isAddedAsNumber(leftType) && isAddedAsNumber(rightType) |==> isAddedAsNumber(leftType) || isAddedAsNumber(rightType)
461:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):729:type = getNativeType(NUMBER_TYPE) |==> <NO-OP>
462:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):731:type = registry.createUnionType(STRING_TYPE, NUMBER_TYPE) |==> <NO-OP>
463:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):734:n.setJSType(type) |==> <NO-OP>
464:COR:n.isAssignAdd():TRUE:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):736:n.isAssignAdd() |==> false
465:COR:n.isAssignAdd():FALSE:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):736:n.isAssignAdd() |==> true
466:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseAdd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):737:updateScopeForTypeChange(scope, left, leftType, type) |==> <NO-OP>
467:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):754:scope = traverse(condition, scope) |==> <NO-OP>
468:LVR:TRUE:FALSE:com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):759:true |==> false
469:LVR:FALSE:TRUE:com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):762:false |==> true
470:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):765:traverse(trueNode, trueScope.createChildFlowScope()) |==> <NO-OP>
471:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):768:traverse(falseNode, falseScope.createChildFlowScope()) |==> <NO-OP>
472:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null |==> trueType == null
473:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null |==> false
474:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null |==> true
475:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:falseType != null |==> falseType == null
476:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:falseType != null |==> false
477:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:falseType != null |==> true
478:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null && falseType != null |==> trueType != null != (falseType != null)
479:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null && falseType != null |==> trueType != null == (falseType != null)
480:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null && falseType != null |==> false
481:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null && falseType != null |==> trueType != null
482:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null && falseType != null |==> falseType != null
483:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null && falseType != null |==> true
484:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):773:trueType != null && falseType != null |==> trueType != null || falseType != null
485:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):774:n.setJSType(trueType.getLeastSupertype(falseType)) |==> <NO-OP>
486:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseHook(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):776:n.setJSType(null) |==> <NO-OP>
487:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):783:scope = traverseChildren(n, scope) |==> <NO-OP>
488:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):787:functionType != null |==> functionType == null
489:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):787:functionType != null |==> false
490:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):787:functionType != null |==> true
491:COR:functionType.isFunctionType():TRUE:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):788:functionType.isFunctionType() |==> false
492:COR:functionType.isFunctionType():FALSE:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):788:functionType.isFunctionType() |==> true
493:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):790:n.setJSType(fnType.getReturnType()) |==> <NO-OP>
494:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):791:backwardsInferenceFromCallSite(n, fnType) |==> <NO-OP>
495:COR:functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE)):TRUE:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):792:functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE)) |==> false
496:COR:functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE)):FALSE:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):792:functionType.equals(getNativeType(CHECKED_UNKNOWN_TYPE)) |==> true
497:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):793:n.setJSType(getNativeType(CHECKED_UNKNOWN_TYPE)) |==> <NO-OP>
498:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseCall(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):797:scope = tightenTypesAfterAssertions(scope, n) |==> <NO-OP>
499:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null |==> assertionFunctionSpec != null
500:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null |==> false
501:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null |==> true
502:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:firstParam == null |==> firstParam != null
503:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:firstParam == null |==> false
504:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:firstParam == null |==> true
505:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null || firstParam == null |==> assertionFunctionSpec == null != (firstParam == null)
506:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null || firstParam == null |==> assertionFunctionSpec == null && firstParam == null
507:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null || firstParam == null |==> assertionFunctionSpec == null == (firstParam == null)
508:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null || firstParam == null |==> false
509:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null || firstParam == null |==> assertionFunctionSpec == null
510:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null || firstParam == null |==> firstParam == null
511:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):807:assertionFunctionSpec == null || firstParam == null |==> true
512:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):811:assertedNode == null |==> assertedNode != null
513:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):811:assertedNode == null |==> false
514:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):811:assertedNode == null |==> true
515:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):819:assertedType == null |==> assertedType != null
516:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):819:assertedType == null |==> false
517:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):819:assertedType == null |==> true
518:LVR:TRUE:FALSE:com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):822:true |==> false
519:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):821:scope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(assertedNode, scope, true) |==> <NO-OP>
520:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null |==> assertedNodeName == null
521:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null |==> false
522:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null |==> true
523:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null && type.differsFrom(narrowed) |==> assertedNodeName != null != type.differsFrom(narrowed)
524:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null && type.differsFrom(narrowed) |==> assertedNodeName != null == type.differsFrom(narrowed)
525:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null && type.differsFrom(narrowed) |==> false
526:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null && type.differsFrom(narrowed) |==> assertedNodeName != null
527:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null && type.differsFrom(narrowed) |==> type.differsFrom(narrowed)
528:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null && type.differsFrom(narrowed) |==> true
529:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):829:assertedNodeName != null && type.differsFrom(narrowed) |==> assertedNodeName != null || type.differsFrom(narrowed)
530:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):830:scope = narrowScope(scope, assertedNode, narrowed) |==> <NO-OP>
531:COR:getJSType(callNode).differsFrom(narrowed):TRUE:com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):834:getJSType(callNode).differsFrom(narrowed) |==> false
532:COR:getJSType(callNode).differsFrom(narrowed):FALSE:com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):834:getJSType(callNode).differsFrom(narrowed) |==> true
533:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@tightenTypesAfterAssertions(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node):835:callNode.setJSType(narrowed) |==> <NO-OP>
534:COR:node.isThis():TRUE:com.google.javascript.jscomp.TypeInference@narrowScope(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):841:node.isThis() |==> false
535:COR:node.isThis():FALSE:com.google.javascript.jscomp.TypeInference@narrowScope(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):841:node.isThis() |==> true
536:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@narrowScope(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):846:scope = scope.createChildFlowScope() |==> <NO-OP>
537:COR:node.isGetProp():TRUE:com.google.javascript.jscomp.TypeInference@narrowScope(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):847:node.isGetProp() |==> false
538:COR:node.isGetProp():FALSE:com.google.javascript.jscomp.TypeInference@narrowScope(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):847:node.isGetProp() |==> true
539:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@narrowScope(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):848:scope.inferQualifiedSlot(node, node.getQualifiedName(), getJSType(node), narrowed) |==> <NO-OP>
540:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@narrowScope(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):851:redeclareSimpleVar(scope, node, narrowed) |==> <NO-OP>
541:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@backwardsInferenceFromCallSite(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):882:updateTypeOfParameters(n, fnType) |==> <NO-OP>
542:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@backwardsInferenceFromCallSite(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):883:updateTypeOfThisOnClosure(n, fnType) |==> <NO-OP>
543:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@backwardsInferenceFromCallSite(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):884:updateBind(n, fnType) |==> <NO-OP>
544:LVR:TRUE:FALSE:com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):893:true |==> false
545:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):894:bind == null |==> bind != null
546:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):894:bind == null |==> false
547:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):894:bind == null |==> true
548:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):900:callTargetFn == null |==> callTargetFn != null
549:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):900:callTargetFn == null |==> false
550:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):900:callTargetFn == null |==> true
551:LVR:POS:0:com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):907:1 |==> 0
552:LVR:POS:NEG:com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):907:1 |==> -1
553:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):907:bind.getBoundParameterCount() + 1 |==> bind.getBoundParameterCount() % 1
554:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):907:bind.getBoundParameterCount() + 1 |==> bind.getBoundParameterCount() * 1
555:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):907:bind.getBoundParameterCount() + 1 |==> bind.getBoundParameterCount() - 1
556:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):907:bind.getBoundParameterCount() + 1 |==> bind.getBoundParameterCount() / 1
557:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateBind(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):904:n.setJSType(callTargetFn.getBindReturnType(bind.getBoundParameterCount() + 1)) |==> <NO-OP>
558:LVR:0:POS:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):915:0 |==> 1
559:LVR:0:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):915:0 |==> -1
560:LVR:POS:0:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:1 |==> 0
561:LVR:POS:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:1 |==> -1
562:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 |==> i % 1
563:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 |==> i * 1
564:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 |==> i - 1
565:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 |==> i / 1
566:ROR:>=(int,int):!=(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 >= childCount |==> i + 1 != childCount
567:ROR:>=(int,int):<(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 >= childCount |==> i + 1 < childCount
568:ROR:>=(int,int):<=(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 >= childCount |==> i + 1 <= childCount
569:ROR:>=(int,int):==(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 >= childCount |==> i + 1 == childCount
570:ROR:>=(int,int):>(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 >= childCount |==> i + 1 > childCount
571:ROR:>=(int,int):FALSE(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 >= childCount |==> false
572:ROR:>=(int,int):TRUE(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):918:i + 1 >= childCount |==> true
573:LVR:POS:0:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):924:1 |==> 0
574:LVR:POS:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):924:1 |==> -1
575:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):924:i + 1 |==> i % 1
576:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):924:i + 1 |==> i * 1
577:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):924:i + 1 |==> i - 1
578:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):924:i + 1 |==> i / 1
579:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):926:inferPropertyTypesToMatchConstraint(iArgumentType, iParameterType) |==> <NO-OP>
580:COR:iParameterType.isFunctionType():TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):928:iParameterType.isFunctionType() |==> false
581:COR:iParameterType.isFunctionType():FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):928:iParameterType.isFunctionType() |==> true
582:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() |==> iArgument.isFunction() != iArgumentType.isFunctionType()
583:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() |==> iArgument.isFunction() == iArgumentType.isFunctionType()
584:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() |==> false
585:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() |==> iArgument.isFunction()
586:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):932:iArgument.isFunction() && iArgumentType.isFunctionType() |==> iArgumentType.isFunctionType()
587:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() |==> true
588:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() |==> iArgument.isFunction() || iArgumentType.isFunctionType()
589:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):933:iArgument.getJSDocInfo() == null |==> iArgument.getJSDocInfo() != null
590:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):933:iArgument.getJSDocInfo() == null |==> false
591:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):933:iArgument.getJSDocInfo() == null |==> true
592:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null |==> (iArgument.isFunction() && iArgumentType.isFunctionType()) != (iArgument.getJSDocInfo() == null)
593:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null |==> (iArgument.isFunction() && iArgumentType.isFunctionType()) == (iArgument.getJSDocInfo() == null)
594:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):932:iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null |==> false
595:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null |==> iArgument.isFunction() && iArgumentType.isFunctionType()
596:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):933:iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null |==> iArgument.getJSDocInfo() == null
597:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):932:iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null |==> true
598:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):931:iArgument.isFunction() && iArgumentType.isFunctionType() && iArgument.getJSDocInfo() == null |==> iArgument.isFunction() && iArgumentType.isFunctionType() || iArgument.getJSDocInfo() == null
599:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):934:iArgument.setJSType(iParameterFnType) |==> <NO-OP>
600:STD:<INC>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfParameters(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):937:i++ |==> <NO-OP>
601:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):949:fnType.getTemplateTypeName() == null |==> fnType.getTemplateTypeName() != null
602:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):949:fnType.getTemplateTypeName() == null |==> false
603:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):949:fnType.getTemplateTypeName() == null |==> true
604:LVR:0:POS:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):953:0 |==> 1
605:LVR:0:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):953:0 |==> -1
606:COR:iParameterType.isTemplateType():TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):959:iParameterType.isTemplateType() |==> false
607:COR:iParameterType.isTemplateType():FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):959:iParameterType.isTemplateType() |==> true
608:LVR:POS:0:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:1 |==> 0
609:LVR:POS:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:1 |==> -1
610:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 |==> i % 1
611:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 |==> i * 1
612:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 |==> i - 1
613:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 |==> i / 1
614:ROR:<(int,int):!=(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 < childCount |==> i + 1 != childCount
615:ROR:<(int,int):<=(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 < childCount |==> i + 1 <= childCount
616:ROR:<(int,int):==(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 < childCount |==> i + 1 == childCount
617:ROR:<(int,int):>(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 < childCount |==> i + 1 > childCount
618:ROR:<(int,int):>=(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 < childCount |==> i + 1 >= childCount
619:ROR:<(int,int):FALSE(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 < childCount |==> false
620:ROR:<(int,int):TRUE(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):962:i + 1 < childCount |==> true
621:LVR:POS:0:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):963:1 |==> 0
622:LVR:POS:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):963:1 |==> -1
623:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):963:i + 1 |==> i % 1
624:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):963:i + 1 |==> i * 1
625:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):963:i + 1 |==> i - 1
626:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):963:i + 1 |==> i / 1
627:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):964:iArgumentType = getJSType(iArgument).restrictByNotNullOrUndefined().collapseUnion().toObjectType() |==> <NO-OP>
628:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):968:iArgumentType == null |==> iArgumentType != null
629:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):968:iArgumentType == null |==> false
630:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):968:iArgumentType == null |==> true
631:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):969:compiler.report(JSError.make(NodeUtil.getSourceName(iArgument), iArgument, TEMPLATE_TYPE_NOT_OBJECT_TYPE, getJSType(iArgument).toString())) |==> <NO-OP>
632:LVR:FALSE:TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):978:false |==> true
633:LVR:0:POS:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):979:0 |==> 1
634:LVR:0:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):979:0 |==> -1
635:COR:jParameterType.isFunctionType():TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):983:jParameterType.isFunctionType() |==> false
636:COR:jParameterType.isFunctionType():FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):983:jParameterType.isFunctionType() |==> true
637:COR:jParameterFnType.getTypeOfThis().equals(iParameterType):TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):985:jParameterFnType.getTypeOfThis().equals(iParameterType) |==> false
638:COR:jParameterFnType.getTypeOfThis().equals(iParameterType):FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):985:jParameterFnType.getTypeOfThis().equals(iParameterType) |==> true
639:LVR:TRUE:FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):986:true |==> false
640:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):986:foundTemplateTypeOfThisParameter = true |==> <NO-OP>
641:LVR:POS:0:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:1 |==> 0
642:LVR:POS:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:1 |==> -1
643:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 |==> j % 1
644:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 |==> j * 1
645:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 |==> j - 1
646:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 |==> j / 1
647:ROR:>=(int,int):!=(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 >= childCount |==> j + 1 != childCount
648:ROR:>=(int,int):<(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 >= childCount |==> j + 1 < childCount
649:ROR:>=(int,int):<=(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 >= childCount |==> j + 1 <= childCount
650:ROR:>=(int,int):==(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 >= childCount |==> j + 1 == childCount
651:ROR:>=(int,int):>(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 >= childCount |==> j + 1 > childCount
652:ROR:>=(int,int):FALSE(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 >= childCount |==> false
653:ROR:>=(int,int):TRUE(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):988:j + 1 >= childCount |==> true
654:LVR:POS:0:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):992:1 |==> 0
655:LVR:POS:NEG:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):992:1 |==> -1
656:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):992:j + 1 |==> j % 1
657:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):992:j + 1 |==> j * 1
658:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):992:j + 1 |==> j - 1
659:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):992:j + 1 |==> j / 1
660:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):994:jArgument.isFunction() && jArgumentType.isFunctionType() |==> jArgument.isFunction() != jArgumentType.isFunctionType()
661:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):994:jArgument.isFunction() && jArgumentType.isFunctionType() |==> jArgument.isFunction() == jArgumentType.isFunctionType()
662:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):994:jArgument.isFunction() && jArgumentType.isFunctionType() |==> false
663:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):994:jArgument.isFunction() && jArgumentType.isFunctionType() |==> jArgument.isFunction()
664:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):995:jArgument.isFunction() && jArgumentType.isFunctionType() |==> jArgumentType.isFunctionType()
665:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):994:jArgument.isFunction() && jArgumentType.isFunctionType() |==> true
666:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):994:jArgument.isFunction() && jArgumentType.isFunctionType() |==> jArgument.isFunction() || jArgumentType.isFunctionType()
667:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null |==> iArgumentType == null
668:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null |==> false
669:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null |==> true
670:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null && !iArgumentType.isNoType() |==> iArgumentType != null != !iArgumentType.isNoType()
671:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null && !iArgumentType.isNoType() |==> iArgumentType != null == !iArgumentType.isNoType()
672:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null && !iArgumentType.isNoType() |==> false
673:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null && !iArgumentType.isNoType() |==> iArgumentType != null
674:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):998:iArgumentType != null && !iArgumentType.isNoType() |==> !iArgumentType.isNoType()
675:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null && !iArgumentType.isNoType() |==> true
676:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):996:iArgumentType != null && !iArgumentType.isNoType() |==> iArgumentType != null || !iArgumentType.isNoType()
677:COR:jArgumentFnType.getTypeOfThis().isUnknownType():TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1002:jArgumentFnType.getTypeOfThis().isUnknownType() |==> false
678:COR:jArgumentFnType.getTypeOfThis().isUnknownType():FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1002:jArgumentFnType.getTypeOfThis().isUnknownType() |==> true
679:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1005:jArgument.setJSType(registry.createFunctionTypeWithNewThisType(jArgumentFnType, iArgumentType)) |==> <NO-OP>
680:COR:NodeUtil.referencesThis(NodeUtil.getFunctionBody(jArgument)):TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1011:NodeUtil.referencesThis(NodeUtil.getFunctionBody(jArgument)) |==> false
681:COR:NodeUtil.referencesThis(NodeUtil.getFunctionBody(jArgument)):FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1011:NodeUtil.referencesThis(NodeUtil.getFunctionBody(jArgument)) |==> true
682:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1013:compiler.report(JSError.make(NodeUtil.getSourceName(n), n, FUNCTION_LITERAL_UNDEFINED_THIS)) |==> <NO-OP>
683:STD:<INC>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1022:j++ |==> <NO-OP>
684:COR:foundTemplateTypeOfThisParameter:TRUE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1025:foundTemplateTypeOfThisParameter |==> false
685:COR:foundTemplateTypeOfThisParameter:FALSE:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1025:foundTemplateTypeOfThisParameter |==> true
686:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1026:compiler.report(JSError.make(NodeUtil.getSourceName(n), n, TEMPLATE_TYPE_OF_THIS_EXPECTED)) |==> <NO-OP>
687:STD:<INC>:<NO-OP>:com.google.javascript.jscomp.TypeInference@updateTypeOfThisOnClosure(com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.FunctionType):1031:i++ |==> <NO-OP>
688:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1036:scope = traverseChildren(n, scope) |==> <NO-OP>
689:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1041:constructorType != null |==> constructorType == null
690:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1041:constructorType != null |==> false
691:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1041:constructorType != null |==> true
692:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1042:constructorType = constructorType.restrictByNotNullOrUndefined() |==> <NO-OP>
693:COR:constructorType.isUnknownType():TRUE:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1043:constructorType.isUnknownType() |==> false
694:COR:constructorType.isUnknownType():FALSE:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1043:constructorType.isUnknownType() |==> true
695:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1044:type = getNativeType(UNKNOWN_TYPE) |==> <NO-OP>
696:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null |==> ct != null
697:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null |==> false
698:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null |==> true
699:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null && constructorType instanceof FunctionType |==> ct == null != constructorType instanceof FunctionType
700:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null && constructorType instanceof FunctionType |==> ct == null == constructorType instanceof FunctionType
701:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null && constructorType instanceof FunctionType |==> false
702:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null && constructorType instanceof FunctionType |==> ct == null
703:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null && constructorType instanceof FunctionType |==> constructorType instanceof FunctionType
704:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null && constructorType instanceof FunctionType |==> true
705:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1047:ct == null && constructorType instanceof FunctionType |==> ct == null || constructorType instanceof FunctionType
706:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1051:ct = (FunctionType)constructorType |==> <NO-OP>
707:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null |==> ct == null
708:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null |==> false
709:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null |==> true
710:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null && ct.isConstructor() |==> ct != null != ct.isConstructor()
711:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null && ct.isConstructor() |==> ct != null == ct.isConstructor()
712:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null && ct.isConstructor() |==> false
713:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null && ct.isConstructor() |==> ct != null
714:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null && ct.isConstructor() |==> ct.isConstructor()
715:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null && ct.isConstructor() |==> true
716:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1053:ct != null && ct.isConstructor() |==> ct != null || ct.isConstructor()
717:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1054:type = ct.getInstanceType() |==> <NO-OP>
718:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1055:backwardsInferenceFromCallSite(n, ct) |==> <NO-OP>
719:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseNew(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1059:n.setJSType(type) |==> <NO-OP>
720:LVR:TRUE:FALSE:com.google.javascript.jscomp.TypeInference@traverseAnd(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1064:true |==> false
721:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseChildren(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1068:el != null |==> el == null
722:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseChildren(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1068:el != null |==> false
723:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseChildren(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1068:el != null |==> true
724:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseChildren(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1069:scope = traverse(el, scope) |==> <NO-OP>
725:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1075:scope = traverseChildren(n, scope) |==> <NO-OP>
726:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1078:objType != null |==> objType == null
727:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1078:objType != null |==> false
728:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1078:objType != null |==> true
729:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1080:type != null |==> type == null
730:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1080:type != null |==> false
731:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1080:type != null |==> true
732:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseGetElem(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1081:n.setJSType(type) |==> <NO-OP>
733:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseGetProp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1090:scope = traverseChildren(n, scope) |==> <NO-OP>
734:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseGetProp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1091:n.setJSType(getPropertyType(objNode.getJSType(), property.getString(), n, scope)) |==> <NO-OP>
735:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null |==> type != null
736:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null |==> false
737:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null |==> true
738:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:constraint == null |==> constraint != null
739:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:constraint == null |==> false
740:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:constraint == null |==> true
741:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null || constraint == null |==> type == null != (constraint == null)
742:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null || constraint == null |==> type == null && constraint == null
743:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null || constraint == null |==> type == null == (constraint == null)
744:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null || constraint == null |==> false
745:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null || constraint == null |==> type == null
746:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null || constraint == null |==> constraint == null
747:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1113:type == null || constraint == null |==> true
748:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1119:constraintObj != null |==> constraintObj == null
749:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1119:constraintObj != null |==> false
750:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1119:constraintObj != null |==> true
751:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@inferPropertyTypesToMatchConstraint(com.google.javascript.rhino.jstype.JSType,com.google.javascript.rhino.jstype.JSType):1120:type.matchConstraint(constraintObj) |==> <NO-OP>
752:COR:n.isQualifiedName():TRUE:com.google.javascript.jscomp.TypeInference@dereferencePointer(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1129:n.isQualifiedName() |==> false
753:COR:n.isQualifiedName():FALSE:com.google.javascript.jscomp.TypeInference@dereferencePointer(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1129:n.isQualifiedName() |==> true
754:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@dereferencePointer(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1132:type != narrowed |==> type == narrowed
755:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@dereferencePointer(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1132:type != narrowed |==> false
756:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@dereferencePointer(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1132:type != narrowed |==> true
757:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@dereferencePointer(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1133:scope = narrowScope(scope, n, narrowed) |==> <NO-OP>
758:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1144:var != null |==> var == null
759:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1144:var != null |==> false
760:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1144:var != null |==> true
761:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1146:varType != null |==> varType == null
762:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1146:varType != null |==> false
763:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1146:varType != null |==> true
764:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1148:var != syntacticScope.getSlot(qualifiedName) |==> var == syntacticScope.getSlot(qualifiedName)
765:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1148:var != syntacticScope.getSlot(qualifiedName) |==> false
766:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1148:var != syntacticScope.getSlot(qualifiedName) |==> true
767:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1147:varType.equals(getNativeType(UNKNOWN_TYPE)) && var != syntacticScope.getSlot(qualifiedName) |==> varType.equals(getNativeType(UNKNOWN_TYPE)) != (var != syntacticScope.getSlot(qualifiedName))
768:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1147:varType.equals(getNativeType(UNKNOWN_TYPE)) && var != syntacticScope.getSlot(qualifiedName) |==> varType.equals(getNativeType(UNKNOWN_TYPE)) == (var != syntacticScope.getSlot(qualifiedName))
769:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1147:varType.equals(getNativeType(UNKNOWN_TYPE)) && var != syntacticScope.getSlot(qualifiedName) |==> false
770:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1147:varType.equals(getNativeType(UNKNOWN_TYPE)) && var != syntacticScope.getSlot(qualifiedName) |==> varType.equals(getNativeType(UNKNOWN_TYPE))
771:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1148:varType.equals(getNativeType(UNKNOWN_TYPE)) && var != syntacticScope.getSlot(qualifiedName) |==> var != syntacticScope.getSlot(qualifiedName)
772:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1147:varType.equals(getNativeType(UNKNOWN_TYPE)) && var != syntacticScope.getSlot(qualifiedName) |==> true
773:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1147:varType.equals(getNativeType(UNKNOWN_TYPE)) && var != syntacticScope.getSlot(qualifiedName) |==> varType.equals(getNativeType(UNKNOWN_TYPE)) || var != syntacticScope.getSlot(qualifiedName)
774:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1159:objType != null |==> objType == null
775:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1159:objType != null |==> false
776:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1159:objType != null |==> true
777:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1160:propertyType = objType.findPropertyType(propName) |==> <NO-OP>
778:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null |==> propertyType != null
779:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null |==> false
780:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null |==> true
781:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null || propertyType.isUnknownType() |==> propertyType == null != propertyType.isUnknownType()
782:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null || propertyType.isUnknownType() |==> propertyType == null && propertyType.isUnknownType()
783:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null || propertyType.isUnknownType() |==> propertyType == null == propertyType.isUnknownType()
784:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null || propertyType.isUnknownType() |==> false
785:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null || propertyType.isUnknownType() |==> propertyType == null
786:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null || propertyType.isUnknownType() |==> propertyType.isUnknownType()
787:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:propertyType == null || propertyType.isUnknownType() |==> true
788:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1164:qualifiedName != null |==> qualifiedName == null
789:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1164:qualifiedName != null |==> false
790:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1164:qualifiedName != null |==> true
791:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:(propertyType == null || propertyType.isUnknownType()) && qualifiedName != null |==> (propertyType == null || propertyType.isUnknownType()) != (qualifiedName != null)
792:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:(propertyType == null || propertyType.isUnknownType()) && qualifiedName != null |==> (propertyType == null || propertyType.isUnknownType()) == (qualifiedName != null)
793:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:(propertyType == null || propertyType.isUnknownType()) && qualifiedName != null |==> false
794:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:(propertyType == null || propertyType.isUnknownType()) && qualifiedName != null |==> (propertyType == null || propertyType.isUnknownType())
795:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1164:(propertyType == null || propertyType.isUnknownType()) && qualifiedName != null |==> qualifiedName != null
796:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:(propertyType == null || propertyType.isUnknownType()) && qualifiedName != null |==> true
797:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1163:(propertyType == null || propertyType.isUnknownType()) && qualifiedName != null |==> (propertyType == null || propertyType.isUnknownType()) || qualifiedName != null
798:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1167:regType != null |==> regType == null
799:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1167:regType != null |==> false
800:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1167:regType != null |==> true
801:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@getPropertyType(com.google.javascript.rhino.jstype.JSType,java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1168:propertyType = regType.getConstructor() |==> <NO-OP>
802:LVR:FALSE:TRUE:com.google.javascript.jscomp.TypeInference@traverseOr(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1176:false |==> true
803:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null |==> leftType == null
804:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null |==> false
805:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null |==> true
806:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:rightType != null |==> rightType == null
807:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:rightType != null |==> false
808:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:rightType != null |==> true
809:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null && rightType != null |==> leftType != null != (rightType != null)
810:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null && rightType != null |==> leftType != null == (rightType != null)
811:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null && rightType != null |==> false
812:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null && rightType != null |==> leftType != null
813:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null && rightType != null |==> rightType != null
814:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null && rightType != null |==> true
815:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1205:leftType != null && rightType != null |==> leftType != null || rightType != null
816:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1206:leftType = leftType.getRestrictedTypeGivenToBooleanOutcome(!condition) |==> <NO-OP>
817:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1207:leftLiterals.toBooleanOutcomes == BooleanLiteralSet.get(!condition) |==> leftLiterals.toBooleanOutcomes != BooleanLiteralSet.get(!condition)
818:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1207:leftLiterals.toBooleanOutcomes == BooleanLiteralSet.get(!condition) |==> false
819:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1207:leftLiterals.toBooleanOutcomes == BooleanLiteralSet.get(!condition) |==> true
820:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY |==> literals.booleanValues != BooleanLiteralSet.EMPTY
821:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY |==> false
822:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY |==> true
823:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY && getNativeType(BOOLEAN_TYPE).isSubtype(type) |==> literals.booleanValues == BooleanLiteralSet.EMPTY != getNativeType(BOOLEAN_TYPE).isSubtype(type)
824:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY && getNativeType(BOOLEAN_TYPE).isSubtype(type) |==> literals.booleanValues == BooleanLiteralSet.EMPTY == getNativeType(BOOLEAN_TYPE).isSubtype(type)
825:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY && getNativeType(BOOLEAN_TYPE).isSubtype(type) |==> false
826:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY && getNativeType(BOOLEAN_TYPE).isSubtype(type) |==> literals.booleanValues == BooleanLiteralSet.EMPTY
827:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1224:literals.booleanValues == BooleanLiteralSet.EMPTY && getNativeType(BOOLEAN_TYPE).isSubtype(type) |==> getNativeType(BOOLEAN_TYPE).isSubtype(type)
828:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY && getNativeType(BOOLEAN_TYPE).isSubtype(type) |==> true
829:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1223:literals.booleanValues == BooleanLiteralSet.EMPTY && getNativeType(BOOLEAN_TYPE).isSubtype(type) |==> literals.booleanValues == BooleanLiteralSet.EMPTY || getNativeType(BOOLEAN_TYPE).isSubtype(type)
830:COR:type.isUnionType():TRUE:com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1226:type.isUnionType() |==> false
831:COR:type.isUnionType():FALSE:com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1226:type.isUnionType() |==> true
832:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1227:type = type.toMaybeUnionType().getRestrictedUnion(getNativeType(BOOLEAN_TYPE)) |==> <NO-OP>
833:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope,boolean):1238:n.setJSType(type) |==> <NO-OP>
834:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@traverseWithinShortCircuitingBinOp(com.google.javascript.rhino.Node,com.google.javascript.jscomp.type.FlowScope):1253:scope = traverse(n, scope) |==> <NO-OP>
835:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1322:joinedScope == null |==> joinedScope != null
836:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1322:joinedScope == null |==> false
837:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1322:joinedScope == null |==> true
838:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1323:leftScope == rightScope |==> leftScope != rightScope
839:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1323:leftScope == rightScope |==> false
840:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1323:leftScope == rightScope |==> true
841:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1324:joinedScope = rightScope |==> <NO-OP>
842:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getJoinedFlowScope():1326:joinedScope = join(leftScope, rightScope) |==> <NO-OP>
843:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND |==> nodeType != Token.AND
844:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND |==> nodeType < Token.AND
845:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND |==> nodeType <= Token.AND
846:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND |==> nodeType > Token.AND
847:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND |==> nodeType >= Token.AND
848:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND |==> false
849:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND |==> true
850:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome |==> nodeType == Token.AND != outcome
851:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome |==> nodeType == Token.AND == outcome
852:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome |==> false
853:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome |==> nodeType == Token.AND
854:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome |==> outcome
855:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome |==> true
856:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome |==> nodeType == Token.AND || outcome
857:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR |==> nodeType != Token.OR
858:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR |==> nodeType < Token.OR
859:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR |==> nodeType <= Token.OR
860:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR |==> nodeType > Token.OR
861:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR |==> nodeType >= Token.OR
862:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR |==> false
863:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR |==> true
864:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR && !outcome |==> nodeType == Token.OR != !outcome
865:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR && !outcome |==> nodeType == Token.OR == !outcome
866:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR && !outcome |==> false
867:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR && !outcome |==> nodeType == Token.OR
868:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR && !outcome |==> !outcome
869:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR && !outcome |==> true
870:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.OR && !outcome |==> nodeType == Token.OR || !outcome
871:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome || nodeType == Token.OR && !outcome |==> (nodeType == Token.AND && outcome) != (nodeType == Token.OR && !outcome)
872:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome || nodeType == Token.OR && !outcome |==> nodeType == Token.AND && outcome && (nodeType == Token.OR && !outcome)
873:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome || nodeType == Token.OR && !outcome |==> (nodeType == Token.AND && outcome) == (nodeType == Token.OR && !outcome)
874:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome || nodeType == Token.OR && !outcome |==> false
875:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome || nodeType == Token.OR && !outcome |==> nodeType == Token.AND && outcome
876:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1338:nodeType == Token.AND && outcome || nodeType == Token.OR && !outcome |==> nodeType == Token.OR && !outcome
877:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference$BooleanOutcomePair@getOutcomeFlowScope(int,boolean):1337:nodeType == Token.AND && outcome || nodeType == Token.OR && !outcome |==> true
878:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@newBooleanOutcomePair(com.google.javascript.rhino.jstype.JSType,com.google.javascript.jscomp.type.FlowScope):1349:jsType == null |==> jsType != null
879:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@newBooleanOutcomePair(com.google.javascript.rhino.jstype.JSType,com.google.javascript.jscomp.type.FlowScope):1349:jsType == null |==> false
880:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@newBooleanOutcomePair(com.google.javascript.rhino.jstype.JSType,com.google.javascript.jscomp.type.FlowScope):1349:jsType == null |==> true
881:COR:registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType):TRUE:com.google.javascript.jscomp.TypeInference@newBooleanOutcomePair(com.google.javascript.rhino.jstype.JSType,com.google.javascript.jscomp.type.FlowScope):1354:registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) |==> false
882:COR:registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType):FALSE:com.google.javascript.jscomp.TypeInference@newBooleanOutcomePair(com.google.javascript.rhino.jstype.JSType,com.google.javascript.jscomp.type.FlowScope):1354:registry.getNativeType(BOOLEAN_TYPE).isSubtype(jsType) |==> true
883:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1361:Preconditions.checkState(nameNode.isName()) |==> <NO-OP>
884:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1363:varType == null |==> varType != null
885:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1363:varType == null |==> false
886:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1363:varType == null |==> true
887:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1364:varType = getNativeType(JSTypeNative.UNKNOWN_TYPE) |==> <NO-OP>
888:COR:isUnflowable(syntacticScope.getVar(varName)):TRUE:com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1366:isUnflowable(syntacticScope.getVar(varName)) |==> false
889:COR:isUnflowable(syntacticScope.getVar(varName)):FALSE:com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1366:isUnflowable(syntacticScope.getVar(varName)) |==> true
890:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.TypeInference@redeclareSimpleVar(com.google.javascript.jscomp.type.FlowScope,com.google.javascript.rhino.Node,com.google.javascript.rhino.jstype.JSType):1369:scope.inferSlotType(varName, varType) |==> <NO-OP>
891:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null |==> v == null
892:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null |==> false
893:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null |==> true
894:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() |==> v != null != v.isLocal()
895:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() |==> v != null == v.isLocal()
896:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() |==> false
897:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() |==> v != null
898:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() |==> v.isLocal()
899:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() |==> true
900:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() |==> v != null || v.isLocal()
901:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() |==> (v != null && v.isLocal()) != v.isMarkedEscaped()
902:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() |==> (v != null && v.isLocal()) == v.isMarkedEscaped()
903:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() |==> false
904:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() |==> v != null && v.isLocal()
905:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() |==> v.isMarkedEscaped()
906:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() |==> true
907:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() |==> v != null && v.isLocal() || v.isMarkedEscaped()
908:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1375:v.getScope() == syntacticScope |==> v.getScope() != syntacticScope
909:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1375:v.getScope() == syntacticScope |==> false
910:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1375:v.getScope() == syntacticScope |==> true
911:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() && v.getScope() == syntacticScope |==> (v != null && v.isLocal() && v.isMarkedEscaped()) != (v.getScope() == syntacticScope)
912:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() && v.getScope() == syntacticScope |==> (v != null && v.isLocal() && v.isMarkedEscaped()) == (v.getScope() == syntacticScope)
913:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() && v.getScope() == syntacticScope |==> false
914:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() && v.getScope() == syntacticScope |==> v != null && v.isLocal() && v.isMarkedEscaped()
915:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1375:v != null && v.isLocal() && v.isMarkedEscaped() && v.getScope() == syntacticScope |==> v.getScope() == syntacticScope
916:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() && v.getScope() == syntacticScope |==> true
917:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.TypeInference@isUnflowable(com.google.javascript.jscomp.Scope.Var):1373:v != null && v.isLocal() && v.isMarkedEscaped() && v.getScope() == syntacticScope |==> v != null && v.isLocal() && v.isMarkedEscaped() || v.getScope() == syntacticScope
918:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getJSType(com.google.javascript.rhino.Node):1384:jsType == null |==> jsType != null
919:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getJSType(com.google.javascript.rhino.Node):1384:jsType == null |==> false
920:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.TypeInference@getJSType(com.google.javascript.rhino.Node):1384:jsType == null |==> true