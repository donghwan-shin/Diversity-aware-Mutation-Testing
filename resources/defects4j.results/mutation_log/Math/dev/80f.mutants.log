1:COR:isSymmetric(matrix):TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(org.apache.commons.math.linear.RealMatrix,double):168:isSymmetric(matrix) |==> false
2:COR:isSymmetric(matrix):FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(org.apache.commons.math.linear.RealMatrix,double):168:isSymmetric(matrix) |==> true
3:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(org.apache.commons.math.linear.RealMatrix,double):169:this.splitTolerance = splitTolerance |==> <NO-OP>
4:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(org.apache.commons.math.linear.RealMatrix,double):170:transformToTridiagonal(matrix) |==> <NO-OP>
5:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(org.apache.commons.math.linear.RealMatrix,double):171:decompose() |==> <NO-OP>
6:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):193:this.main = main.clone() |==> <NO-OP>
7:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):194:this.secondary = secondary.clone() |==> <NO-OP>
8:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):195:transformer = null |==> <NO-OP>
9:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):198:squaredSecondary = new double[secondary.length] |==> <NO-OP>
10:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:0 |==> 1
11:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:0 |==> -1
12:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:i < squaredSecondary.length |==> i != squaredSecondary.length
13:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:i < squaredSecondary.length |==> i <= squaredSecondary.length
14:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:i < squaredSecondary.length |==> i == squaredSecondary.length
15:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:i < squaredSecondary.length |==> i > squaredSecondary.length
16:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:i < squaredSecondary.length |==> i >= squaredSecondary.length
17:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:i < squaredSecondary.length |==> false
18:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):199:i < squaredSecondary.length |==> true
19:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):201:s * s |==> s % s
20:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):201:s * s |==> s + s
21:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):201:s * s |==> s - s
22:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):201:s * s |==> s / s
23:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):201:squaredSecondary[i] = s * s |==> <NO-OP>
24:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):204:this.splitTolerance = splitTolerance |==> <NO-OP>
25:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@<init>(double[],double[],double):205:decompose() |==> <NO-OP>
26:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 |==> 0
27:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 |==> -10
28:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows |==> 10 % rows
29:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows |==> 10 + rows
30:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows |==> 10 - rows
31:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows |==> 10 / rows
32:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns |==> 10 * rows % columns
33:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns |==> 10 * rows + columns
34:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns |==> 10 * rows - columns
35:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns |==> 10 * rows / columns
36:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns * MathUtils.EPSILON |==> 10 * rows * columns % MathUtils.EPSILON
37:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns * MathUtils.EPSILON |==> 10 * rows * columns + MathUtils.EPSILON
38:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns * MathUtils.EPSILON |==> 10 * rows * columns - MathUtils.EPSILON
39:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):217:10 * rows * columns * MathUtils.EPSILON |==> 10 * rows * columns / MathUtils.EPSILON
40:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:0 |==> 1
41:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:0 |==> -1
42:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:i < rows |==> i != rows
43:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:i < rows |==> i <= rows
44:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:i < rows |==> i == rows
45:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:i < rows |==> i > rows
46:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:i < rows |==> i >= rows
47:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:i < rows |==> false
48:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):218:i < rows |==> true
49:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:1 |==> 0
50:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:1 |==> -1
51:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:i + 1 |==> i % 1
52:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:i + 1 |==> i * 1
53:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:i + 1 |==> i - 1
54:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:i + 1 |==> i / 1
55:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:j < columns |==> j != columns
56:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:j < columns |==> j <= columns
57:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:j < columns |==> j == columns
58:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:j < columns |==> j > columns
59:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:j < columns |==> j >= columns
60:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:j < columns |==> false
61:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):219:j < columns |==> true
62:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:mij - mji |==> mij % mji
63:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:mij - mji |==> mij * mji
64:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:mij - mji |==> mij + mji
65:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:mij - mji |==> mij / mji
66:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.max(Math.abs(mij), Math.abs(mji)) * eps |==> Math.max(Math.abs(mij), Math.abs(mji)) % eps
67:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.max(Math.abs(mij), Math.abs(mji)) * eps |==> Math.max(Math.abs(mij), Math.abs(mji)) + eps
68:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.max(Math.abs(mij), Math.abs(mji)) * eps |==> Math.max(Math.abs(mij), Math.abs(mji)) - eps
69:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.max(Math.abs(mij), Math.abs(mji)) * eps |==> Math.max(Math.abs(mij), Math.abs(mji)) / eps
70:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps) |==> Math.abs(mij - mji) != (Math.max(Math.abs(mij), Math.abs(mji)) * eps)
71:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps) |==> Math.abs(mij - mji) < (Math.max(Math.abs(mij), Math.abs(mji)) * eps)
72:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps) |==> Math.abs(mij - mji) <= (Math.max(Math.abs(mij), Math.abs(mji)) * eps)
73:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps) |==> Math.abs(mij - mji) == (Math.max(Math.abs(mij), Math.abs(mji)) * eps)
74:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps) |==> Math.abs(mij - mji) >= (Math.max(Math.abs(mij), Math.abs(mji)) * eps)
75:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps) |==> false
76:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):222:Math.abs(mij - mji) > (Math.max(Math.abs(mij), Math.abs(mji)) * eps) |==> true
77:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):223:false |==> true
78:LVR:TRUE:FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@isSymmetric(org.apache.commons.math.linear.RealMatrix):227:true |==> false
79:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():237:cachedV = null |==> <NO-OP>
80:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():238:cachedD = null |==> <NO-OP>
81:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():239:cachedVt = null |==> <NO-OP>
82:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():240:6 |==> 0
83:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():240:6 |==> -6
84:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@decompose():240:6 * main.length |==> 6 % main.length
85:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@decompose():240:6 * main.length |==> 6 + main.length
86:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@decompose():240:6 * main.length |==> 6 - main.length
87:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@decompose():240:6 * main.length |==> 6 / main.length
88:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():240:work = new double[6 * main.length] |==> <NO-OP>
89:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():243:computeGershgorinCircles() |==> <NO-OP>
90:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():246:findEigenvalues() |==> <NO-OP>
91:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@decompose():249:eigenvectors = null |==> <NO-OP>
92:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getV():257:cachedV == null |==> cachedV != null
93:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getV():257:cachedV == null |==> false
94:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getV():257:cachedV == null |==> true
95:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getV():259:eigenvectors == null |==> eigenvectors != null
96:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getV():259:eigenvectors == null |==> false
97:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getV():259:eigenvectors == null |==> true
98:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getV():260:findEigenVectors() |==> <NO-OP>
99:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getV():264:cachedV = MatrixUtils.createRealMatrix(m, m) |==> <NO-OP>
100:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:0 |==> 1
101:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:0 |==> -1
102:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:k < m |==> k != m
103:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:k < m |==> k <= m
104:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:k < m |==> k == m
105:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:k < m |==> k > m
106:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:k < m |==> k >= m
107:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:k < m |==> false
108:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getV():265:k < m |==> true
109:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getV():266:cachedV.setColumnVector(k, eigenvectors[k]) |==> <NO-OP>
110:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getD():279:cachedD == null |==> cachedD != null
111:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getD():279:cachedD == null |==> false
112:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getD():279:cachedD == null |==> true
113:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getD():281:cachedD = MatrixUtils.createRealDiagonalMatrix(realEigenvalues) |==> <NO-OP>
114:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():290:cachedVt == null |==> cachedVt != null
115:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():290:cachedVt == null |==> false
116:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():290:cachedVt == null |==> true
117:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():292:eigenvectors == null |==> eigenvectors != null
118:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():292:eigenvectors == null |==> false
119:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():292:eigenvectors == null |==> true
120:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getVT():293:findEigenVectors() |==> <NO-OP>
121:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getVT():297:cachedVt = MatrixUtils.createRealMatrix(m, m) |==> <NO-OP>
122:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:0 |==> 1
123:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:0 |==> -1
124:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:k < m |==> k != m
125:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:k < m |==> k <= m
126:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:k < m |==> k == m
127:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:k < m |==> k > m
128:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:k < m |==> k >= m
129:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:k < m |==> false
130:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@getVT():298:k < m |==> true
131:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getVT():299:cachedVt.setRowVector(k, eigenvectors[k]) |==> <NO-OP>
132:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getEigenvector(int):336:eigenvectors == null |==> eigenvectors != null
133:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getEigenvector(int):336:eigenvectors == null |==> false
134:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getEigenvector(int):336:eigenvectors == null |==> true
135:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getEigenvector(int):337:findEigenVectors() |==> <NO-OP>
136:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@getDeterminant():347:1 |==> 0
137:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@getDeterminant():347:1 |==> -1
138:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getDeterminant():349:determinant *= lambda |==> <NO-OP>
139:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getSolver():356:eigenvectors == null |==> eigenvectors != null
140:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getSolver():356:eigenvectors == null |==> false
141:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@getSolver():356:eigenvectors == null |==> true
142:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@getSolver():357:findEigenVectors() |==> <NO-OP>
143:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@<init>(double[],double[],org.apache.commons.math.linear.ArrayRealVector[]):382:this.realEigenvalues = realEigenvalues |==> <NO-OP>
144:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@<init>(double[],double[],org.apache.commons.math.linear.ArrayRealVector[]):383:this.imagEigenvalues = imagEigenvalues |==> <NO-OP>
145:COR:isNonSingular():TRUE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):398:isNonSingular() |==> false
146:COR:isNonSingular():FALSE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):398:isNonSingular() |==> true
147:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):403:b.length != m |==> b.length < m
148:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):403:b.length != m |==> b.length <= m
149:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):403:b.length != m |==> b.length == m
150:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):403:b.length != m |==> b.length > m
151:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):403:b.length != m |==> b.length >= m
152:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):403:b.length != m |==> false
153:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):403:b.length != m |==> true
154:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:0 |==> 1
155:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:0 |==> -1
156:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:i < m |==> i != m
157:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:i < m |==> i <= m
158:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:i < m |==> i == m
159:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:i < m |==> i > m
160:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:i < m |==> i >= m
161:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:i < m |==> false
162:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):410:i < m |==> true
163:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):413:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) % realEigenvalues[i]
164:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):413:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) * realEigenvalues[i]
165:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):413:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) + realEigenvalues[i]
166:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):413:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) - realEigenvalues[i]
167:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:0 |==> 1
168:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:0 |==> -1
169:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:j < m |==> j != m
170:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:j < m |==> j <= m
171:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:j < m |==> j == m
172:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:j < m |==> j > m
173:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:j < m |==> j >= m
174:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:j < m |==> false
175:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):414:j < m |==> true
176:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):415:s * vData[j] |==> s % vData[j]
177:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):415:s * vData[j] |==> s + vData[j]
178:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):415:s * vData[j] |==> s - vData[j]
179:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):415:s * vData[j] |==> s / vData[j]
180:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(double[]):415:bp[j] += s * vData[j] |==> <NO-OP>
181:COR:isNonSingular():TRUE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):434:isNonSingular() |==> false
182:COR:isNonSingular():FALSE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):434:isNonSingular() |==> true
183:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):439:b.getDimension() != m |==> b.getDimension() < m
184:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):439:b.getDimension() != m |==> b.getDimension() <= m
185:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):439:b.getDimension() != m |==> b.getDimension() == m
186:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):439:b.getDimension() != m |==> b.getDimension() > m
187:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):439:b.getDimension() != m |==> b.getDimension() >= m
188:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):439:b.getDimension() != m |==> false
189:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):439:b.getDimension() != m |==> true
190:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:0 |==> 1
191:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:0 |==> -1
192:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:i < m |==> i != m
193:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:i < m |==> i <= m
194:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:i < m |==> i == m
195:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:i < m |==> i > m
196:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:i < m |==> i >= m
197:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:i < m |==> false
198:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):446:i < m |==> true
199:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):449:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) % realEigenvalues[i]
200:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):449:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) * realEigenvalues[i]
201:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):449:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) + realEigenvalues[i]
202:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):449:v.dotProduct(b) / realEigenvalues[i] |==> v.dotProduct(b) - realEigenvalues[i]
203:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:0 |==> 1
204:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:0 |==> -1
205:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:j < m |==> j != m
206:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:j < m |==> j <= m
207:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:j < m |==> j == m
208:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:j < m |==> j > m
209:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:j < m |==> j >= m
210:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:j < m |==> false
211:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):450:j < m |==> true
212:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):451:s * vData[j] |==> s % vData[j]
213:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):451:s * vData[j] |==> s + vData[j]
214:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):451:s * vData[j] |==> s - vData[j]
215:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):451:s * vData[j] |==> s / vData[j]
216:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):451:bp[j] += s * vData[j] |==> <NO-OP>
217:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealVector):455:false |==> true
218:COR:isNonSingular():TRUE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):470:isNonSingular() |==> false
219:COR:isNonSingular():FALSE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):470:isNonSingular() |==> true
220:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):475:b.getRowDimension() != m |==> b.getRowDimension() < m
221:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):475:b.getRowDimension() != m |==> b.getRowDimension() <= m
222:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):475:b.getRowDimension() != m |==> b.getRowDimension() == m
223:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):475:b.getRowDimension() != m |==> b.getRowDimension() > m
224:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):475:b.getRowDimension() != m |==> b.getRowDimension() >= m
225:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):475:b.getRowDimension() != m |==> false
226:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):475:b.getRowDimension() != m |==> true
227:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:0 |==> 1
228:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:0 |==> -1
229:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:k < nColB |==> k != nColB
230:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:k < nColB |==> k <= nColB
231:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:k < nColB |==> k == nColB
232:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:k < nColB |==> k > nColB
233:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:k < nColB |==> k >= nColB
234:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:k < nColB |==> false
235:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):483:k < nColB |==> true
236:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:0 |==> 1
237:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:0 |==> -1
238:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:i < m |==> i != m
239:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:i < m |==> i <= m
240:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:i < m |==> i == m
241:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:i < m |==> i > m
242:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:i < m |==> i >= m
243:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:i < m |==> false
244:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):484:i < m |==> true
245:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):487:0 |==> 1
246:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):487:0 |==> -1
247:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:0 |==> 1
248:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:0 |==> -1
249:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:j < m |==> j != m
250:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:j < m |==> j <= m
251:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:j < m |==> j == m
252:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:j < m |==> j > m
253:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:j < m |==> j >= m
254:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:j < m |==> false
255:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):488:j < m |==> true
256:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):489:v.getEntry(j) * b.getEntry(j, k) |==> v.getEntry(j) % b.getEntry(j, k)
257:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):489:v.getEntry(j) * b.getEntry(j, k) |==> v.getEntry(j) + b.getEntry(j, k)
258:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):489:v.getEntry(j) * b.getEntry(j, k) |==> v.getEntry(j) - b.getEntry(j, k)
259:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):489:v.getEntry(j) * b.getEntry(j, k) |==> v.getEntry(j) / b.getEntry(j, k)
260:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):489:s += v.getEntry(j) * b.getEntry(j, k) |==> <NO-OP>
261:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):491:s /= realEigenvalues[i] |==> <NO-OP>
262:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:0 |==> 1
263:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:0 |==> -1
264:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:j < m |==> j != m
265:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:j < m |==> j <= m
266:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:j < m |==> j == m
267:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:j < m |==> j > m
268:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:j < m |==> j >= m
269:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:j < m |==> false
270:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):492:j < m |==> true
271:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):493:s * vData[j] |==> s % vData[j]
272:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):493:s * vData[j] |==> s + vData[j]
273:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):493:s * vData[j] |==> s - vData[j]
274:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):493:s * vData[j] |==> s / vData[j]
275:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@solve(org.apache.commons.math.linear.RealMatrix):493:bp[j][k] += s * vData[j] |==> <NO-OP>
276:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:0 |==> 1
277:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:0 |==> -1
278:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:i < realEigenvalues.length |==> i != realEigenvalues.length
279:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:i < realEigenvalues.length |==> i <= realEigenvalues.length
280:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:i < realEigenvalues.length |==> i == realEigenvalues.length
281:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:i < realEigenvalues.length |==> i > realEigenvalues.length
282:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:i < realEigenvalues.length |==> i >= realEigenvalues.length
283:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:i < realEigenvalues.length |==> false
284:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():507:i < realEigenvalues.length |==> true
285:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:0 |==> 1
286:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:0 |==> -1
287:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:realEigenvalues[i] == 0 |==> realEigenvalues[i] != 0
288:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:realEigenvalues[i] == 0 |==> realEigenvalues[i] < 0
289:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:realEigenvalues[i] == 0 |==> realEigenvalues[i] <= 0
290:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:realEigenvalues[i] == 0 |==> realEigenvalues[i] > 0
291:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:realEigenvalues[i] == 0 |==> realEigenvalues[i] >= 0
292:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:realEigenvalues[i] == 0 |==> false
293:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:realEigenvalues[i] == 0 |==> true
294:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:0 |==> 1
295:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:0 |==> -1
296:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:imagEigenvalues[i] == 0 |==> imagEigenvalues[i] != 0
297:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:imagEigenvalues[i] == 0 |==> imagEigenvalues[i] < 0
298:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:imagEigenvalues[i] == 0 |==> imagEigenvalues[i] <= 0
299:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:imagEigenvalues[i] == 0 |==> imagEigenvalues[i] > 0
300:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:imagEigenvalues[i] == 0 |==> imagEigenvalues[i] >= 0
301:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:imagEigenvalues[i] == 0 |==> false
302:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:imagEigenvalues[i] == 0 |==> true
303:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:(realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0) |==> (realEigenvalues[i] == 0) != (imagEigenvalues[i] == 0)
304:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:(realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0) |==> (realEigenvalues[i] == 0) == (imagEigenvalues[i] == 0)
305:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:(realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0) |==> false
306:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:(realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0) |==> (realEigenvalues[i] == 0)
307:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:(realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0) |==> (imagEigenvalues[i] == 0)
308:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:(realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0) |==> true
309:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():508:(realEigenvalues[i] == 0) && (imagEigenvalues[i] == 0) |==> (realEigenvalues[i] == 0) || (imagEigenvalues[i] == 0)
310:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():509:false |==> true
311:LVR:TRUE:FALSE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@isNonSingular():512:true |==> false
312:COR:isNonSingular():TRUE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():522:isNonSingular() |==> false
313:COR:isNonSingular():FALSE:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():522:isNonSingular() |==> true
314:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:0 |==> 1
315:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:0 |==> -1
316:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:i < m |==> i != m
317:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:i < m |==> i <= m
318:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:i < m |==> i == m
319:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:i < m |==> i > m
320:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:i < m |==> i >= m
321:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:i < m |==> false
322:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():529:i < m |==> true
323:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:0 |==> 1
324:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:0 |==> -1
325:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:j < m |==> j != m
326:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:j < m |==> j <= m
327:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:j < m |==> j == m
328:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:j < m |==> j > m
329:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:j < m |==> j >= m
330:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:j < m |==> false
331:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():531:j < m |==> true
332:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():532:0 |==> 1
333:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():532:0 |==> -1
334:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:0 |==> 1
335:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:0 |==> -1
336:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:k < m |==> k != m
337:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:k < m |==> k <= m
338:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:k < m |==> k == m
339:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:k < m |==> k > m
340:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:k < m |==> k >= m
341:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:k < m |==> false
342:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():533:k < m |==> true
343:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] |==> vK[i] % vK[j]
344:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] |==> vK[i] + vK[j]
345:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] |==> vK[i] - vK[j]
346:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] |==> vK[i] / vK[j]
347:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] / realEigenvalues[k] |==> vK[i] * vK[j] % realEigenvalues[k]
348:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] / realEigenvalues[k] |==> vK[i] * vK[j] * realEigenvalues[k]
349:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] / realEigenvalues[k] |==> vK[i] * vK[j] + realEigenvalues[k]
350:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:vK[i] * vK[j] / realEigenvalues[k] |==> vK[i] * vK[j] - realEigenvalues[k]
351:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():535:invIJ += vK[i] * vK[j] / realEigenvalues[k] |==> <NO-OP>
352:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl$Solver@getInverse():537:invI[j] = invIJ |==> <NO-OP>
353:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):553:transformer = new TriDiagonalTransformer(matrix) |==> <NO-OP>
354:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):554:main = transformer.getMainDiagonalRef() |==> <NO-OP>
355:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):555:secondary = transformer.getSecondaryDiagonalRef() |==> <NO-OP>
356:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):558:squaredSecondary = new double[secondary.length] |==> <NO-OP>
357:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:0 |==> 1
358:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:0 |==> -1
359:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:i < squaredSecondary.length |==> i != squaredSecondary.length
360:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:i < squaredSecondary.length |==> i <= squaredSecondary.length
361:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:i < squaredSecondary.length |==> i == squaredSecondary.length
362:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:i < squaredSecondary.length |==> i > squaredSecondary.length
363:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:i < squaredSecondary.length |==> i >= squaredSecondary.length
364:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:i < squaredSecondary.length |==> false
365:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):559:i < squaredSecondary.length |==> true
366:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):561:s * s |==> s % s
367:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):561:s * s |==> s + s
368:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):561:s * s |==> s - s
369:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):561:s * s |==> s / s
370:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@transformToTridiagonal(org.apache.commons.math.linear.RealMatrix):561:squaredSecondary[i] = s * s |==> <NO-OP>
371:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():572:4 |==> 0
372:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():572:4 |==> -4
373:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():572:4 * m |==> 4 % m
374:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():572:4 * m |==> 4 + m
375:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():572:4 * m |==> 4 - m
376:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():572:4 * m |==> 4 / m
377:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():573:5 |==> 0
378:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():573:5 |==> -5
379:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():573:5 * m |==> 5 % m
380:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():573:5 * m |==> 5 + m
381:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():573:5 * m |==> 5 - m
382:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():573:5 * m |==> 5 / m
383:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():574:lowerSpectra = Double.POSITIVE_INFINITY |==> <NO-OP>
384:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():575:upperSpectra = Double.NEGATIVE_INFINITY |==> <NO-OP>
385:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():576:0 |==> 1
386:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():576:0 |==> -1
387:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():578:0 |==> 1
388:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():578:0 |==> -1
389:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:0 |==> 1
390:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:0 |==> -1
391:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:1 |==> 0
392:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:1 |==> -1
393:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:m - 1 |==> m % 1
394:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:m - 1 |==> m * 1
395:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:m - 1 |==> m + 1
396:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:m - 1 |==> m / 1
397:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:i < m - 1 |==> i != m - 1
398:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:i < m - 1 |==> i <= m - 1
399:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:i < m - 1 |==> i == m - 1
400:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:i < m - 1 |==> i > m - 1
401:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:i < m - 1 |==> i >= m - 1
402:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:i < m - 1 |==> false
403:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():579:i < m - 1 |==> true
404:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():583:eCurrent = Math.abs(secondary[i]) |==> <NO-OP>
405:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():584:eMax = Math.max(eMax, eCurrent) |==> <NO-OP>
406:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():585:ePrevious + eCurrent |==> ePrevious % eCurrent
407:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():585:ePrevious + eCurrent |==> ePrevious * eCurrent
408:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():585:ePrevious + eCurrent |==> ePrevious - eCurrent
409:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():585:ePrevious + eCurrent |==> ePrevious / eCurrent
410:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():587:dCurrent - radius |==> dCurrent % radius
411:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():587:dCurrent - radius |==> dCurrent * radius
412:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():587:dCurrent - radius |==> dCurrent + radius
413:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():587:dCurrent - radius |==> dCurrent / radius
414:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():588:lowerStart + i |==> lowerStart % i
415:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():588:lowerStart + i |==> lowerStart * i
416:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():588:lowerStart + i |==> lowerStart - i
417:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():588:lowerStart + i |==> lowerStart / i
418:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():588:work[lowerStart + i] = lower |==> <NO-OP>
419:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():589:lowerSpectra = Math.min(lowerSpectra, lower) |==> <NO-OP>
420:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():591:dCurrent + radius |==> dCurrent % radius
421:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():591:dCurrent + radius |==> dCurrent * radius
422:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():591:dCurrent + radius |==> dCurrent - radius
423:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():591:dCurrent + radius |==> dCurrent / radius
424:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():592:upperStart + i |==> upperStart % i
425:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():592:upperStart + i |==> upperStart * i
426:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():592:upperStart + i |==> upperStart - i
427:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():592:upperStart + i |==> upperStart / i
428:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():592:work[upperStart + i] = upper |==> <NO-OP>
429:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():593:upperSpectra = Math.max(upperSpectra, upper) |==> <NO-OP>
430:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():597:1 |==> 0
431:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():597:1 |==> -1
432:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():597:m - 1 |==> m % 1
433:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():597:m - 1 |==> m * 1
434:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():597:m - 1 |==> m + 1
435:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():597:m - 1 |==> m / 1
436:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():598:dCurrent - eCurrent |==> dCurrent % eCurrent
437:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():598:dCurrent - eCurrent |==> dCurrent * eCurrent
438:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():598:dCurrent - eCurrent |==> dCurrent + eCurrent
439:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():598:dCurrent - eCurrent |==> dCurrent / eCurrent
440:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m |==> lowerStart % m
441:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m |==> lowerStart * m
442:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m |==> lowerStart - m
443:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m |==> lowerStart / m
444:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:1 |==> 0
445:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:1 |==> -1
446:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m - 1 |==> (lowerStart + m) % 1
447:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m - 1 |==> (lowerStart + m) * 1
448:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m - 1 |==> lowerStart + m + 1
449:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:lowerStart + m - 1 |==> (lowerStart + m) / 1
450:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():599:work[lowerStart + m - 1] = lower |==> <NO-OP>
451:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():600:lowerSpectra = Math.min(lowerSpectra, lower) |==> <NO-OP>
452:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():601:dCurrent + eCurrent |==> dCurrent % eCurrent
453:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():601:dCurrent + eCurrent |==> dCurrent * eCurrent
454:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():601:dCurrent + eCurrent |==> dCurrent - eCurrent
455:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():601:dCurrent + eCurrent |==> dCurrent / eCurrent
456:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m |==> upperStart % m
457:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m |==> upperStart * m
458:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m |==> upperStart - m
459:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m |==> upperStart / m
460:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:1 |==> 0
461:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:1 |==> -1
462:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m - 1 |==> (upperStart + m) % 1
463:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m - 1 |==> (upperStart + m) * 1
464:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m - 1 |==> upperStart + m + 1
465:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:upperStart + m - 1 |==> (upperStart + m) / 1
466:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():602:work[upperStart + m - 1] = upper |==> <NO-OP>
467:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():603:upperSpectra = Math.max(upperSpectra, upper) |==> <NO-OP>
468:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:1.0 |==> 0.0
469:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:1.0 |==> -1.0
470:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:eMax * eMax |==> eMax % eMax
471:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:eMax * eMax |==> eMax + eMax
472:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:eMax * eMax |==> eMax - eMax
473:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:eMax * eMax |==> eMax / eMax
474:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax) |==> MathUtils.SAFE_MIN % Math.max(1.0, eMax * eMax)
475:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax) |==> MathUtils.SAFE_MIN + Math.max(1.0, eMax * eMax)
476:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax) |==> MathUtils.SAFE_MIN - Math.max(1.0, eMax * eMax)
477:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax) |==> MathUtils.SAFE_MIN / Math.max(1.0, eMax * eMax)
478:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeGershgorinCircles():604:minPivot = MathUtils.SAFE_MIN * Math.max(1.0, eMax * eMax) |==> <NO-OP>
479:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():619:realEigenvalues = new double[main.length] |==> <NO-OP>
480:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():620:imagEigenvalues = new double[main.length] |==> <NO-OP>
481:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():621:0 |==> 1
482:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():621:0 |==> -1
483:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():623:end - begin |==> end % begin
484:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():623:end - begin |==> end * begin
485:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():623:end - begin |==> end + begin
486:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():623:end - begin |==> end / begin
487:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():628:process1RowBlock(begin) |==> <NO-OP>
488:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():633:process2RowsBlock(begin) |==> <NO-OP>
489:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():638:process3RowsBlock(begin) |==> <NO-OP>
490:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0.25 |==> 0.0
491:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0.25 |==> -0.25
492:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 |==> 0
493:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 |==> -3
494:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0 |==> 1
495:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0 |==> -1
496:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] |==> 3 % range[0]
497:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] |==> 3 + range[0]
498:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] |==> 3 - range[0]
499:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] |==> 3 / range[0]
500:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:1 |==> 0
501:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:1 |==> -1
502:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] + range[1] |==> 3 * range[0] % range[1]
503:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] + range[1] |==> 3 * range[0] * range[1]
504:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] + range[1] |==> 3 * range[0] - range[1]
505:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:3 * range[0] + range[1] |==> 3 * range[0] / range[1]
506:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0.25 * (3 * range[0] + range[1]) |==> 0.25 % (3 * range[0] + range[1])
507:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0.25 * (3 * range[0] + range[1]) |==> 0.25 + (3 * range[0] + range[1])
508:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0.25 * (3 * range[0] + range[1]) |==> 0.25 - (3 * range[0] + range[1])
509:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():645:0.25 * (3 * range[0] + range[1]) |==> 0.25 / (3 * range[0] + range[1])
510:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0.25 |==> 0.0
511:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0.25 |==> -0.25
512:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0 |==> 1
513:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0 |==> -1
514:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:3 |==> 0
515:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:3 |==> -3
516:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:1 |==> 0
517:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:1 |==> -1
518:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:3 * range[1] |==> 3 % range[1]
519:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:3 * range[1] |==> 3 + range[1]
520:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:3 * range[1] |==> 3 - range[1]
521:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:3 * range[1] |==> 3 / range[1]
522:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:range[0] + 3 * range[1] |==> range[0] % (3 * range[1])
523:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:range[0] + 3 * range[1] |==> range[0] * (3 * range[1])
524:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:range[0] + 3 * range[1] |==> range[0] - 3 * range[1]
525:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:range[0] + 3 * range[1] |==> range[0] / (3 * range[1])
526:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0.25 * (range[0] + 3 * range[1]) |==> 0.25 % (range[0] + 3 * range[1])
527:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0.25 * (range[0] + 3 * range[1]) |==> 0.25 + (range[0] + 3 * range[1])
528:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0.25 * (range[0] + 3 * range[1]) |==> 0.25 - (range[0] + 3 * range[1])
529:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():647:0.25 * (range[0] + 3 * range[1]) |==> 0.25 / (range[0] + 3 * range[1])
530:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:1 |==> 0
531:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:1 |==> -1
532:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:oneFourthCount - 1 |==> oneFourthCount % 1
533:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:oneFourthCount - 1 |==> oneFourthCount * 1
534:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:oneFourthCount - 1 |==> oneFourthCount + 1
535:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:oneFourthCount - 1 |==> oneFourthCount / 1
536:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:n - threeFourthCount |==> n % threeFourthCount
537:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:n - threeFourthCount |==> n * threeFourthCount
538:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:n - threeFourthCount |==> n + threeFourthCount
539:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:n - threeFourthCount |==> n / threeFourthCount
540:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:(oneFourthCount - 1) >= (n - threeFourthCount) |==> (oneFourthCount - 1) != (n - threeFourthCount)
541:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:(oneFourthCount - 1) >= (n - threeFourthCount) |==> (oneFourthCount - 1) < (n - threeFourthCount)
542:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:(oneFourthCount - 1) >= (n - threeFourthCount) |==> (oneFourthCount - 1) <= (n - threeFourthCount)
543:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:(oneFourthCount - 1) >= (n - threeFourthCount) |==> (oneFourthCount - 1) == (n - threeFourthCount)
544:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:(oneFourthCount - 1) >= (n - threeFourthCount) |==> (oneFourthCount - 1) > (n - threeFourthCount)
545:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:(oneFourthCount - 1) >= (n - threeFourthCount) |==> false
546:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():649:(oneFourthCount - 1) >= (n - threeFourthCount) |==> true
547:COR:chooseLeft:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():650:chooseLeft |==> false
548:COR:chooseLeft:FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():650:chooseLeft |==> true
549:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():650:0 |==> 1
550:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():650:0 |==> -1
551:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():650:1 |==> 0
552:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():650:1 |==> -1
553:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:1 |==> 0
554:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:1 |==> -1
555:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:0 |==> 1
556:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:0 |==> -1
557:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:range[1] - range[0] |==> range[1] % range[0]
558:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:range[1] - range[0] |==> range[1] * range[0]
559:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:range[1] - range[0] |==> range[1] + range[0]
560:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:range[1] - range[0] |==> range[1] / range[0]
561:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON |==> (range[1] - range[0]) % MathUtils.EPSILON
562:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON |==> (range[1] - range[0]) + MathUtils.EPSILON
563:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON |==> (range[1] - range[0]) - MathUtils.EPSILON
564:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON |==> (range[1] - range[0]) / MathUtils.EPSILON
565:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n |==> (range[1] - range[0]) * MathUtils.EPSILON % n
566:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n |==> (range[1] - range[0]) * MathUtils.EPSILON + n
567:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n |==> (range[1] - range[0]) * MathUtils.EPSILON - n
568:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n |==> (range[1] - range[0]) * MathUtils.EPSILON / n
569:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:2 |==> 0
570:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:2 |==> -2
571:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:2 * minPivot |==> 2 % minPivot
572:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:2 * minPivot |==> 2 + minPivot
573:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:2 * minPivot |==> 2 - minPivot
574:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:2 * minPivot |==> 2 / minPivot
575:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n + 2 * minPivot |==> (range[1] - range[0]) * MathUtils.EPSILON * n % (2 * minPivot)
576:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n + 2 * minPivot |==> (range[1] - range[0]) * MathUtils.EPSILON * n * (2 * minPivot)
577:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n + 2 * minPivot |==> (range[1] - range[0]) * MathUtils.EPSILON * n - 2 * minPivot
578:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:(range[1] - range[0]) * MathUtils.EPSILON * n + 2 * minPivot |==> (range[1] - range[0]) * MathUtils.EPSILON * n / (2 * minPivot)
579:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():652:tau = (range[1] - range[0]) * MathUtils.EPSILON * n + 2 * minPivot |==> <NO-OP>
580:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():655:ldlTDecomposition(lambda, begin, n) |==> <NO-OP>
581:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():658:processGeneralBlock(n) |==> <NO-OP>
582:COR:chooseLeft:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():661:chooseLeft |==> false
583:COR:chooseLeft:FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():661:chooseLeft |==> true
584:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:0 |==> 1
585:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:0 |==> -1
586:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:i < n |==> i != n
587:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:i < n |==> i <= n
588:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:i < n |==> i == n
589:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:i < n |==> i > n
590:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:i < n |==> i >= n
591:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:i < n |==> false
592:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():662:i < n |==> true
593:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:begin + i |==> begin % i
594:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:begin + i |==> begin * i
595:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:begin + i |==> begin - i
596:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:begin + i |==> begin / i
597:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:4 |==> 0
598:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:4 |==> -4
599:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:4 * i |==> 4 % i
600:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:4 * i |==> 4 + i
601:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:4 * i |==> 4 - i
602:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:4 * i |==> 4 / i
603:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:lambda + work[4 * i] |==> lambda % work[4 * i]
604:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:lambda + work[4 * i] |==> lambda * work[4 * i]
605:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:lambda + work[4 * i] |==> lambda - work[4 * i]
606:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:lambda + work[4 * i] |==> lambda / work[4 * i]
607:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():663:realEigenvalues[begin + i] = lambda + work[4 * i] |==> <NO-OP>
608:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:0 |==> 1
609:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:0 |==> -1
610:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:i < n |==> i != n
611:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:i < n |==> i <= n
612:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:i < n |==> i == n
613:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:i < n |==> i > n
614:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:i < n |==> i >= n
615:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:i < n |==> false
616:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():666:i < n |==> true
617:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:begin + i |==> begin % i
618:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:begin + i |==> begin * i
619:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:begin + i |==> begin - i
620:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:begin + i |==> begin / i
621:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:4 |==> 0
622:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:4 |==> -4
623:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:4 * i |==> 4 % i
624:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:4 * i |==> 4 + i
625:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:4 * i |==> 4 - i
626:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:4 * i |==> 4 / i
627:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:lambda - work[4 * i] |==> lambda % work[4 * i]
628:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:lambda - work[4 * i] |==> lambda * work[4 * i]
629:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:lambda - work[4 * i] |==> lambda + work[4 * i]
630:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:lambda - work[4 * i] |==> lambda / work[4 * i]
631:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():667:realEigenvalues[begin + i] = lambda - work[4 * i] |==> <NO-OP>
632:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():672:begin = end |==> <NO-OP>
633:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():676:Arrays.sort(realEigenvalues) |==> <NO-OP>
634:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():677:1 |==> 0
635:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():677:1 |==> -1
636:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():677:realEigenvalues.length - 1 |==> realEigenvalues.length % 1
637:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():677:realEigenvalues.length - 1 |==> realEigenvalues.length * 1
638:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():677:realEigenvalues.length - 1 |==> realEigenvalues.length + 1
639:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():677:realEigenvalues.length - 1 |==> realEigenvalues.length / 1
640:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:0 |==> 1
641:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:0 |==> -1
642:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:i < j |==> i != j
643:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:i < j |==> i <= j
644:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:i < j |==> i == j
645:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:i < j |==> i > j
646:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:i < j |==> i >= j
647:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:i < j |==> false
648:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():678:i < j |==> true
649:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():680:realEigenvalues[i] = realEigenvalues[j] |==> <NO-OP>
650:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():681:realEigenvalues[j] = tmp |==> <NO-OP>
651:STD:<DEC>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvalues():682:--j |==> <NO-OP>
652:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():696:0 |==> 1
653:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():696:0 |==> -1
654:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:0 |==> 1
655:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:0 |==> -1
656:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:i < secondary.length |==> i != secondary.length
657:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:i < secondary.length |==> i <= secondary.length
658:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:i < secondary.length |==> i == secondary.length
659:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:i < secondary.length |==> i > secondary.length
660:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:i < secondary.length |==> i >= secondary.length
661:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:i < secondary.length |==> false
662:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():697:i < secondary.length |==> true
663:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():699:1 |==> 0
664:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():699:1 |==> -1
665:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():699:i + 1 |==> i % 1
666:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():699:i + 1 |==> i * 1
667:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():699:i + 1 |==> i - 1
668:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():699:i + 1 |==> i / 1
669:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():699:absDCurrent = Math.abs(main[i + 1]) |==> <NO-OP>
670:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:absDPrevious * absDCurrent |==> absDPrevious % absDCurrent
671:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:absDPrevious * absDCurrent |==> absDPrevious + absDCurrent
672:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:absDPrevious * absDCurrent |==> absDPrevious - absDCurrent
673:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:absDPrevious * absDCurrent |==> absDPrevious / absDCurrent
674:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:splitTolerance * Math.sqrt(absDPrevious * absDCurrent) |==> splitTolerance % Math.sqrt(absDPrevious * absDCurrent)
675:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:splitTolerance * Math.sqrt(absDPrevious * absDCurrent) |==> splitTolerance + Math.sqrt(absDPrevious * absDCurrent)
676:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:splitTolerance * Math.sqrt(absDPrevious * absDCurrent) |==> splitTolerance - Math.sqrt(absDPrevious * absDCurrent)
677:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():700:splitTolerance * Math.sqrt(absDPrevious * absDCurrent) |==> splitTolerance / Math.sqrt(absDPrevious * absDCurrent)
678:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():701:Math.abs(secondary[i]) <= max |==> Math.abs(secondary[i]) != max
679:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():701:Math.abs(secondary[i]) <= max |==> Math.abs(secondary[i]) < max
680:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():701:Math.abs(secondary[i]) <= max |==> Math.abs(secondary[i]) == max
681:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():701:Math.abs(secondary[i]) <= max |==> Math.abs(secondary[i]) > max
682:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():701:Math.abs(secondary[i]) <= max |==> Math.abs(secondary[i]) >= max
683:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():701:Math.abs(secondary[i]) <= max |==> false
684:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():701:Math.abs(secondary[i]) <= max |==> true
685:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():702:1 |==> 0
686:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():702:1 |==> -1
687:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():702:i + 1 |==> i % 1
688:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():702:i + 1 |==> i * 1
689:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():702:i + 1 |==> i - 1
690:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():702:i + 1 |==> i / 1
691:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():702:list.add(i + 1) |==> <NO-OP>
692:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():703:0 |==> 1
693:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():703:0 |==> -1
694:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():703:secondary[i] = 0 |==> <NO-OP>
695:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():704:0 |==> 1
696:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():704:0 |==> -1
697:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():704:squaredSecondary[i] = 0 |==> <NO-OP>
698:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():708:1 |==> 0
699:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():708:1 |==> -1
700:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():708:secondary.length + 1 |==> secondary.length % 1
701:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():708:secondary.length + 1 |==> secondary.length * 1
702:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():708:secondary.length + 1 |==> secondary.length - 1
703:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():708:secondary.length + 1 |==> secondary.length / 1
704:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeSplits():708:list.add(secondary.length + 1) |==> <NO-OP>
705:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process1RowBlock(int):719:realEigenvalues[index] = main[index] |==> <NO-OP>
706:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):734:1 |==> 0
707:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):734:1 |==> -1
708:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):734:index + 1 |==> index % 1
709:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):734:index + 1 |==> index * 1
710:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):734:index + 1 |==> index - 1
711:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):734:index + 1 |==> index / 1
712:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):737:q0 + q1 |==> q0 % q1
713:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):737:q0 + q1 |==> q0 * q1
714:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):737:q0 + q1 |==> q0 - q1
715:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):737:q0 + q1 |==> q0 / q1
716:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 |==> q0 % q1
717:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 |==> q0 + q1
718:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 |==> q0 - q1
719:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 |==> q0 / q1
720:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 - e12 |==> q0 * q1 % e12
721:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 - e12 |==> q0 * q1 * e12
722:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 - e12 |==> q0 * q1 + e12
723:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):738:q0 * q1 - e12 |==> q0 * q1 / e12
724:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s |==> s % s
725:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s |==> s + s
726:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s |==> s - s
727:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s |==> s / s
728:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:4 |==> 0
729:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:4 |==> -4
730:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:4 * p |==> 4 % p
731:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:4 * p |==> 4 + p
732:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:4 * p |==> 4 - p
733:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:4 * p |==> 4 / p
734:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s - 4 * p |==> s * s % (4 * p)
735:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s - 4 * p |==> s * s * (4 * p)
736:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s - 4 * p |==> s * s + 4 * p
737:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):739:s * s - 4 * p |==> s * s / (4 * p)
738:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:0 |==> 1
739:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:0 |==> -1
740:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:delta < 0 |==> delta != 0
741:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:delta < 0 |==> delta <= 0
742:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:delta < 0 |==> delta == 0
743:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:delta < 0 |==> delta > 0
744:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:delta < 0 |==> delta >= 0
745:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:delta < 0 |==> false
746:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):740:delta < 0 |==> true
747:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):741:2 |==> 0
748:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):741:2 |==> -2
749:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:0.5 |==> 0.0
750:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:0.5 |==> -0.5
751:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:s + Math.sqrt(delta) |==> s % Math.sqrt(delta)
752:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:s + Math.sqrt(delta) |==> s * Math.sqrt(delta)
753:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:s + Math.sqrt(delta) |==> s - Math.sqrt(delta)
754:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:s + Math.sqrt(delta) |==> s / Math.sqrt(delta)
755:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:0.5 * (s + Math.sqrt(delta)) |==> 0.5 % (s + Math.sqrt(delta))
756:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:0.5 * (s + Math.sqrt(delta)) |==> 0.5 + (s + Math.sqrt(delta))
757:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:0.5 * (s + Math.sqrt(delta)) |==> 0.5 - (s + Math.sqrt(delta))
758:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):744:0.5 * (s + Math.sqrt(delta)) |==> 0.5 / (s + Math.sqrt(delta))
759:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):745:realEigenvalues[index] = largestRoot |==> <NO-OP>
760:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:1 |==> 0
761:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:1 |==> -1
762:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:index + 1 |==> index % 1
763:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:index + 1 |==> index * 1
764:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:index + 1 |==> index - 1
765:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:index + 1 |==> index / 1
766:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:p / largestRoot |==> p % largestRoot
767:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:p / largestRoot |==> p * largestRoot
768:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:p / largestRoot |==> p + largestRoot
769:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:p / largestRoot |==> p - largestRoot
770:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process2RowsBlock(int):746:realEigenvalues[index + 1] = p / largestRoot |==> <NO-OP>
771:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):762:1 |==> 0
772:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):762:1 |==> -1
773:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):762:index + 1 |==> index % 1
774:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):762:index + 1 |==> index * 1
775:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):762:index + 1 |==> index - 1
776:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):762:index + 1 |==> index / 1
777:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):763:2 |==> 0
778:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):763:2 |==> -2
779:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):763:index + 2 |==> index % 2
780:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):763:index + 2 |==> index * 2
781:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):763:index + 2 |==> index - 2
782:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):763:index + 2 |==> index / 2
783:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 |==> q1 % q2
784:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 |==> q1 + q2
785:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 |==> q1 - q2
786:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 |==> q1 / q2
787:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:1 |==> 0
788:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:1 |==> -1
789:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:index + 1 |==> index % 1
790:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:index + 1 |==> index * 1
791:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:index + 1 |==> index - 1
792:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:index + 1 |==> index / 1
793:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 - squaredSecondary[index + 1] |==> q1 * q2 % squaredSecondary[index + 1]
794:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 - squaredSecondary[index + 1] |==> q1 * q2 * squaredSecondary[index + 1]
795:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 - squaredSecondary[index + 1] |==> q1 * q2 + squaredSecondary[index + 1]
796:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):765:q1 * q2 - squaredSecondary[index + 1] |==> q1 * q2 / squaredSecondary[index + 1]
797:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:-(q0 + q1 + q2) |==> +(q0 + q1 + q2)
798:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 |==> q0 % q1
799:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 |==> q0 * q1
800:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 |==> q0 - q1
801:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 |==> q0 / q1
802:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 + q2 |==> (q0 + q1) % q2
803:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 + q2 |==> (q0 + q1) * q2
804:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 + q2 |==> q0 + q1 - q2
805:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):768:q0 + q1 + q2 |==> (q0 + q1) / q2
806:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 |==> q0 % q1
807:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 |==> q0 + q1
808:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 |==> q0 - q1
809:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 |==> q0 / q1
810:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q2 |==> q0 % q2
811:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q2 |==> q0 + q2
812:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q2 |==> q0 - q2
813:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q2 |==> q0 / q2
814:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 |==> q0 * q1 % (q0 * q2)
815:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 |==> q0 * q1 * (q0 * q2)
816:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 |==> q0 * q1 - q0 * q2
817:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 |==> q0 * q1 / (q0 * q2)
818:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 |==> (q0 * q1 + q0 * q2) % q1q2Me22
819:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 |==> (q0 * q1 + q0 * q2) * q1q2Me22
820:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 |==> q0 * q1 + q0 * q2 - q1q2Me22
821:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 |==> (q0 * q1 + q0 * q2) / q1q2Me22
822:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 - e12 |==> (q0 * q1 + q0 * q2 + q1q2Me22) % e12
823:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 - e12 |==> (q0 * q1 + q0 * q2 + q1q2Me22) * e12
824:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 - e12 |==> q0 * q1 + q0 * q2 + q1q2Me22 + e12
825:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):769:q0 * q1 + q0 * q2 + q1q2Me22 - e12 |==> (q0 * q1 + q0 * q2 + q1q2Me22) / e12
826:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 |==> q2 % e12
827:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 |==> q2 + e12
828:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 |==> q2 - e12
829:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 |==> q2 / e12
830:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q0 * q1q2Me22 |==> q0 % q1q2Me22
831:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q0 * q1q2Me22 |==> q0 + q1q2Me22
832:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q0 * q1q2Me22 |==> q0 - q1q2Me22
833:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q0 * q1q2Me22 |==> q0 / q1q2Me22
834:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 - q0 * q1q2Me22 |==> q2 * e12 % (q0 * q1q2Me22)
835:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 - q0 * q1q2Me22 |==> q2 * e12 * (q0 * q1q2Me22)
836:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 - q0 * q1q2Me22 |==> q2 * e12 + q0 * q1q2Me22
837:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):770:q2 * e12 - q0 * q1q2Me22 |==> q2 * e12 / (q0 * q1q2Me22)
838:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):773:b * b |==> b % b
839:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):773:b * b |==> b + b
840:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):773:b * b |==> b - b
841:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):773:b * b |==> b / b
842:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 |==> 0
843:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 |==> -3
844:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c |==> 3 % c
845:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c |==> 3 + c
846:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c |==> 3 - c
847:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c |==> 3 / c
848:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c - b2 |==> 3 * c % b2
849:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c - b2 |==> 3 * c * b2
850:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c - b2 |==> 3 * c + b2
851:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:3 * c - b2 |==> 3 * c / b2
852:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:9 |==> 0
853:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:9 |==> -9
854:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:(3 * c - b2) / 9 |==> (3 * c - b2) % 9
855:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:(3 * c - b2) / 9 |==> (3 * c - b2) * 9
856:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:(3 * c - b2) / 9 |==> (3 * c - b2) + 9
857:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):774:(3 * c - b2) / 9 |==> (3 * c - b2) - 9
858:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 |==> 0
859:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 |==> -9
860:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c |==> 9 % c
861:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c |==> 9 + c
862:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c |==> 9 - c
863:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c |==> 9 / c
864:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:2 |==> 0
865:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:2 |==> -2
866:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:2 * b2 |==> 2 % b2
867:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:2 * b2 |==> 2 + b2
868:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:2 * b2 |==> 2 - b2
869:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:2 * b2 |==> 2 / b2
870:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c - 2 * b2 |==> 9 * c % (2 * b2)
871:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c - 2 * b2 |==> 9 * c * (2 * b2)
872:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c - 2 * b2 |==> 9 * c + 2 * b2
873:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:9 * c - 2 * b2 |==> 9 * c / (2 * b2)
874:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b |==> (9 * c - 2 * b2) % b
875:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b |==> (9 * c - 2 * b2) + b
876:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b |==> (9 * c - 2 * b2) - b
877:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b |==> (9 * c - 2 * b2) / b
878:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:27 |==> 0
879:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:27 |==> -27
880:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:27 * d |==> 27 % d
881:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:27 * d |==> 27 + d
882:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:27 * d |==> 27 - d
883:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:27 * d |==> 27 / d
884:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b - 27 * d |==> (9 * c - 2 * b2) * b % (27 * d)
885:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b - 27 * d |==> (9 * c - 2 * b2) * b * (27 * d)
886:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b - 27 * d |==> (9 * c - 2 * b2) * b + 27 * d
887:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:(9 * c - 2 * b2) * b - 27 * d |==> (9 * c - 2 * b2) * b / (27 * d)
888:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:54 |==> 0
889:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:54 |==> -54
890:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:((9 * c - 2 * b2) * b - 27 * d) / 54 |==> ((9 * c - 2 * b2) * b - 27 * d) % 54
891:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:((9 * c - 2 * b2) * b - 27 * d) / 54 |==> ((9 * c - 2 * b2) * b - 27 * d) * 54
892:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:((9 * c - 2 * b2) * b - 27 * d) / 54 |==> ((9 * c - 2 * b2) * b - 27 * d) + 54
893:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):775:((9 * c - 2 * b2) * b - 27 * d) / 54 |==> ((9 * c - 2 * b2) * b - 27 * d) - 54
894:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q |==> q % q
895:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q |==> q + q
896:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q |==> q - q
897:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q |==> q / q
898:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q |==> q * q % q
899:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q |==> q * q + q
900:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q |==> q * q - q
901:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q |==> q * q / q
902:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:r * r |==> r % r
903:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:r * r |==> r + r
904:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:r * r |==> r - r
905:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:r * r |==> r / r
906:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q + r * r |==> q * q * q % (r * r)
907:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q + r * r |==> q * q * q * (r * r)
908:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q + r * r |==> q * q * q - r * r
909:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):776:q * q * q + r * r |==> q * q * q / (r * r)
910:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:0 |==> 1
911:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:0 |==> -1
912:ROR:>=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:delta >= 0 |==> delta != 0
913:ROR:>=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:delta >= 0 |==> delta < 0
914:ROR:>=(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:delta >= 0 |==> delta <= 0
915:ROR:>=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:delta >= 0 |==> delta == 0
916:ROR:>=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:delta >= 0 |==> delta > 0
917:ROR:>=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:delta >= 0 |==> false
918:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):777:delta >= 0 |==> true
919:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):781:3 |==> 0
920:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):781:3 |==> -3
921:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):783:-q |==> +q
922:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:-q |==> +q
923:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:-q * sqrtMq |==> -q % sqrtMq
924:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:-q * sqrtMq |==> -q + sqrtMq
925:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:-q * sqrtMq |==> -q - sqrtMq
926:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:-q * sqrtMq |==> -q / sqrtMq
927:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:r / (-q * sqrtMq) |==> r % (-q * sqrtMq)
928:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:r / (-q * sqrtMq) |==> r * (-q * sqrtMq)
929:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:r / (-q * sqrtMq) |==> r + (-q * sqrtMq)
930:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):784:r / (-q * sqrtMq) |==> r - (-q * sqrtMq)
931:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):785:2 |==> 0
932:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):785:2 |==> -2
933:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):785:2 * sqrtMq |==> 2 % sqrtMq
934:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):785:2 * sqrtMq |==> 2 + sqrtMq
935:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):785:2 * sqrtMq |==> 2 - sqrtMq
936:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):785:2 * sqrtMq |==> 2 / sqrtMq
937:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):786:3 |==> 0
938:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):786:3 |==> -3
939:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):786:b / 3 |==> b % 3
940:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):786:b / 3 |==> b * 3
941:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):786:b / 3 |==> b + 3
942:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):786:b / 3 |==> b - 3
943:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:3 |==> 0
944:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:3 |==> -3
945:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:theta / 3 |==> theta % 3
946:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:theta / 3 |==> theta * 3
947:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:theta / 3 |==> theta + 3
948:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:theta / 3 |==> theta - 3
949:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) |==> alpha % Math.cos(theta / 3)
950:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) |==> alpha + Math.cos(theta / 3)
951:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) |==> alpha - Math.cos(theta / 3)
952:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) |==> alpha / Math.cos(theta / 3)
953:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) - beta |==> alpha * Math.cos(theta / 3) % beta
954:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) - beta |==> alpha * Math.cos(theta / 3) * beta
955:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) - beta |==> alpha * Math.cos(theta / 3) + beta
956:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):788:alpha * Math.cos(theta / 3) - beta |==> alpha * Math.cos(theta / 3) / beta
957:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:2 |==> 0
958:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:2 |==> -2
959:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:2 * Math.PI |==> 2 % Math.PI
960:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:2 * Math.PI |==> 2 + Math.PI
961:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:2 * Math.PI |==> 2 - Math.PI
962:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:2 * Math.PI |==> 2 / Math.PI
963:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:theta + 2 * Math.PI |==> theta % (2 * Math.PI)
964:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:theta + 2 * Math.PI |==> theta * (2 * Math.PI)
965:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:theta + 2 * Math.PI |==> theta - 2 * Math.PI
966:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:theta + 2 * Math.PI |==> theta / (2 * Math.PI)
967:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:3 |==> 0
968:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:3 |==> -3
969:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:(theta + 2 * Math.PI) / 3 |==> (theta + 2 * Math.PI) % 3
970:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:(theta + 2 * Math.PI) / 3 |==> (theta + 2 * Math.PI) * 3
971:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:(theta + 2 * Math.PI) / 3 |==> (theta + 2 * Math.PI) + 3
972:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:(theta + 2 * Math.PI) / 3 |==> (theta + 2 * Math.PI) - 3
973:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) |==> alpha % Math.cos((theta + 2 * Math.PI) / 3)
974:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) |==> alpha + Math.cos((theta + 2 * Math.PI) / 3)
975:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) |==> alpha - Math.cos((theta + 2 * Math.PI) / 3)
976:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) |==> alpha / Math.cos((theta + 2 * Math.PI) / 3)
977:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 2 * Math.PI) / 3) % beta
978:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 2 * Math.PI) / 3) * beta
979:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 2 * Math.PI) / 3) + beta
980:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):789:alpha * Math.cos((theta + 2 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 2 * Math.PI) / 3) / beta
981:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:4 |==> 0
982:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:4 |==> -4
983:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:4 * Math.PI |==> 4 % Math.PI
984:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:4 * Math.PI |==> 4 + Math.PI
985:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:4 * Math.PI |==> 4 - Math.PI
986:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:4 * Math.PI |==> 4 / Math.PI
987:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:theta + 4 * Math.PI |==> theta % (4 * Math.PI)
988:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:theta + 4 * Math.PI |==> theta * (4 * Math.PI)
989:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:theta + 4 * Math.PI |==> theta - 4 * Math.PI
990:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:theta + 4 * Math.PI |==> theta / (4 * Math.PI)
991:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:3 |==> 0
992:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:3 |==> -3
993:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:(theta + 4 * Math.PI) / 3 |==> (theta + 4 * Math.PI) % 3
994:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:(theta + 4 * Math.PI) / 3 |==> (theta + 4 * Math.PI) * 3
995:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:(theta + 4 * Math.PI) / 3 |==> (theta + 4 * Math.PI) + 3
996:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:(theta + 4 * Math.PI) / 3 |==> (theta + 4 * Math.PI) - 3
997:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) |==> alpha % Math.cos((theta + 4 * Math.PI) / 3)
998:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) |==> alpha + Math.cos((theta + 4 * Math.PI) / 3)
999:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) |==> alpha - Math.cos((theta + 4 * Math.PI) / 3)
1000:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) |==> alpha / Math.cos((theta + 4 * Math.PI) / 3)
1001:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 4 * Math.PI) / 3) % beta
1002:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 4 * Math.PI) / 3) * beta
1003:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 4 * Math.PI) / 3) + beta
1004:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):790:alpha * Math.cos((theta + 4 * Math.PI) / 3) - beta |==> alpha * Math.cos((theta + 4 * Math.PI) / 3) / beta
1005:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):791:z0 < z1 |==> z0 != z1
1006:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):791:z0 < z1 |==> z0 <= z1
1007:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):791:z0 < z1 |==> z0 == z1
1008:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):791:z0 < z1 |==> z0 > z1
1009:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):791:z0 < z1 |==> z0 >= z1
1010:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):791:z0 < z1 |==> false
1011:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):791:z0 < z1 |==> true
1012:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):793:z0 = z1 |==> <NO-OP>
1013:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):794:z1 = t |==> <NO-OP>
1014:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):796:z1 < z2 |==> z1 != z2
1015:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):796:z1 < z2 |==> z1 <= z2
1016:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):796:z1 < z2 |==> z1 == z2
1017:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):796:z1 < z2 |==> z1 > z2
1018:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):796:z1 < z2 |==> z1 >= z2
1019:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):796:z1 < z2 |==> false
1020:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):796:z1 < z2 |==> true
1021:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):798:z1 = z2 |==> <NO-OP>
1022:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):799:z2 = t |==> <NO-OP>
1023:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):801:z0 < z1 |==> z0 != z1
1024:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):801:z0 < z1 |==> z0 <= z1
1025:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):801:z0 < z1 |==> z0 == z1
1026:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):801:z0 < z1 |==> z0 > z1
1027:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):801:z0 < z1 |==> z0 >= z1
1028:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):801:z0 < z1 |==> false
1029:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):801:z0 < z1 |==> true
1030:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):803:z0 = z1 |==> <NO-OP>
1031:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):804:z1 = t |==> <NO-OP>
1032:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):806:realEigenvalues[index] = z0 |==> <NO-OP>
1033:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):807:1 |==> 0
1034:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):807:1 |==> -1
1035:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):807:index + 1 |==> index % 1
1036:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):807:index + 1 |==> index * 1
1037:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):807:index + 1 |==> index - 1
1038:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):807:index + 1 |==> index / 1
1039:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):807:realEigenvalues[index + 1] = z1 |==> <NO-OP>
1040:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):808:2 |==> 0
1041:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):808:2 |==> -2
1042:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):808:index + 2 |==> index % 2
1043:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):808:index + 2 |==> index * 2
1044:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):808:index + 2 |==> index - 2
1045:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):808:index + 2 |==> index / 2
1046:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@process3RowsBlock(int):808:realEigenvalues[index + 2] = z2 |==> <NO-OP>
1047:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):827:0 |==> 1
1048:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):827:0 |==> -1
1049:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:0 |==> 1
1050:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:0 |==> -1
1051:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:1 |==> 0
1052:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:1 |==> -1
1053:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:n - 1 |==> n % 1
1054:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:n - 1 |==> n * 1
1055:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:n - 1 |==> n + 1
1056:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:n - 1 |==> n / 1
1057:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:i < n - 1 |==> i != n - 1
1058:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:i < n - 1 |==> i <= n - 1
1059:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:i < n - 1 |==> i == n - 1
1060:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:i < n - 1 |==> i > n - 1
1061:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:i < n - 1 |==> i >= n - 1
1062:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:i < n - 1 |==> false
1063:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):828:i < n - 1 |==> true
1064:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):829:4 |==> 0
1065:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):829:4 |==> -4
1066:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):829:4 * i |==> 4 % i
1067:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):829:4 * i |==> 4 + i
1068:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):829:4 * i |==> 4 - i
1069:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):829:4 * i |==> 4 / i
1070:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):830:2 |==> 0
1071:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):830:2 |==> -2
1072:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):830:fourI + 2 |==> fourI % 2
1073:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):830:fourI + 2 |==> fourI * 2
1074:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):830:fourI + 2 |==> fourI - 2
1075:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):830:fourI + 2 |==> fourI / 2
1076:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):831:sumOffDiag += ei |==> <NO-OP>
1077:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:0 |==> 1
1078:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:0 |==> -1
1079:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:sumOffDiag == 0 |==> sumOffDiag != 0
1080:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:sumOffDiag == 0 |==> sumOffDiag < 0
1081:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:sumOffDiag == 0 |==> sumOffDiag <= 0
1082:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:sumOffDiag == 0 |==> sumOffDiag > 0
1083:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:sumOffDiag == 0 |==> sumOffDiag >= 0
1084:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:sumOffDiag == 0 |==> false
1085:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):834:sumOffDiag == 0 |==> true
1086:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):840:2 |==> 0
1087:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):840:2 |==> -2
1088:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):840:flipIfWarranted(n, 2) |==> <NO-OP>
1089:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):843:initialSplits(n) |==> <NO-OP>
1090:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):846:0 |==> 1
1091:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):846:0 |==> -1
1092:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):846:tType = 0 |==> <NO-OP>
1093:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):847:0 |==> 1
1094:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):847:0 |==> -1
1095:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):847:dMin1 = 0 |==> <NO-OP>
1096:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):848:0 |==> 1
1097:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):848:0 |==> -1
1098:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):848:dMin2 = 0 |==> <NO-OP>
1099:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):849:0 |==> 1
1100:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):849:0 |==> -1
1101:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):849:dN = 0 |==> <NO-OP>
1102:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):850:0 |==> 1
1103:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):850:0 |==> -1
1104:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):850:dN1 = 0 |==> <NO-OP>
1105:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):851:0 |==> 1
1106:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):851:0 |==> -1
1107:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):851:dN2 = 0 |==> <NO-OP>
1108:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):852:0 |==> 1
1109:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):852:0 |==> -1
1110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):852:tau = 0 |==> <NO-OP>
1111:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):855:0 |==> 1
1112:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):855:0 |==> -1
1113:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:0 |==> 1
1114:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:0 |==> -1
1115:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:n0 > 0 |==> n0 != 0
1116:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:n0 > 0 |==> n0 < 0
1117:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:n0 > 0 |==> n0 <= 0
1118:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:n0 > 0 |==> n0 == 0
1119:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:n0 > 0 |==> n0 >= 0
1120:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:n0 > 0 |==> false
1121:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):857:n0 > 0 |==> true
1122:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:n0 == n |==> n0 != n
1123:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:n0 == n |==> n0 < n
1124:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:n0 == n |==> n0 <= n
1125:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:n0 == n |==> n0 > n
1126:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:n0 == n |==> n0 >= n
1127:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:n0 == n |==> false
1128:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:n0 == n |==> true
1129:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:0 |==> 1
1130:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:0 |==> -1
1131:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:-work[4 * n0 - 2] |==> +work[4 * n0 - 2]
1132:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 |==> 0
1133:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 |==> -4
1134:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 |==> 4 % n0
1135:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 |==> 4 + n0
1136:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 |==> 4 - n0
1137:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 |==> 4 / n0
1138:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:2 |==> 0
1139:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:2 |==> -2
1140:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 - 2 |==> 4 * n0 % 2
1141:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 - 2 |==> 4 * n0 * 2
1142:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 - 2 |==> 4 * n0 + 2
1143:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:4 * n0 - 2 |==> 4 * n0 / 2
1144:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):860:sigma = (n0 == n) ? 0 : -work[4 * n0 - 2] |==> <NO-OP>
1145:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):861:0 |==> 1
1146:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):861:0 |==> -1
1147:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):861:sigmaLow = 0 |==> <NO-OP>
1148:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:i0 == n0 |==> i0 != n0
1149:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:i0 == n0 |==> i0 < n0
1150:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:i0 == n0 |==> i0 <= n0
1151:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:i0 == n0 |==> i0 > n0
1152:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:i0 == n0 |==> i0 >= n0
1153:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:i0 == n0 |==> false
1154:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:i0 == n0 |==> true
1155:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:0 |==> 1
1156:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:0 |==> -1
1157:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 |==> 0
1158:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 |==> -4
1159:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 |==> 4 % n0
1160:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 |==> 4 + n0
1161:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 |==> 4 - n0
1162:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 |==> 4 / n0
1163:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:6 |==> 0
1164:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:6 |==> -6
1165:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 - 6 |==> 4 * n0 % 6
1166:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 - 6 |==> 4 * n0 * 6
1167:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 - 6 |==> 4 * n0 + 6
1168:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):864:4 * n0 - 6 |==> 4 * n0 / 6
1169:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):865:0 |==> 1
1170:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):865:0 |==> -1
1171:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 |==> 0
1172:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 |==> -4
1173:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 |==> 4 % n0
1174:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 |==> 4 + n0
1175:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 |==> 4 - n0
1176:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 |==> 4 / n0
1177:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 |==> 0
1178:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 |==> -4
1179:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 - 4 |==> 4 * n0 % 4
1180:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 - 4 |==> 4 * n0 * 4
1181:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 - 4 |==> 4 * n0 + 4
1182:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):866:4 * n0 - 4 |==> 4 * n0 / 4
1183:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):868:0 |==> 1
1184:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):868:0 |==> -1
1185:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):868:i0 = 0 |==> <NO-OP>
1186:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 |==> 0
1187:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 |==> -4
1188:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:2 |==> 0
1189:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:2 |==> -2
1190:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:n0 - 2 |==> n0 % 2
1191:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:n0 - 2 |==> n0 * 2
1192:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:n0 - 2 |==> n0 + 2
1193:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:n0 - 2 |==> n0 / 2
1194:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 * (n0 - 2) |==> 4 % (n0 - 2)
1195:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 * (n0 - 2) |==> 4 + (n0 - 2)
1196:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 * (n0 - 2) |==> 4 - (n0 - 2)
1197:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 * (n0 - 2) |==> 4 / (n0 - 2)
1198:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:0 |==> 1
1199:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:0 |==> -1
1200:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:i >= 0 |==> i != 0
1201:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:i >= 0 |==> i < 0
1202:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:i >= 0 |==> i <= 0
1203:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:i >= 0 |==> i == 0
1204:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:i >= 0 |==> i > 0
1205:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:i >= 0 |==> false
1206:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:i >= 0 |==> true
1207:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 |==> 0
1208:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):869:4 |==> -4
1209:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:2 |==> 0
1210:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:2 |==> -2
1211:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:i + 2 |==> i % 2
1212:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:i + 2 |==> i * 2
1213:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:i + 2 |==> i - 2
1214:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:i + 2 |==> i / 2
1215:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:0 |==> 1
1216:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:0 |==> -1
1217:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:work[i + 2] <= 0 |==> work[i + 2] != 0
1218:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:work[i + 2] <= 0 |==> work[i + 2] < 0
1219:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:work[i + 2] <= 0 |==> work[i + 2] == 0
1220:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:work[i + 2] <= 0 |==> work[i + 2] > 0
1221:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:work[i + 2] <= 0 |==> work[i + 2] >= 0
1222:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:work[i + 2] <= 0 |==> false
1223:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):870:work[i + 2] <= 0 |==> true
1224:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:1 |==> 0
1225:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:1 |==> -1
1226:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:4 |==> 0
1227:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:4 |==> -4
1228:AOR:/(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:i / 4 |==> i % 4
1229:AOR:/(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:i / 4 |==> i * 4
1230:AOR:/(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:i / 4 |==> i + 4
1231:AOR:/(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:i / 4 |==> i - 4
1232:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:1 + i / 4 |==> 1 % (i / 4)
1233:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:1 + i / 4 |==> 1 * (i / 4)
1234:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:1 + i / 4 |==> 1 - i / 4
1235:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:1 + i / 4 |==> 1 / (i / 4)
1236:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):871:i0 = 1 + i / 4 |==> <NO-OP>
1237:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:4 |==> 0
1238:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:4 |==> -4
1239:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:4 * offDiagMax |==> 4 % offDiagMax
1240:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:4 * offDiagMax |==> 4 + offDiagMax
1241:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:4 * offDiagMax |==> 4 - offDiagMax
1242:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:4 * offDiagMax |==> 4 / offDiagMax
1243:ROR:>=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:diagMin >= 4 * offDiagMax |==> diagMin != 4 * offDiagMax
1244:ROR:>=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:diagMin >= 4 * offDiagMax |==> diagMin < 4 * offDiagMax
1245:ROR:>=(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:diagMin >= 4 * offDiagMax |==> diagMin <= 4 * offDiagMax
1246:ROR:>=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:diagMin >= 4 * offDiagMax |==> diagMin == 4 * offDiagMax
1247:ROR:>=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:diagMin >= 4 * offDiagMax |==> diagMin > 4 * offDiagMax
1248:ROR:>=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:diagMin >= 4 * offDiagMax |==> false
1249:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):874:diagMin >= 4 * offDiagMax |==> true
1250:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):875:4 |==> 0
1251:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):875:4 |==> -4
1252:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):875:i + 4 |==> i % 4
1253:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):875:i + 4 |==> i * 4
1254:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):875:i + 4 |==> i - 4
1255:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):875:i + 4 |==> i / 4
1256:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):875:diagMin = Math.min(diagMin, work[i + 4]) |==> <NO-OP>
1257:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):876:2 |==> 0
1258:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):876:2 |==> -2
1259:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):876:i + 2 |==> i % 2
1260:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):876:i + 2 |==> i * 2
1261:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):876:i + 2 |==> i - 2
1262:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):876:i + 2 |==> i / 2
1263:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):876:offDiagMax = Math.max(offDiagMax, work[i + 2]) |==> <NO-OP>
1264:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:2 |==> 0
1265:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:2 |==> -2
1266:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:i + 2 |==> i % 2
1267:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:i + 2 |==> i * 2
1268:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:i + 2 |==> i - 2
1269:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:i + 2 |==> i / 2
1270:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:work[i] + work[i + 2] |==> work[i] % work[i + 2]
1271:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:work[i] + work[i + 2] |==> work[i] * work[i + 2]
1272:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:work[i] + work[i + 2] |==> work[i] - work[i + 2]
1273:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:work[i] + work[i + 2] |==> work[i] / work[i + 2]
1274:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):878:diagMax = Math.max(diagMax, work[i] + work[i + 2]) |==> <NO-OP>
1275:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):879:2 |==> 0
1276:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):879:2 |==> -2
1277:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):879:i + 2 |==> i % 2
1278:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):879:i + 2 |==> i * 2
1279:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):879:i + 2 |==> i - 2
1280:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):879:i + 2 |==> i / 2
1281:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):879:offDiagMin = Math.min(offDiagMin, work[i + 2]) |==> <NO-OP>
1282:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 |==> 0
1283:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 |==> -4
1284:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 |==> 4 % n0
1285:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 |==> 4 + n0
1286:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 |==> 4 - n0
1287:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 |==> 4 / n0
1288:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:2 |==> 0
1289:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:2 |==> -2
1290:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 - 2 |==> 4 * n0 % 2
1291:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 - 2 |==> 4 * n0 * 2
1292:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 - 2 |==> 4 * n0 + 2
1293:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:4 * n0 - 2 |==> 4 * n0 / 2
1294:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):881:work[4 * n0 - 2] = offDiagMin |==> <NO-OP>
1295:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:-Math.max(0, diagMin - 2 * Math.sqrt(diagMin * offDiagMax)) |==> +Math.max(0, diagMin - 2 * Math.sqrt(diagMin * offDiagMax))
1296:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:0 |==> 1
1297:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:0 |==> -1
1298:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:2 |==> 0
1299:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:2 |==> -2
1300:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin * offDiagMax |==> diagMin % offDiagMax
1301:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin * offDiagMax |==> diagMin + offDiagMax
1302:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin * offDiagMax |==> diagMin - offDiagMax
1303:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin * offDiagMax |==> diagMin / offDiagMax
1304:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:2 * Math.sqrt(diagMin * offDiagMax) |==> 2 % Math.sqrt(diagMin * offDiagMax)
1305:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:2 * Math.sqrt(diagMin * offDiagMax) |==> 2 + Math.sqrt(diagMin * offDiagMax)
1306:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:2 * Math.sqrt(diagMin * offDiagMax) |==> 2 - Math.sqrt(diagMin * offDiagMax)
1307:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:2 * Math.sqrt(diagMin * offDiagMax) |==> 2 / Math.sqrt(diagMin * offDiagMax)
1308:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin - 2 * Math.sqrt(diagMin * offDiagMax) |==> diagMin % (2 * Math.sqrt(diagMin * offDiagMax))
1309:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin - 2 * Math.sqrt(diagMin * offDiagMax) |==> diagMin * (2 * Math.sqrt(diagMin * offDiagMax))
1310:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin - 2 * Math.sqrt(diagMin * offDiagMax) |==> diagMin + 2 * Math.sqrt(diagMin * offDiagMax)
1311:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:diagMin - 2 * Math.sqrt(diagMin * offDiagMax) |==> diagMin / (2 * Math.sqrt(diagMin * offDiagMax))
1312:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):884:dMin = -Math.max(0, diagMin - 2 * Math.sqrt(diagMin * offDiagMax)) |==> <NO-OP>
1313:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):886:0 |==> 1
1314:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):886:0 |==> -1
1315:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):886:pingPong = 0 |==> <NO-OP>
1316:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:30 |==> 0
1317:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:30 |==> -30
1318:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:n0 - i0 |==> n0 % i0
1319:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:n0 - i0 |==> n0 * i0
1320:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:n0 - i0 |==> n0 + i0
1321:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:n0 - i0 |==> n0 / i0
1322:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:30 * (n0 - i0) |==> 30 % (n0 - i0)
1323:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:30 * (n0 - i0) |==> 30 + (n0 - i0)
1324:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:30 * (n0 - i0) |==> 30 - (n0 - i0)
1325:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):887:30 * (n0 - i0) |==> 30 / (n0 - i0)
1326:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:0 |==> 1
1327:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:0 |==> -1
1328:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:i0 < n0 |==> i0 != n0
1329:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:i0 < n0 |==> i0 <= n0
1330:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:i0 < n0 |==> i0 == n0
1331:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:i0 < n0 |==> i0 > n0
1332:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:i0 < n0 |==> i0 >= n0
1333:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:i0 < n0 |==> false
1334:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):888:i0 < n0 |==> true
1335:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):889:k >= maxIter |==> k != maxIter
1336:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):889:k >= maxIter |==> k < maxIter
1337:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):889:k >= maxIter |==> k <= maxIter
1338:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):889:k >= maxIter |==> k == maxIter
1339:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):889:k >= maxIter |==> k > maxIter
1340:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):889:k >= maxIter |==> false
1341:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):889:k >= maxIter |==> true
1342:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):894:n0 = goodStep(i0, n0) |==> <NO-OP>
1343:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):895:1 |==> 0
1344:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):895:1 |==> -1
1345:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):895:1 - pingPong |==> 1 % pingPong
1346:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):895:1 - pingPong |==> 1 * pingPong
1347:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):895:1 - pingPong |==> 1 + pingPong
1348:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):895:1 - pingPong |==> 1 / pingPong
1349:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):895:pingPong = 1 - pingPong |==> <NO-OP>
1350:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:0 |==> 1
1351:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:0 |==> -1
1352:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:pingPong == 0 |==> pingPong != 0
1353:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:pingPong == 0 |==> pingPong < 0
1354:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:pingPong == 0 |==> pingPong <= 0
1355:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:pingPong == 0 |==> pingPong > 0
1356:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:pingPong == 0 |==> pingPong >= 0
1357:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:pingPong == 0 |==> false
1358:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:pingPong == 0 |==> true
1359:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 |==> n0 % i0
1360:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 |==> n0 * i0
1361:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 |==> n0 + i0
1362:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 |==> n0 / i0
1363:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:3 |==> 0
1364:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:3 |==> -3
1365:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 > 3 |==> n0 - i0 != 3
1366:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 > 3 |==> n0 - i0 < 3
1367:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 > 3 |==> n0 - i0 <= 3
1368:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 > 3 |==> n0 - i0 == 3
1369:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 > 3 |==> n0 - i0 >= 3
1370:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 > 3 |==> false
1371:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:n0 - i0 > 3 |==> true
1372:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) |==> (pingPong == 0) != (n0 - i0 > 3)
1373:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) |==> (pingPong == 0) == (n0 - i0 > 3)
1374:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) |==> false
1375:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) |==> (pingPong == 0)
1376:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) |==> (n0 - i0 > 3)
1377:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) |==> true
1378:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) |==> (pingPong == 0) || (n0 - i0 > 3)
1379:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 |==> 0
1380:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 |==> -4
1381:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 |==> 4 % n0
1382:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 |==> 4 + n0
1383:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 |==> 4 - n0
1384:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 |==> 4 / n0
1385:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:1 |==> 0
1386:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:1 |==> -1
1387:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 - 1 |==> 4 * n0 % 1
1388:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 - 1 |==> 4 * n0 * 1
1389:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 - 1 |==> 4 * n0 + 1
1390:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:4 * n0 - 1 |==> 4 * n0 / 1
1391:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:TOLERANCE_2 * diagMax |==> TOLERANCE_2 % diagMax
1392:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:TOLERANCE_2 * diagMax |==> TOLERANCE_2 + diagMax
1393:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:TOLERANCE_2 * diagMax |==> TOLERANCE_2 - diagMax
1394:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:TOLERANCE_2 * diagMax |==> TOLERANCE_2 / diagMax
1395:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:work[4 * n0 - 1] <= TOLERANCE_2 * diagMax |==> work[4 * n0 - 1] != TOLERANCE_2 * diagMax
1396:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:work[4 * n0 - 1] <= TOLERANCE_2 * diagMax |==> work[4 * n0 - 1] < TOLERANCE_2 * diagMax
1397:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:work[4 * n0 - 1] <= TOLERANCE_2 * diagMax |==> work[4 * n0 - 1] == TOLERANCE_2 * diagMax
1398:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:work[4 * n0 - 1] <= TOLERANCE_2 * diagMax |==> work[4 * n0 - 1] > TOLERANCE_2 * diagMax
1399:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:work[4 * n0 - 1] <= TOLERANCE_2 * diagMax |==> work[4 * n0 - 1] >= TOLERANCE_2 * diagMax
1400:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:work[4 * n0 - 1] <= TOLERANCE_2 * diagMax |==> false
1401:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:work[4 * n0 - 1] <= TOLERANCE_2 * diagMax |==> true
1402:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) |==> ((pingPong == 0) && (n0 - i0 > 3)) != (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)
1403:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) |==> ((pingPong == 0) && (n0 - i0 > 3)) == (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)
1404:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) |==> false
1405:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) |==> (pingPong == 0) && (n0 - i0 > 3)
1406:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) |==> (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)
1407:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) |==> true
1408:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) |==> (pingPong == 0) && (n0 - i0 > 3) || (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)
1409:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 |==> 0
1410:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 |==> -4
1411:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 |==> 4 % n0
1412:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 |==> 4 + n0
1413:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 |==> 4 - n0
1414:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 |==> 4 / n0
1415:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:2 |==> 0
1416:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:2 |==> -2
1417:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 - 2 |==> 4 * n0 % 2
1418:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 - 2 |==> 4 * n0 * 2
1419:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 - 2 |==> 4 * n0 + 2
1420:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:4 * n0 - 2 |==> 4 * n0 / 2
1421:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:TOLERANCE_2 * sigma |==> TOLERANCE_2 % sigma
1422:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:TOLERANCE_2 * sigma |==> TOLERANCE_2 + sigma
1423:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:TOLERANCE_2 * sigma |==> TOLERANCE_2 - sigma
1424:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:TOLERANCE_2 * sigma |==> TOLERANCE_2 / sigma
1425:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:work[4 * n0 - 2] <= TOLERANCE_2 * sigma |==> work[4 * n0 - 2] != TOLERANCE_2 * sigma
1426:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:work[4 * n0 - 2] <= TOLERANCE_2 * sigma |==> work[4 * n0 - 2] < TOLERANCE_2 * sigma
1427:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:work[4 * n0 - 2] <= TOLERANCE_2 * sigma |==> work[4 * n0 - 2] == TOLERANCE_2 * sigma
1428:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:work[4 * n0 - 2] <= TOLERANCE_2 * sigma |==> work[4 * n0 - 2] > TOLERANCE_2 * sigma
1429:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:work[4 * n0 - 2] <= TOLERANCE_2 * sigma |==> work[4 * n0 - 2] >= TOLERANCE_2 * sigma
1430:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:work[4 * n0 - 2] <= TOLERANCE_2 * sigma |==> false
1431:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:work[4 * n0 - 2] <= TOLERANCE_2 * sigma |==> true
1432:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) && (work[4 * n0 - 2] <= TOLERANCE_2 * sigma) |==> ((pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)) != (work[4 * n0 - 2] <= TOLERANCE_2 * sigma)
1433:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) && (work[4 * n0 - 2] <= TOLERANCE_2 * sigma) |==> ((pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)) == (work[4 * n0 - 2] <= TOLERANCE_2 * sigma)
1434:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) && (work[4 * n0 - 2] <= TOLERANCE_2 * sigma) |==> false
1435:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) && (work[4 * n0 - 2] <= TOLERANCE_2 * sigma) |==> (pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax)
1436:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):901:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) && (work[4 * n0 - 2] <= TOLERANCE_2 * sigma) |==> (work[4 * n0 - 2] <= TOLERANCE_2 * sigma)
1437:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):900:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) && (work[4 * n0 - 2] <= TOLERANCE_2 * sigma) |==> true
1438:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):899:(pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) && (work[4 * n0 - 2] <= TOLERANCE_2 * sigma) |==> (pingPong == 0) && (n0 - i0 > 3) && (work[4 * n0 - 1] <= TOLERANCE_2 * diagMax) || (work[4 * n0 - 2] <= TOLERANCE_2 * sigma)
1439:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):902:1 |==> 0
1440:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):902:1 |==> -1
1441:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):902:i0 - 1 |==> i0 % 1
1442:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):902:i0 - 1 |==> i0 * 1
1443:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):902:i0 - 1 |==> i0 + 1
1444:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):902:i0 - 1 |==> i0 / 1
1445:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):903:4 |==> 0
1446:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):903:4 |==> -4
1447:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):903:4 * i0 |==> 4 % i0
1448:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):903:4 * i0 |==> 4 + i0
1449:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):903:4 * i0 |==> 4 - i0
1450:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):903:4 * i0 |==> 4 / i0
1451:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):903:diagMax = work[4 * i0] |==> <NO-OP>
1452:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 |==> 0
1453:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 |==> -4
1454:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 |==> 4 % i0
1455:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 |==> 4 + i0
1456:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 |==> 4 - i0
1457:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 |==> 4 / i0
1458:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:2 |==> 0
1459:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:2 |==> -2
1460:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 + 2 |==> 4 * i0 % 2
1461:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 + 2 |==> 4 * i0 * 2
1462:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 + 2 |==> 4 * i0 - 2
1463:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:4 * i0 + 2 |==> 4 * i0 / 2
1464:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):904:offDiagMin = work[4 * i0 + 2] |==> <NO-OP>
1465:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 |==> 0
1466:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 |==> -4
1467:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 |==> 4 % i0
1468:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 |==> 4 + i0
1469:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 |==> 4 - i0
1470:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 |==> 4 / i0
1471:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:3 |==> 0
1472:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:3 |==> -3
1473:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 + 3 |==> 4 * i0 % 3
1474:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 + 3 |==> 4 * i0 * 3
1475:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 + 3 |==> 4 * i0 - 3
1476:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):905:4 * i0 + 3 |==> 4 * i0 / 3
1477:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 |==> 0
1478:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 |==> -4
1479:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * i0 |==> 4 % i0
1480:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * i0 |==> 4 + i0
1481:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * i0 |==> 4 - i0
1482:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * i0 |==> 4 / i0
1483:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 |==> 0
1484:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 |==> -4
1485:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 |==> 4 % n0
1486:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 |==> 4 + n0
1487:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 |==> 4 - n0
1488:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 |==> 4 / n0
1489:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:16 |==> 0
1490:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:16 |==> -16
1491:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 - 16 |==> 4 * n0 % 16
1492:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 - 16 |==> 4 * n0 * 16
1493:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 - 16 |==> 4 * n0 + 16
1494:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 * n0 - 16 |==> 4 * n0 / 16
1495:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:i < 4 * n0 - 16 |==> i != 4 * n0 - 16
1496:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:i < 4 * n0 - 16 |==> i <= 4 * n0 - 16
1497:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:i < 4 * n0 - 16 |==> i == 4 * n0 - 16
1498:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:i < 4 * n0 - 16 |==> i > 4 * n0 - 16
1499:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:i < 4 * n0 - 16 |==> i >= 4 * n0 - 16
1500:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:i < 4 * n0 - 16 |==> false
1501:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:i < 4 * n0 - 16 |==> true
1502:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 |==> 0
1503:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):906:4 |==> -4
1504:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:3 |==> 0
1505:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:3 |==> -3
1506:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:i + 3 |==> i % 3
1507:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:i + 3 |==> i * 3
1508:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:i + 3 |==> i - 3
1509:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:i + 3 |==> i / 3
1510:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:TOLERANCE_2 * work[i] |==> TOLERANCE_2 % work[i]
1511:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:TOLERANCE_2 * work[i] |==> TOLERANCE_2 + work[i]
1512:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:TOLERANCE_2 * work[i] |==> TOLERANCE_2 - work[i]
1513:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:TOLERANCE_2 * work[i] |==> TOLERANCE_2 / work[i]
1514:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:work[i + 3] <= TOLERANCE_2 * work[i] |==> work[i + 3] != TOLERANCE_2 * work[i]
1515:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:work[i + 3] <= TOLERANCE_2 * work[i] |==> work[i + 3] < TOLERANCE_2 * work[i]
1516:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:work[i + 3] <= TOLERANCE_2 * work[i] |==> work[i + 3] == TOLERANCE_2 * work[i]
1517:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:work[i + 3] <= TOLERANCE_2 * work[i] |==> work[i + 3] > TOLERANCE_2 * work[i]
1518:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:work[i + 3] <= TOLERANCE_2 * work[i] |==> work[i + 3] >= TOLERANCE_2 * work[i]
1519:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:work[i + 3] <= TOLERANCE_2 * work[i] |==> false
1520:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:work[i + 3] <= TOLERANCE_2 * work[i] |==> true
1521:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:2 |==> 0
1522:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:2 |==> -2
1523:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:i + 2 |==> i % 2
1524:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:i + 2 |==> i * 2
1525:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:i + 2 |==> i - 2
1526:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:i + 2 |==> i / 2
1527:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:TOLERANCE_2 * sigma |==> TOLERANCE_2 % sigma
1528:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:TOLERANCE_2 * sigma |==> TOLERANCE_2 + sigma
1529:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:TOLERANCE_2 * sigma |==> TOLERANCE_2 - sigma
1530:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:TOLERANCE_2 * sigma |==> TOLERANCE_2 / sigma
1531:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:work[i + 2] <= TOLERANCE_2 * sigma |==> work[i + 2] != TOLERANCE_2 * sigma
1532:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:work[i + 2] <= TOLERANCE_2 * sigma |==> work[i + 2] < TOLERANCE_2 * sigma
1533:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:work[i + 2] <= TOLERANCE_2 * sigma |==> work[i + 2] == TOLERANCE_2 * sigma
1534:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:work[i + 2] <= TOLERANCE_2 * sigma |==> work[i + 2] > TOLERANCE_2 * sigma
1535:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:work[i + 2] <= TOLERANCE_2 * sigma |==> work[i + 2] >= TOLERANCE_2 * sigma
1536:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:work[i + 2] <= TOLERANCE_2 * sigma |==> false
1537:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:work[i + 2] <= TOLERANCE_2 * sigma |==> true
1538:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:(work[i + 3] <= TOLERANCE_2 * work[i]) || (work[i + 2] <= TOLERANCE_2 * sigma) |==> (work[i + 3] <= TOLERANCE_2 * work[i]) != (work[i + 2] <= TOLERANCE_2 * sigma)
1539:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:(work[i + 3] <= TOLERANCE_2 * work[i]) || (work[i + 2] <= TOLERANCE_2 * sigma) |==> (work[i + 3] <= TOLERANCE_2 * work[i]) && (work[i + 2] <= TOLERANCE_2 * sigma)
1540:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:(work[i + 3] <= TOLERANCE_2 * work[i]) || (work[i + 2] <= TOLERANCE_2 * sigma) |==> (work[i + 3] <= TOLERANCE_2 * work[i]) == (work[i + 2] <= TOLERANCE_2 * sigma)
1541:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:(work[i + 3] <= TOLERANCE_2 * work[i]) || (work[i + 2] <= TOLERANCE_2 * sigma) |==> false
1542:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:(work[i + 3] <= TOLERANCE_2 * work[i]) || (work[i + 2] <= TOLERANCE_2 * sigma) |==> (work[i + 3] <= TOLERANCE_2 * work[i])
1543:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):908:(work[i + 3] <= TOLERANCE_2 * work[i]) || (work[i + 2] <= TOLERANCE_2 * sigma) |==> (work[i + 2] <= TOLERANCE_2 * sigma)
1544:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):907:(work[i + 3] <= TOLERANCE_2 * work[i]) || (work[i + 2] <= TOLERANCE_2 * sigma) |==> true
1545:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:2 |==> 0
1546:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:2 |==> -2
1547:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:i + 2 |==> i % 2
1548:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:i + 2 |==> i * 2
1549:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:i + 2 |==> i - 2
1550:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:i + 2 |==> i / 2
1551:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:-sigma |==> +sigma
1552:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):910:work[i + 2] = -sigma |==> <NO-OP>
1553:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):911:4 |==> 0
1554:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):911:4 |==> -4
1555:AOR:/(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):911:i / 4 |==> i % 4
1556:AOR:/(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):911:i / 4 |==> i * 4
1557:AOR:/(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):911:i / 4 |==> i + 4
1558:AOR:/(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):911:i / 4 |==> i - 4
1559:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):911:split = i / 4 |==> <NO-OP>
1560:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):912:0 |==> 1
1561:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):912:0 |==> -1
1562:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):912:diagMax = 0 |==> <NO-OP>
1563:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):913:6 |==> 0
1564:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):913:6 |==> -6
1565:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):913:i + 6 |==> i % 6
1566:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):913:i + 6 |==> i * 6
1567:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):913:i + 6 |==> i - 6
1568:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):913:i + 6 |==> i / 6
1569:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):913:offDiagMin = work[i + 6] |==> <NO-OP>
1570:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):914:7 |==> 0
1571:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):914:7 |==> -7
1572:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):914:i + 7 |==> i % 7
1573:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):914:i + 7 |==> i * 7
1574:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):914:i + 7 |==> i - 7
1575:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):914:i + 7 |==> i / 7
1576:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):914:previousEMin = work[i + 7] |==> <NO-OP>
1577:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):916:4 |==> 0
1578:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):916:4 |==> -4
1579:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):916:i + 4 |==> i % 4
1580:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):916:i + 4 |==> i * 4
1581:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):916:i + 4 |==> i - 4
1582:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):916:i + 4 |==> i / 4
1583:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):916:diagMax = Math.max(diagMax, work[i + 4]) |==> <NO-OP>
1584:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):917:2 |==> 0
1585:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):917:2 |==> -2
1586:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):917:i + 2 |==> i % 2
1587:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):917:i + 2 |==> i * 2
1588:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):917:i + 2 |==> i - 2
1589:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):917:i + 2 |==> i / 2
1590:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):917:offDiagMin = Math.min(offDiagMin, work[i + 2]) |==> <NO-OP>
1591:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):918:3 |==> 0
1592:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):918:3 |==> -3
1593:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):918:i + 3 |==> i % 3
1594:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):918:i + 3 |==> i * 3
1595:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):918:i + 3 |==> i - 3
1596:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):918:i + 3 |==> i / 3
1597:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):918:previousEMin = Math.min(previousEMin, work[i + 3]) |==> <NO-OP>
1598:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 |==> 0
1599:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 |==> -4
1600:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 |==> 4 % n0
1601:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 |==> 4 + n0
1602:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 |==> 4 - n0
1603:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 |==> 4 / n0
1604:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:2 |==> 0
1605:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:2 |==> -2
1606:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 - 2 |==> 4 * n0 % 2
1607:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 - 2 |==> 4 * n0 * 2
1608:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 - 2 |==> 4 * n0 + 2
1609:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:4 * n0 - 2 |==> 4 * n0 / 2
1610:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):921:work[4 * n0 - 2] = offDiagMin |==> <NO-OP>
1611:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 |==> 0
1612:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 |==> -4
1613:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 |==> 4 % n0
1614:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 |==> 4 + n0
1615:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 |==> 4 - n0
1616:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 |==> 4 / n0
1617:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:1 |==> 0
1618:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:1 |==> -1
1619:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 - 1 |==> 4 * n0 % 1
1620:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 - 1 |==> 4 * n0 * 1
1621:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 - 1 |==> 4 * n0 + 1
1622:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:4 * n0 - 1 |==> 4 * n0 / 1
1623:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):922:work[4 * n0 - 1] = previousEMin |==> <NO-OP>
1624:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):923:1 |==> 0
1625:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):923:1 |==> -1
1626:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):923:split + 1 |==> split % 1
1627:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):923:split + 1 |==> split * 1
1628:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):923:split + 1 |==> split - 1
1629:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):923:split + 1 |==> split / 1
1630:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@processGeneralBlock(int):923:i0 = split + 1 |==> <NO-OP>
1631:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):937:0 |==> 1
1632:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):937:0 |==> -1
1633:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):937:pingPong = 0 |==> <NO-OP>
1634:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:0 |==> 1
1635:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:0 |==> -1
1636:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:2 |==> 0
1637:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:2 |==> -2
1638:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:k < 2 |==> k != 2
1639:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:k < 2 |==> k <= 2
1640:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:k < 2 |==> k == 2
1641:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:k < 2 |==> k > 2
1642:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:k < 2 |==> k >= 2
1643:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:k < 2 |==> false
1644:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):938:k < 2 |==> true
1645:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 |==> 0
1646:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 |==> -4
1647:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:1 |==> 0
1648:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:1 |==> -1
1649:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:n - 1 |==> n % 1
1650:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:n - 1 |==> n * 1
1651:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:n - 1 |==> n + 1
1652:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:n - 1 |==> n / 1
1653:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) |==> 4 % (n - 1)
1654:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) |==> 4 + (n - 1)
1655:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) |==> 4 - (n - 1)
1656:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) |==> 4 / (n - 1)
1657:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) + pingPong |==> 4 * (n - 1) % pingPong
1658:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) + pingPong |==> 4 * (n - 1) * pingPong
1659:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) + pingPong |==> 4 * (n - 1) - pingPong
1660:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):941:4 * (n - 1) + pingPong |==> 4 * (n - 1) / pingPong
1661:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 |==> 0
1662:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 |==> -4
1663:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:2 |==> 0
1664:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:2 |==> -2
1665:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:n - 2 |==> n % 2
1666:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:n - 2 |==> n * 2
1667:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:n - 2 |==> n + 2
1668:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:n - 2 |==> n / 2
1669:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) |==> 4 % (n - 2)
1670:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) |==> 4 + (n - 2)
1671:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) |==> 4 - (n - 2)
1672:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) |==> 4 / (n - 2)
1673:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) + pingPong |==> 4 * (n - 2) % pingPong
1674:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) + pingPong |==> 4 * (n - 2) * pingPong
1675:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) + pingPong |==> 4 * (n - 2) - pingPong
1676:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 * (n - 2) + pingPong |==> 4 * (n - 2) / pingPong
1677:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:0 |==> 1
1678:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:0 |==> -1
1679:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:i >= 0 |==> i != 0
1680:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:i >= 0 |==> i < 0
1681:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:i >= 0 |==> i <= 0
1682:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:i >= 0 |==> i == 0
1683:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:i >= 0 |==> i > 0
1684:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:i >= 0 |==> false
1685:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:i >= 0 |==> true
1686:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 |==> 0
1687:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):942:4 |==> -4
1688:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:2 |==> 0
1689:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:2 |==> -2
1690:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:i + 2 |==> i % 2
1691:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:i + 2 |==> i * 2
1692:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:i + 2 |==> i - 2
1693:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:i + 2 |==> i / 2
1694:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:TOLERANCE_2 * d |==> TOLERANCE_2 % d
1695:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:TOLERANCE_2 * d |==> TOLERANCE_2 + d
1696:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:TOLERANCE_2 * d |==> TOLERANCE_2 - d
1697:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:TOLERANCE_2 * d |==> TOLERANCE_2 / d
1698:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:work[i + 2] <= TOLERANCE_2 * d |==> work[i + 2] != TOLERANCE_2 * d
1699:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:work[i + 2] <= TOLERANCE_2 * d |==> work[i + 2] < TOLERANCE_2 * d
1700:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:work[i + 2] <= TOLERANCE_2 * d |==> work[i + 2] == TOLERANCE_2 * d
1701:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:work[i + 2] <= TOLERANCE_2 * d |==> work[i + 2] > TOLERANCE_2 * d
1702:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:work[i + 2] <= TOLERANCE_2 * d |==> work[i + 2] >= TOLERANCE_2 * d
1703:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:work[i + 2] <= TOLERANCE_2 * d |==> false
1704:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):943:work[i + 2] <= TOLERANCE_2 * d |==> true
1705:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:2 |==> 0
1706:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:2 |==> -2
1707:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:i + 2 |==> i % 2
1708:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:i + 2 |==> i * 2
1709:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:i + 2 |==> i - 2
1710:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:i + 2 |==> i / 2
1711:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:-0.0 |==> +0.0
1712:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:0.0 |==> 1.0
1713:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:0.0 |==> -1.0
1714:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):944:work[i + 2] = -0.0 |==> <NO-OP>
1715:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):945:d = work[i] |==> <NO-OP>
1716:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:2 |==> 0
1717:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:2 |==> -2
1718:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:i + 2 |==> i % 2
1719:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:i + 2 |==> i * 2
1720:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:i + 2 |==> i - 2
1721:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:i + 2 |==> i / 2
1722:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:d + work[i + 2] |==> d % work[i + 2]
1723:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:d + work[i + 2] |==> d * work[i + 2]
1724:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:d + work[i + 2] |==> d - work[i + 2]
1725:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:d + work[i + 2] |==> d / work[i + 2]
1726:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:work[i] / (d + work[i + 2]) |==> work[i] % (d + work[i + 2])
1727:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:work[i] / (d + work[i + 2]) |==> work[i] * (d + work[i + 2])
1728:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:work[i] / (d + work[i + 2]) |==> work[i] + (d + work[i + 2])
1729:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:work[i] / (d + work[i + 2]) |==> work[i] - (d + work[i + 2])
1730:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):947:d *= work[i] / (d + work[i + 2]) |==> <NO-OP>
1731:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):952:d = work[pingPong] |==> <NO-OP>
1732:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 |==> 0
1733:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 |==> -2
1734:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 + pingPong |==> 2 % pingPong
1735:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 + pingPong |==> 2 * pingPong
1736:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 + pingPong |==> 2 - pingPong
1737:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 + pingPong |==> 2 / pingPong
1738:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 |==> 0
1739:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 |==> -4
1740:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n |==> 4 % n
1741:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n |==> 4 + n
1742:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n |==> 4 - n
1743:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n |==> 4 / n
1744:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 |==> 0
1745:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:2 |==> -2
1746:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n - 2 |==> 4 * n % 2
1747:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n - 2 |==> 4 * n * 2
1748:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n - 2 |==> 4 * n + 2
1749:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 * n - 2 |==> 4 * n / 2
1750:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:i < 4 * n - 2 |==> i != 4 * n - 2
1751:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:i < 4 * n - 2 |==> i <= 4 * n - 2
1752:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:i < 4 * n - 2 |==> i == 4 * n - 2
1753:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:i < 4 * n - 2 |==> i > 4 * n - 2
1754:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:i < 4 * n - 2 |==> i >= 4 * n - 2
1755:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:i < 4 * n - 2 |==> false
1756:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:i < 4 * n - 2 |==> true
1757:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 |==> 0
1758:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):953:4 |==> -4
1759:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:2 |==> 0
1760:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:2 |==> -2
1761:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:2 * pingPong |==> 2 % pingPong
1762:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:2 * pingPong |==> 2 + pingPong
1763:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:2 * pingPong |==> 2 - pingPong
1764:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:2 * pingPong |==> 2 / pingPong
1765:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong |==> i % (2 * pingPong)
1766:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong |==> i * (2 * pingPong)
1767:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong |==> i + 2 * pingPong
1768:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong |==> i / (2 * pingPong)
1769:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:1 |==> 0
1770:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:1 |==> -1
1771:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong - 1 |==> (i - 2 * pingPong) % 1
1772:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong - 1 |==> (i - 2 * pingPong) * 1
1773:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong - 1 |==> i - 2 * pingPong + 1
1774:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):954:i - 2 * pingPong - 1 |==> (i - 2 * pingPong) / 1
1775:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):955:d + work[i] |==> d % work[i]
1776:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):955:d + work[i] |==> d * work[i]
1777:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):955:d + work[i] |==> d - work[i]
1778:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):955:d + work[i] |==> d / work[i]
1779:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):955:work[j] = d + work[i] |==> <NO-OP>
1780:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:TOLERANCE_2 * d |==> TOLERANCE_2 % d
1781:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:TOLERANCE_2 * d |==> TOLERANCE_2 + d
1782:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:TOLERANCE_2 * d |==> TOLERANCE_2 - d
1783:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:TOLERANCE_2 * d |==> TOLERANCE_2 / d
1784:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:work[i] <= TOLERANCE_2 * d |==> work[i] != TOLERANCE_2 * d
1785:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:work[i] <= TOLERANCE_2 * d |==> work[i] < TOLERANCE_2 * d
1786:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:work[i] <= TOLERANCE_2 * d |==> work[i] == TOLERANCE_2 * d
1787:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:work[i] <= TOLERANCE_2 * d |==> work[i] > TOLERANCE_2 * d
1788:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:work[i] <= TOLERANCE_2 * d |==> work[i] >= TOLERANCE_2 * d
1789:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:work[i] <= TOLERANCE_2 * d |==> false
1790:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):956:work[i] <= TOLERANCE_2 * d |==> true
1791:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):957:-0.0 |==> +0.0
1792:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):957:0.0 |==> 1.0
1793:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):957:0.0 |==> -1.0
1794:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):957:work[i] = -0.0 |==> <NO-OP>
1795:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):958:work[j] = d |==> <NO-OP>
1796:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:2 |==> 0
1797:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:2 |==> -2
1798:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:j + 2 |==> j % 2
1799:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:j + 2 |==> j * 2
1800:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:j + 2 |==> j - 2
1801:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:j + 2 |==> j / 2
1802:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:0.0 |==> 1.0
1803:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:0.0 |==> -1.0
1804:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):959:work[j + 2] = 0.0 |==> <NO-OP>
1805:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):960:2 |==> 0
1806:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):960:2 |==> -2
1807:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):960:i + 2 |==> i % 2
1808:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):960:i + 2 |==> i * 2
1809:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):960:i + 2 |==> i - 2
1810:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):960:i + 2 |==> i / 2
1811:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):960:d = work[i + 2] |==> <NO-OP>
1812:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:2 |==> 0
1813:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:2 |==> -2
1814:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:i + 2 |==> i % 2
1815:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:i + 2 |==> i * 2
1816:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:i + 2 |==> i - 2
1817:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:i + 2 |==> i / 2
1818:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] |==> MathUtils.SAFE_MIN % work[i + 2]
1819:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] |==> MathUtils.SAFE_MIN + work[i + 2]
1820:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] |==> MathUtils.SAFE_MIN - work[i + 2]
1821:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] |==> MathUtils.SAFE_MIN / work[i + 2]
1822:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] < work[j] |==> MathUtils.SAFE_MIN * work[i + 2] != work[j]
1823:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] < work[j] |==> MathUtils.SAFE_MIN * work[i + 2] <= work[j]
1824:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] < work[j] |==> MathUtils.SAFE_MIN * work[i + 2] == work[j]
1825:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] < work[j] |==> MathUtils.SAFE_MIN * work[i + 2] > work[j]
1826:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] < work[j] |==> MathUtils.SAFE_MIN * work[i + 2] >= work[j]
1827:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] < work[j] |==> false
1828:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:MathUtils.SAFE_MIN * work[i + 2] < work[j] |==> true
1829:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] |==> MathUtils.SAFE_MIN % work[j]
1830:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] |==> MathUtils.SAFE_MIN + work[j]
1831:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] |==> MathUtils.SAFE_MIN - work[j]
1832:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] |==> MathUtils.SAFE_MIN / work[j]
1833:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:2 |==> 0
1834:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:2 |==> -2
1835:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:i + 2 |==> i % 2
1836:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:i + 2 |==> i * 2
1837:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:i + 2 |==> i - 2
1838:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:i + 2 |==> i / 2
1839:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] < work[i + 2] |==> MathUtils.SAFE_MIN * work[j] != work[i + 2]
1840:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] < work[i + 2] |==> MathUtils.SAFE_MIN * work[j] <= work[i + 2]
1841:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] < work[i + 2] |==> MathUtils.SAFE_MIN * work[j] == work[i + 2]
1842:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] < work[i + 2] |==> MathUtils.SAFE_MIN * work[j] > work[i + 2]
1843:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] < work[i + 2] |==> MathUtils.SAFE_MIN * work[j] >= work[i + 2]
1844:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] < work[i + 2] |==> false
1845:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:MathUtils.SAFE_MIN * work[j] < work[i + 2] |==> true
1846:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]) |==> (MathUtils.SAFE_MIN * work[i + 2] < work[j]) != (MathUtils.SAFE_MIN * work[j] < work[i + 2])
1847:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]) |==> (MathUtils.SAFE_MIN * work[i + 2] < work[j]) == (MathUtils.SAFE_MIN * work[j] < work[i + 2])
1848:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]) |==> false
1849:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]) |==> (MathUtils.SAFE_MIN * work[i + 2] < work[j])
1850:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):962:(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]) |==> (MathUtils.SAFE_MIN * work[j] < work[i + 2])
1851:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]) |==> true
1852:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):961:(MathUtils.SAFE_MIN * work[i + 2] < work[j]) && (MathUtils.SAFE_MIN * work[j] < work[i + 2]) |==> (MathUtils.SAFE_MIN * work[i + 2] < work[j]) || (MathUtils.SAFE_MIN * work[j] < work[i + 2])
1853:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:2 |==> 0
1854:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:2 |==> -2
1855:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:i + 2 |==> i % 2
1856:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:i + 2 |==> i * 2
1857:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:i + 2 |==> i - 2
1858:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:i + 2 |==> i / 2
1859:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:work[i + 2] / work[j] |==> work[i + 2] % work[j]
1860:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:work[i + 2] / work[j] |==> work[i + 2] * work[j]
1861:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:work[i + 2] / work[j] |==> work[i + 2] + work[j]
1862:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):963:work[i + 2] / work[j] |==> work[i + 2] - work[j]
1863:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:2 |==> 0
1864:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:2 |==> -2
1865:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:j + 2 |==> j % 2
1866:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:j + 2 |==> j * 2
1867:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:j + 2 |==> j - 2
1868:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:j + 2 |==> j / 2
1869:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:work[i] * tmp |==> work[i] % tmp
1870:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:work[i] * tmp |==> work[i] + tmp
1871:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:work[i] * tmp |==> work[i] - tmp
1872:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:work[i] * tmp |==> work[i] / tmp
1873:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):964:work[j + 2] = work[i] * tmp |==> <NO-OP>
1874:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):965:d *= tmp |==> <NO-OP>
1875:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:2 |==> 0
1876:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:2 |==> -2
1877:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:j + 2 |==> j % 2
1878:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:j + 2 |==> j * 2
1879:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:j + 2 |==> j - 2
1880:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:j + 2 |==> j / 2
1881:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:2 |==> 0
1882:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:2 |==> -2
1883:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:i + 2 |==> i % 2
1884:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:i + 2 |==> i * 2
1885:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:i + 2 |==> i - 2
1886:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:i + 2 |==> i / 2
1887:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i] / work[j] |==> work[i] % work[j]
1888:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i] / work[j] |==> work[i] * work[j]
1889:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i] / work[j] |==> work[i] + work[j]
1890:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i] / work[j] |==> work[i] - work[j]
1891:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i + 2] * (work[i] / work[j]) |==> work[i + 2] % (work[i] / work[j])
1892:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i + 2] * (work[i] / work[j]) |==> work[i + 2] + (work[i] / work[j])
1893:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i + 2] * (work[i] / work[j]) |==> work[i + 2] - (work[i] / work[j])
1894:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[i + 2] * (work[i] / work[j]) |==> work[i + 2] / (work[i] / work[j])
1895:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):967:work[j + 2] = work[i + 2] * (work[i] / work[j]) |==> <NO-OP>
1896:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:2 |==> 0
1897:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:2 |==> -2
1898:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:i + 2 |==> i % 2
1899:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:i + 2 |==> i * 2
1900:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:i + 2 |==> i - 2
1901:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:i + 2 |==> i / 2
1902:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:work[i + 2] / work[j] |==> work[i + 2] % work[j]
1903:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:work[i + 2] / work[j] |==> work[i + 2] * work[j]
1904:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:work[i + 2] / work[j] |==> work[i + 2] + work[j]
1905:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:work[i + 2] / work[j] |==> work[i + 2] - work[j]
1906:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):968:d *= work[i + 2] / work[j] |==> <NO-OP>
1907:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 |==> 0
1908:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 |==> -4
1909:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n |==> 4 % n
1910:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n |==> 4 + n
1911:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n |==> 4 - n
1912:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n |==> 4 / n
1913:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:3 |==> 0
1914:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:3 |==> -3
1915:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 |==> 4 * n % 3
1916:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 |==> 4 * n * 3
1917:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 |==> 4 * n + 3
1918:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 |==> 4 * n / 3
1919:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 - pingPong |==> (4 * n - 3) % pingPong
1920:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 - pingPong |==> (4 * n - 3) * pingPong
1921:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 - pingPong |==> 4 * n - 3 + pingPong
1922:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:4 * n - 3 - pingPong |==> (4 * n - 3) / pingPong
1923:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):971:work[4 * n - 3 - pingPong] = d |==> <NO-OP>
1924:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):974:1 |==> 0
1925:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):974:1 |==> -1
1926:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):974:1 - pingPong |==> 1 % pingPong
1927:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):974:1 - pingPong |==> 1 * pingPong
1928:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):974:1 - pingPong |==> 1 + pingPong
1929:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):974:1 - pingPong |==> 1 / pingPong
1930:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@initialSplits(int):974:pingPong = 1 - pingPong |==> <NO-OP>
1931:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):993:0.0 |==> 1.0
1932:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):993:0.0 |==> -1.0
1933:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):993:g = 0.0 |==> <NO-OP>
1934:LVR:TRUE:FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):997:true |==> false
1935:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):999:start >= deflatedEnd |==> start != deflatedEnd
1936:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):999:start >= deflatedEnd |==> start < deflatedEnd
1937:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):999:start >= deflatedEnd |==> start <= deflatedEnd
1938:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):999:start >= deflatedEnd |==> start == deflatedEnd
1939:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):999:start >= deflatedEnd |==> start > deflatedEnd
1940:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):999:start >= deflatedEnd |==> false
1941:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):999:start >= deflatedEnd |==> true
1942:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 |==> 0
1943:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 |==> -4
1944:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd |==> 4 % deflatedEnd
1945:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd |==> 4 + deflatedEnd
1946:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd |==> 4 - deflatedEnd
1947:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd |==> 4 / deflatedEnd
1948:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd % pingPong
1949:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd * pingPong
1950:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd - pingPong
1951:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd / pingPong
1952:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:1 |==> 0
1953:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:1 |==> -1
1954:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong - 1 |==> (4 * deflatedEnd + pingPong) % 1
1955:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong - 1 |==> (4 * deflatedEnd + pingPong) * 1
1956:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong - 1 |==> 4 * deflatedEnd + pingPong + 1
1957:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1004:4 * deflatedEnd + pingPong - 1 |==> (4 * deflatedEnd + pingPong) / 1
1958:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:1 |==> 0
1959:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:1 |==> -1
1960:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:deflatedEnd - 1 |==> deflatedEnd % 1
1961:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:deflatedEnd - 1 |==> deflatedEnd * 1
1962:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:deflatedEnd - 1 |==> deflatedEnd + 1
1963:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:deflatedEnd - 1 |==> deflatedEnd / 1
1964:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:start == deflatedEnd - 1 |==> start != deflatedEnd - 1
1965:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:start == deflatedEnd - 1 |==> start < deflatedEnd - 1
1966:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:start == deflatedEnd - 1 |==> start <= deflatedEnd - 1
1967:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:start == deflatedEnd - 1 |==> start > deflatedEnd - 1
1968:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:start == deflatedEnd - 1 |==> start >= deflatedEnd - 1
1969:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:start == deflatedEnd - 1 |==> false
1970:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:start == deflatedEnd - 1 |==> true
1971:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:2 |==> 0
1972:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:2 |==> -2
1973:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:deflatedEnd - 2 |==> deflatedEnd % 2
1974:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:deflatedEnd - 2 |==> deflatedEnd * 2
1975:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:deflatedEnd - 2 |==> deflatedEnd + 2
1976:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:deflatedEnd - 2 |==> deflatedEnd / 2
1977:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:start != deflatedEnd - 2 |==> start < deflatedEnd - 2
1978:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:start != deflatedEnd - 2 |==> start <= deflatedEnd - 2
1979:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:start != deflatedEnd - 2 |==> start == deflatedEnd - 2
1980:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:start != deflatedEnd - 2 |==> start > deflatedEnd - 2
1981:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:start != deflatedEnd - 2 |==> start >= deflatedEnd - 2
1982:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:start != deflatedEnd - 2 |==> false
1983:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:start != deflatedEnd - 2 |==> true
1984:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:5 |==> 0
1985:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:5 |==> -5
1986:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 5 |==> k % 5
1987:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 5 |==> k * 5
1988:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 5 |==> k + 5
1989:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 5 |==> k / 5
1990:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:3 |==> 0
1991:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:3 |==> -3
1992:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 3 |==> k % 3
1993:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 3 |==> k * 3
1994:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 3 |==> k + 3
1995:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:k - 3 |==> k / 3
1996:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:sigma + work[k - 3] |==> sigma % work[k - 3]
1997:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:sigma + work[k - 3] |==> sigma * work[k - 3]
1998:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:sigma + work[k - 3] |==> sigma - work[k - 3]
1999:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:sigma + work[k - 3] |==> sigma / work[k - 3]
2000:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:TOLERANCE_2 * (sigma + work[k - 3]) |==> TOLERANCE_2 % (sigma + work[k - 3])
2001:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:TOLERANCE_2 * (sigma + work[k - 3]) |==> TOLERANCE_2 + (sigma + work[k - 3])
2002:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:TOLERANCE_2 * (sigma + work[k - 3]) |==> TOLERANCE_2 - (sigma + work[k - 3])
2003:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:TOLERANCE_2 * (sigma + work[k - 3]) |==> TOLERANCE_2 / (sigma + work[k - 3])
2004:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]) |==> work[k - 5] != TOLERANCE_2 * (sigma + work[k - 3])
2005:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]) |==> work[k - 5] < TOLERANCE_2 * (sigma + work[k - 3])
2006:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]) |==> work[k - 5] == TOLERANCE_2 * (sigma + work[k - 3])
2007:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]) |==> work[k - 5] > TOLERANCE_2 * (sigma + work[k - 3])
2008:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]) |==> work[k - 5] >= TOLERANCE_2 * (sigma + work[k - 3])
2009:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]) |==> false
2010:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]) |==> true
2011:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:2 |==> 0
2012:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:2 |==> -2
2013:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:2 * pingPong |==> 2 % pingPong
2014:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:2 * pingPong |==> 2 + pingPong
2015:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:2 * pingPong |==> 2 - pingPong
2016:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:2 * pingPong |==> 2 / pingPong
2017:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong |==> k % (2 * pingPong)
2018:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong |==> k * (2 * pingPong)
2019:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong |==> k + 2 * pingPong
2020:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong |==> k / (2 * pingPong)
2021:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:4 |==> 0
2022:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:4 |==> -4
2023:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong - 4 |==> (k - 2 * pingPong) % 4
2024:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong - 4 |==> (k - 2 * pingPong) * 4
2025:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong - 4 |==> k - 2 * pingPong + 4
2026:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 2 * pingPong - 4 |==> (k - 2 * pingPong) / 4
2027:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:7 |==> 0
2028:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:7 |==> -7
2029:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 7 |==> k % 7
2030:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 7 |==> k * 7
2031:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 7 |==> k + 7
2032:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:k - 7 |==> k / 7
2033:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:TOLERANCE_2 * work[k - 7] |==> TOLERANCE_2 % work[k - 7]
2034:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:TOLERANCE_2 * work[k - 7] |==> TOLERANCE_2 + work[k - 7]
2035:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:TOLERANCE_2 * work[k - 7] |==> TOLERANCE_2 - work[k - 7]
2036:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:TOLERANCE_2 * work[k - 7] |==> TOLERANCE_2 / work[k - 7]
2037:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7] |==> work[k - 2 * pingPong - 4] != TOLERANCE_2 * work[k - 7]
2038:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7] |==> work[k - 2 * pingPong - 4] < TOLERANCE_2 * work[k - 7]
2039:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7] |==> work[k - 2 * pingPong - 4] == TOLERANCE_2 * work[k - 7]
2040:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7] |==> work[k - 2 * pingPong - 4] > TOLERANCE_2 * work[k - 7]
2041:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7] |==> work[k - 2 * pingPong - 4] >= TOLERANCE_2 * work[k - 7]
2042:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7] |==> false
2043:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7] |==> true
2044:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:(work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]) |==> (work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) != (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])
2045:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:(work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]) |==> (work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) && (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])
2046:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:(work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]) |==> (work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) == (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])
2047:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:(work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]) |==> false
2048:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:(work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]) |==> (work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3]))
2049:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1009:(work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]) |==> (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])
2050:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:(work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]) |==> true
2051:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:(start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])) |==> (start != deflatedEnd - 2) != ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))
2052:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:(start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])) |==> (start != deflatedEnd - 2) == ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))
2053:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:(start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])) |==> false
2054:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:(start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])) |==> (start != deflatedEnd - 2)
2055:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1008:(start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])) |==> ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))
2056:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:(start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])) |==> true
2057:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:(start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])) |==> (start != deflatedEnd - 2) || ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))
2058:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))) |==> (start == deflatedEnd - 1) != ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])))
2059:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))) |==> (start == deflatedEnd - 1) && ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])))
2060:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))) |==> (start == deflatedEnd - 1) == ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])))
2061:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))) |==> false
2062:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))) |==> (start == deflatedEnd - 1)
2063:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1007:(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))) |==> ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7])))
2064:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1006:(start == deflatedEnd - 1) || ((start != deflatedEnd - 2) && ((work[k - 5] <= TOLERANCE_2 * (sigma + work[k - 3])) || (work[k - 2 * pingPong - 4] <= TOLERANCE_2 * work[k - 7]))) |==> true
2065:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> 0
2066:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> -4
2067:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 % deflatedEnd
2068:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 + deflatedEnd
2069:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 - deflatedEnd
2070:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 / deflatedEnd
2071:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> 0
2072:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> -4
2073:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd % 4
2074:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd * 4
2075:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd + 4
2076:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd / 4
2077:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> 0
2078:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> -4
2079:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 % deflatedEnd
2080:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 + deflatedEnd
2081:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 - deflatedEnd
2082:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd |==> 4 / deflatedEnd
2083:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> 0
2084:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 |==> -4
2085:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd % 4
2086:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd * 4
2087:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd + 4
2088:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 |==> 4 * deflatedEnd / 4
2089:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 + pingPong |==> (4 * deflatedEnd - 4) % pingPong
2090:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 + pingPong |==> (4 * deflatedEnd - 4) * pingPong
2091:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 + pingPong |==> 4 * deflatedEnd - 4 - pingPong
2092:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:4 * deflatedEnd - 4 + pingPong |==> (4 * deflatedEnd - 4) / pingPong
2093:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:sigma + work[4 * deflatedEnd - 4 + pingPong] |==> sigma % work[4 * deflatedEnd - 4 + pingPong]
2094:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:sigma + work[4 * deflatedEnd - 4 + pingPong] |==> sigma * work[4 * deflatedEnd - 4 + pingPong]
2095:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:sigma + work[4 * deflatedEnd - 4 + pingPong] |==> sigma - work[4 * deflatedEnd - 4 + pingPong]
2096:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:sigma + work[4 * deflatedEnd - 4 + pingPong] |==> sigma / work[4 * deflatedEnd - 4 + pingPong]
2097:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1012:work[4 * deflatedEnd - 4] = sigma + work[4 * deflatedEnd - 4 + pingPong] |==> <NO-OP>
2098:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1013:1 |==> 0
2099:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1013:1 |==> -1
2100:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1013:deflatedEnd -= 1 |==> <NO-OP>
2101:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:2 |==> 0
2102:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:2 |==> -2
2103:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:deflatedEnd - 2 |==> deflatedEnd % 2
2104:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:deflatedEnd - 2 |==> deflatedEnd * 2
2105:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:deflatedEnd - 2 |==> deflatedEnd + 2
2106:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:deflatedEnd - 2 |==> deflatedEnd / 2
2107:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:start == deflatedEnd - 2 |==> start != deflatedEnd - 2
2108:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:start == deflatedEnd - 2 |==> start < deflatedEnd - 2
2109:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:start == deflatedEnd - 2 |==> start <= deflatedEnd - 2
2110:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:start == deflatedEnd - 2 |==> start > deflatedEnd - 2
2111:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:start == deflatedEnd - 2 |==> start >= deflatedEnd - 2
2112:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:start == deflatedEnd - 2 |==> false
2113:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:start == deflatedEnd - 2 |==> true
2114:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:9 |==> 0
2115:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:9 |==> -9
2116:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:k - 9 |==> k % 9
2117:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:k - 9 |==> k * 9
2118:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:k - 9 |==> k + 9
2119:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:k - 9 |==> k / 9
2120:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:TOLERANCE_2 * sigma |==> TOLERANCE_2 % sigma
2121:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:TOLERANCE_2 * sigma |==> TOLERANCE_2 + sigma
2122:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:TOLERANCE_2 * sigma |==> TOLERANCE_2 - sigma
2123:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:TOLERANCE_2 * sigma |==> TOLERANCE_2 / sigma
2124:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:work[k - 9] <= TOLERANCE_2 * sigma |==> work[k - 9] != TOLERANCE_2 * sigma
2125:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:work[k - 9] <= TOLERANCE_2 * sigma |==> work[k - 9] < TOLERANCE_2 * sigma
2126:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:work[k - 9] <= TOLERANCE_2 * sigma |==> work[k - 9] == TOLERANCE_2 * sigma
2127:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:work[k - 9] <= TOLERANCE_2 * sigma |==> work[k - 9] > TOLERANCE_2 * sigma
2128:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:work[k - 9] <= TOLERANCE_2 * sigma |==> work[k - 9] >= TOLERANCE_2 * sigma
2129:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:work[k - 9] <= TOLERANCE_2 * sigma |==> false
2130:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:work[k - 9] <= TOLERANCE_2 * sigma |==> true
2131:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) |==> (start == deflatedEnd - 2) != (work[k - 9] <= TOLERANCE_2 * sigma)
2132:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) |==> (start == deflatedEnd - 2) && (work[k - 9] <= TOLERANCE_2 * sigma)
2133:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) |==> (start == deflatedEnd - 2) == (work[k - 9] <= TOLERANCE_2 * sigma)
2134:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) |==> false
2135:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) |==> (start == deflatedEnd - 2)
2136:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) |==> (work[k - 9] <= TOLERANCE_2 * sigma)
2137:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) |==> true
2138:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:2 |==> 0
2139:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:2 |==> -2
2140:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:2 * pingPong |==> 2 % pingPong
2141:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:2 * pingPong |==> 2 + pingPong
2142:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:2 * pingPong |==> 2 - pingPong
2143:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:2 * pingPong |==> 2 / pingPong
2144:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong |==> k % (2 * pingPong)
2145:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong |==> k * (2 * pingPong)
2146:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong |==> k + 2 * pingPong
2147:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong |==> k / (2 * pingPong)
2148:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:8 |==> 0
2149:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:8 |==> -8
2150:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong - 8 |==> (k - 2 * pingPong) % 8
2151:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong - 8 |==> (k - 2 * pingPong) * 8
2152:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong - 8 |==> k - 2 * pingPong + 8
2153:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 2 * pingPong - 8 |==> (k - 2 * pingPong) / 8
2154:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:11 |==> 0
2155:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:11 |==> -11
2156:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 11 |==> k % 11
2157:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 11 |==> k * 11
2158:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 11 |==> k + 11
2159:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:k - 11 |==> k / 11
2160:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:TOLERANCE_2 * work[k - 11] |==> TOLERANCE_2 % work[k - 11]
2161:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:TOLERANCE_2 * work[k - 11] |==> TOLERANCE_2 + work[k - 11]
2162:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:TOLERANCE_2 * work[k - 11] |==> TOLERANCE_2 - work[k - 11]
2163:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:TOLERANCE_2 * work[k - 11] |==> TOLERANCE_2 / work[k - 11]
2164:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11] |==> work[k - 2 * pingPong - 8] != TOLERANCE_2 * work[k - 11]
2165:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11] |==> work[k - 2 * pingPong - 8] < TOLERANCE_2 * work[k - 11]
2166:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11] |==> work[k - 2 * pingPong - 8] == TOLERANCE_2 * work[k - 11]
2167:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11] |==> work[k - 2 * pingPong - 8] > TOLERANCE_2 * work[k - 11]
2168:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11] |==> work[k - 2 * pingPong - 8] >= TOLERANCE_2 * work[k - 11]
2169:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11] |==> false
2170:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11] |==> true
2171:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]) |==> ((start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma)) != (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11])
2172:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]) |==> ((start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma)) && (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11])
2173:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]) |==> ((start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma)) == (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11])
2174:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]) |==> false
2175:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1015:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]) |==> (start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma)
2176:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1017:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]) |==> (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11])
2177:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1016:(start == deflatedEnd - 2) || (work[k - 9] <= TOLERANCE_2 * sigma) || (work[k - 2 * pingPong - 8] <= TOLERANCE_2 * work[k - 11]) |==> true
2178:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:3 |==> 0
2179:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:3 |==> -3
2180:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 3 |==> k % 3
2181:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 3 |==> k * 3
2182:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 3 |==> k + 3
2183:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 3 |==> k / 3
2184:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:7 |==> 0
2185:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:7 |==> -7
2186:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 7 |==> k % 7
2187:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 7 |==> k * 7
2188:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 7 |==> k + 7
2189:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:k - 7 |==> k / 7
2190:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:work[k - 3] > work[k - 7] |==> work[k - 3] != work[k - 7]
2191:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:work[k - 3] > work[k - 7] |==> work[k - 3] < work[k - 7]
2192:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:work[k - 3] > work[k - 7] |==> work[k - 3] <= work[k - 7]
2193:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:work[k - 3] > work[k - 7] |==> work[k - 3] == work[k - 7]
2194:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:work[k - 3] > work[k - 7] |==> work[k - 3] >= work[k - 7]
2195:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:work[k - 3] > work[k - 7] |==> false
2196:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1020:work[k - 3] > work[k - 7] |==> true
2197:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1021:3 |==> 0
2198:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1021:3 |==> -3
2199:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1021:k - 3 |==> k % 3
2200:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1021:k - 3 |==> k * 3
2201:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1021:k - 3 |==> k + 3
2202:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1021:k - 3 |==> k / 3
2203:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:3 |==> 0
2204:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:3 |==> -3
2205:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 3 |==> k % 3
2206:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 3 |==> k * 3
2207:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 3 |==> k + 3
2208:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 3 |==> k / 3
2209:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:7 |==> 0
2210:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:7 |==> -7
2211:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 7 |==> k % 7
2212:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 7 |==> k * 7
2213:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 7 |==> k + 7
2214:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:k - 7 |==> k / 7
2215:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1022:work[k - 3] = work[k - 7] |==> <NO-OP>
2216:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1023:7 |==> 0
2217:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1023:7 |==> -7
2218:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1023:k - 7 |==> k % 7
2219:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1023:k - 7 |==> k * 7
2220:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1023:k - 7 |==> k + 7
2221:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1023:k - 7 |==> k / 7
2222:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1023:work[k - 7] = tmp |==> <NO-OP>
2223:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:5 |==> 0
2224:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:5 |==> -5
2225:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 5 |==> k % 5
2226:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 5 |==> k * 5
2227:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 5 |==> k + 5
2228:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 5 |==> k / 5
2229:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:3 |==> 0
2230:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:3 |==> -3
2231:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 3 |==> k % 3
2232:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 3 |==> k * 3
2233:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 3 |==> k + 3
2234:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:k - 3 |==> k / 3
2235:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:TOLERANCE_2 * work[k - 3] |==> TOLERANCE_2 % work[k - 3]
2236:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:TOLERANCE_2 * work[k - 3] |==> TOLERANCE_2 + work[k - 3]
2237:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:TOLERANCE_2 * work[k - 3] |==> TOLERANCE_2 - work[k - 3]
2238:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:TOLERANCE_2 * work[k - 3] |==> TOLERANCE_2 / work[k - 3]
2239:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:work[k - 5] > TOLERANCE_2 * work[k - 3] |==> work[k - 5] != TOLERANCE_2 * work[k - 3]
2240:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:work[k - 5] > TOLERANCE_2 * work[k - 3] |==> work[k - 5] < TOLERANCE_2 * work[k - 3]
2241:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:work[k - 5] > TOLERANCE_2 * work[k - 3] |==> work[k - 5] <= TOLERANCE_2 * work[k - 3]
2242:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:work[k - 5] > TOLERANCE_2 * work[k - 3] |==> work[k - 5] == TOLERANCE_2 * work[k - 3]
2243:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:work[k - 5] > TOLERANCE_2 * work[k - 3] |==> work[k - 5] >= TOLERANCE_2 * work[k - 3]
2244:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:work[k - 5] > TOLERANCE_2 * work[k - 3] |==> false
2245:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1026:work[k - 5] > TOLERANCE_2 * work[k - 3] |==> true
2246:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:0.5 |==> 0.0
2247:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:0.5 |==> -0.5
2248:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:7 |==> 0
2249:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:7 |==> -7
2250:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 7 |==> k % 7
2251:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 7 |==> k * 7
2252:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 7 |==> k + 7
2253:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 7 |==> k / 7
2254:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:3 |==> 0
2255:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:3 |==> -3
2256:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 3 |==> k % 3
2257:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 3 |==> k * 3
2258:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 3 |==> k + 3
2259:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 3 |==> k / 3
2260:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:work[k - 7] - work[k - 3] |==> work[k - 7] % work[k - 3]
2261:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:work[k - 7] - work[k - 3] |==> work[k - 7] * work[k - 3]
2262:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:work[k - 7] - work[k - 3] |==> work[k - 7] + work[k - 3]
2263:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:work[k - 7] - work[k - 3] |==> work[k - 7] / work[k - 3]
2264:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:5 |==> 0
2265:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:5 |==> -5
2266:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 5 |==> k % 5
2267:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 5 |==> k * 5
2268:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 5 |==> k + 5
2269:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:k - 5 |==> k / 5
2270:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:(work[k - 7] - work[k - 3]) + work[k - 5] |==> (work[k - 7] - work[k - 3]) % work[k - 5]
2271:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:(work[k - 7] - work[k - 3]) + work[k - 5] |==> (work[k - 7] - work[k - 3]) * work[k - 5]
2272:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:(work[k - 7] - work[k - 3]) + work[k - 5] |==> (work[k - 7] - work[k - 3]) - work[k - 5]
2273:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:(work[k - 7] - work[k - 3]) + work[k - 5] |==> (work[k - 7] - work[k - 3]) / work[k - 5]
2274:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:0.5 * ((work[k - 7] - work[k - 3]) + work[k - 5]) |==> 0.5 % ((work[k - 7] - work[k - 3]) + work[k - 5])
2275:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:0.5 * ((work[k - 7] - work[k - 3]) + work[k - 5]) |==> 0.5 + ((work[k - 7] - work[k - 3]) + work[k - 5])
2276:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:0.5 * ((work[k - 7] - work[k - 3]) + work[k - 5]) |==> 0.5 - ((work[k - 7] - work[k - 3]) + work[k - 5])
2277:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1027:0.5 * ((work[k - 7] - work[k - 3]) + work[k - 5]) |==> 0.5 / ((work[k - 7] - work[k - 3]) + work[k - 5])
2278:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:3 |==> 0
2279:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:3 |==> -3
2280:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 3 |==> k % 3
2281:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 3 |==> k * 3
2282:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 3 |==> k + 3
2283:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 3 |==> k / 3
2284:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:5 |==> 0
2285:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:5 |==> -5
2286:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 5 |==> k % 5
2287:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 5 |==> k * 5
2288:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 5 |==> k + 5
2289:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:k - 5 |==> k / 5
2290:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 5] / t |==> work[k - 5] % t
2291:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 5] / t |==> work[k - 5] * t
2292:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 5] / t |==> work[k - 5] + t
2293:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 5] / t |==> work[k - 5] - t
2294:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 3] * (work[k - 5] / t) |==> work[k - 3] % (work[k - 5] / t)
2295:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 3] * (work[k - 5] / t) |==> work[k - 3] + (work[k - 5] / t)
2296:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 3] * (work[k - 5] / t) |==> work[k - 3] - (work[k - 5] / t)
2297:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1028:work[k - 3] * (work[k - 5] / t) |==> work[k - 3] / (work[k - 5] / t)
2298:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1029:s <= t |==> s != t
2299:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1029:s <= t |==> s < t
2300:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1029:s <= t |==> s == t
2301:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1029:s <= t |==> s > t
2302:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1029:s <= t |==> s >= t
2303:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1029:s <= t |==> false
2304:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1029:s <= t |==> true
2305:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:3 |==> 0
2306:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:3 |==> -3
2307:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 3 |==> k % 3
2308:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 3 |==> k * 3
2309:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 3 |==> k + 3
2310:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 3 |==> k / 3
2311:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:5 |==> 0
2312:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:5 |==> -5
2313:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 5 |==> k % 5
2314:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 5 |==> k * 5
2315:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 5 |==> k + 5
2316:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:k - 5 |==> k / 5
2317:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] |==> work[k - 3] % work[k - 5]
2318:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] |==> work[k - 3] + work[k - 5]
2319:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] |==> work[k - 3] - work[k - 5]
2320:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] |==> work[k - 3] / work[k - 5]
2321:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 |==> 0
2322:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 |==> -1
2323:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 |==> 0
2324:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 |==> -1
2325:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:s / t |==> s % t
2326:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:s / t |==> s * t
2327:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:s / t |==> s + t
2328:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:s / t |==> s - t
2329:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + s / t |==> 1 % (s / t)
2330:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + s / t |==> 1 * (s / t)
2331:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + s / t |==> 1 - s / t
2332:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + s / t |==> 1 / (s / t)
2333:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + Math.sqrt(1 + s / t) |==> 1 % Math.sqrt(1 + s / t)
2334:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + Math.sqrt(1 + s / t) |==> 1 * Math.sqrt(1 + s / t)
2335:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + Math.sqrt(1 + s / t) |==> 1 - Math.sqrt(1 + s / t)
2336:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:1 + Math.sqrt(1 + s / t) |==> 1 / Math.sqrt(1 + s / t)
2337:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:t * (1 + Math.sqrt(1 + s / t)) |==> t % (1 + Math.sqrt(1 + s / t))
2338:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:t * (1 + Math.sqrt(1 + s / t)) |==> t + (1 + Math.sqrt(1 + s / t))
2339:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:t * (1 + Math.sqrt(1 + s / t)) |==> t - (1 + Math.sqrt(1 + s / t))
2340:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:t * (1 + Math.sqrt(1 + s / t)) |==> t / (1 + Math.sqrt(1 + s / t))
2341:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] / (t * (1 + Math.sqrt(1 + s / t))) |==> work[k - 3] * work[k - 5] % (t * (1 + Math.sqrt(1 + s / t)))
2342:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] / (t * (1 + Math.sqrt(1 + s / t))) |==> work[k - 3] * work[k - 5] * (t * (1 + Math.sqrt(1 + s / t)))
2343:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] / (t * (1 + Math.sqrt(1 + s / t))) |==> work[k - 3] * work[k - 5] + (t * (1 + Math.sqrt(1 + s / t)))
2344:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:work[k - 3] * work[k - 5] / (t * (1 + Math.sqrt(1 + s / t))) |==> work[k - 3] * work[k - 5] - (t * (1 + Math.sqrt(1 + s / t)))
2345:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1030:s = work[k - 3] * work[k - 5] / (t * (1 + Math.sqrt(1 + s / t))) |==> <NO-OP>
2346:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:3 |==> 0
2347:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:3 |==> -3
2348:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 3 |==> k % 3
2349:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 3 |==> k * 3
2350:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 3 |==> k + 3
2351:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 3 |==> k / 3
2352:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:5 |==> 0
2353:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:5 |==> -5
2354:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 5 |==> k % 5
2355:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 5 |==> k * 5
2356:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 5 |==> k + 5
2357:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:k - 5 |==> k / 5
2358:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] |==> work[k - 3] % work[k - 5]
2359:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] |==> work[k - 3] + work[k - 5]
2360:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] |==> work[k - 3] - work[k - 5]
2361:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] |==> work[k - 3] / work[k - 5]
2362:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + s |==> t % s
2363:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + s |==> t * s
2364:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + s |==> t - s
2365:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + s |==> t / s
2366:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t * (t + s) |==> t % (t + s)
2367:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t * (t + s) |==> t + (t + s)
2368:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t * (t + s) |==> t - (t + s)
2369:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t * (t + s) |==> t / (t + s)
2370:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + Math.sqrt(t * (t + s)) |==> t % Math.sqrt(t * (t + s))
2371:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + Math.sqrt(t * (t + s)) |==> t * Math.sqrt(t * (t + s))
2372:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + Math.sqrt(t * (t + s)) |==> t - Math.sqrt(t * (t + s))
2373:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:t + Math.sqrt(t * (t + s)) |==> t / Math.sqrt(t * (t + s))
2374:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] / (t + Math.sqrt(t * (t + s))) |==> work[k - 3] * work[k - 5] % (t + Math.sqrt(t * (t + s)))
2375:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] / (t + Math.sqrt(t * (t + s))) |==> work[k - 3] * work[k - 5] * (t + Math.sqrt(t * (t + s)))
2376:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] / (t + Math.sqrt(t * (t + s))) |==> work[k - 3] * work[k - 5] + (t + Math.sqrt(t * (t + s)))
2377:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:work[k - 3] * work[k - 5] / (t + Math.sqrt(t * (t + s))) |==> work[k - 3] * work[k - 5] - (t + Math.sqrt(t * (t + s)))
2378:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1032:s = work[k - 3] * work[k - 5] / (t + Math.sqrt(t * (t + s))) |==> <NO-OP>
2379:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:7 |==> 0
2380:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:7 |==> -7
2381:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 7 |==> k % 7
2382:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 7 |==> k * 7
2383:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 7 |==> k + 7
2384:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 7 |==> k / 7
2385:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:5 |==> 0
2386:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:5 |==> -5
2387:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 5 |==> k % 5
2388:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 5 |==> k * 5
2389:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 5 |==> k + 5
2390:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:k - 5 |==> k / 5
2391:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:s + work[k - 5] |==> s % work[k - 5]
2392:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:s + work[k - 5] |==> s * work[k - 5]
2393:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:s + work[k - 5] |==> s - work[k - 5]
2394:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:s + work[k - 5] |==> s / work[k - 5]
2395:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:work[k - 7] + (s + work[k - 5]) |==> work[k - 7] % (s + work[k - 5])
2396:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:work[k - 7] + (s + work[k - 5]) |==> work[k - 7] * (s + work[k - 5])
2397:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:work[k - 7] + (s + work[k - 5]) |==> work[k - 7] - (s + work[k - 5])
2398:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:work[k - 7] + (s + work[k - 5]) |==> work[k - 7] / (s + work[k - 5])
2399:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1034:t = work[k - 7] + (s + work[k - 5]) |==> <NO-OP>
2400:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:3 |==> 0
2401:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:3 |==> -3
2402:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 3 |==> k % 3
2403:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 3 |==> k * 3
2404:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 3 |==> k + 3
2405:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 3 |==> k / 3
2406:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:7 |==> 0
2407:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:7 |==> -7
2408:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 7 |==> k % 7
2409:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 7 |==> k * 7
2410:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 7 |==> k + 7
2411:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:k - 7 |==> k / 7
2412:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:work[k - 7] / t |==> work[k - 7] % t
2413:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:work[k - 7] / t |==> work[k - 7] * t
2414:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:work[k - 7] / t |==> work[k - 7] + t
2415:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:work[k - 7] / t |==> work[k - 7] - t
2416:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1035:work[k - 3] *= work[k - 7] / t |==> <NO-OP>
2417:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1036:7 |==> 0
2418:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1036:7 |==> -7
2419:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1036:k - 7 |==> k % 7
2420:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1036:k - 7 |==> k * 7
2421:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1036:k - 7 |==> k + 7
2422:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1036:k - 7 |==> k / 7
2423:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1036:work[k - 7] = t |==> <NO-OP>
2424:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 |==> 0
2425:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 |==> -4
2426:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd |==> 4 % deflatedEnd
2427:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd |==> 4 + deflatedEnd
2428:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd |==> 4 - deflatedEnd
2429:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd |==> 4 / deflatedEnd
2430:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:8 |==> 0
2431:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:8 |==> -8
2432:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd - 8 |==> 4 * deflatedEnd % 8
2433:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd - 8 |==> 4 * deflatedEnd * 8
2434:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd - 8 |==> 4 * deflatedEnd + 8
2435:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:4 * deflatedEnd - 8 |==> 4 * deflatedEnd / 8
2436:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:7 |==> 0
2437:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:7 |==> -7
2438:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:k - 7 |==> k % 7
2439:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:k - 7 |==> k * 7
2440:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:k - 7 |==> k + 7
2441:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:k - 7 |==> k / 7
2442:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:sigma + work[k - 7] |==> sigma % work[k - 7]
2443:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:sigma + work[k - 7] |==> sigma * work[k - 7]
2444:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:sigma + work[k - 7] |==> sigma - work[k - 7]
2445:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:sigma + work[k - 7] |==> sigma / work[k - 7]
2446:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1038:work[4 * deflatedEnd - 8] = sigma + work[k - 7] |==> <NO-OP>
2447:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 |==> 0
2448:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 |==> -4
2449:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd |==> 4 % deflatedEnd
2450:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd |==> 4 + deflatedEnd
2451:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd |==> 4 - deflatedEnd
2452:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd |==> 4 / deflatedEnd
2453:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 |==> 0
2454:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 |==> -4
2455:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd - 4 |==> 4 * deflatedEnd % 4
2456:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd - 4 |==> 4 * deflatedEnd * 4
2457:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd - 4 |==> 4 * deflatedEnd + 4
2458:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:4 * deflatedEnd - 4 |==> 4 * deflatedEnd / 4
2459:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:3 |==> 0
2460:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:3 |==> -3
2461:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:k - 3 |==> k % 3
2462:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:k - 3 |==> k * 3
2463:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:k - 3 |==> k + 3
2464:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:k - 3 |==> k / 3
2465:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:sigma + work[k - 3] |==> sigma % work[k - 3]
2466:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:sigma + work[k - 3] |==> sigma * work[k - 3]
2467:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:sigma + work[k - 3] |==> sigma - work[k - 3]
2468:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:sigma + work[k - 3] |==> sigma / work[k - 3]
2469:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1039:work[4 * deflatedEnd - 4] = sigma + work[k - 3] |==> <NO-OP>
2470:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1040:2 |==> 0
2471:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1040:2 |==> -2
2472:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1040:deflatedEnd -= 2 |==> <NO-OP>
2473:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1044:false |==> true
2474:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1044:deflating = false |==> <NO-OP>
2475:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 |==> 0
2476:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 |==> -4
2477:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd |==> 4 % deflatedEnd
2478:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd |==> 4 + deflatedEnd
2479:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd |==> 4 - deflatedEnd
2480:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd |==> 4 / deflatedEnd
2481:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd % pingPong
2482:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd * pingPong
2483:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd - pingPong
2484:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong |==> 4 * deflatedEnd / pingPong
2485:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:1 |==> 0
2486:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:1 |==> -1
2487:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong - 1 |==> (4 * deflatedEnd + pingPong) % 1
2488:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong - 1 |==> (4 * deflatedEnd + pingPong) * 1
2489:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong - 1 |==> 4 * deflatedEnd + pingPong + 1
2490:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1050:4 * deflatedEnd + pingPong - 1 |==> (4 * deflatedEnd + pingPong) / 1
2491:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:0 |==> 1
2492:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:0 |==> -1
2493:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:dMin <= 0 |==> dMin != 0
2494:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:dMin <= 0 |==> dMin < 0
2495:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:dMin <= 0 |==> dMin == 0
2496:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:dMin <= 0 |==> dMin > 0
2497:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:dMin <= 0 |==> dMin >= 0
2498:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:dMin <= 0 |==> false
2499:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:dMin <= 0 |==> true
2500:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:deflatedEnd < end |==> deflatedEnd != end
2501:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:deflatedEnd < end |==> deflatedEnd <= end
2502:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:deflatedEnd < end |==> deflatedEnd == end
2503:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:deflatedEnd < end |==> deflatedEnd > end
2504:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:deflatedEnd < end |==> deflatedEnd >= end
2505:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:deflatedEnd < end |==> false
2506:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:deflatedEnd < end |==> true
2507:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:(dMin <= 0) || (deflatedEnd < end) |==> (dMin <= 0) != (deflatedEnd < end)
2508:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:(dMin <= 0) || (deflatedEnd < end) |==> (dMin <= 0) && (deflatedEnd < end)
2509:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:(dMin <= 0) || (deflatedEnd < end) |==> (dMin <= 0) == (deflatedEnd < end)
2510:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:(dMin <= 0) || (deflatedEnd < end) |==> false
2511:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:(dMin <= 0) || (deflatedEnd < end) |==> (dMin <= 0)
2512:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:(dMin <= 0) || (deflatedEnd < end) |==> (deflatedEnd < end)
2513:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1053:(dMin <= 0) || (deflatedEnd < end) |==> true
2514:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1054:1 |==> 0
2515:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1054:1 |==> -1
2516:COR:flipIfWarranted(deflatedEnd, 1):TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1054:flipIfWarranted(deflatedEnd, 1) |==> false
2517:COR:flipIfWarranted(deflatedEnd, 1):FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1054:flipIfWarranted(deflatedEnd, 1) |==> true
2518:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1055:1 |==> 0
2519:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1055:1 |==> -1
2520:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1055:l - 1 |==> l % 1
2521:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1055:l - 1 |==> l * 1
2522:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1055:l - 1 |==> l + 1
2523:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1055:l - 1 |==> l / 1
2524:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1055:dMin2 = Math.min(dMin2, work[l - 1]) |==> <NO-OP>
2525:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1056:1 |==> 0
2526:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1056:1 |==> -1
2527:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1056:l - 1 |==> l % 1
2528:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1056:l - 1 |==> l * 1
2529:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1056:l - 1 |==> l + 1
2530:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1056:l - 1 |==> l / 1
2531:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1057:1 |==> 0
2532:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1057:1 |==> -1
2533:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1057:l - 1 |==> l % 1
2534:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1057:l - 1 |==> l * 1
2535:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1057:l - 1 |==> l + 1
2536:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1057:l - 1 |==> l / 1
2537:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:3 |==> 0
2538:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:3 |==> -3
2539:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:3 + pingPong |==> 3 % pingPong
2540:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:3 + pingPong |==> 3 * pingPong
2541:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:3 + pingPong |==> 3 - pingPong
2542:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:3 + pingPong |==> 3 / pingPong
2543:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:7 |==> 0
2544:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:7 |==> -7
2545:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:7 + pingPong |==> 7 % pingPong
2546:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:7 + pingPong |==> 7 * pingPong
2547:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:7 + pingPong |==> 7 - pingPong
2548:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1058:7 + pingPong |==> 7 / pingPong
2549:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1056:work[l - 1] = Math.min(work[l - 1], Math.min(work[3 + pingPong], work[7 + pingPong])) |==> <NO-OP>
2550:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:2 |==> 0
2551:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:2 |==> -2
2552:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:2 * pingPong |==> 2 % pingPong
2553:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:2 * pingPong |==> 2 + pingPong
2554:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:2 * pingPong |==> 2 - pingPong
2555:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:2 * pingPong |==> 2 / pingPong
2556:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:l - 2 * pingPong |==> l % (2 * pingPong)
2557:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:l - 2 * pingPong |==> l * (2 * pingPong)
2558:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:l - 2 * pingPong |==> l + 2 * pingPong
2559:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:l - 2 * pingPong |==> l / (2 * pingPong)
2560:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:2 |==> 0
2561:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:2 |==> -2
2562:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:2 * pingPong |==> 2 % pingPong
2563:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:2 * pingPong |==> 2 + pingPong
2564:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:2 * pingPong |==> 2 - pingPong
2565:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:2 * pingPong |==> 2 / pingPong
2566:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:l - 2 * pingPong |==> l % (2 * pingPong)
2567:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:l - 2 * pingPong |==> l * (2 * pingPong)
2568:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:l - 2 * pingPong |==> l + 2 * pingPong
2569:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1060:l - 2 * pingPong |==> l / (2 * pingPong)
2570:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 |==> 0
2571:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 |==> -6
2572:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 % pingPong
2573:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 * pingPong
2574:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 - pingPong
2575:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 / pingPong
2576:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 |==> 0
2577:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 |==> -6
2578:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 % pingPong
2579:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 * pingPong
2580:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 - pingPong
2581:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1061:6 + pingPong |==> 6 / pingPong
2582:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1059:work[l - 2 * pingPong] = Math.min(work[l - 2 * pingPong], Math.min(work[6 + pingPong], work[6 + pingPong])) |==> <NO-OP>
2583:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:3 |==> 0
2584:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:3 |==> -3
2585:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:3 + pingPong |==> 3 % pingPong
2586:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:3 + pingPong |==> 3 * pingPong
2587:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:3 + pingPong |==> 3 - pingPong
2588:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:3 + pingPong |==> 3 / pingPong
2589:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:7 |==> 0
2590:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:7 |==> -7
2591:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:7 + pingPong |==> 7 % pingPong
2592:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:7 + pingPong |==> 7 * pingPong
2593:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:7 + pingPong |==> 7 - pingPong
2594:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:7 + pingPong |==> 7 / pingPong
2595:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1062:qMax = Math.max(qMax, Math.max(work[3 + pingPong], work[7 + pingPong])) |==> <NO-OP>
2596:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1063:-0.0 |==> +0.0
2597:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1063:0.0 |==> 1.0
2598:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1063:0.0 |==> -1.0
2599:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1063:dMin = -0.0 |==> <NO-OP>
2600:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:0 |==> 1
2601:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:0 |==> -1
2602:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:dMin < 0 |==> dMin != 0
2603:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:dMin < 0 |==> dMin <= 0
2604:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:dMin < 0 |==> dMin == 0
2605:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:dMin < 0 |==> dMin > 0
2606:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:dMin < 0 |==> dMin >= 0
2607:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:dMin < 0 |==> false
2608:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:dMin < 0 |==> true
2609:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax |==> MathUtils.SAFE_MIN % qMax
2610:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax |==> MathUtils.SAFE_MIN + qMax
2611:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax |==> MathUtils.SAFE_MIN - qMax
2612:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax |==> MathUtils.SAFE_MIN / qMax
2613:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:1 |==> 0
2614:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:1 |==> -1
2615:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:l - 1 |==> l % 1
2616:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:l - 1 |==> l * 1
2617:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:l - 1 |==> l + 1
2618:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:l - 1 |==> l / 1
2619:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1069:9 |==> 0
2620:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1069:9 |==> -9
2621:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1069:l - 9 |==> l % 9
2622:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1069:l - 9 |==> l * 9
2623:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1069:l - 9 |==> l + 9
2624:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1069:l - 9 |==> l / 9
2625:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:2 |==> 0
2626:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:2 |==> -2
2627:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:2 * pingPong |==> 2 % pingPong
2628:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:2 * pingPong |==> 2 + pingPong
2629:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:2 * pingPong |==> 2 - pingPong
2630:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:2 * pingPong |==> 2 / pingPong
2631:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:l - 2 * pingPong |==> l % (2 * pingPong)
2632:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:l - 2 * pingPong |==> l * (2 * pingPong)
2633:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:l - 2 * pingPong |==> l + 2 * pingPong
2634:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:l - 2 * pingPong |==> l / (2 * pingPong)
2635:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:dMin2 + work[l - 2 * pingPong] |==> dMin2 % work[l - 2 * pingPong]
2636:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:dMin2 + work[l - 2 * pingPong] |==> dMin2 * work[l - 2 * pingPong]
2637:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:dMin2 + work[l - 2 * pingPong] |==> dMin2 - work[l - 2 * pingPong]
2638:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1070:dMin2 + work[l - 2 * pingPong] |==> dMin2 / work[l - 2 * pingPong]
2639:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])) |==> MathUtils.SAFE_MIN * qMax != Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))
2640:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])) |==> MathUtils.SAFE_MIN * qMax <= Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))
2641:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])) |==> MathUtils.SAFE_MIN * qMax == Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))
2642:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])) |==> MathUtils.SAFE_MIN * qMax > Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))
2643:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])) |==> MathUtils.SAFE_MIN * qMax >= Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))
2644:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])) |==> false
2645:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])) |==> true
2646:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))) |==> (dMin < 0) != (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])))
2647:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))) |==> (dMin < 0) && (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])))
2648:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))) |==> (dMin < 0) == (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])))
2649:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))) |==> false
2650:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))) |==> (dMin < 0)
2651:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1068:(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))) |==> (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong])))
2652:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1067:(dMin < 0) || (MathUtils.SAFE_MIN * qMax < Math.min(work[l - 1], Math.min(work[l - 9], dMin2 + work[l - 2 * pingPong]))) |==> true
2653:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1072:end - deflatedEnd |==> end % deflatedEnd
2654:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1072:end - deflatedEnd |==> end * deflatedEnd
2655:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1072:end - deflatedEnd |==> end + deflatedEnd
2656:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1072:end - deflatedEnd |==> end / deflatedEnd
2657:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1072:computeShiftIncrement(start, deflatedEnd, end - deflatedEnd) |==> <NO-OP>
2658:LVR:TRUE:FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1075:true |==> false
2659:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1078:dqds(start, deflatedEnd) |==> <NO-OP>
2660:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:0 |==> 1
2661:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:0 |==> -1
2662:ROR:>=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin >= 0 |==> dMin != 0
2663:ROR:>=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin >= 0 |==> dMin < 0
2664:ROR:>=(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin >= 0 |==> dMin <= 0
2665:ROR:>=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin >= 0 |==> dMin == 0
2666:ROR:>=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin >= 0 |==> dMin > 0
2667:ROR:>=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin >= 0 |==> false
2668:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin >= 0 |==> true
2669:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:0 |==> 1
2670:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:0 |==> -1
2671:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin1 > 0 |==> dMin1 != 0
2672:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin1 > 0 |==> dMin1 < 0
2673:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin1 > 0 |==> dMin1 <= 0
2674:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin1 > 0 |==> dMin1 == 0
2675:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin1 > 0 |==> dMin1 >= 0
2676:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin1 > 0 |==> false
2677:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:dMin1 > 0 |==> true
2678:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:(dMin >= 0) && (dMin1 > 0) |==> (dMin >= 0) != (dMin1 > 0)
2679:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:(dMin >= 0) && (dMin1 > 0) |==> (dMin >= 0) == (dMin1 > 0)
2680:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:(dMin >= 0) && (dMin1 > 0) |==> false
2681:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:(dMin >= 0) && (dMin1 > 0) |==> (dMin >= 0)
2682:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:(dMin >= 0) && (dMin1 > 0) |==> (dMin1 > 0)
2683:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:(dMin >= 0) && (dMin1 > 0) |==> true
2684:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1081:(dMin >= 0) && (dMin1 > 0) |==> (dMin >= 0) || (dMin1 > 0)
2685:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1083:updateSigma(tau) |==> <NO-OP>
2686:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:0.0 |==> 1.0
2687:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:0.0 |==> -1.0
2688:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:dMin < 0.0 |==> dMin != 0.0
2689:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:dMin < 0.0 |==> dMin <= 0.0
2690:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:dMin < 0.0 |==> dMin == 0.0
2691:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:dMin < 0.0 |==> dMin > 0.0
2692:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:dMin < 0.0 |==> dMin >= 0.0
2693:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:dMin < 0.0 |==> false
2694:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:dMin < 0.0 |==> true
2695:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:0.0 |==> 1.0
2696:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:0.0 |==> -1.0
2697:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:dMin1 > 0.0 |==> dMin1 != 0.0
2698:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:dMin1 > 0.0 |==> dMin1 < 0.0
2699:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:dMin1 > 0.0 |==> dMin1 <= 0.0
2700:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:dMin1 > 0.0 |==> dMin1 == 0.0
2701:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:dMin1 > 0.0 |==> dMin1 >= 0.0
2702:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:dMin1 > 0.0 |==> false
2703:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:dMin1 > 0.0 |==> true
2704:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) |==> (dMin < 0.0) != (dMin1 > 0.0)
2705:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) |==> (dMin < 0.0) == (dMin1 > 0.0)
2706:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) |==> false
2707:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) |==> (dMin < 0.0)
2708:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:(dMin < 0.0) && (dMin1 > 0.0) |==> (dMin1 > 0.0)
2709:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) |==> true
2710:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) |==> (dMin < 0.0) || (dMin1 > 0.0)
2711:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 |==> 0
2712:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 |==> -4
2713:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd |==> 4 % deflatedEnd
2714:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd |==> 4 + deflatedEnd
2715:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd |==> 4 - deflatedEnd
2716:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd |==> 4 / deflatedEnd
2717:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:5 |==> 0
2718:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:5 |==> -5
2719:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 |==> 4 * deflatedEnd % 5
2720:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 |==> 4 * deflatedEnd * 5
2721:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 |==> 4 * deflatedEnd + 5
2722:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 |==> 4 * deflatedEnd / 5
2723:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 - pingPong |==> (4 * deflatedEnd - 5) % pingPong
2724:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 - pingPong |==> (4 * deflatedEnd - 5) * pingPong
2725:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 - pingPong |==> 4 * deflatedEnd - 5 + pingPong
2726:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:4 * deflatedEnd - 5 - pingPong |==> (4 * deflatedEnd - 5) / pingPong
2727:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:sigma + dN1 |==> sigma % dN1
2728:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:sigma + dN1 |==> sigma * dN1
2729:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:sigma + dN1 |==> sigma - dN1
2730:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:sigma + dN1 |==> sigma / dN1
2731:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:TOLERANCE * (sigma + dN1) |==> TOLERANCE % (sigma + dN1)
2732:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:TOLERANCE * (sigma + dN1) |==> TOLERANCE + (sigma + dN1)
2733:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:TOLERANCE * (sigma + dN1) |==> TOLERANCE - (sigma + dN1)
2734:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:TOLERANCE * (sigma + dN1) |==> TOLERANCE / (sigma + dN1)
2735:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1) |==> work[4 * deflatedEnd - 5 - pingPong] != TOLERANCE * (sigma + dN1)
2736:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1) |==> work[4 * deflatedEnd - 5 - pingPong] <= TOLERANCE * (sigma + dN1)
2737:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1) |==> work[4 * deflatedEnd - 5 - pingPong] == TOLERANCE * (sigma + dN1)
2738:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1) |==> work[4 * deflatedEnd - 5 - pingPong] > TOLERANCE * (sigma + dN1)
2739:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1) |==> work[4 * deflatedEnd - 5 - pingPong] >= TOLERANCE * (sigma + dN1)
2740:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1) |==> false
2741:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1) |==> true
2742:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) |==> ((dMin < 0.0) && (dMin1 > 0.0)) != (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))
2743:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) |==> ((dMin < 0.0) && (dMin1 > 0.0)) == (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))
2744:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) |==> false
2745:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) |==> (dMin < 0.0) && (dMin1 > 0.0)
2746:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) |==> (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))
2747:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1086:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) |==> true
2748:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) |==> (dMin < 0.0) && (dMin1 > 0.0) || (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))
2749:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:TOLERANCE * sigma |==> TOLERANCE % sigma
2750:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:TOLERANCE * sigma |==> TOLERANCE + sigma
2751:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:TOLERANCE * sigma |==> TOLERANCE - sigma
2752:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:TOLERANCE * sigma |==> TOLERANCE / sigma
2753:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:Math.abs(dN) < TOLERANCE * sigma |==> Math.abs(dN) != TOLERANCE * sigma
2754:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:Math.abs(dN) < TOLERANCE * sigma |==> Math.abs(dN) <= TOLERANCE * sigma
2755:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:Math.abs(dN) < TOLERANCE * sigma |==> Math.abs(dN) == TOLERANCE * sigma
2756:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:Math.abs(dN) < TOLERANCE * sigma |==> Math.abs(dN) > TOLERANCE * sigma
2757:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:Math.abs(dN) < TOLERANCE * sigma |==> Math.abs(dN) >= TOLERANCE * sigma
2758:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:Math.abs(dN) < TOLERANCE * sigma |==> false
2759:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:Math.abs(dN) < TOLERANCE * sigma |==> true
2760:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) && (Math.abs(dN) < TOLERANCE * sigma) |==> ((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))) != (Math.abs(dN) < TOLERANCE * sigma)
2761:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) && (Math.abs(dN) < TOLERANCE * sigma) |==> ((dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))) == (Math.abs(dN) < TOLERANCE * sigma)
2762:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) && (Math.abs(dN) < TOLERANCE * sigma) |==> false
2763:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) && (Math.abs(dN) < TOLERANCE * sigma) |==> (dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1))
2764:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1088:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) && (Math.abs(dN) < TOLERANCE * sigma) |==> (Math.abs(dN) < TOLERANCE * sigma)
2765:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1087:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) && (Math.abs(dN) < TOLERANCE * sigma) |==> true
2766:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1085:(dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) && (Math.abs(dN) < TOLERANCE * sigma) |==> (dMin < 0.0) && (dMin1 > 0.0) && (work[4 * deflatedEnd - 5 - pingPong] < TOLERANCE * (sigma + dN1)) || (Math.abs(dN) < TOLERANCE * sigma)
2767:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 |==> 0
2768:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 |==> -4
2769:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd |==> 4 % deflatedEnd
2770:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd |==> 4 + deflatedEnd
2771:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd |==> 4 - deflatedEnd
2772:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd |==> 4 / deflatedEnd
2773:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:3 |==> 0
2774:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:3 |==> -3
2775:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 |==> 4 * deflatedEnd % 3
2776:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 |==> 4 * deflatedEnd * 3
2777:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 |==> 4 * deflatedEnd + 3
2778:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 |==> 4 * deflatedEnd / 3
2779:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 - pingPong |==> (4 * deflatedEnd - 3) % pingPong
2780:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 - pingPong |==> (4 * deflatedEnd - 3) * pingPong
2781:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 - pingPong |==> 4 * deflatedEnd - 3 + pingPong
2782:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:4 * deflatedEnd - 3 - pingPong |==> (4 * deflatedEnd - 3) / pingPong
2783:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:0.0 |==> 1.0
2784:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:0.0 |==> -1.0
2785:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1090:work[4 * deflatedEnd - 3 - pingPong] = 0.0 |==> <NO-OP>
2786:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1091:0.0 |==> 1.0
2787:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1091:0.0 |==> -1.0
2788:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1091:dMin = 0.0 |==> <NO-OP>
2789:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1092:updateSigma(tau) |==> <NO-OP>
2790:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:0.0 |==> 1.0
2791:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:0.0 |==> -1.0
2792:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:dMin < 0.0 |==> dMin != 0.0
2793:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:dMin < 0.0 |==> dMin <= 0.0
2794:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:dMin < 0.0 |==> dMin == 0.0
2795:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:dMin < 0.0 |==> dMin > 0.0
2796:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:dMin < 0.0 |==> dMin >= 0.0
2797:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:dMin < 0.0 |==> false
2798:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1094:dMin < 0.0 |==> true
2799:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:-22 |==> 0
2800:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:-22 |==> 22
2801:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:tType < -22 |==> tType != -22
2802:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:tType < -22 |==> tType <= -22
2803:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:tType < -22 |==> tType == -22
2804:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:tType < -22 |==> tType > -22
2805:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:tType < -22 |==> tType >= -22
2806:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:tType < -22 |==> false
2807:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1096:tType < -22 |==> true
2808:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1098:0.0 |==> 1.0
2809:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1098:0.0 |==> -1.0
2810:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1098:tau = 0.0 |==> <NO-OP>
2811:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:0.0 |==> 1.0
2812:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:0.0 |==> -1.0
2813:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:dMin1 > 0.0 |==> dMin1 != 0.0
2814:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:dMin1 > 0.0 |==> dMin1 < 0.0
2815:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:dMin1 > 0.0 |==> dMin1 <= 0.0
2816:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:dMin1 > 0.0 |==> dMin1 == 0.0
2817:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:dMin1 > 0.0 |==> dMin1 >= 0.0
2818:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:dMin1 > 0.0 |==> false
2819:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1099:dMin1 > 0.0 |==> true
2820:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:tau + dMin |==> tau % dMin
2821:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:tau + dMin |==> tau * dMin
2822:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:tau + dMin |==> tau - dMin
2823:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:tau + dMin |==> tau / dMin
2824:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:1.0 |==> 0.0
2825:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:1.0 |==> -1.0
2826:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:2.0 |==> 0.0
2827:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:2.0 |==> -2.0
2828:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:2.0 * MathUtils.EPSILON |==> 2.0 % MathUtils.EPSILON
2829:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:2.0 * MathUtils.EPSILON |==> 2.0 + MathUtils.EPSILON
2830:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:2.0 * MathUtils.EPSILON |==> 2.0 - MathUtils.EPSILON
2831:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:2.0 * MathUtils.EPSILON |==> 2.0 / MathUtils.EPSILON
2832:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:1.0 - 2.0 * MathUtils.EPSILON |==> 1.0 % (2.0 * MathUtils.EPSILON)
2833:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:1.0 - 2.0 * MathUtils.EPSILON |==> 1.0 * (2.0 * MathUtils.EPSILON)
2834:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:1.0 - 2.0 * MathUtils.EPSILON |==> 1.0 + 2.0 * MathUtils.EPSILON
2835:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:1.0 - 2.0 * MathUtils.EPSILON |==> 1.0 / (2.0 * MathUtils.EPSILON)
2836:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON) |==> (tau + dMin) % (1.0 - 2.0 * MathUtils.EPSILON)
2837:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON) |==> (tau + dMin) + (1.0 - 2.0 * MathUtils.EPSILON)
2838:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON) |==> (tau + dMin) - (1.0 - 2.0 * MathUtils.EPSILON)
2839:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:(tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON) |==> (tau + dMin) / (1.0 - 2.0 * MathUtils.EPSILON)
2840:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1101:tau = (tau + dMin) * (1.0 - 2.0 * MathUtils.EPSILON) |==> <NO-OP>
2841:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1102:11 |==> 0
2842:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1102:11 |==> -11
2843:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1102:tType -= 11 |==> <NO-OP>
2844:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1105:0.25 |==> 0.0
2845:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1105:0.25 |==> -0.25
2846:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1105:tau *= 0.25 |==> <NO-OP>
2847:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1106:12 |==> 0
2848:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1106:12 |==> -12
2849:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1106:tType -= 12 |==> <NO-OP>
2850:COR:Double.isNaN(dMin):TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1108:Double.isNaN(dMin) |==> false
2851:COR:Double.isNaN(dMin):FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1108:Double.isNaN(dMin) |==> true
2852:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1109:0.0 |==> 1.0
2853:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1109:0.0 |==> -1.0
2854:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1109:tau = 0.0 |==> <NO-OP>
2855:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1112:false |==> true
2856:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1112:loop = false |==> <NO-OP>
2857:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@goodStep(int,int):1119:dqd(start, deflatedEnd) |==> <NO-OP>
2858:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 |==> 0.0
2859:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 |==> -1.5
2860:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] |==> 1.5 % work[pingPong]
2861:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] |==> 1.5 + work[pingPong]
2862:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] |==> 1.5 - work[pingPong]
2863:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] |==> 1.5 / work[pingPong]
2864:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 |==> 0
2865:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 |==> -4
2866:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1 |==> 0
2867:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1 |==> -1
2868:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:n - 1 |==> n % 1
2869:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:n - 1 |==> n * 1
2870:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:n - 1 |==> n + 1
2871:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:n - 1 |==> n / 1
2872:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) |==> 4 % (n - 1)
2873:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) |==> 4 + (n - 1)
2874:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) |==> 4 - (n - 1)
2875:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) |==> 4 / (n - 1)
2876:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) + pingPong |==> 4 * (n - 1) % pingPong
2877:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) + pingPong |==> 4 * (n - 1) * pingPong
2878:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) + pingPong |==> 4 * (n - 1) - pingPong
2879:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:4 * (n - 1) + pingPong |==> 4 * (n - 1) / pingPong
2880:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] < work[4 * (n - 1) + pingPong] |==> 1.5 * work[pingPong] != work[4 * (n - 1) + pingPong]
2881:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] < work[4 * (n - 1) + pingPong] |==> 1.5 * work[pingPong] <= work[4 * (n - 1) + pingPong]
2882:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] < work[4 * (n - 1) + pingPong] |==> 1.5 * work[pingPong] == work[4 * (n - 1) + pingPong]
2883:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] < work[4 * (n - 1) + pingPong] |==> 1.5 * work[pingPong] > work[4 * (n - 1) + pingPong]
2884:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] < work[4 * (n - 1) + pingPong] |==> 1.5 * work[pingPong] >= work[4 * (n - 1) + pingPong]
2885:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] < work[4 * (n - 1) + pingPong] |==> false
2886:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1133:1.5 * work[pingPong] < work[4 * (n - 1) + pingPong] |==> true
2887:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:4 |==> 0
2888:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:4 |==> -4
2889:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:1 |==> 0
2890:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:1 |==> -1
2891:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:n - 1 |==> n % 1
2892:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:n - 1 |==> n * 1
2893:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:n - 1 |==> n + 1
2894:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:n - 1 |==> n / 1
2895:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:4 * (n - 1) |==> 4 % (n - 1)
2896:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:4 * (n - 1) |==> 4 + (n - 1)
2897:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:4 * (n - 1) |==> 4 - (n - 1)
2898:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1135:4 * (n - 1) |==> 4 / (n - 1)
2899:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:0 |==> 1
2900:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:0 |==> -1
2901:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:i < j |==> i != j
2902:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:i < j |==> i <= j
2903:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:i < j |==> i == j
2904:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:i < j |==> i > j
2905:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:i < j |==> i >= j
2906:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:i < j |==> false
2907:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:i < j |==> true
2908:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:4 |==> 0
2909:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1136:4 |==> -4
2910:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:0 |==> 1
2911:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:0 |==> -1
2912:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:4 |==> 0
2913:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:4 |==> -4
2914:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:k < 4 |==> k != 4
2915:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:k < 4 |==> k <= 4
2916:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:k < 4 |==> k == 4
2917:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:k < 4 |==> k > 4
2918:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:k < 4 |==> k >= 4
2919:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:k < 4 |==> false
2920:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1137:k < 4 |==> true
2921:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1138:i + k |==> i % k
2922:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1138:i + k |==> i * k
2923:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1138:i + k |==> i - k
2924:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1138:i + k |==> i / k
2925:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:i + k |==> i % k
2926:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:i + k |==> i * k
2927:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:i + k |==> i - k
2928:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:i + k |==> i / k
2929:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:j - k |==> j % k
2930:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:j - k |==> j * k
2931:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:j - k |==> j + k
2932:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:j - k |==> j / k
2933:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1139:work[i + k] = work[j - k] |==> <NO-OP>
2934:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1140:j - k |==> j % k
2935:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1140:j - k |==> j * k
2936:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1140:j - k |==> j + k
2937:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1140:j - k |==> j / k
2938:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1140:work[j - k] = tmp |==> <NO-OP>
2939:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1142:4 |==> 0
2940:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1142:4 |==> -4
2941:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1142:j -= 4 |==> <NO-OP>
2942:LVR:TRUE:FALSE:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1144:true |==> false
2943:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@flipIfWarranted(int,int):1146:false |==> true
2944:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1158:4 |==> 0
2945:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1158:4 |==> -4
2946:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1158:4 * main.length |==> 4 % main.length
2947:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1158:4 * main.length |==> 4 + main.length
2948:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1158:4 * main.length |==> 4 - main.length
2949:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1158:4 * main.length |==> 4 / main.length
2950:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1159:5 |==> 0
2951:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1159:5 |==> -5
2952:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1159:5 * main.length |==> 5 % main.length
2953:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1159:5 * main.length |==> 5 + main.length
2954:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1159:5 * main.length |==> 5 - main.length
2955:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1159:5 * main.length |==> 5 / main.length
2956:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:0 |==> 1
2957:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:0 |==> -1
2958:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:i < n |==> i != n
2959:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:i < n |==> i <= n
2960:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:i < n |==> i == n
2961:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:i < n |==> i > n
2962:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:i < n |==> i >= n
2963:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:i < n |==> false
2964:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1162:i < n |==> true
2965:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index |==> lowerStart % index
2966:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index |==> lowerStart * index
2967:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index |==> lowerStart - index
2968:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index |==> lowerStart / index
2969:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index + i |==> (lowerStart + index) % i
2970:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index + i |==> (lowerStart + index) * i
2971:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index + i |==> lowerStart + index - i
2972:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lowerStart + index + i |==> (lowerStart + index) / i
2973:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1163:lower = Math.min(lower, work[lowerStart + index + i]) |==> <NO-OP>
2974:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index |==> upperStart % index
2975:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index |==> upperStart * index
2976:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index |==> upperStart - index
2977:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index |==> upperStart / index
2978:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index + i |==> (upperStart + index) % i
2979:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index + i |==> (upperStart + index) * i
2980:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index + i |==> upperStart + index - i
2981:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upperStart + index + i |==> (upperStart + index) / i
2982:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1164:upper = Math.max(upper, work[upperStart + index + i]) |==> <NO-OP>
2983:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1170:4 |==> 0
2984:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1170:4 |==> -4
2985:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1170:4 * minPivot |==> 4 % minPivot
2986:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1170:4 * minPivot |==> 4 + minPivot
2987:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1170:4 * minPivot |==> 4 - minPivot
2988:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1170:4 * minPivot |==> 4 / minPivot
2989:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2 |==> 0
2990:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2 |==> -2
2991:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:tNorm + minPivot |==> tNorm % minPivot
2992:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:tNorm + minPivot |==> tNorm * minPivot
2993:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:tNorm + minPivot |==> tNorm - minPivot
2994:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:tNorm + minPivot |==> tNorm / minPivot
2995:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:Math.log(tNorm + minPivot) - Math.log(minPivot) |==> Math.log(tNorm + minPivot) % Math.log(minPivot)
2996:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:Math.log(tNorm + minPivot) - Math.log(minPivot) |==> Math.log(tNorm + minPivot) * Math.log(minPivot)
2997:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:Math.log(tNorm + minPivot) - Math.log(minPivot) |==> Math.log(tNorm + minPivot) + Math.log(minPivot)
2998:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:Math.log(tNorm + minPivot) - Math.log(minPivot) |==> Math.log(tNorm + minPivot) / Math.log(minPivot)
2999:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2.0 |==> 0.0
3000:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2.0 |==> -2.0
3001:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:(Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0) |==> (Math.log(tNorm + minPivot) - Math.log(minPivot)) % Math.log(2.0)
3002:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:(Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0) |==> (Math.log(tNorm + minPivot) - Math.log(minPivot)) * Math.log(2.0)
3003:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:(Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0) |==> (Math.log(tNorm + minPivot) - Math.log(minPivot)) + Math.log(2.0)
3004:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:(Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0) |==> (Math.log(tNorm + minPivot) - Math.log(minPivot)) - Math.log(2.0)
3005:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2 + (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0)) |==> 2 % (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0))
3006:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2 + (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0)) |==> 2 * (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0))
3007:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2 + (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0)) |==> 2 - (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0))
3008:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1172:2 + (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0)) |==> 2 / (int)((Math.log(tNorm + minPivot) - Math.log(minPivot)) / Math.log(2.0))
3009:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 |==> 0
3010:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 |==> -2
3011:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON |==> tNorm % MathUtils.EPSILON
3012:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON |==> tNorm + MathUtils.EPSILON
3013:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON |==> tNorm - MathUtils.EPSILON
3014:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON |==> tNorm / MathUtils.EPSILON
3015:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n |==> tNorm * MathUtils.EPSILON % n
3016:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n |==> tNorm * MathUtils.EPSILON + n
3017:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n |==> tNorm * MathUtils.EPSILON - n
3018:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n |==> tNorm * MathUtils.EPSILON / n
3019:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 |==> 0
3020:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 |==> -2
3021:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * minPivot |==> 2 % minPivot
3022:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * minPivot |==> 2 + minPivot
3023:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * minPivot |==> 2 - minPivot
3024:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * minPivot |==> 2 / minPivot
3025:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n + 2 * minPivot |==> tNorm * MathUtils.EPSILON * n % (2 * minPivot)
3026:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n + 2 * minPivot |==> tNorm * MathUtils.EPSILON * n * (2 * minPivot)
3027:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n + 2 * minPivot |==> tNorm * MathUtils.EPSILON * n - 2 * minPivot
3028:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:tNorm * MathUtils.EPSILON * n + 2 * minPivot |==> tNorm * MathUtils.EPSILON * n / (2 * minPivot)
3029:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * (tNorm * MathUtils.EPSILON * n + 2 * minPivot) |==> 2 % (tNorm * MathUtils.EPSILON * n + 2 * minPivot)
3030:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * (tNorm * MathUtils.EPSILON * n + 2 * minPivot) |==> 2 + (tNorm * MathUtils.EPSILON * n + 2 * minPivot)
3031:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * (tNorm * MathUtils.EPSILON * n + 2 * minPivot) |==> 2 - (tNorm * MathUtils.EPSILON * n + 2 * minPivot)
3032:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1173:2 * (tNorm * MathUtils.EPSILON * n + 2 * minPivot) |==> 2 / (tNorm * MathUtils.EPSILON * n + 2 * minPivot)
3033:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1176:lower - margin |==> lower % margin
3034:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1176:lower - margin |==> lower * margin
3035:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1176:lower - margin |==> lower + margin
3036:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1176:lower - margin |==> lower / margin
3037:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1177:upper + margin |==> upper % margin
3038:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1177:upper + margin |==> upper * margin
3039:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1177:upper + margin |==> upper - margin
3040:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1177:upper + margin |==> upper / margin
3041:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:0 |==> 1
3042:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:0 |==> -1
3043:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:i < maxIter |==> i != maxIter
3044:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:i < maxIter |==> i <= maxIter
3045:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:i < maxIter |==> i == maxIter
3046:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:i < maxIter |==> i > maxIter
3047:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:i < maxIter |==> i >= maxIter
3048:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:i < maxIter |==> false
3049:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1178:i < maxIter |==> true
3050:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1180:right - left |==> right % left
3051:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1180:right - left |==> right * left
3052:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1180:right - left |==> right + left
3053:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1180:right - left |==> right / left
3054:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:range < absoluteTolerance |==> range != absoluteTolerance
3055:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:range < absoluteTolerance |==> range <= absoluteTolerance
3056:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:range < absoluteTolerance |==> range == absoluteTolerance
3057:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:range < absoluteTolerance |==> range > absoluteTolerance
3058:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:range < absoluteTolerance |==> range >= absoluteTolerance
3059:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:range < absoluteTolerance |==> false
3060:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:range < absoluteTolerance |==> true
3061:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance % Math.max(Math.abs(left), Math.abs(right))
3062:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance + Math.max(Math.abs(left), Math.abs(right))
3063:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance - Math.max(Math.abs(left), Math.abs(right))
3064:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance / Math.max(Math.abs(left), Math.abs(right))
3065:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range != relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3066:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range <= relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3067:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range == relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3068:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range > relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3069:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range >= relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3070:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> false
3071:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> true
3072:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance) != (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3073:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance) && (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3074:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance) == (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3075:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> false
3076:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance)
3077:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1182:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3078:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1181:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> true
3079:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:0.5 |==> 0.0
3080:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:0.5 |==> -0.5
3081:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:left + right |==> left % right
3082:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:left + right |==> left * right
3083:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:left + right |==> left - right
3084:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:left + right |==> left / right
3085:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:0.5 * (left + right) |==> 0.5 % (left + right)
3086:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:0.5 * (left + right) |==> 0.5 + (left + right)
3087:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:0.5 * (left + right) |==> 0.5 - (left + right)
3088:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1187:0.5 * (left + right) |==> 0.5 / (left + right)
3089:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:1 |==> 0
3090:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:1 |==> -1
3091:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:countEigenValues(middle, index, n) >= 1 |==> countEigenValues(middle, index, n) != 1
3092:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:countEigenValues(middle, index, n) >= 1 |==> countEigenValues(middle, index, n) < 1
3093:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:countEigenValues(middle, index, n) >= 1 |==> countEigenValues(middle, index, n) <= 1
3094:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:countEigenValues(middle, index, n) >= 1 |==> countEigenValues(middle, index, n) == 1
3095:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:countEigenValues(middle, index, n) >= 1 |==> countEigenValues(middle, index, n) > 1
3096:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:countEigenValues(middle, index, n) >= 1 |==> false
3097:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1188:countEigenValues(middle, index, n) >= 1 |==> true
3098:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1189:right = middle |==> <NO-OP>
3099:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1191:left = middle |==> <NO-OP>
3100:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 |==> 0
3101:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 |==> -100
3102:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON |==> 100 % MathUtils.EPSILON
3103:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON |==> 100 + MathUtils.EPSILON
3104:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON |==> 100 - MathUtils.EPSILON
3105:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON |==> 100 / MathUtils.EPSILON
3106:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON * Math.abs(left) |==> 100 * MathUtils.EPSILON % Math.abs(left)
3107:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON * Math.abs(left) |==> 100 * MathUtils.EPSILON + Math.abs(left)
3108:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON * Math.abs(left) |==> 100 * MathUtils.EPSILON - Math.abs(left)
3109:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:100 * MathUtils.EPSILON * Math.abs(left) |==> 100 * MathUtils.EPSILON / Math.abs(left)
3110:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:left - 100 * MathUtils.EPSILON * Math.abs(left) |==> left % (100 * MathUtils.EPSILON * Math.abs(left))
3111:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:left - 100 * MathUtils.EPSILON * Math.abs(left) |==> left * (100 * MathUtils.EPSILON * Math.abs(left))
3112:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:left - 100 * MathUtils.EPSILON * Math.abs(left) |==> left + 100 * MathUtils.EPSILON * Math.abs(left)
3113:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:left - 100 * MathUtils.EPSILON * Math.abs(left) |==> left / (100 * MathUtils.EPSILON * Math.abs(left))
3114:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1195:lower = Math.max(lower, left - 100 * MathUtils.EPSILON * Math.abs(left)) |==> <NO-OP>
3115:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1198:lower - margin |==> lower % margin
3116:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1198:lower - margin |==> lower * margin
3117:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1198:lower - margin |==> lower + margin
3118:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1198:lower - margin |==> lower / margin
3119:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1198:left = lower - margin |==> <NO-OP>
3120:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1199:upper + margin |==> upper % margin
3121:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1199:upper + margin |==> upper * margin
3122:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1199:upper + margin |==> upper - margin
3123:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1199:upper + margin |==> upper / margin
3124:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1199:right = upper + margin |==> <NO-OP>
3125:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:0 |==> 1
3126:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:0 |==> -1
3127:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:i < maxIter |==> i != maxIter
3128:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:i < maxIter |==> i <= maxIter
3129:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:i < maxIter |==> i == maxIter
3130:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:i < maxIter |==> i > maxIter
3131:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:i < maxIter |==> i >= maxIter
3132:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:i < maxIter |==> false
3133:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1200:i < maxIter |==> true
3134:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1202:right - left |==> right % left
3135:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1202:right - left |==> right * left
3136:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1202:right - left |==> right + left
3137:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1202:right - left |==> right / left
3138:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:range < absoluteTolerance |==> range != absoluteTolerance
3139:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:range < absoluteTolerance |==> range <= absoluteTolerance
3140:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:range < absoluteTolerance |==> range == absoluteTolerance
3141:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:range < absoluteTolerance |==> range > absoluteTolerance
3142:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:range < absoluteTolerance |==> range >= absoluteTolerance
3143:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:range < absoluteTolerance |==> false
3144:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:range < absoluteTolerance |==> true
3145:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance % Math.max(Math.abs(left), Math.abs(right))
3146:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance + Math.max(Math.abs(left), Math.abs(right))
3147:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance - Math.max(Math.abs(left), Math.abs(right))
3148:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> relativeTolerance / Math.max(Math.abs(left), Math.abs(right))
3149:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range != relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3150:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range <= relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3151:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range == relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3152:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range > relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3153:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> range >= relativeTolerance * Math.max(Math.abs(left), Math.abs(right))
3154:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> false
3155:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)) |==> true
3156:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance) != (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3157:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance) && (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3158:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance) == (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3159:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> false
3160:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < absoluteTolerance)
3161:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1204:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right)))
3162:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1203:(range < absoluteTolerance) || (range < relativeTolerance * Math.max(Math.abs(left), Math.abs(right))) |==> true
3163:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:0.5 |==> 0.0
3164:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:0.5 |==> -0.5
3165:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:left + right |==> left % right
3166:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:left + right |==> left * right
3167:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:left + right |==> left - right
3168:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:left + right |==> left / right
3169:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:0.5 * (left + right) |==> 0.5 % (left + right)
3170:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:0.5 * (left + right) |==> 0.5 + (left + right)
3171:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:0.5 * (left + right) |==> 0.5 - (left + right)
3172:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1209:0.5 * (left + right) |==> 0.5 / (left + right)
3173:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1210:countEigenValues(middle, index, n) >= n |==> countEigenValues(middle, index, n) != n
3174:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1210:countEigenValues(middle, index, n) >= n |==> countEigenValues(middle, index, n) < n
3175:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1210:countEigenValues(middle, index, n) >= n |==> countEigenValues(middle, index, n) <= n
3176:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1210:countEigenValues(middle, index, n) >= n |==> countEigenValues(middle, index, n) == n
3177:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1210:countEigenValues(middle, index, n) >= n |==> countEigenValues(middle, index, n) > n
3178:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1210:countEigenValues(middle, index, n) >= n |==> false
3179:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1210:countEigenValues(middle, index, n) >= n |==> true
3180:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1211:right = middle |==> <NO-OP>
3181:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1213:left = middle |==> <NO-OP>
3182:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 |==> 0
3183:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 |==> -100
3184:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON |==> 100 % MathUtils.EPSILON
3185:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON |==> 100 + MathUtils.EPSILON
3186:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON |==> 100 - MathUtils.EPSILON
3187:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON |==> 100 / MathUtils.EPSILON
3188:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON * Math.abs(right) |==> 100 * MathUtils.EPSILON % Math.abs(right)
3189:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON * Math.abs(right) |==> 100 * MathUtils.EPSILON + Math.abs(right)
3190:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON * Math.abs(right) |==> 100 * MathUtils.EPSILON - Math.abs(right)
3191:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:100 * MathUtils.EPSILON * Math.abs(right) |==> 100 * MathUtils.EPSILON / Math.abs(right)
3192:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:right + 100 * MathUtils.EPSILON * Math.abs(right) |==> right % (100 * MathUtils.EPSILON * Math.abs(right))
3193:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:right + 100 * MathUtils.EPSILON * Math.abs(right) |==> right * (100 * MathUtils.EPSILON * Math.abs(right))
3194:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:right + 100 * MathUtils.EPSILON * Math.abs(right) |==> right - 100 * MathUtils.EPSILON * Math.abs(right)
3195:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:right + 100 * MathUtils.EPSILON * Math.abs(right) |==> right / (100 * MathUtils.EPSILON * Math.abs(right))
3196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@eigenvaluesRange(int,int):1217:upper = Math.min(upper, right + 100 * MathUtils.EPSILON * Math.abs(right)) |==> <NO-OP>
3197:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1231:main[index] - t |==> main[index] % t
3198:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1231:main[index] - t |==> main[index] * t
3199:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1231:main[index] - t |==> main[index] + t
3200:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1231:main[index] - t |==> main[index] / t
3201:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:0 |==> 1
3202:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:0 |==> -1
3203:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:ratio > 0 |==> ratio != 0
3204:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:ratio > 0 |==> ratio < 0
3205:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:ratio > 0 |==> ratio <= 0
3206:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:ratio > 0 |==> ratio == 0
3207:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:ratio > 0 |==> ratio >= 0
3208:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:ratio > 0 |==> false
3209:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:ratio > 0 |==> true
3210:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:0 |==> 1
3211:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:0 |==> -1
3212:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:1 |==> 0
3213:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1232:1 |==> -1
3214:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:1 |==> 0
3215:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:1 |==> -1
3216:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:i < n |==> i != n
3217:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:i < n |==> i <= n
3218:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:i < n |==> i == n
3219:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:i < n |==> i > n
3220:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:i < n |==> i >= n
3221:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:i < n |==> false
3222:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1233:i < n |==> true
3223:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index % i
3224:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index * i
3225:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index - i
3226:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index / i
3227:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index % i
3228:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index * i
3229:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index - i
3230:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i |==> index / i
3231:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:1 |==> 0
3232:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:1 |==> -1
3233:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i - 1 |==> (index + i) % 1
3234:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i - 1 |==> (index + i) * 1
3235:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i - 1 |==> index + i + 1
3236:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:index + i - 1 |==> (index + i) / 1
3237:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:squaredSecondary[index + i - 1] / ratio |==> squaredSecondary[index + i - 1] % ratio
3238:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:squaredSecondary[index + i - 1] / ratio |==> squaredSecondary[index + i - 1] * ratio
3239:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:squaredSecondary[index + i - 1] / ratio |==> squaredSecondary[index + i - 1] + ratio
3240:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:squaredSecondary[index + i - 1] / ratio |==> squaredSecondary[index + i - 1] - ratio
3241:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio |==> main[index + i] % (squaredSecondary[index + i - 1] / ratio)
3242:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio |==> main[index + i] * (squaredSecondary[index + i - 1] / ratio)
3243:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio |==> main[index + i] + squaredSecondary[index + i - 1] / ratio
3244:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio |==> main[index + i] / (squaredSecondary[index + i - 1] / ratio)
3245:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio - t |==> (main[index + i] - squaredSecondary[index + i - 1] / ratio) % t
3246:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio - t |==> (main[index + i] - squaredSecondary[index + i - 1] / ratio) * t
3247:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio - t |==> main[index + i] - squaredSecondary[index + i - 1] / ratio + t
3248:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:main[index + i] - squaredSecondary[index + i - 1] / ratio - t |==> (main[index + i] - squaredSecondary[index + i - 1] / ratio) / t
3249:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1234:ratio = main[index + i] - squaredSecondary[index + i - 1] / ratio - t |==> <NO-OP>
3250:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:0 |==> 1
3251:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:0 |==> -1
3252:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:ratio <= 0 |==> ratio != 0
3253:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:ratio <= 0 |==> ratio < 0
3254:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:ratio <= 0 |==> ratio == 0
3255:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:ratio <= 0 |==> ratio > 0
3256:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:ratio <= 0 |==> ratio >= 0
3257:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:ratio <= 0 |==> false
3258:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1235:ratio <= 0 |==> true
3259:STD:<INC>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@countEigenValues(double,int,int):1236:++count |==> <NO-OP>
3260:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1254:main[index] - lambda |==> main[index] % lambda
3261:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1254:main[index] - lambda |==> main[index] * lambda
3262:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1254:main[index] - lambda |==> main[index] + lambda
3263:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1254:main[index] - lambda |==> main[index] / lambda
3264:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1255:0 |==> 1
3265:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1255:0 |==> -1
3266:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1255:work[0] = Math.abs(di) |==> <NO-OP>
3267:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:1 |==> 0
3268:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:1 |==> -1
3269:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:i < n |==> i != n
3270:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:i < n |==> i <= n
3271:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:i < n |==> i == n
3272:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:i < n |==> i > n
3273:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:i < n |==> i >= n
3274:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:i < n |==> false
3275:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1256:i < n |==> true
3276:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1257:4 |==> 0
3277:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1257:4 |==> -4
3278:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1257:4 * i |==> 4 % i
3279:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1257:4 * i |==> 4 + i
3280:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1257:4 * i |==> 4 - i
3281:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1257:4 * i |==> 4 / i
3282:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i |==> index % i
3283:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i |==> index * i
3284:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i |==> index - i
3285:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i |==> index / i
3286:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:1 |==> 0
3287:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:1 |==> -1
3288:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i - 1 |==> (index + i) % 1
3289:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i - 1 |==> (index + i) * 1
3290:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i - 1 |==> index + i + 1
3291:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1258:index + i - 1 |==> (index + i) / 1
3292:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1259:eiM1 / di |==> eiM1 % di
3293:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1259:eiM1 / di |==> eiM1 * di
3294:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1259:eiM1 / di |==> eiM1 + di
3295:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1259:eiM1 / di |==> eiM1 - di
3296:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:2 |==> 0
3297:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:2 |==> -2
3298:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:fourI - 2 |==> fourI % 2
3299:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:fourI - 2 |==> fourI * 2
3300:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:fourI - 2 |==> fourI + 2
3301:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:fourI - 2 |==> fourI / 2
3302:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio |==> ratio % ratio
3303:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio |==> ratio + ratio
3304:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio |==> ratio - ratio
3305:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio |==> ratio / ratio
3306:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio * Math.abs(di) |==> ratio * ratio % Math.abs(di)
3307:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio * Math.abs(di) |==> ratio * ratio + Math.abs(di)
3308:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio * Math.abs(di) |==> ratio * ratio - Math.abs(di)
3309:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:ratio * ratio * Math.abs(di) |==> ratio * ratio / Math.abs(di)
3310:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1260:work[fourI - 2] = ratio * ratio * Math.abs(di) |==> <NO-OP>
3311:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:index + i |==> index % i
3312:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:index + i |==> index * i
3313:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:index + i |==> index - i
3314:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:index + i |==> index / i
3315:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:main[index + i] - lambda |==> main[index + i] % lambda
3316:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:main[index + i] - lambda |==> main[index + i] * lambda
3317:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:main[index + i] - lambda |==> main[index + i] + lambda
3318:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:main[index + i] - lambda |==> main[index + i] / lambda
3319:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:eiM1 * ratio |==> eiM1 % ratio
3320:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:eiM1 * ratio |==> eiM1 + ratio
3321:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:eiM1 * ratio |==> eiM1 - ratio
3322:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:eiM1 * ratio |==> eiM1 / ratio
3323:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:(main[index + i] - lambda) - eiM1 * ratio |==> (main[index + i] - lambda) % (eiM1 * ratio)
3324:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:(main[index + i] - lambda) - eiM1 * ratio |==> (main[index + i] - lambda) * (eiM1 * ratio)
3325:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:(main[index + i] - lambda) - eiM1 * ratio |==> (main[index + i] - lambda) + eiM1 * ratio
3326:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:(main[index + i] - lambda) - eiM1 * ratio |==> (main[index + i] - lambda) / (eiM1 * ratio)
3327:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1261:di = (main[index + i] - lambda) - eiM1 * ratio |==> <NO-OP>
3328:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@ldlTDecomposition(double,int,int):1262:work[fourI] = Math.abs(di) |==> <NO-OP>
3329:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 |==> 0
3330:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 |==> -4
3331:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start |==> 4 % start
3332:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start |==> 4 + start
3333:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start |==> 4 - start
3334:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start |==> 4 / start
3335:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong |==> 4 * start % pingPong
3336:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong |==> 4 * start * pingPong
3337:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong |==> 4 * start - pingPong
3338:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong |==> 4 * start / pingPong
3339:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 |==> 0
3340:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 |==> -4
3341:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong + 4 |==> (4 * start + pingPong) % 4
3342:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong + 4 |==> (4 * start + pingPong) * 4
3343:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong + 4 |==> 4 * start + pingPong - 4
3344:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:4 * start + pingPong + 4 |==> (4 * start + pingPong) / 4
3345:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1274:eMin = work[4 * start + pingPong + 4] |==> <NO-OP>
3346:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 |==> 0
3347:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 |==> -4
3348:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start |==> 4 % start
3349:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start |==> 4 + start
3350:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start |==> 4 - start
3351:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start |==> 4 / start
3352:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start + pingPong |==> 4 * start % pingPong
3353:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start + pingPong |==> 4 * start * pingPong
3354:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start + pingPong |==> 4 * start - pingPong
3355:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:4 * start + pingPong |==> 4 * start / pingPong
3356:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:work[4 * start + pingPong] - tau |==> work[4 * start + pingPong] % tau
3357:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:work[4 * start + pingPong] - tau |==> work[4 * start + pingPong] * tau
3358:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:work[4 * start + pingPong] - tau |==> work[4 * start + pingPong] + tau
3359:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1275:work[4 * start + pingPong] - tau |==> work[4 * start + pingPong] / tau
3360:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1276:dMin = d |==> <NO-OP>
3361:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:-work[4 * start + pingPong] |==> +work[4 * start + pingPong]
3362:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 |==> 0
3363:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 |==> -4
3364:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start |==> 4 % start
3365:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start |==> 4 + start
3366:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start |==> 4 - start
3367:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start |==> 4 / start
3368:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start + pingPong |==> 4 * start % pingPong
3369:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start + pingPong |==> 4 * start * pingPong
3370:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start + pingPong |==> 4 * start - pingPong
3371:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:4 * start + pingPong |==> 4 * start / pingPong
3372:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1277:dMin1 = -work[4 * start + pingPong] |==> <NO-OP>
3373:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:0 |==> 1
3374:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:0 |==> -1
3375:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:pingPong == 0 |==> pingPong != 0
3376:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:pingPong == 0 |==> pingPong < 0
3377:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:pingPong == 0 |==> pingPong <= 0
3378:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:pingPong == 0 |==> pingPong > 0
3379:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:pingPong == 0 |==> pingPong >= 0
3380:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:pingPong == 0 |==> false
3381:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1279:pingPong == 0 |==> true
3382:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 |==> 0
3383:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 |==> -4
3384:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start |==> 4 % start
3385:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start |==> 4 + start
3386:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start |==> 4 - start
3387:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start |==> 4 / start
3388:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:3 |==> 0
3389:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:3 |==> -3
3390:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start + 3 |==> 4 * start % 3
3391:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start + 3 |==> 4 * start * 3
3392:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start + 3 |==> 4 * start - 3
3393:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * start + 3 |==> 4 * start / 3
3394:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 |==> 0
3395:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 |==> -4
3396:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:3 |==> 0
3397:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:3 |==> -3
3398:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:end - 3 |==> end % 3
3399:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:end - 3 |==> end * 3
3400:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:end - 3 |==> end + 3
3401:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:end - 3 |==> end / 3
3402:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * (end - 3) |==> 4 % (end - 3)
3403:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * (end - 3) |==> 4 + (end - 3)
3404:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * (end - 3) |==> 4 - (end - 3)
3405:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 * (end - 3) |==> 4 / (end - 3)
3406:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:j4 <= 4 * (end - 3) |==> j4 != 4 * (end - 3)
3407:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:j4 <= 4 * (end - 3) |==> j4 < 4 * (end - 3)
3408:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:j4 <= 4 * (end - 3) |==> j4 == 4 * (end - 3)
3409:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:j4 <= 4 * (end - 3) |==> j4 > 4 * (end - 3)
3410:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:j4 <= 4 * (end - 3) |==> j4 >= 4 * (end - 3)
3411:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:j4 <= 4 * (end - 3) |==> false
3412:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:j4 <= 4 * (end - 3) |==> true
3413:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 |==> 0
3414:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1280:4 |==> -4
3415:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:2 |==> 0
3416:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:2 |==> -2
3417:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 2 |==> j4 % 2
3418:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 2 |==> j4 * 2
3419:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 2 |==> j4 + 2
3420:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 2 |==> j4 / 2
3421:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:1 |==> 0
3422:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:1 |==> -1
3423:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 1 |==> j4 % 1
3424:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 1 |==> j4 * 1
3425:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 1 |==> j4 + 1
3426:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:j4 - 1 |==> j4 / 1
3427:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:d + work[j4 - 1] |==> d % work[j4 - 1]
3428:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:d + work[j4 - 1] |==> d * work[j4 - 1]
3429:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:d + work[j4 - 1] |==> d - work[j4 - 1]
3430:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:d + work[j4 - 1] |==> d / work[j4 - 1]
3431:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1281:work[j4 - 2] = d + work[j4 - 1] |==> <NO-OP>
3432:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:1 |==> 0
3433:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:1 |==> -1
3434:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 + 1 |==> j4 % 1
3435:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 + 1 |==> j4 * 1
3436:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 + 1 |==> j4 - 1
3437:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 + 1 |==> j4 / 1
3438:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:2 |==> 0
3439:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:2 |==> -2
3440:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 - 2 |==> j4 % 2
3441:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 - 2 |==> j4 * 2
3442:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 - 2 |==> j4 + 2
3443:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:j4 - 2 |==> j4 / 2
3444:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] % work[j4 - 2]
3445:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] * work[j4 - 2]
3446:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] + work[j4 - 2]
3447:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1282:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] - work[j4 - 2]
3448:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp |==> d % tmp
3449:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp |==> d + tmp
3450:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp |==> d - tmp
3451:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp |==> d / tmp
3452:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp - tau |==> d * tmp % tau
3453:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp - tau |==> d * tmp * tau
3454:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp - tau |==> d * tmp + tau
3455:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d * tmp - tau |==> d * tmp / tau
3456:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1283:d = d * tmp - tau |==> <NO-OP>
3457:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1284:dMin = Math.min(dMin, d) |==> <NO-OP>
3458:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:1 |==> 0
3459:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:1 |==> -1
3460:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:j4 - 1 |==> j4 % 1
3461:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:j4 - 1 |==> j4 * 1
3462:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:j4 - 1 |==> j4 + 1
3463:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:j4 - 1 |==> j4 / 1
3464:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:work[j4 - 1] * tmp |==> work[j4 - 1] % tmp
3465:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:work[j4 - 1] * tmp |==> work[j4 - 1] + tmp
3466:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:work[j4 - 1] * tmp |==> work[j4 - 1] - tmp
3467:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:work[j4 - 1] * tmp |==> work[j4 - 1] / tmp
3468:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1285:work[j4] = work[j4 - 1] * tmp |==> <NO-OP>
3469:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1286:eMin = Math.min(work[j4], eMin) |==> <NO-OP>
3470:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 |==> 0
3471:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 |==> -4
3472:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start |==> 4 % start
3473:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start |==> 4 + start
3474:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start |==> 4 - start
3475:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start |==> 4 / start
3476:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:3 |==> 0
3477:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:3 |==> -3
3478:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start + 3 |==> 4 * start % 3
3479:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start + 3 |==> 4 * start * 3
3480:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start + 3 |==> 4 * start - 3
3481:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * start + 3 |==> 4 * start / 3
3482:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 |==> 0
3483:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 |==> -4
3484:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:3 |==> 0
3485:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:3 |==> -3
3486:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:end - 3 |==> end % 3
3487:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:end - 3 |==> end * 3
3488:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:end - 3 |==> end + 3
3489:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:end - 3 |==> end / 3
3490:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * (end - 3) |==> 4 % (end - 3)
3491:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * (end - 3) |==> 4 + (end - 3)
3492:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * (end - 3) |==> 4 - (end - 3)
3493:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 * (end - 3) |==> 4 / (end - 3)
3494:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:j4 <= 4 * (end - 3) |==> j4 != 4 * (end - 3)
3495:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:j4 <= 4 * (end - 3) |==> j4 < 4 * (end - 3)
3496:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:j4 <= 4 * (end - 3) |==> j4 == 4 * (end - 3)
3497:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:j4 <= 4 * (end - 3) |==> j4 > 4 * (end - 3)
3498:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:j4 <= 4 * (end - 3) |==> j4 >= 4 * (end - 3)
3499:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:j4 <= 4 * (end - 3) |==> false
3500:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:j4 <= 4 * (end - 3) |==> true
3501:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 |==> 0
3502:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1289:4 |==> -4
3503:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:3 |==> 0
3504:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:3 |==> -3
3505:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:j4 - 3 |==> j4 % 3
3506:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:j4 - 3 |==> j4 * 3
3507:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:j4 - 3 |==> j4 + 3
3508:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:j4 - 3 |==> j4 / 3
3509:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:d + work[j4] |==> d % work[j4]
3510:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:d + work[j4] |==> d * work[j4]
3511:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:d + work[j4] |==> d - work[j4]
3512:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:d + work[j4] |==> d / work[j4]
3513:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1290:work[j4 - 3] = d + work[j4] |==> <NO-OP>
3514:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:2 |==> 0
3515:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:2 |==> -2
3516:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 + 2 |==> j4 % 2
3517:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 + 2 |==> j4 * 2
3518:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 + 2 |==> j4 - 2
3519:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 + 2 |==> j4 / 2
3520:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:3 |==> 0
3521:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:3 |==> -3
3522:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 - 3 |==> j4 % 3
3523:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 - 3 |==> j4 * 3
3524:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 - 3 |==> j4 + 3
3525:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:j4 - 3 |==> j4 / 3
3526:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] % work[j4 - 3]
3527:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] * work[j4 - 3]
3528:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] + work[j4 - 3]
3529:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1291:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] - work[j4 - 3]
3530:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp |==> d % tmp
3531:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp |==> d + tmp
3532:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp |==> d - tmp
3533:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp |==> d / tmp
3534:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp - tau |==> d * tmp % tau
3535:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp - tau |==> d * tmp * tau
3536:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp - tau |==> d * tmp + tau
3537:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d * tmp - tau |==> d * tmp / tau
3538:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1292:d = d * tmp - tau |==> <NO-OP>
3539:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1293:dMin = Math.min(dMin, d) |==> <NO-OP>
3540:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:1 |==> 0
3541:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:1 |==> -1
3542:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:j4 - 1 |==> j4 % 1
3543:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:j4 - 1 |==> j4 * 1
3544:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:j4 - 1 |==> j4 + 1
3545:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:j4 - 1 |==> j4 / 1
3546:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:work[j4] * tmp |==> work[j4] % tmp
3547:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:work[j4] * tmp |==> work[j4] + tmp
3548:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:work[j4] * tmp |==> work[j4] - tmp
3549:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:work[j4] * tmp |==> work[j4] / tmp
3550:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1294:work[j4 - 1] = work[j4] * tmp |==> <NO-OP>
3551:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1295:1 |==> 0
3552:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1295:1 |==> -1
3553:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1295:j4 - 1 |==> j4 % 1
3554:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1295:j4 - 1 |==> j4 * 1
3555:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1295:j4 - 1 |==> j4 + 1
3556:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1295:j4 - 1 |==> j4 / 1
3557:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1295:eMin = Math.min(work[j4 - 1], eMin) |==> <NO-OP>
3558:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1300:dN2 = d |==> <NO-OP>
3559:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1301:dMin2 = dMin |==> <NO-OP>
3560:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 |==> 0
3561:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 |==> -4
3562:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:2 |==> 0
3563:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:2 |==> -2
3564:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:end - 2 |==> end % 2
3565:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:end - 2 |==> end * 2
3566:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:end - 2 |==> end + 2
3567:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:end - 2 |==> end / 2
3568:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) |==> 4 % (end - 2)
3569:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) |==> 4 + (end - 2)
3570:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) |==> 4 - (end - 2)
3571:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) |==> 4 / (end - 2)
3572:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong |==> 4 * (end - 2) % pingPong
3573:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong |==> 4 * (end - 2) * pingPong
3574:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong |==> 4 * (end - 2) + pingPong
3575:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong |==> 4 * (end - 2) / pingPong
3576:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:1 |==> 0
3577:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:1 |==> -1
3578:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong - 1 |==> (4 * (end - 2) - pingPong) % 1
3579:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong - 1 |==> (4 * (end - 2) - pingPong) * 1
3580:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong - 1 |==> 4 * (end - 2) - pingPong + 1
3581:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1302:4 * (end - 2) - pingPong - 1 |==> (4 * (end - 2) - pingPong) / 1
3582:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:2 |==> 0
3583:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:2 |==> -2
3584:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:2 * pingPong |==> 2 % pingPong
3585:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:2 * pingPong |==> 2 + pingPong
3586:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:2 * pingPong |==> 2 - pingPong
3587:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:2 * pingPong |==> 2 / pingPong
3588:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong |==> j4 % (2 * pingPong)
3589:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong |==> j4 * (2 * pingPong)
3590:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong |==> j4 - 2 * pingPong
3591:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong |==> j4 / (2 * pingPong)
3592:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:1 |==> 0
3593:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:1 |==> -1
3594:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) % 1
3595:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) * 1
3596:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong - 1 |==> j4 + 2 * pingPong + 1
3597:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1303:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) / 1
3598:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:2 |==> 0
3599:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:2 |==> -2
3600:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:j4 - 2 |==> j4 % 2
3601:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:j4 - 2 |==> j4 * 2
3602:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:j4 - 2 |==> j4 + 2
3603:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:j4 - 2 |==> j4 / 2
3604:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:dN2 + work[j4p2] |==> dN2 % work[j4p2]
3605:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:dN2 + work[j4p2] |==> dN2 * work[j4p2]
3606:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:dN2 + work[j4p2] |==> dN2 - work[j4p2]
3607:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:dN2 + work[j4p2] |==> dN2 / work[j4p2]
3608:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1304:work[j4 - 2] = dN2 + work[j4p2] |==> <NO-OP>
3609:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:2 |==> 0
3610:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:2 |==> -2
3611:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4p2 + 2 |==> j4p2 % 2
3612:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4p2 + 2 |==> j4p2 * 2
3613:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4p2 + 2 |==> j4p2 - 2
3614:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4p2 + 2 |==> j4p2 / 2
3615:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:2 |==> 0
3616:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:2 |==> -2
3617:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4 - 2 |==> j4 % 2
3618:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4 - 2 |==> j4 * 2
3619:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4 - 2 |==> j4 + 2
3620:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:j4 - 2 |==> j4 / 2
3621:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2] / work[j4 - 2] |==> work[j4p2] % work[j4 - 2]
3622:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2] / work[j4 - 2] |==> work[j4p2] * work[j4 - 2]
3623:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2] / work[j4 - 2] |==> work[j4p2] + work[j4 - 2]
3624:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2] / work[j4 - 2] |==> work[j4p2] - work[j4 - 2]
3625:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] % (work[j4p2] / work[j4 - 2])
3626:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] + (work[j4p2] / work[j4 - 2])
3627:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] - (work[j4p2] / work[j4 - 2])
3628:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] / (work[j4p2] / work[j4 - 2])
3629:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1305:work[j4] = work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> <NO-OP>
3630:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:2 |==> 0
3631:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:2 |==> -2
3632:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4p2 + 2 |==> j4p2 % 2
3633:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4p2 + 2 |==> j4p2 * 2
3634:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4p2 + 2 |==> j4p2 - 2
3635:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4p2 + 2 |==> j4p2 / 2
3636:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:2 |==> 0
3637:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:2 |==> -2
3638:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4 - 2 |==> j4 % 2
3639:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4 - 2 |==> j4 * 2
3640:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4 - 2 |==> j4 + 2
3641:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:j4 - 2 |==> j4 / 2
3642:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:dN2 / work[j4 - 2] |==> dN2 % work[j4 - 2]
3643:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:dN2 / work[j4 - 2] |==> dN2 * work[j4 - 2]
3644:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:dN2 / work[j4 - 2] |==> dN2 + work[j4 - 2]
3645:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:dN2 / work[j4 - 2] |==> dN2 - work[j4 - 2]
3646:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] % (dN2 / work[j4 - 2])
3647:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] + (dN2 / work[j4 - 2])
3648:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] - (dN2 / work[j4 - 2])
3649:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] / (dN2 / work[j4 - 2])
3650:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN2 / work[j4 - 2]) % tau
3651:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN2 / work[j4 - 2]) * tau
3652:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN2 / work[j4 - 2]) + tau
3653:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:work[j4p2 + 2] * (dN2 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN2 / work[j4 - 2]) / tau
3654:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1306:dN1 = work[j4p2 + 2] * (dN2 / work[j4 - 2]) - tau |==> <NO-OP>
3655:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1307:dMin = Math.min(dMin, dN1) |==> <NO-OP>
3656:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1309:dMin1 = dMin |==> <NO-OP>
3657:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1310:4 |==> 0
3658:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1310:4 |==> -4
3659:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1310:j4 + 4 |==> j4 % 4
3660:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1310:j4 + 4 |==> j4 * 4
3661:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1310:j4 + 4 |==> j4 - 4
3662:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1310:j4 + 4 |==> j4 / 4
3663:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1310:j4 = j4 + 4 |==> <NO-OP>
3664:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:2 |==> 0
3665:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:2 |==> -2
3666:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:2 * pingPong |==> 2 % pingPong
3667:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:2 * pingPong |==> 2 + pingPong
3668:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:2 * pingPong |==> 2 - pingPong
3669:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:2 * pingPong |==> 2 / pingPong
3670:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong |==> j4 % (2 * pingPong)
3671:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong |==> j4 * (2 * pingPong)
3672:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong |==> j4 - 2 * pingPong
3673:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong |==> j4 / (2 * pingPong)
3674:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:1 |==> 0
3675:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:1 |==> -1
3676:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) % 1
3677:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) * 1
3678:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong - 1 |==> j4 + 2 * pingPong + 1
3679:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) / 1
3680:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1311:j4p2 = j4 + 2 * pingPong - 1 |==> <NO-OP>
3681:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:2 |==> 0
3682:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:2 |==> -2
3683:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:j4 - 2 |==> j4 % 2
3684:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:j4 - 2 |==> j4 * 2
3685:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:j4 - 2 |==> j4 + 2
3686:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:j4 - 2 |==> j4 / 2
3687:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:dN1 + work[j4p2] |==> dN1 % work[j4p2]
3688:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:dN1 + work[j4p2] |==> dN1 * work[j4p2]
3689:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:dN1 + work[j4p2] |==> dN1 - work[j4p2]
3690:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:dN1 + work[j4p2] |==> dN1 / work[j4p2]
3691:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1312:work[j4 - 2] = dN1 + work[j4p2] |==> <NO-OP>
3692:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:2 |==> 0
3693:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:2 |==> -2
3694:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4p2 + 2 |==> j4p2 % 2
3695:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4p2 + 2 |==> j4p2 * 2
3696:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4p2 + 2 |==> j4p2 - 2
3697:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4p2 + 2 |==> j4p2 / 2
3698:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:2 |==> 0
3699:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:2 |==> -2
3700:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4 - 2 |==> j4 % 2
3701:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4 - 2 |==> j4 * 2
3702:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4 - 2 |==> j4 + 2
3703:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:j4 - 2 |==> j4 / 2
3704:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2] / work[j4 - 2] |==> work[j4p2] % work[j4 - 2]
3705:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2] / work[j4 - 2] |==> work[j4p2] * work[j4 - 2]
3706:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2] / work[j4 - 2] |==> work[j4p2] + work[j4 - 2]
3707:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2] / work[j4 - 2] |==> work[j4p2] - work[j4 - 2]
3708:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] % (work[j4p2] / work[j4 - 2])
3709:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] + (work[j4p2] / work[j4 - 2])
3710:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] - (work[j4p2] / work[j4 - 2])
3711:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] / (work[j4p2] / work[j4 - 2])
3712:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1313:work[j4] = work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> <NO-OP>
3713:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:2 |==> 0
3714:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:2 |==> -2
3715:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4p2 + 2 |==> j4p2 % 2
3716:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4p2 + 2 |==> j4p2 * 2
3717:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4p2 + 2 |==> j4p2 - 2
3718:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4p2 + 2 |==> j4p2 / 2
3719:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:2 |==> 0
3720:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:2 |==> -2
3721:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4 - 2 |==> j4 % 2
3722:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4 - 2 |==> j4 * 2
3723:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4 - 2 |==> j4 + 2
3724:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:j4 - 2 |==> j4 / 2
3725:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:dN1 / work[j4 - 2] |==> dN1 % work[j4 - 2]
3726:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:dN1 / work[j4 - 2] |==> dN1 * work[j4 - 2]
3727:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:dN1 / work[j4 - 2] |==> dN1 + work[j4 - 2]
3728:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:dN1 / work[j4 - 2] |==> dN1 - work[j4 - 2]
3729:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] % (dN1 / work[j4 - 2])
3730:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] + (dN1 / work[j4 - 2])
3731:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] - (dN1 / work[j4 - 2])
3732:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] / (dN1 / work[j4 - 2])
3733:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN1 / work[j4 - 2]) % tau
3734:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN1 / work[j4 - 2]) * tau
3735:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN1 / work[j4 - 2]) + tau
3736:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:work[j4p2 + 2] * (dN1 / work[j4 - 2]) - tau |==> work[j4p2 + 2] * (dN1 / work[j4 - 2]) / tau
3737:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1314:dN = work[j4p2 + 2] * (dN1 / work[j4 - 2]) - tau |==> <NO-OP>
3738:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1315:dMin = Math.min(dMin, dN) |==> <NO-OP>
3739:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1317:2 |==> 0
3740:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1317:2 |==> -2
3741:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1317:j4 + 2 |==> j4 % 2
3742:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1317:j4 + 2 |==> j4 * 2
3743:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1317:j4 + 2 |==> j4 - 2
3744:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1317:j4 + 2 |==> j4 / 2
3745:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1317:work[j4 + 2] = dN |==> <NO-OP>
3746:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 |==> 0
3747:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 |==> -4
3748:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end |==> 4 % end
3749:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end |==> 4 + end
3750:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end |==> 4 - end
3751:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end |==> 4 / end
3752:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong |==> 4 * end % pingPong
3753:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong |==> 4 * end * pingPong
3754:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong |==> 4 * end + pingPong
3755:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong |==> 4 * end / pingPong
3756:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:1 |==> 0
3757:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:1 |==> -1
3758:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong - 1 |==> (4 * end - pingPong) % 1
3759:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong - 1 |==> (4 * end - pingPong) * 1
3760:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong - 1 |==> 4 * end - pingPong + 1
3761:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:4 * end - pingPong - 1 |==> (4 * end - pingPong) / 1
3762:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqds(int,int):1318:work[4 * end - pingPong - 1] = eMin |==> <NO-OP>
3763:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 |==> 0
3764:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 |==> -4
3765:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start |==> 4 % start
3766:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start |==> 4 + start
3767:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start |==> 4 - start
3768:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start |==> 4 / start
3769:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong |==> 4 * start % pingPong
3770:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong |==> 4 * start * pingPong
3771:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong |==> 4 * start - pingPong
3772:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong |==> 4 * start / pingPong
3773:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 |==> 0
3774:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 |==> -4
3775:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong + 4 |==> (4 * start + pingPong) % 4
3776:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong + 4 |==> (4 * start + pingPong) * 4
3777:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong + 4 |==> 4 * start + pingPong - 4
3778:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:4 * start + pingPong + 4 |==> (4 * start + pingPong) / 4
3779:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1331:eMin = work[4 * start + pingPong + 4] |==> <NO-OP>
3780:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 |==> 0
3781:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 |==> -4
3782:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start |==> 4 % start
3783:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start |==> 4 + start
3784:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start |==> 4 - start
3785:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start |==> 4 / start
3786:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start + pingPong |==> 4 * start % pingPong
3787:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start + pingPong |==> 4 * start * pingPong
3788:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start + pingPong |==> 4 * start - pingPong
3789:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1332:4 * start + pingPong |==> 4 * start / pingPong
3790:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1333:dMin = d |==> <NO-OP>
3791:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:0 |==> 1
3792:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:0 |==> -1
3793:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:pingPong == 0 |==> pingPong != 0
3794:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:pingPong == 0 |==> pingPong < 0
3795:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:pingPong == 0 |==> pingPong <= 0
3796:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:pingPong == 0 |==> pingPong > 0
3797:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:pingPong == 0 |==> pingPong >= 0
3798:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:pingPong == 0 |==> false
3799:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1335:pingPong == 0 |==> true
3800:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 |==> 0
3801:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 |==> -4
3802:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start |==> 4 % start
3803:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start |==> 4 + start
3804:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start |==> 4 - start
3805:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start |==> 4 / start
3806:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:3 |==> 0
3807:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:3 |==> -3
3808:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start + 3 |==> 4 * start % 3
3809:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start + 3 |==> 4 * start * 3
3810:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start + 3 |==> 4 * start - 3
3811:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * start + 3 |==> 4 * start / 3
3812:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 |==> 0
3813:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 |==> -4
3814:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:3 |==> 0
3815:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:3 |==> -3
3816:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:end - 3 |==> end % 3
3817:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:end - 3 |==> end * 3
3818:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:end - 3 |==> end + 3
3819:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:end - 3 |==> end / 3
3820:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * (end - 3) |==> 4 % (end - 3)
3821:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * (end - 3) |==> 4 + (end - 3)
3822:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * (end - 3) |==> 4 - (end - 3)
3823:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 * (end - 3) |==> 4 / (end - 3)
3824:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:j4 < 4 * (end - 3) |==> j4 != 4 * (end - 3)
3825:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:j4 < 4 * (end - 3) |==> j4 <= 4 * (end - 3)
3826:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:j4 < 4 * (end - 3) |==> j4 == 4 * (end - 3)
3827:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:j4 < 4 * (end - 3) |==> j4 > 4 * (end - 3)
3828:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:j4 < 4 * (end - 3) |==> j4 >= 4 * (end - 3)
3829:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:j4 < 4 * (end - 3) |==> false
3830:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:j4 < 4 * (end - 3) |==> true
3831:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 |==> 0
3832:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1336:4 |==> -4
3833:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:2 |==> 0
3834:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:2 |==> -2
3835:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 2 |==> j4 % 2
3836:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 2 |==> j4 * 2
3837:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 2 |==> j4 + 2
3838:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 2 |==> j4 / 2
3839:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:1 |==> 0
3840:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:1 |==> -1
3841:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 1 |==> j4 % 1
3842:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 1 |==> j4 * 1
3843:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 1 |==> j4 + 1
3844:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:j4 - 1 |==> j4 / 1
3845:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:d + work[j4 - 1] |==> d % work[j4 - 1]
3846:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:d + work[j4 - 1] |==> d * work[j4 - 1]
3847:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:d + work[j4 - 1] |==> d - work[j4 - 1]
3848:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:d + work[j4 - 1] |==> d / work[j4 - 1]
3849:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1337:work[j4 - 2] = d + work[j4 - 1] |==> <NO-OP>
3850:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:2 |==> 0
3851:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:2 |==> -2
3852:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:j4 - 2 |==> j4 % 2
3853:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:j4 - 2 |==> j4 * 2
3854:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:j4 - 2 |==> j4 + 2
3855:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:j4 - 2 |==> j4 / 2
3856:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:0.0 |==> 1.0
3857:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:0.0 |==> -1.0
3858:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:work[j4 - 2] == 0.0 |==> work[j4 - 2] != 0.0
3859:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:work[j4 - 2] == 0.0 |==> work[j4 - 2] < 0.0
3860:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:work[j4 - 2] == 0.0 |==> work[j4 - 2] <= 0.0
3861:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:work[j4 - 2] == 0.0 |==> work[j4 - 2] > 0.0
3862:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:work[j4 - 2] == 0.0 |==> work[j4 - 2] >= 0.0
3863:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:work[j4 - 2] == 0.0 |==> false
3864:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1338:work[j4 - 2] == 0.0 |==> true
3865:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1339:0.0 |==> 1.0
3866:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1339:0.0 |==> -1.0
3867:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1339:work[j4] = 0.0 |==> <NO-OP>
3868:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1340:1 |==> 0
3869:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1340:1 |==> -1
3870:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1340:j4 + 1 |==> j4 % 1
3871:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1340:j4 + 1 |==> j4 * 1
3872:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1340:j4 + 1 |==> j4 - 1
3873:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1340:j4 + 1 |==> j4 / 1
3874:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1340:d = work[j4 + 1] |==> <NO-OP>
3875:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1341:dMin = d |==> <NO-OP>
3876:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1342:0.0 |==> 1.0
3877:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1342:0.0 |==> -1.0
3878:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1342:eMin = 0.0 |==> <NO-OP>
3879:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:1 |==> 0
3880:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:1 |==> -1
3881:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 + 1 |==> j4 % 1
3882:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 + 1 |==> j4 * 1
3883:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 + 1 |==> j4 - 1
3884:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 + 1 |==> j4 / 1
3885:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] |==> MathUtils.SAFE_MIN % work[j4 + 1]
3886:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] |==> MathUtils.SAFE_MIN + work[j4 + 1]
3887:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] |==> MathUtils.SAFE_MIN - work[j4 + 1]
3888:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] |==> MathUtils.SAFE_MIN / work[j4 + 1]
3889:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:2 |==> 0
3890:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:2 |==> -2
3891:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 - 2 |==> j4 % 2
3892:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 - 2 |==> j4 * 2
3893:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 - 2 |==> j4 + 2
3894:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:j4 - 2 |==> j4 / 2
3895:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4 + 1] != work[j4 - 2]
3896:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4 + 1] <= work[j4 - 2]
3897:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4 + 1] == work[j4 - 2]
3898:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4 + 1] > work[j4 - 2]
3899:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4 + 1] >= work[j4 - 2]
3900:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2] |==> false
3901:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2] |==> true
3902:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:2 |==> 0
3903:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:2 |==> -2
3904:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 - 2 |==> j4 % 2
3905:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 - 2 |==> j4 * 2
3906:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 - 2 |==> j4 + 2
3907:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 - 2 |==> j4 / 2
3908:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN % work[j4 - 2]
3909:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN + work[j4 - 2]
3910:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN - work[j4 - 2]
3911:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN / work[j4 - 2]
3912:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:1 |==> 0
3913:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:1 |==> -1
3914:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 + 1 |==> j4 % 1
3915:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 + 1 |==> j4 * 1
3916:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 + 1 |==> j4 - 1
3917:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:j4 + 1 |==> j4 / 1
3918:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1] |==> MathUtils.SAFE_MIN * work[j4 - 2] != work[j4 + 1]
3919:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1] |==> MathUtils.SAFE_MIN * work[j4 - 2] <= work[j4 + 1]
3920:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1] |==> MathUtils.SAFE_MIN * work[j4 - 2] == work[j4 + 1]
3921:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1] |==> MathUtils.SAFE_MIN * work[j4 - 2] > work[j4 + 1]
3922:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1] |==> MathUtils.SAFE_MIN * work[j4 - 2] >= work[j4 + 1]
3923:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1] |==> false
3924:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1] |==> true
3925:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]) |==> (MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) != (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1])
3926:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]) |==> (MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) == (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1])
3927:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]) |==> false
3928:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]) |==> (MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2])
3929:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1344:(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]) |==> (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1])
3930:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]) |==> true
3931:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1343:(MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1]) |==> (MathUtils.SAFE_MIN * work[j4 + 1] < work[j4 - 2]) || (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4 + 1])
3932:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:1 |==> 0
3933:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:1 |==> -1
3934:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 + 1 |==> j4 % 1
3935:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 + 1 |==> j4 * 1
3936:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 + 1 |==> j4 - 1
3937:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 + 1 |==> j4 / 1
3938:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:2 |==> 0
3939:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:2 |==> -2
3940:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 - 2 |==> j4 % 2
3941:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 - 2 |==> j4 * 2
3942:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 - 2 |==> j4 + 2
3943:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:j4 - 2 |==> j4 / 2
3944:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] % work[j4 - 2]
3945:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] * work[j4 - 2]
3946:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] + work[j4 - 2]
3947:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1345:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] - work[j4 - 2]
3948:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:1 |==> 0
3949:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:1 |==> -1
3950:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:j4 - 1 |==> j4 % 1
3951:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:j4 - 1 |==> j4 * 1
3952:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:j4 - 1 |==> j4 + 1
3953:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:j4 - 1 |==> j4 / 1
3954:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:work[j4 - 1] * tmp |==> work[j4 - 1] % tmp
3955:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:work[j4 - 1] * tmp |==> work[j4 - 1] + tmp
3956:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:work[j4 - 1] * tmp |==> work[j4 - 1] - tmp
3957:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:work[j4 - 1] * tmp |==> work[j4 - 1] / tmp
3958:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1346:work[j4] = work[j4 - 1] * tmp |==> <NO-OP>
3959:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1347:d *= tmp |==> <NO-OP>
3960:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:1 |==> 0
3961:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:1 |==> -1
3962:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 + 1 |==> j4 % 1
3963:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 + 1 |==> j4 * 1
3964:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 + 1 |==> j4 - 1
3965:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 + 1 |==> j4 / 1
3966:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:1 |==> 0
3967:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:1 |==> -1
3968:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 1 |==> j4 % 1
3969:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 1 |==> j4 * 1
3970:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 1 |==> j4 + 1
3971:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 1 |==> j4 / 1
3972:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:2 |==> 0
3973:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:2 |==> -2
3974:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 2 |==> j4 % 2
3975:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 2 |==> j4 * 2
3976:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 2 |==> j4 + 2
3977:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:j4 - 2 |==> j4 / 2
3978:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 - 1] / work[j4 - 2] |==> work[j4 - 1] % work[j4 - 2]
3979:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 - 1] / work[j4 - 2] |==> work[j4 - 1] * work[j4 - 2]
3980:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 - 1] / work[j4 - 2] |==> work[j4 - 1] + work[j4 - 2]
3981:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 - 1] / work[j4 - 2] |==> work[j4 - 1] - work[j4 - 2]
3982:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 + 1] * (work[j4 - 1] / work[j4 - 2]) |==> work[j4 + 1] % (work[j4 - 1] / work[j4 - 2])
3983:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 + 1] * (work[j4 - 1] / work[j4 - 2]) |==> work[j4 + 1] + (work[j4 - 1] / work[j4 - 2])
3984:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 + 1] * (work[j4 - 1] / work[j4 - 2]) |==> work[j4 + 1] - (work[j4 - 1] / work[j4 - 2])
3985:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4 + 1] * (work[j4 - 1] / work[j4 - 2]) |==> work[j4 + 1] / (work[j4 - 1] / work[j4 - 2])
3986:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1349:work[j4] = work[j4 + 1] * (work[j4 - 1] / work[j4 - 2]) |==> <NO-OP>
3987:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:1 |==> 0
3988:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:1 |==> -1
3989:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 + 1 |==> j4 % 1
3990:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 + 1 |==> j4 * 1
3991:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 + 1 |==> j4 - 1
3992:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 + 1 |==> j4 / 1
3993:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:2 |==> 0
3994:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:2 |==> -2
3995:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 - 2 |==> j4 % 2
3996:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 - 2 |==> j4 * 2
3997:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 - 2 |==> j4 + 2
3998:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:j4 - 2 |==> j4 / 2
3999:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] % work[j4 - 2]
4000:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] * work[j4 - 2]
4001:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] + work[j4 - 2]
4002:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:work[j4 + 1] / work[j4 - 2] |==> work[j4 + 1] - work[j4 - 2]
4003:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1350:d *= work[j4 + 1] / work[j4 - 2] |==> <NO-OP>
4004:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1352:dMin = Math.min(dMin, d) |==> <NO-OP>
4005:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1353:eMin = Math.min(eMin, work[j4]) |==> <NO-OP>
4006:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 |==> 0
4007:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 |==> -4
4008:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start |==> 4 % start
4009:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start |==> 4 + start
4010:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start |==> 4 - start
4011:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start |==> 4 / start
4012:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:3 |==> 0
4013:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:3 |==> -3
4014:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start + 3 |==> 4 * start % 3
4015:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start + 3 |==> 4 * start * 3
4016:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start + 3 |==> 4 * start - 3
4017:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * start + 3 |==> 4 * start / 3
4018:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 |==> 0
4019:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 |==> -4
4020:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:3 |==> 0
4021:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:3 |==> -3
4022:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:end - 3 |==> end % 3
4023:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:end - 3 |==> end * 3
4024:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:end - 3 |==> end + 3
4025:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:end - 3 |==> end / 3
4026:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * (end - 3) |==> 4 % (end - 3)
4027:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * (end - 3) |==> 4 + (end - 3)
4028:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * (end - 3) |==> 4 - (end - 3)
4029:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 * (end - 3) |==> 4 / (end - 3)
4030:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:j4 < 4 * (end - 3) |==> j4 != 4 * (end - 3)
4031:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:j4 < 4 * (end - 3) |==> j4 <= 4 * (end - 3)
4032:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:j4 < 4 * (end - 3) |==> j4 == 4 * (end - 3)
4033:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:j4 < 4 * (end - 3) |==> j4 > 4 * (end - 3)
4034:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:j4 < 4 * (end - 3) |==> j4 >= 4 * (end - 3)
4035:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:j4 < 4 * (end - 3) |==> false
4036:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:j4 < 4 * (end - 3) |==> true
4037:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 |==> 0
4038:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1356:4 |==> -4
4039:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:3 |==> 0
4040:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:3 |==> -3
4041:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:j4 - 3 |==> j4 % 3
4042:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:j4 - 3 |==> j4 * 3
4043:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:j4 - 3 |==> j4 + 3
4044:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:j4 - 3 |==> j4 / 3
4045:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:d + work[j4] |==> d % work[j4]
4046:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:d + work[j4] |==> d * work[j4]
4047:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:d + work[j4] |==> d - work[j4]
4048:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:d + work[j4] |==> d / work[j4]
4049:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1357:work[j4 - 3] = d + work[j4] |==> <NO-OP>
4050:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:3 |==> 0
4051:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:3 |==> -3
4052:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:j4 - 3 |==> j4 % 3
4053:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:j4 - 3 |==> j4 * 3
4054:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:j4 - 3 |==> j4 + 3
4055:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:j4 - 3 |==> j4 / 3
4056:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:0.0 |==> 1.0
4057:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:0.0 |==> -1.0
4058:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:work[j4 - 3] == 0.0 |==> work[j4 - 3] != 0.0
4059:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:work[j4 - 3] == 0.0 |==> work[j4 - 3] < 0.0
4060:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:work[j4 - 3] == 0.0 |==> work[j4 - 3] <= 0.0
4061:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:work[j4 - 3] == 0.0 |==> work[j4 - 3] > 0.0
4062:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:work[j4 - 3] == 0.0 |==> work[j4 - 3] >= 0.0
4063:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:work[j4 - 3] == 0.0 |==> false
4064:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1358:work[j4 - 3] == 0.0 |==> true
4065:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:1 |==> 0
4066:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:1 |==> -1
4067:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:j4 - 1 |==> j4 % 1
4068:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:j4 - 1 |==> j4 * 1
4069:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:j4 - 1 |==> j4 + 1
4070:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:j4 - 1 |==> j4 / 1
4071:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:0.0 |==> 1.0
4072:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:0.0 |==> -1.0
4073:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1359:work[j4 - 1] = 0.0 |==> <NO-OP>
4074:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1360:2 |==> 0
4075:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1360:2 |==> -2
4076:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1360:j4 + 2 |==> j4 % 2
4077:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1360:j4 + 2 |==> j4 * 2
4078:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1360:j4 + 2 |==> j4 - 2
4079:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1360:j4 + 2 |==> j4 / 2
4080:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1360:d = work[j4 + 2] |==> <NO-OP>
4081:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1361:dMin = d |==> <NO-OP>
4082:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1362:0.0 |==> 1.0
4083:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1362:0.0 |==> -1.0
4084:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1362:eMin = 0.0 |==> <NO-OP>
4085:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:2 |==> 0
4086:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:2 |==> -2
4087:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 + 2 |==> j4 % 2
4088:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 + 2 |==> j4 * 2
4089:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 + 2 |==> j4 - 2
4090:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 + 2 |==> j4 / 2
4091:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] |==> MathUtils.SAFE_MIN % work[j4 + 2]
4092:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] |==> MathUtils.SAFE_MIN + work[j4 + 2]
4093:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] |==> MathUtils.SAFE_MIN - work[j4 + 2]
4094:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] |==> MathUtils.SAFE_MIN / work[j4 + 2]
4095:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:3 |==> 0
4096:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:3 |==> -3
4097:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 - 3 |==> j4 % 3
4098:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 - 3 |==> j4 * 3
4099:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 - 3 |==> j4 + 3
4100:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:j4 - 3 |==> j4 / 3
4101:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3] |==> MathUtils.SAFE_MIN * work[j4 + 2] != work[j4 - 3]
4102:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3] |==> MathUtils.SAFE_MIN * work[j4 + 2] <= work[j4 - 3]
4103:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3] |==> MathUtils.SAFE_MIN * work[j4 + 2] == work[j4 - 3]
4104:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3] |==> MathUtils.SAFE_MIN * work[j4 + 2] > work[j4 - 3]
4105:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3] |==> MathUtils.SAFE_MIN * work[j4 + 2] >= work[j4 - 3]
4106:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3] |==> false
4107:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3] |==> true
4108:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:3 |==> 0
4109:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:3 |==> -3
4110:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 - 3 |==> j4 % 3
4111:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 - 3 |==> j4 * 3
4112:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 - 3 |==> j4 + 3
4113:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 - 3 |==> j4 / 3
4114:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] |==> MathUtils.SAFE_MIN % work[j4 - 3]
4115:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] |==> MathUtils.SAFE_MIN + work[j4 - 3]
4116:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] |==> MathUtils.SAFE_MIN - work[j4 - 3]
4117:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] |==> MathUtils.SAFE_MIN / work[j4 - 3]
4118:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:2 |==> 0
4119:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:2 |==> -2
4120:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 + 2 |==> j4 % 2
4121:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 + 2 |==> j4 * 2
4122:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 + 2 |==> j4 - 2
4123:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:j4 + 2 |==> j4 / 2
4124:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 3] != work[j4 + 2]
4125:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 3] <= work[j4 + 2]
4126:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 3] == work[j4 + 2]
4127:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 3] > work[j4 + 2]
4128:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 3] >= work[j4 + 2]
4129:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2] |==> false
4130:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2] |==> true
4131:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:(MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) && (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2]) |==> (MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) != (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2])
4132:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:(MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) && (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2]) |==> (MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) == (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2])
4133:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:(MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) && (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2]) |==> false
4134:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:(MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) && (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2]) |==> (MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3])
4135:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1364:(MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) && (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2]) |==> (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2])
4136:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:(MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) && (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2]) |==> true
4137:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1363:(MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) && (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2]) |==> (MathUtils.SAFE_MIN * work[j4 + 2] < work[j4 - 3]) || (MathUtils.SAFE_MIN * work[j4 - 3] < work[j4 + 2])
4138:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:2 |==> 0
4139:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:2 |==> -2
4140:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 + 2 |==> j4 % 2
4141:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 + 2 |==> j4 * 2
4142:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 + 2 |==> j4 - 2
4143:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 + 2 |==> j4 / 2
4144:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:3 |==> 0
4145:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:3 |==> -3
4146:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 - 3 |==> j4 % 3
4147:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 - 3 |==> j4 * 3
4148:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 - 3 |==> j4 + 3
4149:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:j4 - 3 |==> j4 / 3
4150:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] % work[j4 - 3]
4151:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] * work[j4 - 3]
4152:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] + work[j4 - 3]
4153:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1365:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] - work[j4 - 3]
4154:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:1 |==> 0
4155:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:1 |==> -1
4156:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:j4 - 1 |==> j4 % 1
4157:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:j4 - 1 |==> j4 * 1
4158:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:j4 - 1 |==> j4 + 1
4159:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:j4 - 1 |==> j4 / 1
4160:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:work[j4] * tmp |==> work[j4] % tmp
4161:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:work[j4] * tmp |==> work[j4] + tmp
4162:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:work[j4] * tmp |==> work[j4] - tmp
4163:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:work[j4] * tmp |==> work[j4] / tmp
4164:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1366:work[j4 - 1] = work[j4] * tmp |==> <NO-OP>
4165:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1367:d *= tmp |==> <NO-OP>
4166:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:1 |==> 0
4167:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:1 |==> -1
4168:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 1 |==> j4 % 1
4169:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 1 |==> j4 * 1
4170:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 1 |==> j4 + 1
4171:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 1 |==> j4 / 1
4172:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:2 |==> 0
4173:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:2 |==> -2
4174:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 + 2 |==> j4 % 2
4175:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 + 2 |==> j4 * 2
4176:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 + 2 |==> j4 - 2
4177:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 + 2 |==> j4 / 2
4178:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:3 |==> 0
4179:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:3 |==> -3
4180:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 3 |==> j4 % 3
4181:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 3 |==> j4 * 3
4182:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 3 |==> j4 + 3
4183:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:j4 - 3 |==> j4 / 3
4184:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4] / work[j4 - 3] |==> work[j4] % work[j4 - 3]
4185:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4] / work[j4 - 3] |==> work[j4] * work[j4 - 3]
4186:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4] / work[j4 - 3] |==> work[j4] + work[j4 - 3]
4187:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4] / work[j4 - 3] |==> work[j4] - work[j4 - 3]
4188:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4 + 2] * (work[j4] / work[j4 - 3]) |==> work[j4 + 2] % (work[j4] / work[j4 - 3])
4189:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4 + 2] * (work[j4] / work[j4 - 3]) |==> work[j4 + 2] + (work[j4] / work[j4 - 3])
4190:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4 + 2] * (work[j4] / work[j4 - 3]) |==> work[j4 + 2] - (work[j4] / work[j4 - 3])
4191:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4 + 2] * (work[j4] / work[j4 - 3]) |==> work[j4 + 2] / (work[j4] / work[j4 - 3])
4192:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1369:work[j4 - 1] = work[j4 + 2] * (work[j4] / work[j4 - 3]) |==> <NO-OP>
4193:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:2 |==> 0
4194:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:2 |==> -2
4195:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 + 2 |==> j4 % 2
4196:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 + 2 |==> j4 * 2
4197:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 + 2 |==> j4 - 2
4198:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 + 2 |==> j4 / 2
4199:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:3 |==> 0
4200:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:3 |==> -3
4201:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 - 3 |==> j4 % 3
4202:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 - 3 |==> j4 * 3
4203:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 - 3 |==> j4 + 3
4204:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:j4 - 3 |==> j4 / 3
4205:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] % work[j4 - 3]
4206:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] * work[j4 - 3]
4207:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] + work[j4 - 3]
4208:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:work[j4 + 2] / work[j4 - 3] |==> work[j4 + 2] - work[j4 - 3]
4209:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1370:d *= work[j4 + 2] / work[j4 - 3] |==> <NO-OP>
4210:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1372:dMin = Math.min(dMin, d) |==> <NO-OP>
4211:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1373:1 |==> 0
4212:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1373:1 |==> -1
4213:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1373:j4 - 1 |==> j4 % 1
4214:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1373:j4 - 1 |==> j4 * 1
4215:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1373:j4 - 1 |==> j4 + 1
4216:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1373:j4 - 1 |==> j4 / 1
4217:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1373:eMin = Math.min(eMin, work[j4 - 1]) |==> <NO-OP>
4218:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1378:dN2 = d |==> <NO-OP>
4219:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1379:dMin2 = dMin |==> <NO-OP>
4220:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 |==> 0
4221:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 |==> -4
4222:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:2 |==> 0
4223:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:2 |==> -2
4224:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:end - 2 |==> end % 2
4225:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:end - 2 |==> end * 2
4226:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:end - 2 |==> end + 2
4227:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:end - 2 |==> end / 2
4228:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) |==> 4 % (end - 2)
4229:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) |==> 4 + (end - 2)
4230:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) |==> 4 - (end - 2)
4231:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) |==> 4 / (end - 2)
4232:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong |==> 4 * (end - 2) % pingPong
4233:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong |==> 4 * (end - 2) * pingPong
4234:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong |==> 4 * (end - 2) + pingPong
4235:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong |==> 4 * (end - 2) / pingPong
4236:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:1 |==> 0
4237:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:1 |==> -1
4238:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong - 1 |==> (4 * (end - 2) - pingPong) % 1
4239:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong - 1 |==> (4 * (end - 2) - pingPong) * 1
4240:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong - 1 |==> 4 * (end - 2) - pingPong + 1
4241:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1380:4 * (end - 2) - pingPong - 1 |==> (4 * (end - 2) - pingPong) / 1
4242:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:2 |==> 0
4243:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:2 |==> -2
4244:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:2 * pingPong |==> 2 % pingPong
4245:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:2 * pingPong |==> 2 + pingPong
4246:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:2 * pingPong |==> 2 - pingPong
4247:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:2 * pingPong |==> 2 / pingPong
4248:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong |==> j4 % (2 * pingPong)
4249:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong |==> j4 * (2 * pingPong)
4250:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong |==> j4 - 2 * pingPong
4251:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong |==> j4 / (2 * pingPong)
4252:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:1 |==> 0
4253:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:1 |==> -1
4254:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) % 1
4255:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) * 1
4256:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong - 1 |==> j4 + 2 * pingPong + 1
4257:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1381:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) / 1
4258:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:2 |==> 0
4259:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:2 |==> -2
4260:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:j4 - 2 |==> j4 % 2
4261:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:j4 - 2 |==> j4 * 2
4262:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:j4 - 2 |==> j4 + 2
4263:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:j4 - 2 |==> j4 / 2
4264:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:dN2 + work[j4p2] |==> dN2 % work[j4p2]
4265:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:dN2 + work[j4p2] |==> dN2 * work[j4p2]
4266:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:dN2 + work[j4p2] |==> dN2 - work[j4p2]
4267:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:dN2 + work[j4p2] |==> dN2 / work[j4p2]
4268:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1382:work[j4 - 2] = dN2 + work[j4p2] |==> <NO-OP>
4269:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:2 |==> 0
4270:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:2 |==> -2
4271:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:j4 - 2 |==> j4 % 2
4272:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:j4 - 2 |==> j4 * 2
4273:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:j4 - 2 |==> j4 + 2
4274:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:j4 - 2 |==> j4 / 2
4275:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:0.0 |==> 1.0
4276:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:0.0 |==> -1.0
4277:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:work[j4 - 2] == 0.0 |==> work[j4 - 2] != 0.0
4278:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:work[j4 - 2] == 0.0 |==> work[j4 - 2] < 0.0
4279:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:work[j4 - 2] == 0.0 |==> work[j4 - 2] <= 0.0
4280:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:work[j4 - 2] == 0.0 |==> work[j4 - 2] > 0.0
4281:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:work[j4 - 2] == 0.0 |==> work[j4 - 2] >= 0.0
4282:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:work[j4 - 2] == 0.0 |==> false
4283:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1383:work[j4 - 2] == 0.0 |==> true
4284:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1384:0.0 |==> 1.0
4285:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1384:0.0 |==> -1.0
4286:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1384:work[j4] = 0.0 |==> <NO-OP>
4287:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1385:2 |==> 0
4288:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1385:2 |==> -2
4289:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1385:j4p2 + 2 |==> j4p2 % 2
4290:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1385:j4p2 + 2 |==> j4p2 * 2
4291:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1385:j4p2 + 2 |==> j4p2 - 2
4292:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1385:j4p2 + 2 |==> j4p2 / 2
4293:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1385:dN1 = work[j4p2 + 2] |==> <NO-OP>
4294:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1386:dMin = dN1 |==> <NO-OP>
4295:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1387:0.0 |==> 1.0
4296:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1387:0.0 |==> -1.0
4297:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1387:eMin = 0.0 |==> <NO-OP>
4298:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:2 |==> 0
4299:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:2 |==> -2
4300:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4p2 + 2 |==> j4p2 % 2
4301:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4p2 + 2 |==> j4p2 * 2
4302:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4p2 + 2 |==> j4p2 - 2
4303:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4p2 + 2 |==> j4p2 / 2
4304:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN % work[j4p2 + 2]
4305:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN + work[j4p2 + 2]
4306:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN - work[j4p2 + 2]
4307:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN / work[j4p2 + 2]
4308:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:2 |==> 0
4309:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:2 |==> -2
4310:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4 - 2 |==> j4 % 2
4311:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4 - 2 |==> j4 * 2
4312:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4 - 2 |==> j4 + 2
4313:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:j4 - 2 |==> j4 / 2
4314:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] != work[j4 - 2]
4315:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] <= work[j4 - 2]
4316:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] == work[j4 - 2]
4317:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] > work[j4 - 2]
4318:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] >= work[j4 - 2]
4319:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> false
4320:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> true
4321:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:2 |==> 0
4322:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:2 |==> -2
4323:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4 - 2 |==> j4 % 2
4324:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4 - 2 |==> j4 * 2
4325:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4 - 2 |==> j4 + 2
4326:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4 - 2 |==> j4 / 2
4327:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN % work[j4 - 2]
4328:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN + work[j4 - 2]
4329:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN - work[j4 - 2]
4330:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN / work[j4 - 2]
4331:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:2 |==> 0
4332:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:2 |==> -2
4333:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4p2 + 2 |==> j4p2 % 2
4334:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4p2 + 2 |==> j4p2 * 2
4335:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4p2 + 2 |==> j4p2 - 2
4336:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:j4p2 + 2 |==> j4p2 / 2
4337:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] != work[j4p2 + 2]
4338:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] <= work[j4p2 + 2]
4339:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] == work[j4p2 + 2]
4340:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] > work[j4p2 + 2]
4341:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] >= work[j4p2 + 2]
4342:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> false
4343:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> true
4344:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) != (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4345:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) == (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4346:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> false
4347:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2])
4348:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1389:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4349:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> true
4350:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1388:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) || (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4351:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:2 |==> 0
4352:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:2 |==> -2
4353:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4p2 + 2 |==> j4p2 % 2
4354:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4p2 + 2 |==> j4p2 * 2
4355:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4p2 + 2 |==> j4p2 - 2
4356:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4p2 + 2 |==> j4p2 / 2
4357:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:2 |==> 0
4358:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:2 |==> -2
4359:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4 - 2 |==> j4 % 2
4360:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4 - 2 |==> j4 * 2
4361:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4 - 2 |==> j4 + 2
4362:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:j4 - 2 |==> j4 / 2
4363:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] % work[j4 - 2]
4364:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] * work[j4 - 2]
4365:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] + work[j4 - 2]
4366:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1390:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] - work[j4 - 2]
4367:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1391:work[j4p2] * tmp |==> work[j4p2] % tmp
4368:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1391:work[j4p2] * tmp |==> work[j4p2] + tmp
4369:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1391:work[j4p2] * tmp |==> work[j4p2] - tmp
4370:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1391:work[j4p2] * tmp |==> work[j4p2] / tmp
4371:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1391:work[j4] = work[j4p2] * tmp |==> <NO-OP>
4372:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1392:dN2 * tmp |==> dN2 % tmp
4373:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1392:dN2 * tmp |==> dN2 + tmp
4374:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1392:dN2 * tmp |==> dN2 - tmp
4375:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1392:dN2 * tmp |==> dN2 / tmp
4376:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1392:dN1 = dN2 * tmp |==> <NO-OP>
4377:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:2 |==> 0
4378:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:2 |==> -2
4379:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4p2 + 2 |==> j4p2 % 2
4380:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4p2 + 2 |==> j4p2 * 2
4381:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4p2 + 2 |==> j4p2 - 2
4382:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4p2 + 2 |==> j4p2 / 2
4383:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:2 |==> 0
4384:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:2 |==> -2
4385:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4 - 2 |==> j4 % 2
4386:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4 - 2 |==> j4 * 2
4387:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4 - 2 |==> j4 + 2
4388:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:j4 - 2 |==> j4 / 2
4389:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2] / work[j4 - 2] |==> work[j4p2] % work[j4 - 2]
4390:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2] / work[j4 - 2] |==> work[j4p2] * work[j4 - 2]
4391:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2] / work[j4 - 2] |==> work[j4p2] + work[j4 - 2]
4392:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2] / work[j4 - 2] |==> work[j4p2] - work[j4 - 2]
4393:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] % (work[j4p2] / work[j4 - 2])
4394:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] + (work[j4p2] / work[j4 - 2])
4395:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] - (work[j4p2] / work[j4 - 2])
4396:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] / (work[j4p2] / work[j4 - 2])
4397:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1394:work[j4] = work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> <NO-OP>
4398:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:2 |==> 0
4399:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:2 |==> -2
4400:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4p2 + 2 |==> j4p2 % 2
4401:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4p2 + 2 |==> j4p2 * 2
4402:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4p2 + 2 |==> j4p2 - 2
4403:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4p2 + 2 |==> j4p2 / 2
4404:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:2 |==> 0
4405:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:2 |==> -2
4406:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4 - 2 |==> j4 % 2
4407:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4 - 2 |==> j4 * 2
4408:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4 - 2 |==> j4 + 2
4409:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:j4 - 2 |==> j4 / 2
4410:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:dN2 / work[j4 - 2] |==> dN2 % work[j4 - 2]
4411:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:dN2 / work[j4 - 2] |==> dN2 * work[j4 - 2]
4412:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:dN2 / work[j4 - 2] |==> dN2 + work[j4 - 2]
4413:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:dN2 / work[j4 - 2] |==> dN2 - work[j4 - 2]
4414:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] % (dN2 / work[j4 - 2])
4415:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] + (dN2 / work[j4 - 2])
4416:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] - (dN2 / work[j4 - 2])
4417:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> work[j4p2 + 2] / (dN2 / work[j4 - 2])
4418:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1395:dN1 = work[j4p2 + 2] * (dN2 / work[j4 - 2]) |==> <NO-OP>
4419:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1397:dMin = Math.min(dMin, dN1) |==> <NO-OP>
4420:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1399:dMin1 = dMin |==> <NO-OP>
4421:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1400:4 |==> 0
4422:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1400:4 |==> -4
4423:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1400:j4 + 4 |==> j4 % 4
4424:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1400:j4 + 4 |==> j4 * 4
4425:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1400:j4 + 4 |==> j4 - 4
4426:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1400:j4 + 4 |==> j4 / 4
4427:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1400:j4 = j4 + 4 |==> <NO-OP>
4428:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:2 |==> 0
4429:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:2 |==> -2
4430:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:2 * pingPong |==> 2 % pingPong
4431:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:2 * pingPong |==> 2 + pingPong
4432:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:2 * pingPong |==> 2 - pingPong
4433:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:2 * pingPong |==> 2 / pingPong
4434:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong |==> j4 % (2 * pingPong)
4435:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong |==> j4 * (2 * pingPong)
4436:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong |==> j4 - 2 * pingPong
4437:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong |==> j4 / (2 * pingPong)
4438:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:1 |==> 0
4439:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:1 |==> -1
4440:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) % 1
4441:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) * 1
4442:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong - 1 |==> j4 + 2 * pingPong + 1
4443:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4 + 2 * pingPong - 1 |==> (j4 + 2 * pingPong) / 1
4444:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1401:j4p2 = j4 + 2 * pingPong - 1 |==> <NO-OP>
4445:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:2 |==> 0
4446:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:2 |==> -2
4447:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:j4 - 2 |==> j4 % 2
4448:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:j4 - 2 |==> j4 * 2
4449:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:j4 - 2 |==> j4 + 2
4450:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:j4 - 2 |==> j4 / 2
4451:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:dN1 + work[j4p2] |==> dN1 % work[j4p2]
4452:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:dN1 + work[j4p2] |==> dN1 * work[j4p2]
4453:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:dN1 + work[j4p2] |==> dN1 - work[j4p2]
4454:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:dN1 + work[j4p2] |==> dN1 / work[j4p2]
4455:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1402:work[j4 - 2] = dN1 + work[j4p2] |==> <NO-OP>
4456:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:2 |==> 0
4457:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:2 |==> -2
4458:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:j4 - 2 |==> j4 % 2
4459:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:j4 - 2 |==> j4 * 2
4460:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:j4 - 2 |==> j4 + 2
4461:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:j4 - 2 |==> j4 / 2
4462:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:0.0 |==> 1.0
4463:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:0.0 |==> -1.0
4464:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:work[j4 - 2] == 0.0 |==> work[j4 - 2] != 0.0
4465:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:work[j4 - 2] == 0.0 |==> work[j4 - 2] < 0.0
4466:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:work[j4 - 2] == 0.0 |==> work[j4 - 2] <= 0.0
4467:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:work[j4 - 2] == 0.0 |==> work[j4 - 2] > 0.0
4468:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:work[j4 - 2] == 0.0 |==> work[j4 - 2] >= 0.0
4469:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:work[j4 - 2] == 0.0 |==> false
4470:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1403:work[j4 - 2] == 0.0 |==> true
4471:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1404:0.0 |==> 1.0
4472:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1404:0.0 |==> -1.0
4473:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1404:work[j4] = 0.0 |==> <NO-OP>
4474:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1405:2 |==> 0
4475:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1405:2 |==> -2
4476:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1405:j4p2 + 2 |==> j4p2 % 2
4477:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1405:j4p2 + 2 |==> j4p2 * 2
4478:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1405:j4p2 + 2 |==> j4p2 - 2
4479:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1405:j4p2 + 2 |==> j4p2 / 2
4480:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1405:dN = work[j4p2 + 2] |==> <NO-OP>
4481:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1406:dMin = dN |==> <NO-OP>
4482:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1407:0.0 |==> 1.0
4483:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1407:0.0 |==> -1.0
4484:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1407:eMin = 0.0 |==> <NO-OP>
4485:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:2 |==> 0
4486:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:2 |==> -2
4487:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4p2 + 2 |==> j4p2 % 2
4488:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4p2 + 2 |==> j4p2 * 2
4489:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4p2 + 2 |==> j4p2 - 2
4490:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4p2 + 2 |==> j4p2 / 2
4491:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN % work[j4p2 + 2]
4492:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN + work[j4p2 + 2]
4493:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN - work[j4p2 + 2]
4494:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] |==> MathUtils.SAFE_MIN / work[j4p2 + 2]
4495:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:2 |==> 0
4496:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:2 |==> -2
4497:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4 - 2 |==> j4 % 2
4498:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4 - 2 |==> j4 * 2
4499:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4 - 2 |==> j4 + 2
4500:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:j4 - 2 |==> j4 / 2
4501:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] != work[j4 - 2]
4502:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] <= work[j4 - 2]
4503:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] == work[j4 - 2]
4504:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] > work[j4 - 2]
4505:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> MathUtils.SAFE_MIN * work[j4p2 + 2] >= work[j4 - 2]
4506:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> false
4507:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2] |==> true
4508:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:2 |==> 0
4509:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:2 |==> -2
4510:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4 - 2 |==> j4 % 2
4511:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4 - 2 |==> j4 * 2
4512:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4 - 2 |==> j4 + 2
4513:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4 - 2 |==> j4 / 2
4514:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN % work[j4 - 2]
4515:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN + work[j4 - 2]
4516:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN - work[j4 - 2]
4517:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] |==> MathUtils.SAFE_MIN / work[j4 - 2]
4518:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:2 |==> 0
4519:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:2 |==> -2
4520:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4p2 + 2 |==> j4p2 % 2
4521:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4p2 + 2 |==> j4p2 * 2
4522:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4p2 + 2 |==> j4p2 - 2
4523:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:j4p2 + 2 |==> j4p2 / 2
4524:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] != work[j4p2 + 2]
4525:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] <= work[j4p2 + 2]
4526:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] == work[j4p2 + 2]
4527:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] > work[j4p2 + 2]
4528:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> MathUtils.SAFE_MIN * work[j4 - 2] >= work[j4p2 + 2]
4529:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> false
4530:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2] |==> true
4531:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) != (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4532:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) == (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4533:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> false
4534:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2])
4535:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1409:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4536:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> true
4537:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1408:(MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) && (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2]) |==> (MathUtils.SAFE_MIN * work[j4p2 + 2] < work[j4 - 2]) || (MathUtils.SAFE_MIN * work[j4 - 2] < work[j4p2 + 2])
4538:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:2 |==> 0
4539:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:2 |==> -2
4540:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4p2 + 2 |==> j4p2 % 2
4541:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4p2 + 2 |==> j4p2 * 2
4542:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4p2 + 2 |==> j4p2 - 2
4543:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4p2 + 2 |==> j4p2 / 2
4544:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:2 |==> 0
4545:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:2 |==> -2
4546:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4 - 2 |==> j4 % 2
4547:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4 - 2 |==> j4 * 2
4548:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4 - 2 |==> j4 + 2
4549:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:j4 - 2 |==> j4 / 2
4550:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] % work[j4 - 2]
4551:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] * work[j4 - 2]
4552:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] + work[j4 - 2]
4553:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1410:work[j4p2 + 2] / work[j4 - 2] |==> work[j4p2 + 2] - work[j4 - 2]
4554:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1411:work[j4p2] * tmp |==> work[j4p2] % tmp
4555:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1411:work[j4p2] * tmp |==> work[j4p2] + tmp
4556:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1411:work[j4p2] * tmp |==> work[j4p2] - tmp
4557:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1411:work[j4p2] * tmp |==> work[j4p2] / tmp
4558:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1411:work[j4] = work[j4p2] * tmp |==> <NO-OP>
4559:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1412:dN1 * tmp |==> dN1 % tmp
4560:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1412:dN1 * tmp |==> dN1 + tmp
4561:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1412:dN1 * tmp |==> dN1 - tmp
4562:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1412:dN1 * tmp |==> dN1 / tmp
4563:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1412:dN = dN1 * tmp |==> <NO-OP>
4564:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:2 |==> 0
4565:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:2 |==> -2
4566:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4p2 + 2 |==> j4p2 % 2
4567:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4p2 + 2 |==> j4p2 * 2
4568:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4p2 + 2 |==> j4p2 - 2
4569:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4p2 + 2 |==> j4p2 / 2
4570:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:2 |==> 0
4571:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:2 |==> -2
4572:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4 - 2 |==> j4 % 2
4573:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4 - 2 |==> j4 * 2
4574:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4 - 2 |==> j4 + 2
4575:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:j4 - 2 |==> j4 / 2
4576:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2] / work[j4 - 2] |==> work[j4p2] % work[j4 - 2]
4577:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2] / work[j4 - 2] |==> work[j4p2] * work[j4 - 2]
4578:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2] / work[j4 - 2] |==> work[j4p2] + work[j4 - 2]
4579:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2] / work[j4 - 2] |==> work[j4p2] - work[j4 - 2]
4580:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] % (work[j4p2] / work[j4 - 2])
4581:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] + (work[j4p2] / work[j4 - 2])
4582:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] - (work[j4p2] / work[j4 - 2])
4583:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> work[j4p2 + 2] / (work[j4p2] / work[j4 - 2])
4584:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1414:work[j4] = work[j4p2 + 2] * (work[j4p2] / work[j4 - 2]) |==> <NO-OP>
4585:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:2 |==> 0
4586:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:2 |==> -2
4587:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4p2 + 2 |==> j4p2 % 2
4588:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4p2 + 2 |==> j4p2 * 2
4589:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4p2 + 2 |==> j4p2 - 2
4590:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4p2 + 2 |==> j4p2 / 2
4591:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:2 |==> 0
4592:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:2 |==> -2
4593:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4 - 2 |==> j4 % 2
4594:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4 - 2 |==> j4 * 2
4595:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4 - 2 |==> j4 + 2
4596:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:j4 - 2 |==> j4 / 2
4597:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:dN1 / work[j4 - 2] |==> dN1 % work[j4 - 2]
4598:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:dN1 / work[j4 - 2] |==> dN1 * work[j4 - 2]
4599:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:dN1 / work[j4 - 2] |==> dN1 + work[j4 - 2]
4600:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:dN1 / work[j4 - 2] |==> dN1 - work[j4 - 2]
4601:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] % (dN1 / work[j4 - 2])
4602:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] + (dN1 / work[j4 - 2])
4603:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] - (dN1 / work[j4 - 2])
4604:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> work[j4p2 + 2] / (dN1 / work[j4 - 2])
4605:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1415:dN = work[j4p2 + 2] * (dN1 / work[j4 - 2]) |==> <NO-OP>
4606:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1417:dMin = Math.min(dMin, dN) |==> <NO-OP>
4607:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1419:2 |==> 0
4608:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1419:2 |==> -2
4609:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1419:j4 + 2 |==> j4 % 2
4610:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1419:j4 + 2 |==> j4 * 2
4611:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1419:j4 + 2 |==> j4 - 2
4612:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1419:j4 + 2 |==> j4 / 2
4613:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1419:work[j4 + 2] = dN |==> <NO-OP>
4614:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 |==> 0
4615:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 |==> -4
4616:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end |==> 4 % end
4617:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end |==> 4 + end
4618:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end |==> 4 - end
4619:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end |==> 4 / end
4620:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong |==> 4 * end % pingPong
4621:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong |==> 4 * end * pingPong
4622:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong |==> 4 * end + pingPong
4623:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong |==> 4 * end / pingPong
4624:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:1 |==> 0
4625:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:1 |==> -1
4626:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong - 1 |==> (4 * end - pingPong) % 1
4627:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong - 1 |==> (4 * end - pingPong) * 1
4628:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong - 1 |==> 4 * end - pingPong + 1
4629:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:4 * end - pingPong - 1 |==> (4 * end - pingPong) / 1
4630:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@dqd(int,int):1420:work[4 * end - pingPong - 1] = eMin |==> <NO-OP>
4631:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:0.0 |==> 1.0
4632:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:0.0 |==> -1.0
4633:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:dMin <= 0.0 |==> dMin != 0.0
4634:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:dMin <= 0.0 |==> dMin < 0.0
4635:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:dMin <= 0.0 |==> dMin == 0.0
4636:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:dMin <= 0.0 |==> dMin > 0.0
4637:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:dMin <= 0.0 |==> dMin >= 0.0
4638:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:dMin <= 0.0 |==> false
4639:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1439:dMin <= 0.0 |==> true
4640:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1440:-dMin |==> +dMin
4641:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1440:tau = -dMin |==> <NO-OP>
4642:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1441:-1 |==> 0
4643:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1441:-1 |==> 1
4644:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1441:tType = -1 |==> <NO-OP>
4645:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 |==> 0
4646:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 |==> -4
4647:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end |==> 4 % end
4648:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end |==> 4 + end
4649:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end |==> 4 - end
4650:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end |==> 4 / end
4651:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong |==> 4 * end % pingPong
4652:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong |==> 4 * end * pingPong
4653:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong |==> 4 * end - pingPong
4654:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong |==> 4 * end / pingPong
4655:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:1 |==> 0
4656:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:1 |==> -1
4657:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong - 1 |==> (4 * end + pingPong) % 1
4658:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong - 1 |==> (4 * end + pingPong) * 1
4659:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong - 1 |==> 4 * end + pingPong + 1
4660:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1445:4 * end + pingPong - 1 |==> (4 * end + pingPong) / 1
4661:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN |==> dMin != dN
4662:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN |==> dMin < dN
4663:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN |==> dMin <= dN
4664:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN |==> dMin > dN
4665:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN |==> dMin >= dN
4666:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN |==> false
4667:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN |==> true
4668:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN1 |==> dMin != dN1
4669:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN1 |==> dMin < dN1
4670:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN1 |==> dMin <= dN1
4671:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN1 |==> dMin > dN1
4672:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN1 |==> dMin >= dN1
4673:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN1 |==> false
4674:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN1 |==> true
4675:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN || dMin == dN1 |==> dMin == dN != (dMin == dN1)
4676:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN || dMin == dN1 |==> dMin == dN && dMin == dN1
4677:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN || dMin == dN1 |==> dMin == dN == (dMin == dN1)
4678:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN || dMin == dN1 |==> false
4679:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN || dMin == dN1 |==> dMin == dN
4680:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN || dMin == dN1 |==> dMin == dN1
4681:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1449:dMin == dN || dMin == dN1 |==> true
4682:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:3 |==> 0
4683:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:3 |==> -3
4684:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 3 |==> nn % 3
4685:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 3 |==> nn * 3
4686:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 3 |==> nn + 3
4687:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 3 |==> nn / 3
4688:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:5 |==> 0
4689:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:5 |==> -5
4690:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 5 |==> nn % 5
4691:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 5 |==> nn * 5
4692:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 5 |==> nn + 5
4693:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:nn - 5 |==> nn / 5
4694:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:Math.sqrt(work[nn - 3]) * Math.sqrt(work[nn - 5]) |==> Math.sqrt(work[nn - 3]) % Math.sqrt(work[nn - 5])
4695:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:Math.sqrt(work[nn - 3]) * Math.sqrt(work[nn - 5]) |==> Math.sqrt(work[nn - 3]) + Math.sqrt(work[nn - 5])
4696:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:Math.sqrt(work[nn - 3]) * Math.sqrt(work[nn - 5]) |==> Math.sqrt(work[nn - 3]) - Math.sqrt(work[nn - 5])
4697:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1451:Math.sqrt(work[nn - 3]) * Math.sqrt(work[nn - 5]) |==> Math.sqrt(work[nn - 3]) / Math.sqrt(work[nn - 5])
4698:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:7 |==> 0
4699:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:7 |==> -7
4700:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 7 |==> nn % 7
4701:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 7 |==> nn * 7
4702:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 7 |==> nn + 7
4703:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 7 |==> nn / 7
4704:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:9 |==> 0
4705:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:9 |==> -9
4706:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 9 |==> nn % 9
4707:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 9 |==> nn * 9
4708:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 9 |==> nn + 9
4709:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:nn - 9 |==> nn / 9
4710:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:Math.sqrt(work[nn - 7]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 7]) % Math.sqrt(work[nn - 9])
4711:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:Math.sqrt(work[nn - 7]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 7]) + Math.sqrt(work[nn - 9])
4712:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:Math.sqrt(work[nn - 7]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 7]) - Math.sqrt(work[nn - 9])
4713:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1452:Math.sqrt(work[nn - 7]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 7]) / Math.sqrt(work[nn - 9])
4714:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:7 |==> 0
4715:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:7 |==> -7
4716:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 7 |==> nn % 7
4717:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 7 |==> nn * 7
4718:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 7 |==> nn + 7
4719:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 7 |==> nn / 7
4720:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:5 |==> 0
4721:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:5 |==> -5
4722:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 5 |==> nn % 5
4723:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 5 |==> nn * 5
4724:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 5 |==> nn + 5
4725:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:nn - 5 |==> nn / 5
4726:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:work[nn - 7] + work[nn - 5] |==> work[nn - 7] % work[nn - 5]
4727:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:work[nn - 7] + work[nn - 5] |==> work[nn - 7] * work[nn - 5]
4728:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:work[nn - 7] + work[nn - 5] |==> work[nn - 7] - work[nn - 5]
4729:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1453:work[nn - 7] + work[nn - 5] |==> work[nn - 7] / work[nn - 5]
4730:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN |==> dMin != dN
4731:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN |==> dMin < dN
4732:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN |==> dMin <= dN
4733:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN |==> dMin > dN
4734:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN |==> dMin >= dN
4735:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN |==> false
4736:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN |==> true
4737:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin1 == dN1 |==> dMin1 != dN1
4738:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin1 == dN1 |==> dMin1 < dN1
4739:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin1 == dN1 |==> dMin1 <= dN1
4740:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin1 == dN1 |==> dMin1 > dN1
4741:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin1 == dN1 |==> dMin1 >= dN1
4742:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin1 == dN1 |==> false
4743:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin1 == dN1 |==> true
4744:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN && dMin1 == dN1 |==> dMin == dN != (dMin1 == dN1)
4745:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN && dMin1 == dN1 |==> dMin == dN == (dMin1 == dN1)
4746:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN && dMin1 == dN1 |==> false
4747:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN && dMin1 == dN1 |==> dMin == dN
4748:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN && dMin1 == dN1 |==> dMin1 == dN1
4749:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN && dMin1 == dN1 |==> true
4750:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1455:dMin == dN && dMin1 == dN1 |==> dMin == dN || dMin1 == dN1
4751:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 |==> dMin2 % a2
4752:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 |==> dMin2 * a2
4753:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 |==> dMin2 + a2
4754:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 |==> dMin2 / a2
4755:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:0.25 |==> 0.0
4756:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:0.25 |==> -0.25
4757:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 * 0.25 |==> dMin2 % 0.25
4758:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 * 0.25 |==> dMin2 + 0.25
4759:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 * 0.25 |==> dMin2 - 0.25
4760:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 * 0.25 |==> dMin2 / 0.25
4761:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 - dMin2 * 0.25 |==> (dMin2 - a2) % (dMin2 * 0.25)
4762:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 - dMin2 * 0.25 |==> (dMin2 - a2) * (dMin2 * 0.25)
4763:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 - dMin2 * 0.25 |==> dMin2 - a2 + dMin2 * 0.25
4764:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1457:dMin2 - a2 - dMin2 * 0.25 |==> (dMin2 - a2) / (dMin2 * 0.25)
4765:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN |==> a2 % dN
4766:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN |==> a2 * dN
4767:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN |==> a2 + dN
4768:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN |==> a2 / dN
4769:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:0.0 |==> 1.0
4770:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:0.0 |==> -1.0
4771:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 |==> gap2 != 0.0
4772:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 |==> gap2 < 0.0
4773:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 |==> gap2 <= 0.0
4774:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 |==> gap2 == 0.0
4775:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 |==> gap2 >= 0.0
4776:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 |==> false
4777:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 |==> true
4778:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > b2 |==> gap2 != b2
4779:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > b2 |==> gap2 < b2
4780:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > b2 |==> gap2 <= b2
4781:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > b2 |==> gap2 == b2
4782:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > b2 |==> gap2 >= b2
4783:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > b2 |==> false
4784:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > b2 |==> true
4785:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 && gap2 > b2 |==> gap2 > 0.0 != gap2 > b2
4786:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 && gap2 > b2 |==> gap2 > 0.0 == gap2 > b2
4787:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 && gap2 > b2 |==> false
4788:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 && gap2 > b2 |==> gap2 > 0.0
4789:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 && gap2 > b2 |==> gap2 > b2
4790:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 && gap2 > b2 |==> true
4791:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:gap2 > 0.0 && gap2 > b2 |==> gap2 > 0.0 || gap2 > b2
4792:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b2 / gap2 |==> b2 % gap2
4793:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b2 / gap2 |==> b2 * gap2
4794:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b2 / gap2 |==> b2 + gap2
4795:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b2 / gap2 |==> b2 - gap2
4796:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:(b2 / gap2) * b2 |==> (b2 / gap2) % b2
4797:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:(b2 / gap2) * b2 |==> (b2 / gap2) + b2
4798:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:(b2 / gap2) * b2 |==> (b2 / gap2) - b2
4799:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:(b2 / gap2) * b2 |==> (b2 / gap2) / b2
4800:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b1 + b2 |==> b1 % b2
4801:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b1 + b2 |==> b1 * b2
4802:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b1 + b2 |==> b1 - b2
4803:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:b1 + b2 |==> b1 / b2
4804:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN - ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2)) |==> (a2 - dN) % ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2))
4805:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN - ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2)) |==> (a2 - dN) * ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2))
4806:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN - ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2)) |==> a2 - dN + ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2))
4807:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1458:a2 - dN - ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2)) |==> (a2 - dN) / ((gap2 > 0.0 && gap2 > b2) ? (b2 / gap2) * b2 : (b1 + b2))
4808:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:0.0 |==> 1.0
4809:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:0.0 |==> -1.0
4810:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 |==> gap1 != 0.0
4811:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 |==> gap1 < 0.0
4812:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 |==> gap1 <= 0.0
4813:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 |==> gap1 == 0.0
4814:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 |==> gap1 >= 0.0
4815:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 |==> false
4816:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 |==> true
4817:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > b1 |==> gap1 != b1
4818:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > b1 |==> gap1 < b1
4819:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > b1 |==> gap1 <= b1
4820:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > b1 |==> gap1 == b1
4821:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > b1 |==> gap1 >= b1
4822:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > b1 |==> false
4823:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > b1 |==> true
4824:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 && gap1 > b1 |==> gap1 > 0.0 != gap1 > b1
4825:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 && gap1 > b1 |==> gap1 > 0.0 == gap1 > b1
4826:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 && gap1 > b1 |==> false
4827:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 && gap1 > b1 |==> gap1 > 0.0
4828:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 && gap1 > b1 |==> gap1 > b1
4829:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 && gap1 > b1 |==> true
4830:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1459:gap1 > 0.0 && gap1 > b1 |==> gap1 > 0.0 || gap1 > b1
4831:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:b1 / gap1 |==> b1 % gap1
4832:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:b1 / gap1 |==> b1 * gap1
4833:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:b1 / gap1 |==> b1 + gap1
4834:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:b1 / gap1 |==> b1 - gap1
4835:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:(b1 / gap1) * b1 |==> (b1 / gap1) % b1
4836:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:(b1 / gap1) * b1 |==> (b1 / gap1) + b1
4837:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:(b1 / gap1) * b1 |==> (b1 / gap1) - b1
4838:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:(b1 / gap1) * b1 |==> (b1 / gap1) / b1
4839:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:dN - (b1 / gap1) * b1 |==> dN % ((b1 / gap1) * b1)
4840:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:dN - (b1 / gap1) * b1 |==> dN * ((b1 / gap1) * b1)
4841:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:dN - (b1 / gap1) * b1 |==> dN + (b1 / gap1) * b1
4842:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:dN - (b1 / gap1) * b1 |==> dN / ((b1 / gap1) * b1)
4843:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:0.5 |==> 0.0
4844:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:0.5 |==> -0.5
4845:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:0.5 * dMin |==> 0.5 % dMin
4846:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:0.5 * dMin |==> 0.5 + dMin
4847:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:0.5 * dMin |==> 0.5 - dMin
4848:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:0.5 * dMin |==> 0.5 / dMin
4849:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1460:tau = Math.max(dN - (b1 / gap1) * b1, 0.5 * dMin) |==> <NO-OP>
4850:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1461:-2 |==> 0
4851:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1461:-2 |==> 2
4852:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1461:tType = -2 |==> <NO-OP>
4853:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1463:0.0 |==> 1.0
4854:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1463:0.0 |==> -1.0
4855:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1464:dN > b1 |==> dN != b1
4856:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1464:dN > b1 |==> dN < b1
4857:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1464:dN > b1 |==> dN <= b1
4858:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1464:dN > b1 |==> dN == b1
4859:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1464:dN > b1 |==> dN >= b1
4860:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1464:dN > b1 |==> false
4861:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1464:dN > b1 |==> true
4862:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1465:dN - b1 |==> dN % b1
4863:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1465:dN - b1 |==> dN * b1
4864:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1465:dN - b1 |==> dN + b1
4865:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1465:dN - b1 |==> dN / b1
4866:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1465:s = dN - b1 |==> <NO-OP>
4867:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:b1 + b2 |==> b1 % b2
4868:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:b1 + b2 |==> b1 * b2
4869:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:b1 + b2 |==> b1 - b2
4870:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:b1 + b2 |==> b1 / b2
4871:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:a2 > (b1 + b2) |==> a2 != (b1 + b2)
4872:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:a2 > (b1 + b2) |==> a2 < (b1 + b2)
4873:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:a2 > (b1 + b2) |==> a2 <= (b1 + b2)
4874:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:a2 > (b1 + b2) |==> a2 == (b1 + b2)
4875:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:a2 > (b1 + b2) |==> a2 >= (b1 + b2)
4876:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:a2 > (b1 + b2) |==> false
4877:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1467:a2 > (b1 + b2) |==> true
4878:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:b1 + b2 |==> b1 % b2
4879:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:b1 + b2 |==> b1 * b2
4880:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:b1 + b2 |==> b1 - b2
4881:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:b1 + b2 |==> b1 / b2
4882:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:a2 - (b1 + b2) |==> a2 % (b1 + b2)
4883:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:a2 - (b1 + b2) |==> a2 * (b1 + b2)
4884:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:a2 - (b1 + b2) |==> a2 + (b1 + b2)
4885:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:a2 - (b1 + b2) |==> a2 / (b1 + b2)
4886:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1468:s = Math.min(s, a2 - (b1 + b2)) |==> <NO-OP>
4887:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1470:0.333 |==> 0.0
4888:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1470:0.333 |==> -0.333
4889:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1470:0.333 * dMin |==> 0.333 % dMin
4890:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1470:0.333 * dMin |==> 0.333 + dMin
4891:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1470:0.333 * dMin |==> 0.333 - dMin
4892:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1470:0.333 * dMin |==> 0.333 / dMin
4893:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1470:tau = Math.max(s, 0.333 * dMin) |==> <NO-OP>
4894:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1471:-3 |==> 0
4895:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1471:-3 |==> 3
4896:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1471:tType = -3 |==> <NO-OP>
4897:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1475:-4 |==> 0
4898:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1475:-4 |==> 4
4899:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1475:tType = -4 |==> <NO-OP>
4900:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1476:0.25 |==> 0.0
4901:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1476:0.25 |==> -0.25
4902:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1476:0.25 * dMin |==> 0.25 % dMin
4903:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1476:0.25 * dMin |==> 0.25 + dMin
4904:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1476:0.25 * dMin |==> 0.25 - dMin
4905:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1476:0.25 * dMin |==> 0.25 / dMin
4906:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1479:dMin == dN |==> dMin != dN
4907:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1479:dMin == dN |==> dMin < dN
4908:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1479:dMin == dN |==> dMin <= dN
4909:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1479:dMin == dN |==> dMin > dN
4910:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1479:dMin == dN |==> dMin >= dN
4911:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1479:dMin == dN |==> false
4912:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1479:dMin == dN |==> true
4913:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1481:0.0 |==> 1.0
4914:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1481:0.0 |==> -1.0
4915:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1481:a2 = 0.0 |==> <NO-OP>
4916:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:5 |==> 0
4917:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:5 |==> -5
4918:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 5 |==> nn % 5
4919:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 5 |==> nn * 5
4920:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 5 |==> nn + 5
4921:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 5 |==> nn / 5
4922:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:7 |==> 0
4923:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:7 |==> -7
4924:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 7 |==> nn % 7
4925:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 7 |==> nn * 7
4926:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 7 |==> nn + 7
4927:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:nn - 7 |==> nn / 7
4928:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:work[nn - 5] > work[nn - 7] |==> work[nn - 5] != work[nn - 7]
4929:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:work[nn - 5] > work[nn - 7] |==> work[nn - 5] < work[nn - 7]
4930:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:work[nn - 5] > work[nn - 7] |==> work[nn - 5] <= work[nn - 7]
4931:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:work[nn - 5] > work[nn - 7] |==> work[nn - 5] == work[nn - 7]
4932:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:work[nn - 5] > work[nn - 7] |==> work[nn - 5] >= work[nn - 7]
4933:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:work[nn - 5] > work[nn - 7] |==> false
4934:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1482:work[nn - 5] > work[nn - 7] |==> true
4935:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:5 |==> 0
4936:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:5 |==> -5
4937:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 5 |==> nn % 5
4938:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 5 |==> nn * 5
4939:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 5 |==> nn + 5
4940:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 5 |==> nn / 5
4941:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:7 |==> 0
4942:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:7 |==> -7
4943:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 7 |==> nn % 7
4944:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 7 |==> nn * 7
4945:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 7 |==> nn + 7
4946:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:nn - 7 |==> nn / 7
4947:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:work[nn - 5] / work[nn - 7] |==> work[nn - 5] % work[nn - 7]
4948:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:work[nn - 5] / work[nn - 7] |==> work[nn - 5] * work[nn - 7]
4949:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:work[nn - 5] / work[nn - 7] |==> work[nn - 5] + work[nn - 7]
4950:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:work[nn - 5] / work[nn - 7] |==> work[nn - 5] - work[nn - 7]
4951:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1485:b2 = work[nn - 5] / work[nn - 7] |==> <NO-OP>
4952:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1486:9 |==> 0
4953:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1486:9 |==> -9
4954:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1486:nn - 9 |==> nn % 9
4955:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1486:nn - 9 |==> nn * 9
4956:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1486:nn - 9 |==> nn + 9
4957:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1486:nn - 9 |==> nn / 9
4958:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:2 |==> 0
4959:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:2 |==> -2
4960:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:2 * pingPong |==> 2 % pingPong
4961:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:2 * pingPong |==> 2 + pingPong
4962:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:2 * pingPong |==> 2 - pingPong
4963:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:2 * pingPong |==> 2 / pingPong
4964:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:nn - 2 * pingPong |==> nn % (2 * pingPong)
4965:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:nn - 2 * pingPong |==> nn * (2 * pingPong)
4966:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:nn - 2 * pingPong |==> nn + 2 * pingPong
4967:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1488:nn - 2 * pingPong |==> nn / (2 * pingPong)
4968:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1489:2 |==> 0
4969:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1489:2 |==> -2
4970:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1489:np - 2 |==> np % 2
4971:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1489:np - 2 |==> np * 2
4972:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1489:np - 2 |==> np + 2
4973:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1489:np - 2 |==> np / 2
4974:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1489:b2 = work[np - 2] |==> <NO-OP>
4975:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:4 |==> 0
4976:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:4 |==> -4
4977:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 4 |==> np % 4
4978:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 4 |==> np * 4
4979:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 4 |==> np + 4
4980:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 4 |==> np / 4
4981:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:2 |==> 0
4982:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:2 |==> -2
4983:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 2 |==> np % 2
4984:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 2 |==> np * 2
4985:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 2 |==> np + 2
4986:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:np - 2 |==> np / 2
4987:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:work[np - 4] > work[np - 2] |==> work[np - 4] != work[np - 2]
4988:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:work[np - 4] > work[np - 2] |==> work[np - 4] < work[np - 2]
4989:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:work[np - 4] > work[np - 2] |==> work[np - 4] <= work[np - 2]
4990:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:work[np - 4] > work[np - 2] |==> work[np - 4] == work[np - 2]
4991:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:work[np - 4] > work[np - 2] |==> work[np - 4] >= work[np - 2]
4992:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:work[np - 4] > work[np - 2] |==> false
4993:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1491:work[np - 4] > work[np - 2] |==> true
4994:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:4 |==> 0
4995:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:4 |==> -4
4996:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 4 |==> np % 4
4997:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 4 |==> np * 4
4998:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 4 |==> np + 4
4999:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 4 |==> np / 4
5000:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:2 |==> 0
5001:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:2 |==> -2
5002:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 2 |==> np % 2
5003:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 2 |==> np * 2
5004:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 2 |==> np + 2
5005:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:np - 2 |==> np / 2
5006:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:work[np - 4] / work[np - 2] |==> work[np - 4] % work[np - 2]
5007:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:work[np - 4] / work[np - 2] |==> work[np - 4] * work[np - 2]
5008:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:work[np - 4] / work[np - 2] |==> work[np - 4] + work[np - 2]
5009:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:work[np - 4] / work[np - 2] |==> work[np - 4] - work[np - 2]
5010:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1494:a2 = work[np - 4] / work[np - 2] |==> <NO-OP>
5011:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:9 |==> 0
5012:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:9 |==> -9
5013:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 9 |==> nn % 9
5014:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 9 |==> nn * 9
5015:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 9 |==> nn + 9
5016:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 9 |==> nn / 9
5017:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:11 |==> 0
5018:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:11 |==> -11
5019:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 11 |==> nn % 11
5020:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 11 |==> nn * 11
5021:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 11 |==> nn + 11
5022:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:nn - 11 |==> nn / 11
5023:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:work[nn - 9] > work[nn - 11] |==> work[nn - 9] != work[nn - 11]
5024:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:work[nn - 9] > work[nn - 11] |==> work[nn - 9] < work[nn - 11]
5025:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:work[nn - 9] > work[nn - 11] |==> work[nn - 9] <= work[nn - 11]
5026:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:work[nn - 9] > work[nn - 11] |==> work[nn - 9] == work[nn - 11]
5027:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:work[nn - 9] > work[nn - 11] |==> work[nn - 9] >= work[nn - 11]
5028:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:work[nn - 9] > work[nn - 11] |==> false
5029:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1495:work[nn - 9] > work[nn - 11] |==> true
5030:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:9 |==> 0
5031:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:9 |==> -9
5032:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 9 |==> nn % 9
5033:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 9 |==> nn * 9
5034:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 9 |==> nn + 9
5035:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 9 |==> nn / 9
5036:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:11 |==> 0
5037:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:11 |==> -11
5038:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 11 |==> nn % 11
5039:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 11 |==> nn * 11
5040:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 11 |==> nn + 11
5041:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:nn - 11 |==> nn / 11
5042:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:work[nn - 9] / work[nn - 11] |==> work[nn - 9] % work[nn - 11]
5043:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:work[nn - 9] / work[nn - 11] |==> work[nn - 9] * work[nn - 11]
5044:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:work[nn - 9] / work[nn - 11] |==> work[nn - 9] + work[nn - 11]
5045:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:work[nn - 9] / work[nn - 11] |==> work[nn - 9] - work[nn - 11]
5046:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1498:b2 = work[nn - 9] / work[nn - 11] |==> <NO-OP>
5047:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1499:13 |==> 0
5048:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1499:13 |==> -13
5049:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1499:nn - 13 |==> nn % 13
5050:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1499:nn - 13 |==> nn * 13
5051:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1499:nn - 13 |==> nn + 13
5052:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1499:nn - 13 |==> nn / 13
5053:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1499:np = nn - 13 |==> <NO-OP>
5054:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1503:a2 + b2 |==> a2 % b2
5055:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1503:a2 + b2 |==> a2 * b2
5056:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1503:a2 + b2 |==> a2 - b2
5057:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1503:a2 + b2 |==> a2 / b2
5058:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1503:a2 = a2 + b2 |==> <NO-OP>
5059:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 |==> 0
5060:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 |==> -4
5061:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start |==> 4 % start
5062:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start |==> 4 + start
5063:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start |==> 4 - start
5064:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start |==> 4 / start
5065:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:2 |==> 0
5066:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:2 |==> -2
5067:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 |==> 4 * start % 2
5068:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 |==> 4 * start * 2
5069:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 |==> 4 * start - 2
5070:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 |==> 4 * start / 2
5071:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 + pingPong |==> (4 * start + 2) % pingPong
5072:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 + pingPong |==> (4 * start + 2) * pingPong
5073:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 + pingPong |==> 4 * start + 2 - pingPong
5074:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 * start + 2 + pingPong |==> (4 * start + 2) / pingPong
5075:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:i4 >= 4 * start + 2 + pingPong |==> i4 != 4 * start + 2 + pingPong
5076:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:i4 >= 4 * start + 2 + pingPong |==> i4 < 4 * start + 2 + pingPong
5077:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:i4 >= 4 * start + 2 + pingPong |==> i4 <= 4 * start + 2 + pingPong
5078:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:i4 >= 4 * start + 2 + pingPong |==> i4 == 4 * start + 2 + pingPong
5079:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:i4 >= 4 * start + 2 + pingPong |==> i4 > 4 * start + 2 + pingPong
5080:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:i4 >= 4 * start + 2 + pingPong |==> false
5081:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:i4 >= 4 * start + 2 + pingPong |==> true
5082:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 |==> 0
5083:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1504:4 |==> -4
5084:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:0.0 |==> 1.0
5085:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:0.0 |==> -1.0
5086:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:b2 == 0.0 |==> b2 != 0.0
5087:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:b2 == 0.0 |==> b2 < 0.0
5088:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:b2 == 0.0 |==> b2 <= 0.0
5089:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:b2 == 0.0 |==> b2 > 0.0
5090:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:b2 == 0.0 |==> b2 >= 0.0
5091:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:b2 == 0.0 |==> false
5092:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1505:b2 == 0.0 |==> true
5093:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1508:b1 = b2 |==> <NO-OP>
5094:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:2 |==> 0
5095:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:2 |==> -2
5096:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:i4 - 2 |==> i4 % 2
5097:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:i4 - 2 |==> i4 * 2
5098:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:i4 - 2 |==> i4 + 2
5099:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:i4 - 2 |==> i4 / 2
5100:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:work[i4] > work[i4 - 2] |==> work[i4] != work[i4 - 2]
5101:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:work[i4] > work[i4 - 2] |==> work[i4] < work[i4 - 2]
5102:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:work[i4] > work[i4 - 2] |==> work[i4] <= work[i4 - 2]
5103:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:work[i4] > work[i4 - 2] |==> work[i4] == work[i4 - 2]
5104:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:work[i4] > work[i4 - 2] |==> work[i4] >= work[i4 - 2]
5105:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:work[i4] > work[i4 - 2] |==> false
5106:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1509:work[i4] > work[i4 - 2] |==> true
5107:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:2 |==> 0
5108:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:2 |==> -2
5109:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:i4 - 2 |==> i4 % 2
5110:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:i4 - 2 |==> i4 * 2
5111:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:i4 - 2 |==> i4 + 2
5112:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:i4 - 2 |==> i4 / 2
5113:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:work[i4] / work[i4 - 2] |==> work[i4] % work[i4 - 2]
5114:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:work[i4] / work[i4 - 2] |==> work[i4] * work[i4 - 2]
5115:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:work[i4] / work[i4 - 2] |==> work[i4] + work[i4 - 2]
5116:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:work[i4] / work[i4 - 2] |==> work[i4] - work[i4 - 2]
5117:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:b2 * (work[i4] / work[i4 - 2]) |==> b2 % (work[i4] / work[i4 - 2])
5118:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:b2 * (work[i4] / work[i4 - 2]) |==> b2 + (work[i4] / work[i4 - 2])
5119:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:b2 * (work[i4] / work[i4 - 2]) |==> b2 - (work[i4] / work[i4 - 2])
5120:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:b2 * (work[i4] / work[i4 - 2]) |==> b2 / (work[i4] / work[i4 - 2])
5121:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1512:b2 = b2 * (work[i4] / work[i4 - 2]) |==> <NO-OP>
5122:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1513:a2 + b2 |==> a2 % b2
5123:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1513:a2 + b2 |==> a2 * b2
5124:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1513:a2 + b2 |==> a2 - b2
5125:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1513:a2 + b2 |==> a2 / b2
5126:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1513:a2 = a2 + b2 |==> <NO-OP>
5127:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 |==> 0
5128:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 |==> -100
5129:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) |==> 100 % Math.max(b2, b1)
5130:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) |==> 100 + Math.max(b2, b1)
5131:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) |==> 100 - Math.max(b2, b1)
5132:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) |==> 100 / Math.max(b2, b1)
5133:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) != a2
5134:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) <= a2
5135:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) == a2
5136:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) > a2
5137:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) >= a2
5138:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 |==> false
5139:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 |==> true
5140:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:cnst1 < a2 |==> cnst1 != a2
5141:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:cnst1 < a2 |==> cnst1 <= a2
5142:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:cnst1 < a2 |==> cnst1 == a2
5143:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:cnst1 < a2 |==> cnst1 > a2
5144:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:cnst1 < a2 |==> cnst1 >= a2
5145:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:cnst1 < a2 |==> false
5146:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:cnst1 < a2 |==> true
5147:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2 != cnst1 < a2
5148:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2 && cnst1 < a2
5149:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2 == cnst1 < a2
5150:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> false
5151:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2
5152:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> cnst1 < a2
5153:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1514:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> true
5154:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1518:cnst3 * a2 |==> cnst3 % a2
5155:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1518:cnst3 * a2 |==> cnst3 + a2
5156:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1518:cnst3 * a2 |==> cnst3 - a2
5157:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1518:cnst3 * a2 |==> cnst3 / a2
5158:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1518:a2 = cnst3 * a2 |==> <NO-OP>
5159:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1521:a2 < cnst1 |==> a2 != cnst1
5160:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1521:a2 < cnst1 |==> a2 <= cnst1
5161:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1521:a2 < cnst1 |==> a2 == cnst1
5162:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1521:a2 < cnst1 |==> a2 > cnst1
5163:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1521:a2 < cnst1 |==> a2 >= cnst1
5164:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1521:a2 < cnst1 |==> false
5165:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1521:a2 < cnst1 |==> true
5166:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 |==> 0
5167:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 |==> -1
5168:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 - Math.sqrt(a2) |==> 1 % Math.sqrt(a2)
5169:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 - Math.sqrt(a2) |==> 1 * Math.sqrt(a2)
5170:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 - Math.sqrt(a2) |==> 1 + Math.sqrt(a2)
5171:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 - Math.sqrt(a2) |==> 1 / Math.sqrt(a2)
5172:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) |==> gam % (1 - Math.sqrt(a2))
5173:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) |==> gam + (1 - Math.sqrt(a2))
5174:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) |==> gam - (1 - Math.sqrt(a2))
5175:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) |==> gam / (1 - Math.sqrt(a2))
5176:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 |==> 0
5177:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 |==> -1
5178:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 + a2 |==> 1 % a2
5179:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 + a2 |==> 1 * a2
5180:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 + a2 |==> 1 - a2
5181:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:1 + a2 |==> 1 / a2
5182:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) % (1 + a2)
5183:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) * (1 + a2)
5184:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) + (1 + a2)
5185:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) - (1 + a2)
5186:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1522:s = gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> <NO-OP>
5187:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1524:tau = s |==> <NO-OP>
5188:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1527:dMin == dN2 |==> dMin != dN2
5189:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1527:dMin == dN2 |==> dMin < dN2
5190:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1527:dMin == dN2 |==> dMin <= dN2
5191:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1527:dMin == dN2 |==> dMin > dN2
5192:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1527:dMin == dN2 |==> dMin >= dN2
5193:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1527:dMin == dN2 |==> false
5194:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1527:dMin == dN2 |==> true
5195:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1530:-5 |==> 0
5196:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1530:-5 |==> 5
5197:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1530:tType = -5 |==> <NO-OP>
5198:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1531:0.25 |==> 0.0
5199:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1531:0.25 |==> -0.25
5200:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1531:0.25 * dMin |==> 0.25 % dMin
5201:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1531:0.25 * dMin |==> 0.25 + dMin
5202:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1531:0.25 * dMin |==> 0.25 - dMin
5203:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1531:0.25 * dMin |==> 0.25 / dMin
5204:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:2 |==> 0
5205:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:2 |==> -2
5206:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:2 * pingPong |==> 2 % pingPong
5207:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:2 * pingPong |==> 2 + pingPong
5208:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:2 * pingPong |==> 2 - pingPong
5209:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:2 * pingPong |==> 2 / pingPong
5210:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:nn - 2 * pingPong |==> nn % (2 * pingPong)
5211:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:nn - 2 * pingPong |==> nn * (2 * pingPong)
5212:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:nn - 2 * pingPong |==> nn + 2 * pingPong
5213:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1534:nn - 2 * pingPong |==> nn / (2 * pingPong)
5214:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1535:2 |==> 0
5215:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1535:2 |==> -2
5216:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1535:np - 2 |==> np % 2
5217:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1535:np - 2 |==> np * 2
5218:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1535:np - 2 |==> np + 2
5219:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1535:np - 2 |==> np / 2
5220:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1536:6 |==> 0
5221:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1536:6 |==> -6
5222:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1536:np - 6 |==> np % 6
5223:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1536:np - 6 |==> np * 6
5224:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1536:np - 6 |==> np + 6
5225:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1536:np - 6 |==> np / 6
5226:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:8 |==> 0
5227:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:8 |==> -8
5228:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 8 |==> np % 8
5229:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 8 |==> np * 8
5230:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 8 |==> np + 8
5231:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 8 |==> np / 8
5232:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 |==> work[np - 8] != b2
5233:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 |==> work[np - 8] < b2
5234:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 |==> work[np - 8] <= b2
5235:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 |==> work[np - 8] == b2
5236:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 |==> work[np - 8] >= b2
5237:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 |==> false
5238:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 |==> true
5239:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:4 |==> 0
5240:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:4 |==> -4
5241:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 4 |==> np % 4
5242:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 4 |==> np * 4
5243:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 4 |==> np + 4
5244:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:np - 4 |==> np / 4
5245:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 4] > b1 |==> work[np - 4] != b1
5246:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 4] > b1 |==> work[np - 4] < b1
5247:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 4] > b1 |==> work[np - 4] <= b1
5248:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 4] > b1 |==> work[np - 4] == b1
5249:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 4] > b1 |==> work[np - 4] >= b1
5250:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 4] > b1 |==> false
5251:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 4] > b1 |==> true
5252:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 || work[np - 4] > b1 |==> work[np - 8] > b2 != work[np - 4] > b1
5253:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 || work[np - 4] > b1 |==> work[np - 8] > b2 && work[np - 4] > b1
5254:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 || work[np - 4] > b1 |==> work[np - 8] > b2 == work[np - 4] > b1
5255:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 || work[np - 4] > b1 |==> false
5256:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 || work[np - 4] > b1 |==> work[np - 8] > b2
5257:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 || work[np - 4] > b1 |==> work[np - 4] > b1
5258:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1538:work[np - 8] > b2 || work[np - 4] > b1 |==> true
5259:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:8 |==> 0
5260:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:8 |==> -8
5261:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 8 |==> np % 8
5262:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 8 |==> np * 8
5263:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 8 |==> np + 8
5264:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 8 |==> np / 8
5265:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 8] / b2 |==> work[np - 8] % b2
5266:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 8] / b2 |==> work[np - 8] * b2
5267:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 8] / b2 |==> work[np - 8] + b2
5268:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 8] / b2 |==> work[np - 8] - b2
5269:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:1 |==> 0
5270:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:1 |==> -1
5271:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:4 |==> 0
5272:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:4 |==> -4
5273:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 4 |==> np % 4
5274:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 4 |==> np * 4
5275:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 4 |==> np + 4
5276:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:np - 4 |==> np / 4
5277:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 4] / b1 |==> work[np - 4] % b1
5278:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 4] / b1 |==> work[np - 4] * b1
5279:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 4] / b1 |==> work[np - 4] + b1
5280:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:work[np - 4] / b1 |==> work[np - 4] - b1
5281:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:1 + work[np - 4] / b1 |==> 1 % (work[np - 4] / b1)
5282:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:1 + work[np - 4] / b1 |==> 1 * (work[np - 4] / b1)
5283:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:1 + work[np - 4] / b1 |==> 1 - work[np - 4] / b1
5284:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:1 + work[np - 4] / b1 |==> 1 / (work[np - 4] / b1)
5285:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:(work[np - 8] / b2) * (1 + work[np - 4] / b1) |==> (work[np - 8] / b2) % (1 + work[np - 4] / b1)
5286:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:(work[np - 8] / b2) * (1 + work[np - 4] / b1) |==> (work[np - 8] / b2) + (1 + work[np - 4] / b1)
5287:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:(work[np - 8] / b2) * (1 + work[np - 4] / b1) |==> (work[np - 8] / b2) - (1 + work[np - 4] / b1)
5288:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1541:(work[np - 8] / b2) * (1 + work[np - 4] / b1) |==> (work[np - 8] / b2) / (1 + work[np - 4] / b1)
5289:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start |==> end % start
5290:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start |==> end * start
5291:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start |==> end + start
5292:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start |==> end / start
5293:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:3 |==> 0
5294:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:3 |==> -3
5295:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start > 3 |==> end - start != 3
5296:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start > 3 |==> end - start < 3
5297:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start > 3 |==> end - start <= 3
5298:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start > 3 |==> end - start == 3
5299:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start > 3 |==> end - start >= 3
5300:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start > 3 |==> false
5301:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1544:end - start > 3 |==> true
5302:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:13 |==> 0
5303:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:13 |==> -13
5304:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 13 |==> nn % 13
5305:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 13 |==> nn * 13
5306:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 13 |==> nn + 13
5307:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 13 |==> nn / 13
5308:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:15 |==> 0
5309:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:15 |==> -15
5310:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 15 |==> nn % 15
5311:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 15 |==> nn * 15
5312:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 15 |==> nn + 15
5313:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:nn - 15 |==> nn / 15
5314:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:work[nn - 13] / work[nn - 15] |==> work[nn - 13] % work[nn - 15]
5315:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:work[nn - 13] / work[nn - 15] |==> work[nn - 13] * work[nn - 15]
5316:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:work[nn - 13] / work[nn - 15] |==> work[nn - 13] + work[nn - 15]
5317:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:work[nn - 13] / work[nn - 15] |==> work[nn - 13] - work[nn - 15]
5318:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1545:b2 = work[nn - 13] / work[nn - 15] |==> <NO-OP>
5319:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1546:a2 + b2 |==> a2 % b2
5320:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1546:a2 + b2 |==> a2 * b2
5321:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1546:a2 + b2 |==> a2 - b2
5322:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1546:a2 + b2 |==> a2 / b2
5323:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1546:a2 = a2 + b2 |==> <NO-OP>
5324:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:17 |==> 0
5325:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:17 |==> -17
5326:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:nn - 17 |==> nn % 17
5327:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:nn - 17 |==> nn * 17
5328:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:nn - 17 |==> nn + 17
5329:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:nn - 17 |==> nn / 17
5330:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 |==> 0
5331:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 |==> -4
5332:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start |==> 4 % start
5333:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start |==> 4 + start
5334:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start |==> 4 - start
5335:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start |==> 4 / start
5336:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:2 |==> 0
5337:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:2 |==> -2
5338:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 |==> 4 * start % 2
5339:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 |==> 4 * start * 2
5340:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 |==> 4 * start - 2
5341:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 |==> 4 * start / 2
5342:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 + pingPong |==> (4 * start + 2) % pingPong
5343:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 + pingPong |==> (4 * start + 2) * pingPong
5344:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 + pingPong |==> 4 * start + 2 - pingPong
5345:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 * start + 2 + pingPong |==> (4 * start + 2) / pingPong
5346:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:i4 >= 4 * start + 2 + pingPong |==> i4 != 4 * start + 2 + pingPong
5347:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:i4 >= 4 * start + 2 + pingPong |==> i4 < 4 * start + 2 + pingPong
5348:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:i4 >= 4 * start + 2 + pingPong |==> i4 <= 4 * start + 2 + pingPong
5349:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:i4 >= 4 * start + 2 + pingPong |==> i4 == 4 * start + 2 + pingPong
5350:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:i4 >= 4 * start + 2 + pingPong |==> i4 > 4 * start + 2 + pingPong
5351:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:i4 >= 4 * start + 2 + pingPong |==> false
5352:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:i4 >= 4 * start + 2 + pingPong |==> true
5353:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 |==> 0
5354:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1547:4 |==> -4
5355:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:0.0 |==> 1.0
5356:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:0.0 |==> -1.0
5357:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:b2 == 0.0 |==> b2 != 0.0
5358:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:b2 == 0.0 |==> b2 < 0.0
5359:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:b2 == 0.0 |==> b2 <= 0.0
5360:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:b2 == 0.0 |==> b2 > 0.0
5361:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:b2 == 0.0 |==> b2 >= 0.0
5362:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:b2 == 0.0 |==> false
5363:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1548:b2 == 0.0 |==> true
5364:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1551:b1 = b2 |==> <NO-OP>
5365:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:2 |==> 0
5366:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:2 |==> -2
5367:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:i4 - 2 |==> i4 % 2
5368:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:i4 - 2 |==> i4 * 2
5369:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:i4 - 2 |==> i4 + 2
5370:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:i4 - 2 |==> i4 / 2
5371:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:work[i4] > work[i4 - 2] |==> work[i4] != work[i4 - 2]
5372:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:work[i4] > work[i4 - 2] |==> work[i4] < work[i4 - 2]
5373:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:work[i4] > work[i4 - 2] |==> work[i4] <= work[i4 - 2]
5374:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:work[i4] > work[i4 - 2] |==> work[i4] == work[i4 - 2]
5375:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:work[i4] > work[i4 - 2] |==> work[i4] >= work[i4 - 2]
5376:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:work[i4] > work[i4 - 2] |==> false
5377:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1552:work[i4] > work[i4 - 2] |==> true
5378:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:2 |==> 0
5379:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:2 |==> -2
5380:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:i4 - 2 |==> i4 % 2
5381:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:i4 - 2 |==> i4 * 2
5382:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:i4 - 2 |==> i4 + 2
5383:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:i4 - 2 |==> i4 / 2
5384:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:work[i4] / work[i4 - 2] |==> work[i4] % work[i4 - 2]
5385:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:work[i4] / work[i4 - 2] |==> work[i4] * work[i4 - 2]
5386:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:work[i4] / work[i4 - 2] |==> work[i4] + work[i4 - 2]
5387:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:work[i4] / work[i4 - 2] |==> work[i4] - work[i4 - 2]
5388:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:b2 * (work[i4] / work[i4 - 2]) |==> b2 % (work[i4] / work[i4 - 2])
5389:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:b2 * (work[i4] / work[i4 - 2]) |==> b2 + (work[i4] / work[i4 - 2])
5390:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:b2 * (work[i4] / work[i4 - 2]) |==> b2 - (work[i4] / work[i4 - 2])
5391:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:b2 * (work[i4] / work[i4 - 2]) |==> b2 / (work[i4] / work[i4 - 2])
5392:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1555:b2 = b2 * (work[i4] / work[i4 - 2]) |==> <NO-OP>
5393:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1556:a2 + b2 |==> a2 % b2
5394:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1556:a2 + b2 |==> a2 * b2
5395:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1556:a2 + b2 |==> a2 - b2
5396:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1556:a2 + b2 |==> a2 / b2
5397:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1556:a2 = a2 + b2 |==> <NO-OP>
5398:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 |==> 0
5399:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 |==> -100
5400:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) |==> 100 % Math.max(b2, b1)
5401:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) |==> 100 + Math.max(b2, b1)
5402:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) |==> 100 - Math.max(b2, b1)
5403:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) |==> 100 / Math.max(b2, b1)
5404:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) != a2
5405:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) <= a2
5406:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) == a2
5407:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) > a2
5408:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 |==> 100 * Math.max(b2, b1) >= a2
5409:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 |==> false
5410:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 |==> true
5411:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:cnst1 < a2 |==> cnst1 != a2
5412:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:cnst1 < a2 |==> cnst1 <= a2
5413:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:cnst1 < a2 |==> cnst1 == a2
5414:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:cnst1 < a2 |==> cnst1 > a2
5415:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:cnst1 < a2 |==> cnst1 >= a2
5416:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:cnst1 < a2 |==> false
5417:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:cnst1 < a2 |==> true
5418:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2 != cnst1 < a2
5419:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2 && cnst1 < a2
5420:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2 == cnst1 < a2
5421:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> false
5422:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> 100 * Math.max(b2, b1) < a2
5423:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> cnst1 < a2
5424:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1557:100 * Math.max(b2, b1) < a2 || cnst1 < a2 |==> true
5425:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1561:cnst3 * a2 |==> cnst3 % a2
5426:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1561:cnst3 * a2 |==> cnst3 + a2
5427:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1561:cnst3 * a2 |==> cnst3 - a2
5428:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1561:cnst3 * a2 |==> cnst3 / a2
5429:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1561:a2 = cnst3 * a2 |==> <NO-OP>
5430:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1564:a2 < cnst1 |==> a2 != cnst1
5431:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1564:a2 < cnst1 |==> a2 <= cnst1
5432:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1564:a2 < cnst1 |==> a2 == cnst1
5433:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1564:a2 < cnst1 |==> a2 > cnst1
5434:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1564:a2 < cnst1 |==> a2 >= cnst1
5435:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1564:a2 < cnst1 |==> false
5436:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1564:a2 < cnst1 |==> true
5437:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 |==> 0
5438:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 |==> -1
5439:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 - Math.sqrt(a2) |==> 1 % Math.sqrt(a2)
5440:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 - Math.sqrt(a2) |==> 1 * Math.sqrt(a2)
5441:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 - Math.sqrt(a2) |==> 1 + Math.sqrt(a2)
5442:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 - Math.sqrt(a2) |==> 1 / Math.sqrt(a2)
5443:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) |==> gam % (1 - Math.sqrt(a2))
5444:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) |==> gam + (1 - Math.sqrt(a2))
5445:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) |==> gam - (1 - Math.sqrt(a2))
5446:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) |==> gam / (1 - Math.sqrt(a2))
5447:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 |==> 0
5448:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 |==> -1
5449:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 + a2 |==> 1 % a2
5450:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 + a2 |==> 1 * a2
5451:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 + a2 |==> 1 - a2
5452:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:1 + a2 |==> 1 / a2
5453:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) % (1 + a2)
5454:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) * (1 + a2)
5455:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) + (1 + a2)
5456:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> gam * (1 - Math.sqrt(a2)) - (1 + a2)
5457:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1565:tau = gam * (1 - Math.sqrt(a2)) / (1 + a2) |==> <NO-OP>
5458:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1567:tau = s |==> <NO-OP>
5459:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:-6 |==> 0
5460:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:-6 |==> 6
5461:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:tType == -6 |==> tType != -6
5462:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:tType == -6 |==> tType < -6
5463:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:tType == -6 |==> tType <= -6
5464:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:tType == -6 |==> tType > -6
5465:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:tType == -6 |==> tType >= -6
5466:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:tType == -6 |==> false
5467:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1573:tType == -6 |==> true
5468:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:0.333 |==> 0.0
5469:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:0.333 |==> -0.333
5470:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:1 |==> 0
5471:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:1 |==> -1
5472:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:1 - g |==> 1 % g
5473:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:1 - g |==> 1 * g
5474:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:1 - g |==> 1 + g
5475:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:1 - g |==> 1 / g
5476:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:0.333 * (1 - g) |==> 0.333 % (1 - g)
5477:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:0.333 * (1 - g) |==> 0.333 + (1 - g)
5478:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:0.333 * (1 - g) |==> 0.333 - (1 - g)
5479:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:0.333 * (1 - g) |==> 0.333 / (1 - g)
5480:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1574:g += 0.333 * (1 - g) |==> <NO-OP>
5481:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:-18 |==> 0
5482:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:-18 |==> 18
5483:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:tType == -18 |==> tType != -18
5484:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:tType == -18 |==> tType < -18
5485:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:tType == -18 |==> tType <= -18
5486:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:tType == -18 |==> tType > -18
5487:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:tType == -18 |==> tType >= -18
5488:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:tType == -18 |==> false
5489:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1575:tType == -18 |==> true
5490:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.25 |==> 0.0
5491:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.25 |==> -0.25
5492:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.333 |==> 0.0
5493:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.333 |==> -0.333
5494:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.25 * 0.333 |==> 0.25 % 0.333
5495:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.25 * 0.333 |==> 0.25 + 0.333
5496:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.25 * 0.333 |==> 0.25 - 0.333
5497:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:0.25 * 0.333 |==> 0.25 / 0.333
5498:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1576:g = 0.25 * 0.333 |==> <NO-OP>
5499:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1578:0.25 |==> 0.0
5500:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1578:0.25 |==> -0.25
5501:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1578:g = 0.25 |==> <NO-OP>
5502:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1580:g * dMin |==> g % dMin
5503:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1580:g * dMin |==> g + dMin
5504:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1580:g * dMin |==> g - dMin
5505:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1580:g * dMin |==> g / dMin
5506:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1580:tau = g * dMin |==> <NO-OP>
5507:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1581:-6 |==> 0
5508:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1581:-6 |==> 6
5509:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1581:tType = -6 |==> <NO-OP>
5510:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 |==> dMin1 != dN1
5511:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 |==> dMin1 < dN1
5512:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 |==> dMin1 <= dN1
5513:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 |==> dMin1 > dN1
5514:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 |==> dMin1 >= dN1
5515:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 |==> false
5516:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 |==> true
5517:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin2 == dN2 |==> dMin2 != dN2
5518:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin2 == dN2 |==> dMin2 < dN2
5519:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin2 == dN2 |==> dMin2 <= dN2
5520:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin2 == dN2 |==> dMin2 > dN2
5521:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin2 == dN2 |==> dMin2 >= dN2
5522:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin2 == dN2 |==> false
5523:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin2 == dN2 |==> true
5524:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 && dMin2 == dN2 |==> dMin1 == dN1 != (dMin2 == dN2)
5525:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 && dMin2 == dN2 |==> dMin1 == dN1 == (dMin2 == dN2)
5526:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 && dMin2 == dN2 |==> false
5527:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 && dMin2 == dN2 |==> dMin1 == dN1
5528:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 && dMin2 == dN2 |==> dMin2 == dN2
5529:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 && dMin2 == dN2 |==> true
5530:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1587:dMin1 == dN1 && dMin2 == dN2 |==> dMin1 == dN1 || dMin2 == dN2
5531:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1590:-7 |==> 0
5532:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1590:-7 |==> 7
5533:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1590:tType = -7 |==> <NO-OP>
5534:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1591:0.333 |==> 0.0
5535:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1591:0.333 |==> -0.333
5536:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1591:0.333 * dMin1 |==> 0.333 % dMin1
5537:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1591:0.333 * dMin1 |==> 0.333 + dMin1
5538:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1591:0.333 * dMin1 |==> 0.333 - dMin1
5539:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1591:0.333 * dMin1 |==> 0.333 / dMin1
5540:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:5 |==> 0
5541:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:5 |==> -5
5542:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 5 |==> nn % 5
5543:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 5 |==> nn * 5
5544:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 5 |==> nn + 5
5545:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 5 |==> nn / 5
5546:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:7 |==> 0
5547:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:7 |==> -7
5548:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 7 |==> nn % 7
5549:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 7 |==> nn * 7
5550:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 7 |==> nn + 7
5551:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:nn - 7 |==> nn / 7
5552:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:work[nn - 5] > work[nn - 7] |==> work[nn - 5] != work[nn - 7]
5553:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:work[nn - 5] > work[nn - 7] |==> work[nn - 5] < work[nn - 7]
5554:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:work[nn - 5] > work[nn - 7] |==> work[nn - 5] <= work[nn - 7]
5555:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:work[nn - 5] > work[nn - 7] |==> work[nn - 5] == work[nn - 7]
5556:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:work[nn - 5] > work[nn - 7] |==> work[nn - 5] >= work[nn - 7]
5557:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:work[nn - 5] > work[nn - 7] |==> false
5558:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1592:work[nn - 5] > work[nn - 7] |==> true
5559:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:5 |==> 0
5560:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:5 |==> -5
5561:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 5 |==> nn % 5
5562:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 5 |==> nn * 5
5563:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 5 |==> nn + 5
5564:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 5 |==> nn / 5
5565:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:7 |==> 0
5566:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:7 |==> -7
5567:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 7 |==> nn % 7
5568:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 7 |==> nn * 7
5569:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 7 |==> nn + 7
5570:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:nn - 7 |==> nn / 7
5571:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:work[nn - 5] / work[nn - 7] |==> work[nn - 5] % work[nn - 7]
5572:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:work[nn - 5] / work[nn - 7] |==> work[nn - 5] * work[nn - 7]
5573:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:work[nn - 5] / work[nn - 7] |==> work[nn - 5] + work[nn - 7]
5574:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1595:work[nn - 5] / work[nn - 7] |==> work[nn - 5] - work[nn - 7]
5575:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:0.0 |==> 1.0
5576:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:0.0 |==> -1.0
5577:ROR:!=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:b2 != 0.0 |==> b2 < 0.0
5578:ROR:!=(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:b2 != 0.0 |==> b2 <= 0.0
5579:ROR:!=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:b2 != 0.0 |==> b2 == 0.0
5580:ROR:!=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:b2 != 0.0 |==> b2 > 0.0
5581:ROR:!=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:b2 != 0.0 |==> b2 >= 0.0
5582:ROR:!=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:b2 != 0.0 |==> false
5583:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1597:b2 != 0.0 |==> true
5584:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 |==> 0
5585:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 |==> -4
5586:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end |==> 4 % end
5587:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end |==> 4 + end
5588:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end |==> 4 - end
5589:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end |==> 4 / end
5590:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:10 |==> 0
5591:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:10 |==> -10
5592:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 |==> 4 * end % 10
5593:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 |==> 4 * end * 10
5594:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 |==> 4 * end + 10
5595:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 |==> 4 * end / 10
5596:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 + pingPong |==> (4 * end - 10) % pingPong
5597:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 + pingPong |==> (4 * end - 10) * pingPong
5598:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 + pingPong |==> 4 * end - 10 - pingPong
5599:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * end - 10 + pingPong |==> (4 * end - 10) / pingPong
5600:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 |==> 0
5601:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 |==> -4
5602:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start |==> 4 % start
5603:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start |==> 4 + start
5604:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start |==> 4 - start
5605:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start |==> 4 / start
5606:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:2 |==> 0
5607:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:2 |==> -2
5608:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 |==> 4 * start % 2
5609:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 |==> 4 * start * 2
5610:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 |==> 4 * start - 2
5611:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 |==> 4 * start / 2
5612:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 + pingPong |==> (4 * start + 2) % pingPong
5613:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 + pingPong |==> (4 * start + 2) * pingPong
5614:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 + pingPong |==> 4 * start + 2 - pingPong
5615:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 * start + 2 + pingPong |==> (4 * start + 2) / pingPong
5616:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:i4 >= 4 * start + 2 + pingPong |==> i4 != 4 * start + 2 + pingPong
5617:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:i4 >= 4 * start + 2 + pingPong |==> i4 < 4 * start + 2 + pingPong
5618:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:i4 >= 4 * start + 2 + pingPong |==> i4 <= 4 * start + 2 + pingPong
5619:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:i4 >= 4 * start + 2 + pingPong |==> i4 == 4 * start + 2 + pingPong
5620:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:i4 >= 4 * start + 2 + pingPong |==> i4 > 4 * start + 2 + pingPong
5621:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:i4 >= 4 * start + 2 + pingPong |==> false
5622:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:i4 >= 4 * start + 2 + pingPong |==> true
5623:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 |==> 0
5624:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1598:4 |==> -4
5625:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:2 |==> 0
5626:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:2 |==> -2
5627:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:i4 - 2 |==> i4 % 2
5628:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:i4 - 2 |==> i4 * 2
5629:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:i4 - 2 |==> i4 + 2
5630:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:i4 - 2 |==> i4 / 2
5631:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:work[i4] > work[i4 - 2] |==> work[i4] != work[i4 - 2]
5632:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:work[i4] > work[i4 - 2] |==> work[i4] < work[i4 - 2]
5633:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:work[i4] > work[i4 - 2] |==> work[i4] <= work[i4 - 2]
5634:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:work[i4] > work[i4 - 2] |==> work[i4] == work[i4 - 2]
5635:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:work[i4] > work[i4 - 2] |==> work[i4] >= work[i4 - 2]
5636:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:work[i4] > work[i4 - 2] |==> false
5637:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1600:work[i4] > work[i4 - 2] |==> true
5638:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:2 |==> 0
5639:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:2 |==> -2
5640:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:i4 - 2 |==> i4 % 2
5641:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:i4 - 2 |==> i4 * 2
5642:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:i4 - 2 |==> i4 + 2
5643:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:i4 - 2 |==> i4 / 2
5644:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:work[i4] / work[i4 - 2] |==> work[i4] % work[i4 - 2]
5645:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:work[i4] / work[i4 - 2] |==> work[i4] * work[i4 - 2]
5646:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:work[i4] / work[i4 - 2] |==> work[i4] + work[i4 - 2]
5647:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:work[i4] / work[i4 - 2] |==> work[i4] - work[i4 - 2]
5648:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:b1 * (work[i4] / work[i4 - 2]) |==> b1 % (work[i4] / work[i4 - 2])
5649:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:b1 * (work[i4] / work[i4 - 2]) |==> b1 + (work[i4] / work[i4 - 2])
5650:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:b1 * (work[i4] / work[i4 - 2]) |==> b1 - (work[i4] / work[i4 - 2])
5651:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:b1 * (work[i4] / work[i4 - 2]) |==> b1 / (work[i4] / work[i4 - 2])
5652:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1603:b1 = b1 * (work[i4] / work[i4 - 2]) |==> <NO-OP>
5653:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1604:b2 + b1 |==> b2 % b1
5654:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1604:b2 + b1 |==> b2 * b1
5655:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1604:b2 + b1 |==> b2 - b1
5656:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1604:b2 + b1 |==> b2 / b1
5657:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1604:b2 = b2 + b1 |==> <NO-OP>
5658:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 |==> 0
5659:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 |==> -100
5660:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) |==> 100 % Math.max(b1, oldB1)
5661:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) |==> 100 + Math.max(b1, oldB1)
5662:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) |==> 100 - Math.max(b1, oldB1)
5663:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) |==> 100 / Math.max(b1, oldB1)
5664:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) < b2 |==> 100 * Math.max(b1, oldB1) != b2
5665:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) < b2 |==> 100 * Math.max(b1, oldB1) <= b2
5666:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) < b2 |==> 100 * Math.max(b1, oldB1) == b2
5667:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) < b2 |==> 100 * Math.max(b1, oldB1) > b2
5668:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) < b2 |==> 100 * Math.max(b1, oldB1) >= b2
5669:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) < b2 |==> false
5670:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1605:100 * Math.max(b1, oldB1) < b2 |==> true
5671:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1610:cnst3 * b2 |==> cnst3 % b2
5672:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1610:cnst3 * b2 |==> cnst3 + b2
5673:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1610:cnst3 * b2 |==> cnst3 - b2
5674:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1610:cnst3 * b2 |==> cnst3 / b2
5675:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1610:b2 = Math.sqrt(cnst3 * b2) |==> <NO-OP>
5676:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:1 |==> 0
5677:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:1 |==> -1
5678:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:b2 * b2 |==> b2 % b2
5679:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:b2 * b2 |==> b2 + b2
5680:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:b2 * b2 |==> b2 - b2
5681:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:b2 * b2 |==> b2 / b2
5682:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:1 + b2 * b2 |==> 1 % (b2 * b2)
5683:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:1 + b2 * b2 |==> 1 * (b2 * b2)
5684:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:1 + b2 * b2 |==> 1 - b2 * b2
5685:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:1 + b2 * b2 |==> 1 / (b2 * b2)
5686:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:dMin1 / (1 + b2 * b2) |==> dMin1 % (1 + b2 * b2)
5687:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:dMin1 / (1 + b2 * b2) |==> dMin1 * (1 + b2 * b2)
5688:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:dMin1 / (1 + b2 * b2) |==> dMin1 + (1 + b2 * b2)
5689:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1611:dMin1 / (1 + b2 * b2) |==> dMin1 - (1 + b2 * b2)
5690:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 |==> 0.0
5691:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 |==> -0.5
5692:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 |==> 0.5 % dMin2
5693:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 |==> 0.5 + dMin2
5694:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 |==> 0.5 - dMin2
5695:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 |==> 0.5 / dMin2
5696:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 - a2 |==> 0.5 * dMin2 % a2
5697:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 - a2 |==> 0.5 * dMin2 * a2
5698:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 - a2 |==> 0.5 * dMin2 + a2
5699:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1612:0.5 * dMin2 - a2 |==> 0.5 * dMin2 / a2
5700:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:0.0 |==> 1.0
5701:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:0.0 |==> -1.0
5702:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 |==> gap2 != 0.0
5703:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 |==> gap2 < 0.0
5704:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 |==> gap2 <= 0.0
5705:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 |==> gap2 == 0.0
5706:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 |==> gap2 >= 0.0
5707:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 |==> false
5708:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 |==> true
5709:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:b2 * a2 |==> b2 % a2
5710:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:b2 * a2 |==> b2 + a2
5711:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:b2 * a2 |==> b2 - a2
5712:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:b2 * a2 |==> b2 / a2
5713:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > b2 * a2 |==> gap2 != b2 * a2
5714:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > b2 * a2 |==> gap2 < b2 * a2
5715:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > b2 * a2 |==> gap2 <= b2 * a2
5716:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > b2 * a2 |==> gap2 == b2 * a2
5717:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > b2 * a2 |==> gap2 >= b2 * a2
5718:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > b2 * a2 |==> false
5719:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > b2 * a2 |==> true
5720:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0 != gap2 > b2 * a2
5721:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0 == gap2 > b2 * a2
5722:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 && gap2 > b2 * a2 |==> false
5723:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0
5724:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > b2 * a2
5725:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 && gap2 > b2 * a2 |==> true
5726:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1613:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0 || gap2 > b2 * a2
5727:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:1 |==> 0
5728:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:1 |==> -1
5729:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 |==> cnst2 % a2
5730:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 |==> cnst2 + a2
5731:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 |==> cnst2 - a2
5732:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 |==> cnst2 / a2
5733:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:b2 / gap2 |==> b2 % gap2
5734:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:b2 / gap2 |==> b2 * gap2
5735:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:b2 / gap2 |==> b2 + gap2
5736:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:b2 / gap2 |==> b2 - gap2
5737:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 % (b2 / gap2)
5738:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 + (b2 / gap2)
5739:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 - (b2 / gap2)
5740:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 / (b2 / gap2)
5741:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) % b2
5742:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) + b2
5743:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) - b2
5744:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) / b2
5745:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 % (cnst2 * a2 * (b2 / gap2) * b2)
5746:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 * (cnst2 * a2 * (b2 / gap2) * b2)
5747:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 + cnst2 * a2 * (b2 / gap2) * b2
5748:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 / (cnst2 * a2 * (b2 / gap2) * b2)
5749:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 % (1 - cnst2 * a2 * (b2 / gap2) * b2)
5750:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 + (1 - cnst2 * a2 * (b2 / gap2) * b2)
5751:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 - (1 - cnst2 * a2 * (b2 / gap2) * b2)
5752:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 / (1 - cnst2 * a2 * (b2 / gap2) * b2)
5753:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1614:tau = Math.max(s, a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2)) |==> <NO-OP>
5754:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:1 |==> 0
5755:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:1 |==> -1
5756:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:cnst2 * b2 |==> cnst2 % b2
5757:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:cnst2 * b2 |==> cnst2 + b2
5758:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:cnst2 * b2 |==> cnst2 - b2
5759:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:cnst2 * b2 |==> cnst2 / b2
5760:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:1 - cnst2 * b2 |==> 1 % (cnst2 * b2)
5761:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:1 - cnst2 * b2 |==> 1 * (cnst2 * b2)
5762:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:1 - cnst2 * b2 |==> 1 + cnst2 * b2
5763:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:1 - cnst2 * b2 |==> 1 / (cnst2 * b2)
5764:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:a2 * (1 - cnst2 * b2) |==> a2 % (1 - cnst2 * b2)
5765:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:a2 * (1 - cnst2 * b2) |==> a2 + (1 - cnst2 * b2)
5766:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:a2 * (1 - cnst2 * b2) |==> a2 - (1 - cnst2 * b2)
5767:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:a2 * (1 - cnst2 * b2) |==> a2 / (1 - cnst2 * b2)
5768:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1616:tau = Math.max(s, a2 * (1 - cnst2 * b2)) |==> <NO-OP>
5769:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1617:-8 |==> 0
5770:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1617:-8 |==> 8
5771:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1617:tType = -8 |==> <NO-OP>
5772:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1622:0.25 |==> 0.0
5773:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1622:0.25 |==> -0.25
5774:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1622:0.25 * dMin1 |==> 0.25 % dMin1
5775:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1622:0.25 * dMin1 |==> 0.25 + dMin1
5776:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1622:0.25 * dMin1 |==> 0.25 - dMin1
5777:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1622:0.25 * dMin1 |==> 0.25 / dMin1
5778:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1622:tau = 0.25 * dMin1 |==> <NO-OP>
5779:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1623:dMin1 == dN1 |==> dMin1 != dN1
5780:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1623:dMin1 == dN1 |==> dMin1 < dN1
5781:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1623:dMin1 == dN1 |==> dMin1 <= dN1
5782:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1623:dMin1 == dN1 |==> dMin1 > dN1
5783:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1623:dMin1 == dN1 |==> dMin1 >= dN1
5784:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1623:dMin1 == dN1 |==> false
5785:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1623:dMin1 == dN1 |==> true
5786:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1624:0.5 |==> 0.0
5787:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1624:0.5 |==> -0.5
5788:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1624:0.5 * dMin1 |==> 0.5 % dMin1
5789:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1624:0.5 * dMin1 |==> 0.5 + dMin1
5790:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1624:0.5 * dMin1 |==> 0.5 - dMin1
5791:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1624:0.5 * dMin1 |==> 0.5 / dMin1
5792:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1624:tau = 0.5 * dMin1 |==> <NO-OP>
5793:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1626:-9 |==> 0
5794:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1626:-9 |==> 9
5795:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1626:tType = -9 |==> <NO-OP>
5796:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 |==> dMin2 != dN2
5797:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 |==> dMin2 < dN2
5798:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 |==> dMin2 <= dN2
5799:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 |==> dMin2 > dN2
5800:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 |==> dMin2 >= dN2
5801:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 |==> false
5802:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 |==> true
5803:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 |==> 0
5804:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 |==> -2
5805:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:5 |==> 0
5806:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:5 |==> -5
5807:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 5 |==> nn % 5
5808:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 5 |==> nn * 5
5809:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 5 |==> nn + 5
5810:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 5 |==> nn / 5
5811:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] |==> 2 % work[nn - 5]
5812:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] |==> 2 + work[nn - 5]
5813:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] |==> 2 - work[nn - 5]
5814:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] |==> 2 / work[nn - 5]
5815:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:7 |==> 0
5816:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:7 |==> -7
5817:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 7 |==> nn % 7
5818:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 7 |==> nn * 7
5819:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 7 |==> nn + 7
5820:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:nn - 7 |==> nn / 7
5821:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] < work[nn - 7] |==> 2 * work[nn - 5] != work[nn - 7]
5822:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] < work[nn - 7] |==> 2 * work[nn - 5] <= work[nn - 7]
5823:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] < work[nn - 7] |==> 2 * work[nn - 5] == work[nn - 7]
5824:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] < work[nn - 7] |==> 2 * work[nn - 5] > work[nn - 7]
5825:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] < work[nn - 7] |==> 2 * work[nn - 5] >= work[nn - 7]
5826:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] < work[nn - 7] |==> false
5827:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:2 * work[nn - 5] < work[nn - 7] |==> true
5828:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 && 2 * work[nn - 5] < work[nn - 7] |==> dMin2 == dN2 != 2 * work[nn - 5] < work[nn - 7]
5829:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 && 2 * work[nn - 5] < work[nn - 7] |==> dMin2 == dN2 == 2 * work[nn - 5] < work[nn - 7]
5830:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 && 2 * work[nn - 5] < work[nn - 7] |==> false
5831:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 && 2 * work[nn - 5] < work[nn - 7] |==> dMin2 == dN2
5832:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 && 2 * work[nn - 5] < work[nn - 7] |==> 2 * work[nn - 5] < work[nn - 7]
5833:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 && 2 * work[nn - 5] < work[nn - 7] |==> true
5834:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1633:dMin2 == dN2 && 2 * work[nn - 5] < work[nn - 7] |==> dMin2 == dN2 || 2 * work[nn - 5] < work[nn - 7]
5835:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1634:-10 |==> 0
5836:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1634:-10 |==> 10
5837:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1634:tType = -10 |==> <NO-OP>
5838:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1635:0.333 |==> 0.0
5839:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1635:0.333 |==> -0.333
5840:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1635:0.333 * dMin2 |==> 0.333 % dMin2
5841:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1635:0.333 * dMin2 |==> 0.333 + dMin2
5842:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1635:0.333 * dMin2 |==> 0.333 - dMin2
5843:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1635:0.333 * dMin2 |==> 0.333 / dMin2
5844:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:5 |==> 0
5845:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:5 |==> -5
5846:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 5 |==> nn % 5
5847:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 5 |==> nn * 5
5848:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 5 |==> nn + 5
5849:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 5 |==> nn / 5
5850:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:7 |==> 0
5851:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:7 |==> -7
5852:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 7 |==> nn % 7
5853:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 7 |==> nn * 7
5854:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 7 |==> nn + 7
5855:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:nn - 7 |==> nn / 7
5856:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:work[nn - 5] > work[nn - 7] |==> work[nn - 5] != work[nn - 7]
5857:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:work[nn - 5] > work[nn - 7] |==> work[nn - 5] < work[nn - 7]
5858:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:work[nn - 5] > work[nn - 7] |==> work[nn - 5] <= work[nn - 7]
5859:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:work[nn - 5] > work[nn - 7] |==> work[nn - 5] == work[nn - 7]
5860:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:work[nn - 5] > work[nn - 7] |==> work[nn - 5] >= work[nn - 7]
5861:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:work[nn - 5] > work[nn - 7] |==> false
5862:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1636:work[nn - 5] > work[nn - 7] |==> true
5863:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:5 |==> 0
5864:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:5 |==> -5
5865:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 5 |==> nn % 5
5866:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 5 |==> nn * 5
5867:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 5 |==> nn + 5
5868:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 5 |==> nn / 5
5869:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:7 |==> 0
5870:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:7 |==> -7
5871:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 7 |==> nn % 7
5872:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 7 |==> nn * 7
5873:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 7 |==> nn + 7
5874:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:nn - 7 |==> nn / 7
5875:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:work[nn - 5] / work[nn - 7] |==> work[nn - 5] % work[nn - 7]
5876:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:work[nn - 5] / work[nn - 7] |==> work[nn - 5] * work[nn - 7]
5877:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:work[nn - 5] / work[nn - 7] |==> work[nn - 5] + work[nn - 7]
5878:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1639:work[nn - 5] / work[nn - 7] |==> work[nn - 5] - work[nn - 7]
5879:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:0.0 |==> 1.0
5880:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:0.0 |==> -1.0
5881:ROR:!=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:b2 != 0.0 |==> b2 < 0.0
5882:ROR:!=(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:b2 != 0.0 |==> b2 <= 0.0
5883:ROR:!=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:b2 != 0.0 |==> b2 == 0.0
5884:ROR:!=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:b2 != 0.0 |==> b2 > 0.0
5885:ROR:!=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:b2 != 0.0 |==> b2 >= 0.0
5886:ROR:!=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:b2 != 0.0 |==> false
5887:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1641:b2 != 0.0 |==> true
5888:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 |==> 0
5889:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 |==> -4
5890:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end |==> 4 % end
5891:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end |==> 4 + end
5892:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end |==> 4 - end
5893:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end |==> 4 / end
5894:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:9 |==> 0
5895:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:9 |==> -9
5896:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 |==> 4 * end % 9
5897:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 |==> 4 * end * 9
5898:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 |==> 4 * end + 9
5899:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 |==> 4 * end / 9
5900:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 + pingPong |==> (4 * end - 9) % pingPong
5901:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 + pingPong |==> (4 * end - 9) * pingPong
5902:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 + pingPong |==> 4 * end - 9 - pingPong
5903:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * end - 9 + pingPong |==> (4 * end - 9) / pingPong
5904:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 |==> 0
5905:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 |==> -4
5906:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start |==> 4 % start
5907:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start |==> 4 + start
5908:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start |==> 4 - start
5909:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start |==> 4 / start
5910:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:2 |==> 0
5911:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:2 |==> -2
5912:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 |==> 4 * start % 2
5913:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 |==> 4 * start * 2
5914:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 |==> 4 * start - 2
5915:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 |==> 4 * start / 2
5916:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 + pingPong |==> (4 * start + 2) % pingPong
5917:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 + pingPong |==> (4 * start + 2) * pingPong
5918:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 + pingPong |==> 4 * start + 2 - pingPong
5919:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 * start + 2 + pingPong |==> (4 * start + 2) / pingPong
5920:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:i4 >= 4 * start + 2 + pingPong |==> i4 != 4 * start + 2 + pingPong
5921:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:i4 >= 4 * start + 2 + pingPong |==> i4 < 4 * start + 2 + pingPong
5922:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:i4 >= 4 * start + 2 + pingPong |==> i4 <= 4 * start + 2 + pingPong
5923:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:i4 >= 4 * start + 2 + pingPong |==> i4 == 4 * start + 2 + pingPong
5924:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:i4 >= 4 * start + 2 + pingPong |==> i4 > 4 * start + 2 + pingPong
5925:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:i4 >= 4 * start + 2 + pingPong |==> false
5926:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:i4 >= 4 * start + 2 + pingPong |==> true
5927:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 |==> 0
5928:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1642:4 |==> -4
5929:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:2 |==> 0
5930:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:2 |==> -2
5931:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:i4 - 2 |==> i4 % 2
5932:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:i4 - 2 |==> i4 * 2
5933:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:i4 - 2 |==> i4 + 2
5934:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:i4 - 2 |==> i4 / 2
5935:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:work[i4] > work[i4 - 2] |==> work[i4] != work[i4 - 2]
5936:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:work[i4] > work[i4 - 2] |==> work[i4] < work[i4 - 2]
5937:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:work[i4] > work[i4 - 2] |==> work[i4] <= work[i4 - 2]
5938:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:work[i4] > work[i4 - 2] |==> work[i4] == work[i4 - 2]
5939:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:work[i4] > work[i4 - 2] |==> work[i4] >= work[i4 - 2]
5940:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:work[i4] > work[i4 - 2] |==> false
5941:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1643:work[i4] > work[i4 - 2] |==> true
5942:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:2 |==> 0
5943:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:2 |==> -2
5944:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:i4 - 2 |==> i4 % 2
5945:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:i4 - 2 |==> i4 * 2
5946:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:i4 - 2 |==> i4 + 2
5947:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:i4 - 2 |==> i4 / 2
5948:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:work[i4] / work[i4 - 2] |==> work[i4] % work[i4 - 2]
5949:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:work[i4] / work[i4 - 2] |==> work[i4] * work[i4 - 2]
5950:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:work[i4] / work[i4 - 2] |==> work[i4] + work[i4 - 2]
5951:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:work[i4] / work[i4 - 2] |==> work[i4] - work[i4 - 2]
5952:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1646:b1 *= work[i4] / work[i4 - 2] |==> <NO-OP>
5953:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1647:b2 += b1 |==> <NO-OP>
5954:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 |==> 0
5955:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 |==> -100
5956:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 |==> 100 % b1
5957:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 |==> 100 + b1
5958:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 |==> 100 - b1
5959:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 |==> 100 / b1
5960:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 < b2 |==> 100 * b1 != b2
5961:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 < b2 |==> 100 * b1 <= b2
5962:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 < b2 |==> 100 * b1 == b2
5963:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 < b2 |==> 100 * b1 > b2
5964:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 < b2 |==> 100 * b1 >= b2
5965:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 < b2 |==> false
5966:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1648:100 * b1 < b2 |==> true
5967:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1653:cnst3 * b2 |==> cnst3 % b2
5968:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1653:cnst3 * b2 |==> cnst3 + b2
5969:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1653:cnst3 * b2 |==> cnst3 - b2
5970:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1653:cnst3 * b2 |==> cnst3 / b2
5971:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1653:b2 = Math.sqrt(cnst3 * b2) |==> <NO-OP>
5972:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:1 |==> 0
5973:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:1 |==> -1
5974:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:b2 * b2 |==> b2 % b2
5975:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:b2 * b2 |==> b2 + b2
5976:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:b2 * b2 |==> b2 - b2
5977:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:b2 * b2 |==> b2 / b2
5978:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:1 + b2 * b2 |==> 1 % (b2 * b2)
5979:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:1 + b2 * b2 |==> 1 * (b2 * b2)
5980:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:1 + b2 * b2 |==> 1 - b2 * b2
5981:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:1 + b2 * b2 |==> 1 / (b2 * b2)
5982:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:dMin2 / (1 + b2 * b2) |==> dMin2 % (1 + b2 * b2)
5983:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:dMin2 / (1 + b2 * b2) |==> dMin2 * (1 + b2 * b2)
5984:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:dMin2 / (1 + b2 * b2) |==> dMin2 + (1 + b2 * b2)
5985:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1654:dMin2 / (1 + b2 * b2) |==> dMin2 - (1 + b2 * b2)
5986:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:7 |==> 0
5987:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:7 |==> -7
5988:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 7 |==> nn % 7
5989:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 7 |==> nn * 7
5990:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 7 |==> nn + 7
5991:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 7 |==> nn / 7
5992:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:9 |==> 0
5993:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:9 |==> -9
5994:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 9 |==> nn % 9
5995:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 9 |==> nn * 9
5996:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 9 |==> nn + 9
5997:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:nn - 9 |==> nn / 9
5998:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] |==> work[nn - 7] % work[nn - 9]
5999:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] |==> work[nn - 7] * work[nn - 9]
6000:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] |==> work[nn - 7] - work[nn - 9]
6001:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] |==> work[nn - 7] / work[nn - 9]
6002:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:11 |==> 0
6003:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:11 |==> -11
6004:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 11 |==> nn % 11
6005:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 11 |==> nn * 11
6006:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 11 |==> nn + 11
6007:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 11 |==> nn / 11
6008:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:9 |==> 0
6009:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:9 |==> -9
6010:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 9 |==> nn % 9
6011:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 9 |==> nn * 9
6012:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 9 |==> nn + 9
6013:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:nn - 9 |==> nn / 9
6014:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 11]) % Math.sqrt(work[nn - 9])
6015:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 11]) + Math.sqrt(work[nn - 9])
6016:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 11]) - Math.sqrt(work[nn - 9])
6017:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1656:Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> Math.sqrt(work[nn - 11]) / Math.sqrt(work[nn - 9])
6018:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> (work[nn - 7] + work[nn - 9]) % (Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]))
6019:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> (work[nn - 7] + work[nn - 9]) * (Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]))
6020:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> work[nn - 7] + work[nn - 9] + Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9])
6021:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) |==> (work[nn - 7] + work[nn - 9]) / (Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]))
6022:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) - a2 |==> (work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9])) % a2
6023:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) - a2 |==> (work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9])) * a2
6024:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) - a2 |==> work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) + a2
6025:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1655:work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9]) - a2 |==> (work[nn - 7] + work[nn - 9] - Math.sqrt(work[nn - 11]) * Math.sqrt(work[nn - 9])) / a2
6026:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:0.0 |==> 1.0
6027:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:0.0 |==> -1.0
6028:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 |==> gap2 != 0.0
6029:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 |==> gap2 < 0.0
6030:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 |==> gap2 <= 0.0
6031:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 |==> gap2 == 0.0
6032:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 |==> gap2 >= 0.0
6033:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 |==> false
6034:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 |==> true
6035:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:b2 * a2 |==> b2 % a2
6036:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:b2 * a2 |==> b2 + a2
6037:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:b2 * a2 |==> b2 - a2
6038:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:b2 * a2 |==> b2 / a2
6039:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > b2 * a2 |==> gap2 != b2 * a2
6040:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > b2 * a2 |==> gap2 < b2 * a2
6041:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > b2 * a2 |==> gap2 <= b2 * a2
6042:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > b2 * a2 |==> gap2 == b2 * a2
6043:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > b2 * a2 |==> gap2 >= b2 * a2
6044:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > b2 * a2 |==> false
6045:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > b2 * a2 |==> true
6046:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0 != gap2 > b2 * a2
6047:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0 == gap2 > b2 * a2
6048:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 && gap2 > b2 * a2 |==> false
6049:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0
6050:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > b2 * a2
6051:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 && gap2 > b2 * a2 |==> true
6052:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1657:gap2 > 0.0 && gap2 > b2 * a2 |==> gap2 > 0.0 || gap2 > b2 * a2
6053:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:1 |==> 0
6054:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:1 |==> -1
6055:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 |==> cnst2 % a2
6056:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 |==> cnst2 + a2
6057:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 |==> cnst2 - a2
6058:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 |==> cnst2 / a2
6059:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:b2 / gap2 |==> b2 % gap2
6060:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:b2 / gap2 |==> b2 * gap2
6061:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:b2 / gap2 |==> b2 + gap2
6062:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:b2 / gap2 |==> b2 - gap2
6063:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 % (b2 / gap2)
6064:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 + (b2 / gap2)
6065:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 - (b2 / gap2)
6066:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) |==> cnst2 * a2 / (b2 / gap2)
6067:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) % b2
6068:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) + b2
6069:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) - b2
6070:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:cnst2 * a2 * (b2 / gap2) * b2 |==> cnst2 * a2 * (b2 / gap2) / b2
6071:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 % (cnst2 * a2 * (b2 / gap2) * b2)
6072:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 * (cnst2 * a2 * (b2 / gap2) * b2)
6073:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 + cnst2 * a2 * (b2 / gap2) * b2
6074:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:1 - cnst2 * a2 * (b2 / gap2) * b2 |==> 1 / (cnst2 * a2 * (b2 / gap2) * b2)
6075:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 % (1 - cnst2 * a2 * (b2 / gap2) * b2)
6076:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 + (1 - cnst2 * a2 * (b2 / gap2) * b2)
6077:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 - (1 - cnst2 * a2 * (b2 / gap2) * b2)
6078:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2) |==> a2 / (1 - cnst2 * a2 * (b2 / gap2) * b2)
6079:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1658:tau = Math.max(s, a2 * (1 - cnst2 * a2 * (b2 / gap2) * b2)) |==> <NO-OP>
6080:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:1 |==> 0
6081:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:1 |==> -1
6082:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:cnst2 * b2 |==> cnst2 % b2
6083:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:cnst2 * b2 |==> cnst2 + b2
6084:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:cnst2 * b2 |==> cnst2 - b2
6085:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:cnst2 * b2 |==> cnst2 / b2
6086:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:1 - cnst2 * b2 |==> 1 % (cnst2 * b2)
6087:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:1 - cnst2 * b2 |==> 1 * (cnst2 * b2)
6088:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:1 - cnst2 * b2 |==> 1 + cnst2 * b2
6089:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:1 - cnst2 * b2 |==> 1 / (cnst2 * b2)
6090:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:a2 * (1 - cnst2 * b2) |==> a2 % (1 - cnst2 * b2)
6091:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:a2 * (1 - cnst2 * b2) |==> a2 + (1 - cnst2 * b2)
6092:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:a2 * (1 - cnst2 * b2) |==> a2 - (1 - cnst2 * b2)
6093:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:a2 * (1 - cnst2 * b2) |==> a2 / (1 - cnst2 * b2)
6094:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1660:tau = Math.max(s, a2 * (1 - cnst2 * b2)) |==> <NO-OP>
6095:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1663:0.25 |==> 0.0
6096:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1663:0.25 |==> -0.25
6097:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1663:0.25 * dMin2 |==> 0.25 % dMin2
6098:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1663:0.25 * dMin2 |==> 0.25 + dMin2
6099:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1663:0.25 * dMin2 |==> 0.25 - dMin2
6100:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1663:0.25 * dMin2 |==> 0.25 / dMin2
6101:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1663:tau = 0.25 * dMin2 |==> <NO-OP>
6102:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1664:-11 |==> 0
6103:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1664:-11 |==> 11
6104:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1664:tType = -11 |==> <NO-OP>
6105:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1669:0.0 |==> 1.0
6106:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1669:0.0 |==> -1.0
6107:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1669:tau = 0.0 |==> <NO-OP>
6108:LVR:NEG:0:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1670:-12 |==> 0
6109:LVR:NEG:POS:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1670:-12 |==> 12
6110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@computeShiftIncrement(int,int,int):1670:tType = -12 |==> <NO-OP>
6111:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1683:shift < sigma |==> shift != sigma
6112:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1683:shift < sigma |==> shift <= sigma
6113:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1683:shift < sigma |==> shift == sigma
6114:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1683:shift < sigma |==> shift > sigma
6115:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1683:shift < sigma |==> shift >= sigma
6116:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1683:shift < sigma |==> false
6117:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1683:shift < sigma |==> true
6118:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1684:sigmaLow += shift |==> <NO-OP>
6119:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1685:sigma + sigmaLow |==> sigma % sigmaLow
6120:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1685:sigma + sigmaLow |==> sigma * sigmaLow
6121:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1685:sigma + sigmaLow |==> sigma - sigmaLow
6122:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1685:sigma + sigmaLow |==> sigma / sigmaLow
6123:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1686:t - sigma |==> t % sigma
6124:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1686:t - sigma |==> t * sigma
6125:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1686:t - sigma |==> t + sigma
6126:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1686:t - sigma |==> t / sigma
6127:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1686:sigmaLow -= t - sigma |==> <NO-OP>
6128:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1687:sigma = t |==> <NO-OP>
6129:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1689:sigma + shift |==> sigma % shift
6130:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1689:sigma + shift |==> sigma * shift
6131:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1689:sigma + shift |==> sigma - shift
6132:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1689:sigma + shift |==> sigma / shift
6133:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:t - shift |==> t % shift
6134:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:t - shift |==> t * shift
6135:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:t - shift |==> t + shift
6136:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:t - shift |==> t / shift
6137:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:sigma - (t - shift) |==> sigma % (t - shift)
6138:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:sigma - (t - shift) |==> sigma * (t - shift)
6139:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:sigma - (t - shift) |==> sigma + (t - shift)
6140:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:sigma - (t - shift) |==> sigma / (t - shift)
6141:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1690:sigmaLow += sigma - (t - shift) |==> <NO-OP>
6142:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@updateSigma(double):1691:sigma = t |==> <NO-OP>
6143:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1701:eigenvectors = new ArrayRealVector[m] |==> <NO-OP>
6144:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1705:1 |==> 0
6145:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1705:1 |==> -1
6146:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1705:m - 1 |==> m % 1
6147:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1705:m - 1 |==> m * 1
6148:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1705:m - 1 |==> m + 1
6149:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1705:m - 1 |==> m / 1
6150:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:1 |==> 0
6151:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:1 |==> -1
6152:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m % 1
6153:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m * 1
6154:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m + 1
6155:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m / 1
6156:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> 1
6157:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> -1
6158:ROR:<=(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 |==> realEigenvalues[m - 1] != 0
6159:ROR:<=(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 |==> realEigenvalues[m - 1] < 0
6160:ROR:<=(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 |==> realEigenvalues[m - 1] == 0
6161:ROR:<=(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 |==> realEigenvalues[m - 1] > 0
6162:ROR:<=(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 |==> realEigenvalues[m - 1] >= 0
6163:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 |==> false
6164:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 |==> true
6165:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> 1
6166:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> -1
6167:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> 1
6168:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> -1
6169:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[0] > 0 |==> realEigenvalues[0] != 0
6170:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[0] > 0 |==> realEigenvalues[0] < 0
6171:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[0] > 0 |==> realEigenvalues[0] <= 0
6172:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[0] > 0 |==> realEigenvalues[0] == 0
6173:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[0] > 0 |==> realEigenvalues[0] >= 0
6174:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[0] > 0 |==> false
6175:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[0] > 0 |==> true
6176:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 && realEigenvalues[0] > 0 |==> realEigenvalues[m - 1] <= 0 != realEigenvalues[0] > 0
6177:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 && realEigenvalues[0] > 0 |==> realEigenvalues[m - 1] <= 0 == realEigenvalues[0] > 0
6178:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 && realEigenvalues[0] > 0 |==> false
6179:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 && realEigenvalues[0] > 0 |==> realEigenvalues[m - 1] <= 0
6180:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 && realEigenvalues[0] > 0 |==> realEigenvalues[0] > 0
6181:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 && realEigenvalues[0] > 0 |==> true
6182:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:realEigenvalues[m - 1] <= 0 && realEigenvalues[0] > 0 |==> realEigenvalues[m - 1] <= 0 || realEigenvalues[0] > 0
6183:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0.5 |==> 0.0
6184:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0.5 |==> -0.5
6185:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:1 |==> 0
6186:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:1 |==> -1
6187:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m % 1
6188:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m * 1
6189:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m + 1
6190:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:m - 1 |==> m / 1
6191:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0.5 - realEigenvalues[m - 1] |==> 0.5 % realEigenvalues[m - 1]
6192:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0.5 - realEigenvalues[m - 1] |==> 0.5 * realEigenvalues[m - 1]
6193:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0.5 - realEigenvalues[m - 1] |==> 0.5 + realEigenvalues[m - 1]
6194:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0.5 - realEigenvalues[m - 1] |==> 0.5 / realEigenvalues[m - 1]
6195:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> 1
6196:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1707:0 |==> -1
6197:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1708:0 |==> 1
6198:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1708:0 |==> -1
6199:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1708:main[0] + mu |==> main[0] % mu
6200:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1708:main[0] + mu |==> main[0] * mu
6201:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1708:main[0] + mu |==> main[0] - mu
6202:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1708:main[0] + mu |==> main[0] / mu
6203:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1709:0 |==> 1
6204:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1709:0 |==> -1
6205:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1709:d[0] = di |==> <NO-OP>
6206:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:1 |==> 0
6207:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:1 |==> -1
6208:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:i < m |==> i != m
6209:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:i < m |==> i <= m
6210:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:i < m |==> i == m
6211:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:i < m |==> i > m
6212:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:i < m |==> i >= m
6213:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:i < m |==> false
6214:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1710:i < m |==> true
6215:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1711:1 |==> 0
6216:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1711:1 |==> -1
6217:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1711:i - 1 |==> i % 1
6218:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1711:i - 1 |==> i * 1
6219:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1711:i - 1 |==> i + 1
6220:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1711:i - 1 |==> i / 1
6221:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1712:eiM1 / di |==> eiM1 % di
6222:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1712:eiM1 / di |==> eiM1 * di
6223:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1712:eiM1 / di |==> eiM1 + di
6224:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1712:eiM1 / di |==> eiM1 - di
6225:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:eiM1 * ratio |==> eiM1 % ratio
6226:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:eiM1 * ratio |==> eiM1 + ratio
6227:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:eiM1 * ratio |==> eiM1 - ratio
6228:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:eiM1 * ratio |==> eiM1 / ratio
6229:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio |==> main[i] % (eiM1 * ratio)
6230:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio |==> main[i] * (eiM1 * ratio)
6231:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio |==> main[i] + eiM1 * ratio
6232:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio |==> main[i] / (eiM1 * ratio)
6233:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio + mu |==> (main[i] - eiM1 * ratio) % mu
6234:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio + mu |==> (main[i] - eiM1 * ratio) * mu
6235:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio + mu |==> main[i] - eiM1 * ratio - mu
6236:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:main[i] - eiM1 * ratio + mu |==> (main[i] - eiM1 * ratio) / mu
6237:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1713:di = main[i] - eiM1 * ratio + mu |==> <NO-OP>
6238:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1714:1 |==> 0
6239:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1714:1 |==> -1
6240:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1714:i - 1 |==> i % 1
6241:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1714:i - 1 |==> i * 1
6242:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1714:i - 1 |==> i + 1
6243:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1714:i - 1 |==> i / 1
6244:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1714:l[i - 1] = ratio |==> <NO-OP>
6245:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1715:d[i] = di |==> <NO-OP>
6246:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:0 |==> 1
6247:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:0 |==> -1
6248:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:i < m |==> i != m
6249:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:i < m |==> i <= m
6250:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:i < m |==> i == m
6251:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:i < m |==> i > m
6252:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:i < m |==> i >= m
6253:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:i < m |==> false
6254:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1719:i < m |==> true
6255:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1720:realEigenvalues[i] + mu |==> realEigenvalues[i] % mu
6256:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1720:realEigenvalues[i] + mu |==> realEigenvalues[i] * mu
6257:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1720:realEigenvalues[i] + mu |==> realEigenvalues[i] - mu
6258:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1720:realEigenvalues[i] + mu |==> realEigenvalues[i] / mu
6259:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenVectors():1720:eigenvectors[i] = findEigenvector(realEigenvalues[i] + mu, d, l) |==> <NO-OP>
6260:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1740:stationaryQuotientDifferenceWithShift(d, l, eigenvalue) |==> <NO-OP>
6261:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1741:progressiveQuotientDifferenceWithShift(d, l, eigenvalue) |==> <NO-OP>
6262:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1745:1 |==> 0
6263:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1745:1 |==> -1
6264:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1745:m - 1 |==> m % 1
6265:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1745:m - 1 |==> m * 1
6266:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1745:m - 1 |==> m + 1
6267:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1745:m - 1 |==> m / 1
6268:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 |==> 0
6269:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 |==> -6
6270:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 % r
6271:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 + r
6272:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 - r
6273:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 / r
6274:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 |==> 0
6275:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 |==> -6
6276:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 % r
6277:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 + r
6278:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 - r
6279:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r |==> 6 / r
6280:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:3 |==> 0
6281:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:3 |==> -3
6282:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r + 3 |==> 6 * r % 3
6283:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r + 3 |==> 6 * r * 3
6284:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r + 3 |==> 6 * r - 3
6285:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:6 * r + 3 |==> 6 * r / 3
6286:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] |==> work[6 * r] % work[6 * r + 3]
6287:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] |==> work[6 * r] * work[6 * r + 3]
6288:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] |==> work[6 * r] - work[6 * r + 3]
6289:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] |==> work[6 * r] / work[6 * r + 3]
6290:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] + eigenvalue |==> (work[6 * r] + work[6 * r + 3]) % eigenvalue
6291:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] + eigenvalue |==> (work[6 * r] + work[6 * r + 3]) * eigenvalue
6292:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] + eigenvalue |==> work[6 * r] + work[6 * r + 3] - eigenvalue
6293:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1746:work[6 * r] + work[6 * r + 3] + eigenvalue |==> (work[6 * r] + work[6 * r + 3]) / eigenvalue
6294:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1747:0 |==> 1
6295:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1747:0 |==> -1
6296:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:0 |==> 1
6297:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:0 |==> -1
6298:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:1 |==> 0
6299:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:1 |==> -1
6300:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:m - 1 |==> m % 1
6301:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:m - 1 |==> m * 1
6302:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:m - 1 |==> m + 1
6303:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:m - 1 |==> m / 1
6304:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:i < m - 1 |==> i != m - 1
6305:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:i < m - 1 |==> i <= m - 1
6306:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:i < m - 1 |==> i == m - 1
6307:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:i < m - 1 |==> i > m - 1
6308:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:i < m - 1 |==> i >= m - 1
6309:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:i < m - 1 |==> false
6310:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1748:i < m - 1 |==> true
6311:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:9 |==> 0
6312:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:9 |==> -9
6313:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 9 |==> sixI % 9
6314:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 9 |==> sixI * 9
6315:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 9 |==> sixI - 9
6316:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 9 |==> sixI / 9
6317:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] |==> d[i] % work[sixI + 9]
6318:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] |==> d[i] + work[sixI + 9]
6319:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] |==> d[i] - work[sixI + 9]
6320:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] |==> d[i] / work[sixI + 9]
6321:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:10 |==> 0
6322:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:10 |==> -10
6323:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 10 |==> sixI % 10
6324:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 10 |==> sixI * 10
6325:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 10 |==> sixI - 10
6326:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:sixI + 10 |==> sixI / 10
6327:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] / work[sixI + 10] |==> d[i] * work[sixI + 9] % work[sixI + 10]
6328:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] / work[sixI + 10] |==> d[i] * work[sixI + 9] * work[sixI + 10]
6329:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] / work[sixI + 10] |==> d[i] * work[sixI + 9] + work[sixI + 10]
6330:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:d[i] * work[sixI + 9] / work[sixI + 10] |==> d[i] * work[sixI + 9] - work[sixI + 10]
6331:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:work[sixI] + d[i] * work[sixI + 9] / work[sixI + 10] |==> work[sixI] % (d[i] * work[sixI + 9] / work[sixI + 10])
6332:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:work[sixI] + d[i] * work[sixI + 9] / work[sixI + 10] |==> work[sixI] * (d[i] * work[sixI + 9] / work[sixI + 10])
6333:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:work[sixI] + d[i] * work[sixI + 9] / work[sixI + 10] |==> work[sixI] - d[i] * work[sixI + 9] / work[sixI + 10]
6334:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1749:work[sixI] + d[i] * work[sixI + 9] / work[sixI + 10] |==> work[sixI] / (d[i] * work[sixI + 9] / work[sixI + 10])
6335:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1750:absG < minG |==> absG != minG
6336:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1750:absG < minG |==> absG <= minG
6337:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1750:absG < minG |==> absG == minG
6338:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1750:absG < minG |==> absG > minG
6339:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1750:absG < minG |==> absG >= minG
6340:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1750:absG < minG |==> false
6341:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1750:absG < minG |==> true
6342:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1751:r = i |==> <NO-OP>
6343:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1752:minG = absG |==> <NO-OP>
6344:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1754:6 |==> 0
6345:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1754:6 |==> -6
6346:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1754:sixI += 6 |==> <NO-OP>
6347:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1760:1 |==> 0
6348:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1760:1 |==> -1
6349:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1761:1 |==> 0
6350:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1761:1 |==> -1
6351:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1761:eigenvector[r] = 1 |==> <NO-OP>
6352:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1762:1 |==> 0
6353:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1762:1 |==> -1
6354:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:1 |==> 0
6355:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:1 |==> -1
6356:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:r - 1 |==> r % 1
6357:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:r - 1 |==> r * 1
6358:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:r - 1 |==> r + 1
6359:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:r - 1 |==> r / 1
6360:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:0 |==> 1
6361:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:0 |==> -1
6362:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:i >= 0 |==> i != 0
6363:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:i >= 0 |==> i < 0
6364:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:i >= 0 |==> i <= 0
6365:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:i >= 0 |==> i == 0
6366:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:i >= 0 |==> i > 0
6367:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:i >= 0 |==> false
6368:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1763:i >= 0 |==> true
6369:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:-work[6 * i + 2] |==> +work[6 * i + 2]
6370:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 |==> 0
6371:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 |==> -6
6372:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i |==> 6 % i
6373:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i |==> 6 + i
6374:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i |==> 6 - i
6375:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i |==> 6 / i
6376:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:2 |==> 0
6377:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:2 |==> -2
6378:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i + 2 |==> 6 * i % 2
6379:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i + 2 |==> 6 * i * 2
6380:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i + 2 |==> 6 * i - 2
6381:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:6 * i + 2 |==> 6 * i / 2
6382:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1764:z *= -work[6 * i + 2] |==> <NO-OP>
6383:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1765:eigenvector[i] = z |==> <NO-OP>
6384:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1766:z * z |==> z % z
6385:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1766:z * z |==> z + z
6386:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1766:z * z |==> z - z
6387:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1766:z * z |==> z / z
6388:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1766:n2 += z * z |==> <NO-OP>
6389:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1768:1 |==> 0
6390:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1768:1 |==> -1
6391:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1768:z = 1 |==> <NO-OP>
6392:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:1 |==> 0
6393:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:1 |==> -1
6394:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:r + 1 |==> r % 1
6395:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:r + 1 |==> r * 1
6396:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:r + 1 |==> r - 1
6397:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:r + 1 |==> r / 1
6398:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:i < m |==> i != m
6399:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:i < m |==> i <= m
6400:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:i < m |==> i == m
6401:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:i < m |==> i > m
6402:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:i < m |==> i >= m
6403:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:i < m |==> false
6404:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1769:i < m |==> true
6405:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:-work[6 * i - 1] |==> +work[6 * i - 1]
6406:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 |==> 0
6407:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 |==> -6
6408:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i |==> 6 % i
6409:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i |==> 6 + i
6410:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i |==> 6 - i
6411:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i |==> 6 / i
6412:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:1 |==> 0
6413:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:1 |==> -1
6414:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i - 1 |==> 6 * i % 1
6415:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i - 1 |==> 6 * i * 1
6416:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i - 1 |==> 6 * i + 1
6417:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:6 * i - 1 |==> 6 * i / 1
6418:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1770:z *= -work[6 * i - 1] |==> <NO-OP>
6419:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1771:eigenvector[i] = z |==> <NO-OP>
6420:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1772:z * z |==> z % z
6421:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1772:z * z |==> z + z
6422:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1772:z * z |==> z - z
6423:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1772:z * z |==> z / z
6424:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1772:n2 += z * z |==> <NO-OP>
6425:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1776:1.0 |==> 0.0
6426:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1776:1.0 |==> -1.0
6427:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1776:1.0 / Math.sqrt(n2) |==> 1.0 % Math.sqrt(n2)
6428:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1776:1.0 / Math.sqrt(n2) |==> 1.0 * Math.sqrt(n2)
6429:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1776:1.0 / Math.sqrt(n2) |==> 1.0 + Math.sqrt(n2)
6430:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1776:1.0 / Math.sqrt(n2) |==> 1.0 - Math.sqrt(n2)
6431:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:0 |==> 1
6432:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:0 |==> -1
6433:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:i < m |==> i != m
6434:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:i < m |==> i <= m
6435:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:i < m |==> i == m
6436:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:i < m |==> i > m
6437:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:i < m |==> i >= m
6438:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:i < m |==> false
6439:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1777:i < m |==> true
6440:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1778:eigenvector[i] *= inv |==> <NO-OP>
6441:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1781:transformer == null |==> transformer != null
6442:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1781:transformer == null |==> false
6443:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1781:transformer == null |==> true
6444:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1782:false |==> true
6445:LVR:FALSE:TRUE:org.apache.commons.math.linear.EigenDecompositionImpl@findEigenvector(double,double[],double[]):1783:false |==> true
6446:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1797:1 |==> 0
6447:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1797:1 |==> -1
6448:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1797:d.length - 1 |==> d.length % 1
6449:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1797:d.length - 1 |==> d.length * 1
6450:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1797:d.length - 1 |==> d.length + 1
6451:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1797:d.length - 1 |==> d.length / 1
6452:ORU:-(double):+(double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1798:-lambda |==> +lambda
6453:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1799:0 |==> 1
6454:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1799:0 |==> -1
6455:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:0 |==> 1
6456:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:0 |==> -1
6457:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:i < nM1 |==> i != nM1
6458:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:i < nM1 |==> i <= nM1
6459:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:i < nM1 |==> i == nM1
6460:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:i < nM1 |==> i > nM1
6461:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:i < nM1 |==> i >= nM1
6462:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:i < nM1 |==> false
6463:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1800:i < nM1 |==> true
6464:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1803:di + si |==> di % si
6465:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1803:di + si |==> di * si
6466:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1803:di + si |==> di - si
6467:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1803:di + si |==> di / si
6468:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di |==> li % di
6469:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di |==> li + di
6470:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di |==> li - di
6471:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di |==> li / di
6472:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di / diP1 |==> li * di % diP1
6473:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di / diP1 |==> li * di * diP1
6474:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di / diP1 |==> li * di + diP1
6475:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1804:li * di / diP1 |==> li * di - diP1
6476:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1805:work[sixI] = si |==> <NO-OP>
6477:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1806:1 |==> 0
6478:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1806:1 |==> -1
6479:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1806:sixI + 1 |==> sixI % 1
6480:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1806:sixI + 1 |==> sixI * 1
6481:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1806:sixI + 1 |==> sixI - 1
6482:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1806:sixI + 1 |==> sixI / 1
6483:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1806:work[sixI + 1] = diP1 |==> <NO-OP>
6484:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1807:2 |==> 0
6485:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1807:2 |==> -2
6486:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1807:sixI + 2 |==> sixI % 2
6487:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1807:sixI + 2 |==> sixI * 2
6488:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1807:sixI + 2 |==> sixI - 2
6489:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1807:sixI + 2 |==> sixI / 2
6490:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1807:work[sixI + 2] = liP1 |==> <NO-OP>
6491:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 |==> li % liP1
6492:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 |==> li + liP1
6493:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 |==> li - liP1
6494:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 |==> li / liP1
6495:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si |==> li * liP1 % si
6496:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si |==> li * liP1 + si
6497:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si |==> li * liP1 - si
6498:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si |==> li * liP1 / si
6499:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si - lambda |==> li * liP1 * si % lambda
6500:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si - lambda |==> li * liP1 * si * lambda
6501:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si - lambda |==> li * liP1 * si + lambda
6502:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:li * liP1 * si - lambda |==> li * liP1 * si / lambda
6503:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1808:si = li * liP1 * si - lambda |==> <NO-OP>
6504:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1809:6 |==> 0
6505:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1809:6 |==> -6
6506:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1809:sixI += 6 |==> <NO-OP>
6507:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 |==> 0
6508:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 |==> -6
6509:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 |==> 6 % nM1
6510:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 |==> 6 + nM1
6511:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 |==> 6 - nM1
6512:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 |==> 6 / nM1
6513:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:1 |==> 0
6514:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:1 |==> -1
6515:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 + 1 |==> 6 * nM1 % 1
6516:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 + 1 |==> 6 * nM1 * 1
6517:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 + 1 |==> 6 * nM1 - 1
6518:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:6 * nM1 + 1 |==> 6 * nM1 / 1
6519:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:d[nM1] + si |==> d[nM1] % si
6520:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:d[nM1] + si |==> d[nM1] * si
6521:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:d[nM1] + si |==> d[nM1] - si
6522:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:d[nM1] + si |==> d[nM1] / si
6523:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1811:work[6 * nM1 + 1] = d[nM1] + si |==> <NO-OP>
6524:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1812:6 |==> 0
6525:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1812:6 |==> -6
6526:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1812:6 * nM1 |==> 6 % nM1
6527:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1812:6 * nM1 |==> 6 + nM1
6528:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1812:6 * nM1 |==> 6 - nM1
6529:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1812:6 * nM1 |==> 6 / nM1
6530:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@stationaryQuotientDifferenceWithShift(double[],double[],double):1812:work[6 * nM1] = si |==> <NO-OP>
6531:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1825:1 |==> 0
6532:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1825:1 |==> -1
6533:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1825:d.length - 1 |==> d.length % 1
6534:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1825:d.length - 1 |==> d.length * 1
6535:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1825:d.length - 1 |==> d.length + 1
6536:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1825:d.length - 1 |==> d.length / 1
6537:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1826:d[nM1] - lambda |==> d[nM1] % lambda
6538:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1826:d[nM1] - lambda |==> d[nM1] * lambda
6539:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1826:d[nM1] - lambda |==> d[nM1] + lambda
6540:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1826:d[nM1] - lambda |==> d[nM1] / lambda
6541:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:6 |==> 0
6542:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:6 |==> -6
6543:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:1 |==> 0
6544:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:1 |==> -1
6545:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:nM1 - 1 |==> nM1 % 1
6546:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:nM1 - 1 |==> nM1 * 1
6547:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:nM1 - 1 |==> nM1 + 1
6548:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:nM1 - 1 |==> nM1 / 1
6549:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:6 * (nM1 - 1) |==> 6 % (nM1 - 1)
6550:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:6 * (nM1 - 1) |==> 6 + (nM1 - 1)
6551:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:6 * (nM1 - 1) |==> 6 - (nM1 - 1)
6552:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1827:6 * (nM1 - 1) |==> 6 / (nM1 - 1)
6553:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:1 |==> 0
6554:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:1 |==> -1
6555:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:nM1 - 1 |==> nM1 % 1
6556:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:nM1 - 1 |==> nM1 * 1
6557:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:nM1 - 1 |==> nM1 + 1
6558:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:nM1 - 1 |==> nM1 / 1
6559:LVR:0:POS:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:0 |==> 1
6560:LVR:0:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:0 |==> -1
6561:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:i >= 0 |==> i != 0
6562:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:i >= 0 |==> i < 0
6563:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:i >= 0 |==> i <= 0
6564:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:i >= 0 |==> i == 0
6565:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:i >= 0 |==> i > 0
6566:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:i >= 0 |==> false
6567:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1828:i >= 0 |==> true
6568:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li |==> di % li
6569:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li |==> di + li
6570:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li |==> di - li
6571:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li |==> di / li
6572:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li |==> di * li % li
6573:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li |==> di * li + li
6574:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li |==> di * li - li
6575:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li |==> di * li / li
6576:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li + pi |==> di * li * li % pi
6577:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li + pi |==> di * li * li * pi
6578:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li + pi |==> di * li * li - pi
6579:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1831:di * li * li + pi |==> di * li * li / pi
6580:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1832:di / diP1 |==> di % diP1
6581:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1832:di / diP1 |==> di * diP1
6582:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1832:di / diP1 |==> di + diP1
6583:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1832:di / diP1 |==> di - diP1
6584:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1833:9 |==> 0
6585:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1833:9 |==> -9
6586:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1833:sixI + 9 |==> sixI % 9
6587:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1833:sixI + 9 |==> sixI * 9
6588:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1833:sixI + 9 |==> sixI - 9
6589:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1833:sixI + 9 |==> sixI / 9
6590:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1833:work[sixI + 9] = pi |==> <NO-OP>
6591:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1834:10 |==> 0
6592:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1834:10 |==> -10
6593:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1834:sixI + 10 |==> sixI % 10
6594:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1834:sixI + 10 |==> sixI * 10
6595:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1834:sixI + 10 |==> sixI - 10
6596:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1834:sixI + 10 |==> sixI / 10
6597:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1834:work[sixI + 10] = diP1 |==> <NO-OP>
6598:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:5 |==> 0
6599:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:5 |==> -5
6600:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:sixI + 5 |==> sixI % 5
6601:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:sixI + 5 |==> sixI * 5
6602:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:sixI + 5 |==> sixI - 5
6603:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:sixI + 5 |==> sixI / 5
6604:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:li * t |==> li % t
6605:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:li * t |==> li + t
6606:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:li * t |==> li - t
6607:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:li * t |==> li / t
6608:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1835:work[sixI + 5] = li * t |==> <NO-OP>
6609:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t |==> pi % t
6610:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t |==> pi + t
6611:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t |==> pi - t
6612:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t |==> pi / t
6613:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t - lambda |==> pi * t % lambda
6614:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t - lambda |==> pi * t * lambda
6615:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t - lambda |==> pi * t + lambda
6616:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi * t - lambda |==> pi * t / lambda
6617:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1836:pi = pi * t - lambda |==> <NO-OP>
6618:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1837:6 |==> 0
6619:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1837:6 |==> -6
6620:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1837:sixI -= 6 |==> <NO-OP>
6621:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1839:3 |==> 0
6622:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1839:3 |==> -3
6623:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1839:work[3] = pi |==> <NO-OP>
6624:LVR:POS:0:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1840:4 |==> 0
6625:LVR:POS:NEG:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1840:4 |==> -4
6626:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.EigenDecompositionImpl@progressiveQuotientDifferenceWithShift(double[],double[],double):1840:work[4] = pi |==> <NO-OP>