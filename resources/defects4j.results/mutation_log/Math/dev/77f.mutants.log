1:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>():57:0 |==> 1
2:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>():57:0 |==> -1
3:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>():57:data = new double[0] |==> <NO-OP>
4:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(int):65:data = new double[size] |==> <NO-OP>
5:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(int,double):74:data = new double[size] |==> <NO-OP>
6:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(int,double):75:Arrays.fill(data, preset) |==> <NO-OP>
7:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[]):83:data = d.clone() |==> <NO-OP>
8:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):102:d == null |==> d != null
9:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):102:d == null |==> false
10:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):102:d == null |==> true
11:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:0 |==> 1
12:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:0 |==> -1
13:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:d.length == 0 |==> d.length != 0
14:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:d.length == 0 |==> d.length < 0
15:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:d.length == 0 |==> d.length <= 0
16:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:d.length == 0 |==> d.length > 0
17:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:d.length == 0 |==> d.length >= 0
18:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:d.length == 0 |==> false
19:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):105:d.length == 0 |==> true
20:COR:copyArray:TRUE:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):108:copyArray |==> false
21:COR:copyArray:FALSE:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):108:copyArray |==> true
22:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],boolean):108:data = copyArray ? d.clone() : d |==> <NO-OP>
23:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:pos + size |==> pos % size
24:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:pos + size |==> pos * size
25:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:pos + size |==> pos - size
26:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:pos + size |==> pos / size
27:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:d.length < pos + size |==> d.length != pos + size
28:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:d.length < pos + size |==> d.length <= pos + size
29:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:d.length < pos + size |==> d.length == pos + size
30:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:d.length < pos + size |==> d.length > pos + size
31:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:d.length < pos + size |==> d.length >= pos + size
32:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:d.length < pos + size |==> false
33:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):118:d.length < pos + size |==> true
34:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):122:data = new double[size] |==> <NO-OP>
35:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):123:0 |==> 1
36:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):123:0 |==> -1
37:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],int,int):123:System.arraycopy(d, pos, data, 0, size) |==> <NO-OP>
38:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):131:data = new double[d.length] |==> <NO-OP>
39:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:0 |==> 1
40:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:0 |==> -1
41:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:i < d.length |==> i != d.length
42:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:i < d.length |==> i <= d.length
43:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:i < d.length |==> i == d.length
44:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:i < d.length |==> i > d.length
45:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:i < d.length |==> i >= d.length
46:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:i < d.length |==> false
47:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):132:i < d.length |==> true
48:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[]):133:data[i] = d[i].doubleValue() |==> <NO-OP>
49:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:pos + size |==> pos % size
50:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:pos + size |==> pos * size
51:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:pos + size |==> pos - size
52:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:pos + size |==> pos / size
53:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:d.length < pos + size |==> d.length != pos + size
54:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:d.length < pos + size |==> d.length <= pos + size
55:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:d.length < pos + size |==> d.length == pos + size
56:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:d.length < pos + size |==> d.length > pos + size
57:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:d.length < pos + size |==> d.length >= pos + size
58:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:d.length < pos + size |==> false
59:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):144:d.length < pos + size |==> true
60:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):148:data = new double[size] |==> <NO-OP>
61:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:pos + size |==> pos % size
62:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:pos + size |==> pos * size
63:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:pos + size |==> pos - size
64:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:pos + size |==> pos / size
65:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:i < pos + size |==> i != pos + size
66:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:i < pos + size |==> i <= pos + size
67:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:i < pos + size |==> i == pos + size
68:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:i < pos + size |==> i > pos + size
69:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:i < pos + size |==> i >= pos + size
70:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:i < pos + size |==> false
71:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):149:i < pos + size |==> true
72:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):150:i - pos |==> i % pos
73:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):150:i - pos |==> i * pos
74:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):150:i - pos |==> i + pos
75:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):150:i - pos |==> i / pos
76:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(java.lang.Double[],int,int):150:data[i - pos] = d[i].doubleValue() |==> <NO-OP>
77:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):159:data = new double[v.getDimension()] |==> <NO-OP>
78:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:0 |==> 1
79:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:0 |==> -1
80:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:i < data.length |==> i != data.length
81:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:i < data.length |==> i <= data.length
82:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:i < data.length |==> i == data.length
83:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:i < data.length |==> i > data.length
84:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:i < data.length |==> i >= data.length
85:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:i < data.length |==> false
86:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):160:i < data.length |==> true
87:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector):161:data[i] = v.getEntry(i) |==> <NO-OP>
88:LVR:TRUE:FALSE:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector):170:true |==> false
89:COR:deep:TRUE:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,boolean):179:deep |==> false
90:COR:deep:FALSE:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,boolean):179:deep |==> true
91:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,boolean):179:data = deep ? v.data.clone() : v.data |==> <NO-OP>
92:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):188:v1.data.length + v2.data.length |==> v1.data.length % v2.data.length
93:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):188:v1.data.length + v2.data.length |==> v1.data.length * v2.data.length
94:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):188:v1.data.length + v2.data.length |==> v1.data.length - v2.data.length
95:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):188:v1.data.length + v2.data.length |==> v1.data.length / v2.data.length
96:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):188:data = new double[v1.data.length + v2.data.length] |==> <NO-OP>
97:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):189:0 |==> 1
98:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):189:0 |==> -1
99:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):189:0 |==> 1
100:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):189:0 |==> -1
101:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):189:System.arraycopy(v1.data, 0, data, 0, v1.data.length) |==> <NO-OP>
102:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):190:0 |==> 1
103:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):190:0 |==> -1
104:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.ArrayRealVector):190:System.arraycopy(v2.data, 0, data, v1.data.length, v2.data.length) |==> <NO-OP>
105:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):201:l1 + l2 |==> l1 % l2
106:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):201:l1 + l2 |==> l1 * l2
107:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):201:l1 + l2 |==> l1 - l2
108:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):201:l1 + l2 |==> l1 / l2
109:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):201:data = new double[l1 + l2] |==> <NO-OP>
110:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):202:0 |==> 1
111:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):202:0 |==> -1
112:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):202:0 |==> 1
113:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):202:0 |==> -1
114:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):202:System.arraycopy(v1.data, 0, data, 0, l1) |==> <NO-OP>
115:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:0 |==> 1
116:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:0 |==> -1
117:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:i < l2 |==> i != l2
118:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:i < l2 |==> i <= l2
119:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:i < l2 |==> i == l2
120:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:i < l2 |==> i > l2
121:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:i < l2 |==> i >= l2
122:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:i < l2 |==> false
123:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):203:i < l2 |==> true
124:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):204:l1 + i |==> l1 % i
125:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):204:l1 + i |==> l1 * i
126:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):204:l1 + i |==> l1 - i
127:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):204:l1 + i |==> l1 / i
128:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,org.apache.commons.math.linear.RealVector):204:data[l1 + i] = v2.getEntry(i) |==> <NO-OP>
129:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):216:l1 + l2 |==> l1 % l2
130:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):216:l1 + l2 |==> l1 * l2
131:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):216:l1 + l2 |==> l1 - l2
132:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):216:l1 + l2 |==> l1 / l2
133:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):216:data = new double[l1 + l2] |==> <NO-OP>
134:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:0 |==> 1
135:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:0 |==> -1
136:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:i < l1 |==> i != l1
137:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:i < l1 |==> i <= l1
138:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:i < l1 |==> i == l1
139:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:i < l1 |==> i > l1
140:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:i < l1 |==> i >= l1
141:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:i < l1 |==> false
142:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):217:i < l1 |==> true
143:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):218:data[i] = v1.getEntry(i) |==> <NO-OP>
144:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):220:0 |==> 1
145:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):220:0 |==> -1
146:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.RealVector,org.apache.commons.math.linear.ArrayRealVector):220:System.arraycopy(v2.data, 0, data, l1, l2) |==> <NO-OP>
147:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):231:l1 + l2 |==> l1 % l2
148:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):231:l1 + l2 |==> l1 * l2
149:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):231:l1 + l2 |==> l1 - l2
150:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):231:l1 + l2 |==> l1 / l2
151:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):231:data = new double[l1 + l2] |==> <NO-OP>
152:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):232:0 |==> 1
153:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):232:0 |==> -1
154:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):232:0 |==> 1
155:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):232:0 |==> -1
156:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):232:System.arraycopy(v1.data, 0, data, 0, l1) |==> <NO-OP>
157:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):233:0 |==> 1
158:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):233:0 |==> -1
159:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(org.apache.commons.math.linear.ArrayRealVector,double[]):233:System.arraycopy(v2, 0, data, l1, l2) |==> <NO-OP>
160:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):244:l1 + l2 |==> l1 % l2
161:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):244:l1 + l2 |==> l1 * l2
162:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):244:l1 + l2 |==> l1 - l2
163:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):244:l1 + l2 |==> l1 / l2
164:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):244:data = new double[l1 + l2] |==> <NO-OP>
165:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):245:0 |==> 1
166:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):245:0 |==> -1
167:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):245:0 |==> 1
168:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):245:0 |==> -1
169:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):245:System.arraycopy(v1, 0, data, 0, l1) |==> <NO-OP>
170:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):246:0 |==> 1
171:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):246:0 |==> -1
172:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],org.apache.commons.math.linear.ArrayRealVector):246:System.arraycopy(v2.data, 0, data, l1, l2) |==> <NO-OP>
173:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):257:l1 + l2 |==> l1 % l2
174:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):257:l1 + l2 |==> l1 * l2
175:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):257:l1 + l2 |==> l1 - l2
176:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):257:l1 + l2 |==> l1 / l2
177:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):257:data = new double[l1 + l2] |==> <NO-OP>
178:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):258:0 |==> 1
179:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):258:0 |==> -1
180:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):258:0 |==> 1
181:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):258:0 |==> -1
182:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):258:System.arraycopy(v1, 0, data, 0, l1) |==> <NO-OP>
183:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):259:0 |==> 1
184:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):259:0 |==> -1
185:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@<init>(double[],double[]):259:System.arraycopy(v2, 0, data, l1, l2) |==> <NO-OP>
186:LVR:TRUE:FALSE:org.apache.commons.math.linear.ArrayRealVector@copy():264:true |==> false
187:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):273:checkVectorDimensions(v) |==> <NO-OP>
188:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):277:(e = it.next()) != null |==> (e = it.next()) == null
189:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):277:(e = it.next()) != null |==> false
190:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):277:it.hasNext() && (e = it.next()) != null |==> it.hasNext() != ((e = it.next()) != null)
191:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):277:it.hasNext() && (e = it.next()) != null |==> it.hasNext() == ((e = it.next()) != null)
192:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):277:it.hasNext() && (e = it.next()) != null |==> (e = it.next()) != null
193:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):278:out[e.getIndex()] += e.getValue() |==> <NO-OP>
194:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@add(org.apache.commons.math.linear.RealVector):280:false |==> true
195:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@add(double[]):287:checkVectorDimensions(v.length) |==> <NO-OP>
196:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:0 |==> 1
197:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:0 |==> -1
198:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:i < data.length |==> i != data.length
199:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:i < data.length |==> i <= data.length
200:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:i < data.length |==> i == data.length
201:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:i < data.length |==> i > data.length
202:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:i < data.length |==> i >= data.length
203:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:i < data.length |==> false
204:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@add(double[]):289:i < data.length |==> true
205:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@add(double[]):290:out[i] += v[i] |==> <NO-OP>
206:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@add(double[]):292:false |==> true
207:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):312:checkVectorDimensions(v) |==> <NO-OP>
208:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):316:(e = it.next()) != null |==> (e = it.next()) == null
209:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):316:(e = it.next()) != null |==> false
210:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):316:it.hasNext() && (e = it.next()) != null |==> it.hasNext() != ((e = it.next()) != null)
211:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):316:it.hasNext() && (e = it.next()) != null |==> it.hasNext() == ((e = it.next()) != null)
212:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):316:it.hasNext() && (e = it.next()) != null |==> (e = it.next()) != null
213:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):317:out[e.getIndex()] -= e.getValue() |==> <NO-OP>
214:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@subtract(org.apache.commons.math.linear.RealVector):319:false |==> true
215:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):326:checkVectorDimensions(v.length) |==> <NO-OP>
216:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:0 |==> 1
217:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:0 |==> -1
218:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:i < data.length |==> i != data.length
219:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:i < data.length |==> i <= data.length
220:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:i < data.length |==> i == data.length
221:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:i < data.length |==> i > data.length
222:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:i < data.length |==> i >= data.length
223:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:i < data.length |==> false
224:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):328:i < data.length |==> true
225:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):329:out[i] -= v[i] |==> <NO-OP>
226:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@subtract(double[]):331:false |==> true
227:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:0 |==> 1
228:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:0 |==> -1
229:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:i < data.length |==> i != data.length
230:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:i < data.length |==> i <= data.length
231:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:i < data.length |==> i == data.length
232:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:i < data.length |==> i > data.length
233:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:i < data.length |==> i >= data.length
234:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:i < data.length |==> false
235:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):347:i < data.length |==> true
236:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):348:data[i] + d |==> data[i] % d
237:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):348:data[i] + d |==> data[i] * d
238:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):348:data[i] + d |==> data[i] - d
239:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):348:data[i] + d |==> data[i] / d
240:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapAddToSelf(double):348:data[i] = data[i] + d |==> <NO-OP>
241:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:0 |==> 1
242:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:0 |==> -1
243:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:i < data.length |==> i != data.length
244:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:i < data.length |==> i <= data.length
245:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:i < data.length |==> i == data.length
246:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:i < data.length |==> i > data.length
247:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:i < data.length |==> i >= data.length
248:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:i < data.length |==> false
249:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):355:i < data.length |==> true
250:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):356:data[i] - d |==> data[i] % d
251:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):356:data[i] - d |==> data[i] * d
252:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):356:data[i] - d |==> data[i] + d
253:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):356:data[i] - d |==> data[i] / d
254:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapSubtractToSelf(double):356:data[i] = data[i] - d |==> <NO-OP>
255:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:0 |==> 1
256:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:0 |==> -1
257:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:i < data.length |==> i != data.length
258:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:i < data.length |==> i <= data.length
259:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:i < data.length |==> i == data.length
260:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:i < data.length |==> i > data.length
261:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:i < data.length |==> i >= data.length
262:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:i < data.length |==> false
263:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):363:i < data.length |==> true
264:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):364:data[i] * d |==> data[i] % d
265:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):364:data[i] * d |==> data[i] + d
266:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):364:data[i] * d |==> data[i] - d
267:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):364:data[i] * d |==> data[i] / d
268:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapMultiplyToSelf(double):364:data[i] = data[i] * d |==> <NO-OP>
269:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:0 |==> 1
270:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:0 |==> -1
271:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:i < data.length |==> i != data.length
272:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:i < data.length |==> i <= data.length
273:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:i < data.length |==> i == data.length
274:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:i < data.length |==> i > data.length
275:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:i < data.length |==> i >= data.length
276:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:i < data.length |==> false
277:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):371:i < data.length |==> true
278:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):372:data[i] / d |==> data[i] % d
279:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):372:data[i] / d |==> data[i] * d
280:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):372:data[i] / d |==> data[i] + d
281:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):372:data[i] / d |==> data[i] - d
282:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapDivideToSelf(double):372:data[i] = data[i] / d |==> <NO-OP>
283:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:0 |==> 1
284:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:0 |==> -1
285:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:i < data.length |==> i != data.length
286:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:i < data.length |==> i <= data.length
287:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:i < data.length |==> i == data.length
288:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:i < data.length |==> i > data.length
289:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:i < data.length |==> i >= data.length
290:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:i < data.length |==> false
291:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):379:i < data.length |==> true
292:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapPowToSelf(double):380:data[i] = Math.pow(data[i], d) |==> <NO-OP>
293:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:0 |==> 1
294:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:0 |==> -1
295:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:i < data.length |==> i != data.length
296:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:i < data.length |==> i <= data.length
297:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:i < data.length |==> i == data.length
298:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:i < data.length |==> i > data.length
299:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:i < data.length |==> i >= data.length
300:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:i < data.length |==> false
301:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():387:i < data.length |==> true
302:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapExpToSelf():388:data[i] = Math.exp(data[i]) |==> <NO-OP>
303:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:0 |==> 1
304:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:0 |==> -1
305:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:i < data.length |==> i != data.length
306:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:i < data.length |==> i <= data.length
307:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:i < data.length |==> i == data.length
308:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:i < data.length |==> i > data.length
309:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:i < data.length |==> i >= data.length
310:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:i < data.length |==> false
311:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():395:i < data.length |==> true
312:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapExpm1ToSelf():396:data[i] = Math.expm1(data[i]) |==> <NO-OP>
313:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:0 |==> 1
314:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:0 |==> -1
315:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:i < data.length |==> i != data.length
316:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:i < data.length |==> i <= data.length
317:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:i < data.length |==> i == data.length
318:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:i < data.length |==> i > data.length
319:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:i < data.length |==> i >= data.length
320:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:i < data.length |==> false
321:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():403:i < data.length |==> true
322:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapLogToSelf():404:data[i] = Math.log(data[i]) |==> <NO-OP>
323:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:0 |==> 1
324:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:0 |==> -1
325:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:i < data.length |==> i != data.length
326:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:i < data.length |==> i <= data.length
327:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:i < data.length |==> i == data.length
328:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:i < data.length |==> i > data.length
329:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:i < data.length |==> i >= data.length
330:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:i < data.length |==> false
331:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():411:i < data.length |==> true
332:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapLog10ToSelf():412:data[i] = Math.log10(data[i]) |==> <NO-OP>
333:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:0 |==> 1
334:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:0 |==> -1
335:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:i < data.length |==> i != data.length
336:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:i < data.length |==> i <= data.length
337:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:i < data.length |==> i == data.length
338:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:i < data.length |==> i > data.length
339:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:i < data.length |==> i >= data.length
340:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:i < data.length |==> false
341:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():419:i < data.length |==> true
342:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapLog1pToSelf():420:data[i] = Math.log1p(data[i]) |==> <NO-OP>
343:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:0 |==> 1
344:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:0 |==> -1
345:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:i < data.length |==> i != data.length
346:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:i < data.length |==> i <= data.length
347:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:i < data.length |==> i == data.length
348:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:i < data.length |==> i > data.length
349:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:i < data.length |==> i >= data.length
350:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:i < data.length |==> false
351:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():427:i < data.length |==> true
352:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapCoshToSelf():428:data[i] = Math.cosh(data[i]) |==> <NO-OP>
353:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:0 |==> 1
354:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:0 |==> -1
355:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:i < data.length |==> i != data.length
356:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:i < data.length |==> i <= data.length
357:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:i < data.length |==> i == data.length
358:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:i < data.length |==> i > data.length
359:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:i < data.length |==> i >= data.length
360:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:i < data.length |==> false
361:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():435:i < data.length |==> true
362:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapSinhToSelf():436:data[i] = Math.sinh(data[i]) |==> <NO-OP>
363:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:0 |==> 1
364:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:0 |==> -1
365:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:i < data.length |==> i != data.length
366:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:i < data.length |==> i <= data.length
367:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:i < data.length |==> i == data.length
368:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:i < data.length |==> i > data.length
369:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:i < data.length |==> i >= data.length
370:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:i < data.length |==> false
371:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():443:i < data.length |==> true
372:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapTanhToSelf():444:data[i] = Math.tanh(data[i]) |==> <NO-OP>
373:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:0 |==> 1
374:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:0 |==> -1
375:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:i < data.length |==> i != data.length
376:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:i < data.length |==> i <= data.length
377:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:i < data.length |==> i == data.length
378:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:i < data.length |==> i > data.length
379:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:i < data.length |==> i >= data.length
380:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:i < data.length |==> false
381:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():451:i < data.length |==> true
382:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapCosToSelf():452:data[i] = Math.cos(data[i]) |==> <NO-OP>
383:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:0 |==> 1
384:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:0 |==> -1
385:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:i < data.length |==> i != data.length
386:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:i < data.length |==> i <= data.length
387:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:i < data.length |==> i == data.length
388:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:i < data.length |==> i > data.length
389:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:i < data.length |==> i >= data.length
390:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:i < data.length |==> false
391:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():459:i < data.length |==> true
392:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapSinToSelf():460:data[i] = Math.sin(data[i]) |==> <NO-OP>
393:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:0 |==> 1
394:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:0 |==> -1
395:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:i < data.length |==> i != data.length
396:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:i < data.length |==> i <= data.length
397:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:i < data.length |==> i == data.length
398:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:i < data.length |==> i > data.length
399:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:i < data.length |==> i >= data.length
400:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:i < data.length |==> false
401:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():467:i < data.length |==> true
402:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapTanToSelf():468:data[i] = Math.tan(data[i]) |==> <NO-OP>
403:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:0 |==> 1
404:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:0 |==> -1
405:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:i < data.length |==> i != data.length
406:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:i < data.length |==> i <= data.length
407:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:i < data.length |==> i == data.length
408:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:i < data.length |==> i > data.length
409:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:i < data.length |==> i >= data.length
410:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:i < data.length |==> false
411:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():475:i < data.length |==> true
412:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapAcosToSelf():476:data[i] = Math.acos(data[i]) |==> <NO-OP>
413:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:0 |==> 1
414:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:0 |==> -1
415:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:i < data.length |==> i != data.length
416:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:i < data.length |==> i <= data.length
417:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:i < data.length |==> i == data.length
418:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:i < data.length |==> i > data.length
419:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:i < data.length |==> i >= data.length
420:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:i < data.length |==> false
421:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():483:i < data.length |==> true
422:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapAsinToSelf():484:data[i] = Math.asin(data[i]) |==> <NO-OP>
423:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:0 |==> 1
424:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:0 |==> -1
425:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:i < data.length |==> i != data.length
426:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:i < data.length |==> i <= data.length
427:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:i < data.length |==> i == data.length
428:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:i < data.length |==> i > data.length
429:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:i < data.length |==> i >= data.length
430:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:i < data.length |==> false
431:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():491:i < data.length |==> true
432:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapAtanToSelf():492:data[i] = Math.atan(data[i]) |==> <NO-OP>
433:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:0 |==> 1
434:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:0 |==> -1
435:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:i < data.length |==> i != data.length
436:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:i < data.length |==> i <= data.length
437:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:i < data.length |==> i == data.length
438:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:i < data.length |==> i > data.length
439:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:i < data.length |==> i >= data.length
440:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:i < data.length |==> false
441:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():499:i < data.length |==> true
442:LVR:POS:0:org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():500:1.0 |==> 0.0
443:LVR:POS:NEG:org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():500:1.0 |==> -1.0
444:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():500:1.0 / data[i] |==> 1.0 % data[i]
445:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():500:1.0 / data[i] |==> 1.0 * data[i]
446:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():500:1.0 / data[i] |==> 1.0 + data[i]
447:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():500:1.0 / data[i] |==> 1.0 - data[i]
448:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapInvToSelf():500:data[i] = 1.0 / data[i] |==> <NO-OP>
449:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:0 |==> 1
450:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:0 |==> -1
451:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:i < data.length |==> i != data.length
452:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:i < data.length |==> i <= data.length
453:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:i < data.length |==> i == data.length
454:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:i < data.length |==> i > data.length
455:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:i < data.length |==> i >= data.length
456:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:i < data.length |==> false
457:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():507:i < data.length |==> true
458:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapAbsToSelf():508:data[i] = Math.abs(data[i]) |==> <NO-OP>
459:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:0 |==> 1
460:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:0 |==> -1
461:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:i < data.length |==> i != data.length
462:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:i < data.length |==> i <= data.length
463:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:i < data.length |==> i == data.length
464:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:i < data.length |==> i > data.length
465:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:i < data.length |==> i >= data.length
466:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:i < data.length |==> false
467:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():515:i < data.length |==> true
468:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapSqrtToSelf():516:data[i] = Math.sqrt(data[i]) |==> <NO-OP>
469:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:0 |==> 1
470:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:0 |==> -1
471:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:i < data.length |==> i != data.length
472:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:i < data.length |==> i <= data.length
473:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:i < data.length |==> i == data.length
474:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:i < data.length |==> i > data.length
475:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:i < data.length |==> i >= data.length
476:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:i < data.length |==> false
477:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():523:i < data.length |==> true
478:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapCbrtToSelf():524:data[i] = Math.cbrt(data[i]) |==> <NO-OP>
479:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:0 |==> 1
480:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:0 |==> -1
481:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:i < data.length |==> i != data.length
482:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:i < data.length |==> i <= data.length
483:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:i < data.length |==> i == data.length
484:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:i < data.length |==> i > data.length
485:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:i < data.length |==> i >= data.length
486:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:i < data.length |==> false
487:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():531:i < data.length |==> true
488:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapCeilToSelf():532:data[i] = Math.ceil(data[i]) |==> <NO-OP>
489:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:0 |==> 1
490:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:0 |==> -1
491:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:i < data.length |==> i != data.length
492:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:i < data.length |==> i <= data.length
493:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:i < data.length |==> i == data.length
494:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:i < data.length |==> i > data.length
495:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:i < data.length |==> i >= data.length
496:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:i < data.length |==> false
497:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():539:i < data.length |==> true
498:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapFloorToSelf():540:data[i] = Math.floor(data[i]) |==> <NO-OP>
499:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:0 |==> 1
500:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:0 |==> -1
501:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:i < data.length |==> i != data.length
502:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:i < data.length |==> i <= data.length
503:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:i < data.length |==> i == data.length
504:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:i < data.length |==> i > data.length
505:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:i < data.length |==> i >= data.length
506:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:i < data.length |==> false
507:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():547:i < data.length |==> true
508:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapRintToSelf():548:data[i] = Math.rint(data[i]) |==> <NO-OP>
509:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:0 |==> 1
510:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:0 |==> -1
511:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:i < data.length |==> i != data.length
512:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:i < data.length |==> i <= data.length
513:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:i < data.length |==> i == data.length
514:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:i < data.length |==> i > data.length
515:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:i < data.length |==> i >= data.length
516:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:i < data.length |==> false
517:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():555:i < data.length |==> true
518:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapSignumToSelf():556:data[i] = Math.signum(data[i]) |==> <NO-OP>
519:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:0 |==> 1
520:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:0 |==> -1
521:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:i < data.length |==> i != data.length
522:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:i < data.length |==> i <= data.length
523:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:i < data.length |==> i == data.length
524:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:i < data.length |==> i > data.length
525:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:i < data.length |==> i >= data.length
526:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:i < data.length |==> false
527:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():563:i < data.length |==> true
528:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@mapUlpToSelf():564:data[i] = Math.ulp(data[i]) |==> <NO-OP>
529:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):575:checkVectorDimensions(v) |==> <NO-OP>
530:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:0 |==> 1
531:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:0 |==> -1
532:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:i < data.length |==> i != data.length
533:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:i < data.length |==> i <= data.length
534:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:i < data.length |==> i == data.length
535:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:i < data.length |==> i > data.length
536:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:i < data.length |==> i >= data.length
537:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:i < data.length |==> false
538:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):577:i < data.length |==> true
539:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):578:out[i] *= v.getEntry(i) |==> <NO-OP>
540:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):580:false |==> true
541:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):587:checkVectorDimensions(v.length) |==> <NO-OP>
542:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:0 |==> 1
543:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:0 |==> -1
544:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:i < data.length |==> i != data.length
545:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:i < data.length |==> i <= data.length
546:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:i < data.length |==> i == data.length
547:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:i < data.length |==> i > data.length
548:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:i < data.length |==> i >= data.length
549:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:i < data.length |==> false
550:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):589:i < data.length |==> true
551:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):590:out[i] *= v[i] |==> <NO-OP>
552:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@ebeMultiply(double[]):592:false |==> true
553:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):612:checkVectorDimensions(v) |==> <NO-OP>
554:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:0 |==> 1
555:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:0 |==> -1
556:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:i < data.length |==> i != data.length
557:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:i < data.length |==> i <= data.length
558:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:i < data.length |==> i == data.length
559:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:i < data.length |==> i > data.length
560:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:i < data.length |==> i >= data.length
561:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:i < data.length |==> false
562:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):614:i < data.length |==> true
563:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):615:out[i] /= v.getEntry(i) |==> <NO-OP>
564:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):617:false |==> true
565:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):624:checkVectorDimensions(v.length) |==> <NO-OP>
566:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:0 |==> 1
567:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:0 |==> -1
568:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:i < data.length |==> i != data.length
569:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:i < data.length |==> i <= data.length
570:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:i < data.length |==> i == data.length
571:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:i < data.length |==> i > data.length
572:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:i < data.length |==> i >= data.length
573:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:i < data.length |==> false
574:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):626:i < data.length |==> true
575:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):627:out[i] /= v[i] |==> <NO-OP>
576:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@ebeDivide(double[]):629:false |==> true
577:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):663:checkVectorDimensions(v) |==> <NO-OP>
578:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):664:0 |==> 1
579:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):664:0 |==> -1
580:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):667:(e = it.next()) != null |==> (e = it.next()) == null
581:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):667:(e = it.next()) != null |==> false
582:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):667:it.hasNext() && (e = it.next()) != null |==> it.hasNext() != ((e = it.next()) != null)
583:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):667:it.hasNext() && (e = it.next()) != null |==> it.hasNext() == ((e = it.next()) != null)
584:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):667:it.hasNext() && (e = it.next()) != null |==> (e = it.next()) != null
585:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):668:data[e.getIndex()] * e.getValue() |==> data[e.getIndex()] % e.getValue()
586:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):668:data[e.getIndex()] * e.getValue() |==> data[e.getIndex()] + e.getValue()
587:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):668:data[e.getIndex()] * e.getValue() |==> data[e.getIndex()] - e.getValue()
588:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):668:data[e.getIndex()] * e.getValue() |==> data[e.getIndex()] / e.getValue()
589:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@dotProduct(org.apache.commons.math.linear.RealVector):668:dot += data[e.getIndex()] * e.getValue() |==> <NO-OP>
590:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):677:checkVectorDimensions(v.length) |==> <NO-OP>
591:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):678:0 |==> 1
592:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):678:0 |==> -1
593:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:0 |==> 1
594:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:0 |==> -1
595:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:i < data.length |==> i != data.length
596:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:i < data.length |==> i <= data.length
597:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:i < data.length |==> i == data.length
598:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:i < data.length |==> i > data.length
599:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:i < data.length |==> i >= data.length
600:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:i < data.length |==> false
601:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):679:i < data.length |==> true
602:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):680:data[i] * v[i] |==> data[i] % v[i]
603:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):680:data[i] * v[i] |==> data[i] + v[i]
604:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):680:data[i] * v[i] |==> data[i] - v[i]
605:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):680:data[i] * v[i] |==> data[i] / v[i]
606:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@dotProduct(double[]):680:dot += data[i] * v[i] |==> <NO-OP>
607:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getNorm():699:0 |==> 1
608:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getNorm():699:0 |==> -1
609:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getNorm():701:a * a |==> a % a
610:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getNorm():701:a * a |==> a + a
611:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@getNorm():701:a * a |==> a - a
612:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getNorm():701:a * a |==> a / a
613:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getNorm():701:sum += a * a |==> <NO-OP>
614:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getL1Norm():709:0 |==> 1
615:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getL1Norm():709:0 |==> -1
616:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getL1Norm():711:sum += Math.abs(a) |==> <NO-OP>
617:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getLInfNorm():719:0 |==> 1
618:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getLInfNorm():719:0 |==> -1
619:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getLInfNorm():721:max = Math.max(max, Math.abs(a)) |==> <NO-OP>
620:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):732:checkVectorDimensions(v) |==> <NO-OP>
621:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):733:0 |==> 1
622:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):733:0 |==> -1
623:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:0 |==> 1
624:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:0 |==> -1
625:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:i < data.length |==> i != data.length
626:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:i < data.length |==> i <= data.length
627:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:i < data.length |==> i == data.length
628:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:i < data.length |==> i > data.length
629:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:i < data.length |==> i >= data.length
630:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:i < data.length |==> false
631:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):734:i < data.length |==> true
632:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):735:data[i] - v.getEntry(i) |==> data[i] % v.getEntry(i)
633:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):735:data[i] - v.getEntry(i) |==> data[i] * v.getEntry(i)
634:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):735:data[i] - v.getEntry(i) |==> data[i] + v.getEntry(i)
635:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):735:data[i] - v.getEntry(i) |==> data[i] / v.getEntry(i)
636:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):736:delta * delta |==> delta % delta
637:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):736:delta * delta |==> delta + delta
638:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):736:delta * delta |==> delta - delta
639:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):736:delta * delta |==> delta / delta
640:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getDistance(org.apache.commons.math.linear.RealVector):736:sum += delta * delta |==> <NO-OP>
641:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):745:checkVectorDimensions(v.length) |==> <NO-OP>
642:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):746:0 |==> 1
643:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):746:0 |==> -1
644:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:0 |==> 1
645:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:0 |==> -1
646:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:i < data.length |==> i != data.length
647:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:i < data.length |==> i <= data.length
648:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:i < data.length |==> i == data.length
649:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:i < data.length |==> i > data.length
650:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:i < data.length |==> i >= data.length
651:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:i < data.length |==> false
652:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):747:i < data.length |==> true
653:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):748:data[i] - v[i] |==> data[i] % v[i]
654:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):748:data[i] - v[i] |==> data[i] * v[i]
655:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):748:data[i] - v[i] |==> data[i] + v[i]
656:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):748:data[i] - v[i] |==> data[i] / v[i]
657:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):749:delta * delta |==> delta % delta
658:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):749:delta * delta |==> delta + delta
659:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):749:delta * delta |==> delta - delta
660:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):749:delta * delta |==> delta / delta
661:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getDistance(double[]):749:sum += delta * delta |==> <NO-OP>
662:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):778:checkVectorDimensions(v) |==> <NO-OP>
663:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):779:0 |==> 1
664:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):779:0 |==> -1
665:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:0 |==> 1
666:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:0 |==> -1
667:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:i < data.length |==> i != data.length
668:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:i < data.length |==> i <= data.length
669:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:i < data.length |==> i == data.length
670:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:i < data.length |==> i > data.length
671:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:i < data.length |==> i >= data.length
672:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:i < data.length |==> false
673:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):780:i < data.length |==> true
674:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):781:data[i] - v.getEntry(i) |==> data[i] % v.getEntry(i)
675:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):781:data[i] - v.getEntry(i) |==> data[i] * v.getEntry(i)
676:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):781:data[i] - v.getEntry(i) |==> data[i] + v.getEntry(i)
677:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):781:data[i] - v.getEntry(i) |==> data[i] / v.getEntry(i)
678:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):782:sum += Math.abs(delta) |==> <NO-OP>
679:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):791:checkVectorDimensions(v.length) |==> <NO-OP>
680:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):792:0 |==> 1
681:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):792:0 |==> -1
682:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:0 |==> 1
683:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:0 |==> -1
684:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:i < data.length |==> i != data.length
685:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:i < data.length |==> i <= data.length
686:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:i < data.length |==> i == data.length
687:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:i < data.length |==> i > data.length
688:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:i < data.length |==> i >= data.length
689:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:i < data.length |==> false
690:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):793:i < data.length |==> true
691:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):794:data[i] - v[i] |==> data[i] % v[i]
692:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):794:data[i] - v[i] |==> data[i] * v[i]
693:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):794:data[i] - v[i] |==> data[i] + v[i]
694:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):794:data[i] - v[i] |==> data[i] / v[i]
695:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getL1Distance(double[]):795:sum += Math.abs(delta) |==> <NO-OP>
696:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):824:checkVectorDimensions(v) |==> <NO-OP>
697:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):825:0 |==> 1
698:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):825:0 |==> -1
699:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:0 |==> 1
700:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:0 |==> -1
701:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:i < data.length |==> i != data.length
702:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:i < data.length |==> i <= data.length
703:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:i < data.length |==> i == data.length
704:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:i < data.length |==> i > data.length
705:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:i < data.length |==> i >= data.length
706:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:i < data.length |==> false
707:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):826:i < data.length |==> true
708:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):827:data[i] - v.getEntry(i) |==> data[i] % v.getEntry(i)
709:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):827:data[i] - v.getEntry(i) |==> data[i] * v.getEntry(i)
710:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):827:data[i] - v.getEntry(i) |==> data[i] + v.getEntry(i)
711:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):827:data[i] - v.getEntry(i) |==> data[i] / v.getEntry(i)
712:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):828:max = Math.max(max, Math.abs(delta)) |==> <NO-OP>
713:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):837:checkVectorDimensions(v.length) |==> <NO-OP>
714:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):838:0 |==> 1
715:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):838:0 |==> -1
716:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:0 |==> 1
717:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:0 |==> -1
718:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:i < data.length |==> i != data.length
719:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:i < data.length |==> i <= data.length
720:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:i < data.length |==> i == data.length
721:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:i < data.length |==> i > data.length
722:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:i < data.length |==> i >= data.length
723:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:i < data.length |==> false
724:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):839:i < data.length |==> true
725:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):840:data[i] - v[i] |==> data[i] % v[i]
726:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):840:data[i] - v[i] |==> data[i] * v[i]
727:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):840:data[i] - v[i] |==> data[i] + v[i]
728:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):840:data[i] - v[i] |==> data[i] / v[i]
729:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getLInfDistance(double[]):841:max = Math.max(max, Math.abs(delta)) |==> <NO-OP>
730:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@unitVector():867:0 |==> 1
731:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@unitVector():867:0 |==> -1
732:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.ArrayRealVector@unitVector():867:norm == 0 |==> norm != 0
733:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.ArrayRealVector@unitVector():867:norm == 0 |==> norm < 0
734:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.ArrayRealVector@unitVector():867:norm == 0 |==> norm <= 0
735:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.ArrayRealVector@unitVector():867:norm == 0 |==> norm > 0
736:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.ArrayRealVector@unitVector():867:norm == 0 |==> norm >= 0
737:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.ArrayRealVector@unitVector():867:norm == 0 |==> false
738:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.ArrayRealVector@unitVector():867:norm == 0 |==> true
739:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@unitize():876:0 |==> 1
740:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@unitize():876:0 |==> -1
741:ROR:==(double,double):!=(double,double):org.apache.commons.math.linear.ArrayRealVector@unitize():876:norm == 0 |==> norm != 0
742:ROR:==(double,double):<(double,double):org.apache.commons.math.linear.ArrayRealVector@unitize():876:norm == 0 |==> norm < 0
743:ROR:==(double,double):<=(double,double):org.apache.commons.math.linear.ArrayRealVector@unitize():876:norm == 0 |==> norm <= 0
744:ROR:==(double,double):>(double,double):org.apache.commons.math.linear.ArrayRealVector@unitize():876:norm == 0 |==> norm > 0
745:ROR:==(double,double):>=(double,double):org.apache.commons.math.linear.ArrayRealVector@unitize():876:norm == 0 |==> norm >= 0
746:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.linear.ArrayRealVector@unitize():876:norm == 0 |==> false
747:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.linear.ArrayRealVector@unitize():876:norm == 0 |==> true
748:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@unitize():879:mapDivideToSelf(norm) |==> <NO-OP>
749:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.RealVector):884:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) % v.dotProduct(v)
750:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.RealVector):884:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) * v.dotProduct(v)
751:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.RealVector):884:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) + v.dotProduct(v)
752:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.RealVector):884:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) - v.dotProduct(v)
753:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@projection(double[]):889:false |==> true
754:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.ArrayRealVector):898:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) % v.dotProduct(v)
755:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.ArrayRealVector):898:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) * v.dotProduct(v)
756:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.ArrayRealVector):898:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) + v.dotProduct(v)
757:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@projection(org.apache.commons.math.linear.ArrayRealVector):898:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) - v.dotProduct(v)
758:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):907:checkVectorDimensions(v) |==> <NO-OP>
759:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:0 |==> 1
760:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:0 |==> -1
761:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:i < data.length |==> i != data.length
762:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:i < data.length |==> i <= data.length
763:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:i < data.length |==> i == data.length
764:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:i < data.length |==> i > data.length
765:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:i < data.length |==> i >= data.length
766:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:i < data.length |==> false
767:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):910:i < data.length |==> true
768:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:0 |==> 1
769:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:0 |==> -1
770:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:j < data.length |==> j != data.length
771:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:j < data.length |==> j <= data.length
772:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:j < data.length |==> j == data.length
773:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:j < data.length |==> j > data.length
774:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:j < data.length |==> j >= data.length
775:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:j < data.length |==> false
776:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):911:j < data.length |==> true
777:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):912:data[i] * v.getEntry(j) |==> data[i] % v.getEntry(j)
778:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):912:data[i] * v.getEntry(j) |==> data[i] + v.getEntry(j)
779:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):912:data[i] * v.getEntry(j) |==> data[i] - v.getEntry(j)
780:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):912:data[i] * v.getEntry(j) |==> data[i] / v.getEntry(j)
781:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@outerProduct(org.apache.commons.math.linear.RealVector):912:out.setEntry(i, j, data[i] * v.getEntry(j)) |==> <NO-OP>
782:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):933:checkVectorDimensions(v.length) |==> <NO-OP>
783:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:0 |==> 1
784:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:0 |==> -1
785:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:i < data.length |==> i != data.length
786:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:i < data.length |==> i <= data.length
787:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:i < data.length |==> i == data.length
788:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:i < data.length |==> i > data.length
789:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:i < data.length |==> i >= data.length
790:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:i < data.length |==> false
791:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):936:i < data.length |==> true
792:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:0 |==> 1
793:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:0 |==> -1
794:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:j < data.length |==> j != data.length
795:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:j < data.length |==> j <= data.length
796:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:j < data.length |==> j == data.length
797:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:j < data.length |==> j > data.length
798:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:j < data.length |==> j >= data.length
799:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:j < data.length |==> false
800:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):937:j < data.length |==> true
801:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):938:data[i] * v[j] |==> data[i] % v[j]
802:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):938:data[i] * v[j] |==> data[i] + v[j]
803:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):938:data[i] * v[j] |==> data[i] - v[j]
804:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):938:data[i] * v[j] |==> data[i] / v[j]
805:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@outerProduct(double[]):938:out.setEntry(i, j, data[i] * v[j]) |==> <NO-OP>
806:LVR:POS:0:org.apache.commons.math.linear.ArrayRealVector@append(double):974:1 |==> 0
807:LVR:POS:NEG:org.apache.commons.math.linear.ArrayRealVector@append(double):974:1 |==> -1
808:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@append(double):974:data.length + 1 |==> data.length % 1
809:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@append(double):974:data.length + 1 |==> data.length * 1
810:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@append(double):974:data.length + 1 |==> data.length - 1
811:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@append(double):974:data.length + 1 |==> data.length / 1
812:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@append(double):975:0 |==> 1
813:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@append(double):975:0 |==> -1
814:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@append(double):975:0 |==> 1
815:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@append(double):975:0 |==> -1
816:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@append(double):975:System.arraycopy(data, 0, out, 0, data.length) |==> <NO-OP>
817:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@append(double):976:out[data.length] = in |==> <NO-OP>
818:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@append(double):977:false |==> true
819:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):989:0 |==> 1
820:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):989:0 |==> -1
821:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):989:System.arraycopy(data, index, out.data, 0, n) |==> <NO-OP>
822:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):991:checkIndex(index) |==> <NO-OP>
823:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n |==> index % n
824:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n |==> index * n
825:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n |==> index - n
826:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n |==> index / n
827:LVR:POS:0:org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:1 |==> 0
828:LVR:POS:NEG:org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:1 |==> -1
829:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n - 1 |==> (index + n) % 1
830:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n - 1 |==> (index + n) * 1
831:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n - 1 |==> index + n + 1
832:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:index + n - 1 |==> (index + n) / 1
833:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@getSubVector(int,int):992:checkIndex(index + n - 1) |==> <NO-OP>
834:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setEntry(int,double):1000:data[index] = value |==> <NO-OP>
835:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setEntry(int,double):1002:checkIndex(index) |==> <NO-OP>
836:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1010:set(index, (ArrayRealVector)v) |==> <NO-OP>
837:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:index + v.getDimension() |==> index % v.getDimension()
838:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:index + v.getDimension() |==> index * v.getDimension()
839:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:index + v.getDimension() |==> index - v.getDimension()
840:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:index + v.getDimension() |==> index / v.getDimension()
841:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:i < index + v.getDimension() |==> i != index + v.getDimension()
842:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:i < index + v.getDimension() |==> i <= index + v.getDimension()
843:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:i < index + v.getDimension() |==> i == index + v.getDimension()
844:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:i < index + v.getDimension() |==> i > index + v.getDimension()
845:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:i < index + v.getDimension() |==> i >= index + v.getDimension()
846:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:i < index + v.getDimension() |==> false
847:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1012:i < index + v.getDimension() |==> true
848:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1013:i - index |==> i % index
849:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1013:i - index |==> i * index
850:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1013:i - index |==> i + index
851:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1013:i - index |==> i / index
852:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1013:data[i] = v.getEntry(i - index) |==> <NO-OP>
853:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1017:checkIndex(index) |==> <NO-OP>
854:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() |==> index % v.getDimension()
855:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() |==> index * v.getDimension()
856:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() |==> index - v.getDimension()
857:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() |==> index / v.getDimension()
858:LVR:POS:0:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:1 |==> 0
859:LVR:POS:NEG:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:1 |==> -1
860:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() - 1 |==> (index + v.getDimension()) % 1
861:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() - 1 |==> (index + v.getDimension()) * 1
862:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() - 1 |==> index + v.getDimension() + 1
863:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:index + v.getDimension() - 1 |==> (index + v.getDimension()) / 1
864:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):1018:checkIndex(index + v.getDimension() - 1) |==> <NO-OP>
865:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1025:0 |==> 1
866:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1025:0 |==> -1
867:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1025:System.arraycopy(v, 0, data, index, v.length) |==> <NO-OP>
868:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1027:checkIndex(index) |==> <NO-OP>
869:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length |==> index % v.length
870:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length |==> index * v.length
871:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length |==> index - v.length
872:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length |==> index / v.length
873:LVR:POS:0:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:1 |==> 0
874:LVR:POS:NEG:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:1 |==> -1
875:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length - 1 |==> (index + v.length) % 1
876:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length - 1 |==> (index + v.length) * 1
877:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length - 1 |==> index + v.length + 1
878:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:index + v.length - 1 |==> (index + v.length) / 1
879:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@setSubVector(int,double[]):1028:checkIndex(index + v.length - 1) |==> <NO-OP>
880:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@set(int,org.apache.commons.math.linear.ArrayRealVector):1042:setSubVector(index, v.data) |==> <NO-OP>
881:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@set(double):1047:Arrays.fill(data, value) |==> <NO-OP>
882:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(org.apache.commons.math.linear.RealVector):1069:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
883:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(int):1081:data.length != n |==> data.length < n
884:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(int):1081:data.length != n |==> data.length <= n
885:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(int):1081:data.length != n |==> data.length == n
886:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(int):1081:data.length != n |==> data.length > n
887:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(int):1081:data.length != n |==> data.length >= n
888:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(int):1081:data.length != n |==> false
889:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@checkVectorDimensions(int):1081:data.length != n |==> true
890:COR:Double.isNaN(v):TRUE:org.apache.commons.math.linear.ArrayRealVector@isNaN():1094:Double.isNaN(v) |==> false
891:COR:Double.isNaN(v):FALSE:org.apache.commons.math.linear.ArrayRealVector@isNaN():1094:Double.isNaN(v) |==> true
892:LVR:TRUE:FALSE:org.apache.commons.math.linear.ArrayRealVector@isNaN():1095:true |==> false
893:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@isNaN():1098:false |==> true
894:COR:isNaN():TRUE:org.apache.commons.math.linear.ArrayRealVector@isInfinite():1109:isNaN() |==> false
895:COR:isNaN():FALSE:org.apache.commons.math.linear.ArrayRealVector@isInfinite():1109:isNaN() |==> true
896:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@isInfinite():1110:false |==> true
897:COR:Double.isInfinite(v):TRUE:org.apache.commons.math.linear.ArrayRealVector@isInfinite():1114:Double.isInfinite(v) |==> false
898:COR:Double.isInfinite(v):FALSE:org.apache.commons.math.linear.ArrayRealVector@isInfinite():1114:Double.isInfinite(v) |==> true
899:LVR:TRUE:FALSE:org.apache.commons.math.linear.ArrayRealVector@isInfinite():1115:true |==> false
900:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@isInfinite():1119:false |==> true
901:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1145:this == other |==> this != other
902:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1145:this == other |==> false
903:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1145:this == other |==> true
904:LVR:TRUE:FALSE:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1146:true |==> false
905:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null |==> other != null
906:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null |==> false
907:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null |==> true
908:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null || !(other instanceof RealVector) |==> other == null != !(other instanceof RealVector)
909:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null || !(other instanceof RealVector) |==> other == null && !(other instanceof RealVector)
910:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null || !(other instanceof RealVector) |==> other == null == !(other instanceof RealVector)
911:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null || !(other instanceof RealVector) |==> false
912:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null || !(other instanceof RealVector) |==> other == null
913:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null || !(other instanceof RealVector) |==> !(other instanceof RealVector)
914:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1149:other == null || !(other instanceof RealVector) |==> true
915:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1150:false |==> true
916:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1155:data.length != rhs.getDimension() |==> data.length < rhs.getDimension()
917:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1155:data.length != rhs.getDimension() |==> data.length <= rhs.getDimension()
918:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1155:data.length != rhs.getDimension() |==> data.length == rhs.getDimension()
919:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1155:data.length != rhs.getDimension() |==> data.length > rhs.getDimension()
920:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1155:data.length != rhs.getDimension() |==> data.length >= rhs.getDimension()
921:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1155:data.length != rhs.getDimension() |==> false
922:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1155:data.length != rhs.getDimension() |==> true
923:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1156:false |==> true
924:COR:rhs.isNaN():TRUE:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1159:rhs.isNaN() |==> false
925:COR:rhs.isNaN():FALSE:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1159:rhs.isNaN() |==> true
926:LVR:0:POS:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:0 |==> 1
927:LVR:0:NEG:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:0 |==> -1
928:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:i < data.length |==> i != data.length
929:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:i < data.length |==> i <= data.length
930:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:i < data.length |==> i == data.length
931:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:i < data.length |==> i > data.length
932:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:i < data.length |==> i >= data.length
933:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:i < data.length |==> false
934:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1163:i < data.length |==> true
935:ROR:!=(double,double):<(double,double):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1164:data[i] != rhs.getEntry(i) |==> data[i] < rhs.getEntry(i)
936:ROR:!=(double,double):<=(double,double):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1164:data[i] != rhs.getEntry(i) |==> data[i] <= rhs.getEntry(i)
937:ROR:!=(double,double):==(double,double):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1164:data[i] != rhs.getEntry(i) |==> data[i] == rhs.getEntry(i)
938:ROR:!=(double,double):>(double,double):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1164:data[i] != rhs.getEntry(i) |==> data[i] > rhs.getEntry(i)
939:ROR:!=(double,double):>=(double,double):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1164:data[i] != rhs.getEntry(i) |==> data[i] >= rhs.getEntry(i)
940:ROR:!=(double,double):FALSE(double,double):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1164:data[i] != rhs.getEntry(i) |==> false
941:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1164:data[i] != rhs.getEntry(i) |==> true
942:LVR:FALSE:TRUE:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1165:false |==> true
943:LVR:TRUE:FALSE:org.apache.commons.math.linear.ArrayRealVector@equals(java.lang.Object):1168:true |==> false
944:COR:isNaN():TRUE:org.apache.commons.math.linear.ArrayRealVector@hashCode():1178:isNaN() |==> false
945:COR:isNaN():FALSE:org.apache.commons.math.linear.ArrayRealVector@hashCode():1178:isNaN() |==> true
946:LVR:POS:0:org.apache.commons.math.linear.ArrayRealVector@hashCode():1179:9 |==> 0
947:LVR:POS:NEG:org.apache.commons.math.linear.ArrayRealVector@hashCode():1179:9 |==> -9
948:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>():57:0 |==> 1
949:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>():57:0 |==> -1
950:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(int,double):75:0.0 |==> 1.0
951:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(int,double):75:0.0 |==> -1.0
952:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(int,double):76:this.epsilon = epsilon |==> <NO-OP>
953:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.OpenMapRealVector,int):85:v.getDimension() + resize |==> v.getDimension() % resize
954:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.OpenMapRealVector,int):85:v.getDimension() + resize |==> v.getDimension() * resize
955:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.OpenMapRealVector,int):85:v.getDimension() + resize |==> v.getDimension() - resize
956:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.OpenMapRealVector,int):85:v.getDimension() + resize |==> v.getDimension() / resize
957:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.OpenMapRealVector,int):87:epsilon = v.epsilon |==> <NO-OP>
958:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(int,int,double):107:0.0 |==> 1.0
959:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(int,int,double):107:0.0 |==> -1.0
960:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(int,int,double):108:this.epsilon = epsilon |==> <NO-OP>
961:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):128:0.0 |==> 1.0
962:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):128:0.0 |==> -1.0
963:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):129:this.epsilon = epsilon |==> <NO-OP>
964:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:0 |==> 1
965:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:0 |==> -1
966:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:key < values.length |==> key != values.length
967:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:key < values.length |==> key <= values.length
968:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:key < values.length |==> key == values.length
969:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:key < values.length |==> key > values.length
970:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:key < values.length |==> key >= values.length
971:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:key < values.length |==> false
972:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):130:key < values.length |==> true
973:COR:isDefaultValue(value):TRUE:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):132:isDefaultValue(value) |==> false
974:COR:isDefaultValue(value):FALSE:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):132:isDefaultValue(value) |==> true
975:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(double[],double):133:entries.put(key, value) |==> <NO-OP>
976:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):155:0.0 |==> 1.0
977:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):155:0.0 |==> -1.0
978:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):156:this.epsilon = epsilon |==> <NO-OP>
979:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:0 |==> 1
980:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:0 |==> -1
981:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:key < values.length |==> key != values.length
982:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:key < values.length |==> key <= values.length
983:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:key < values.length |==> key == values.length
984:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:key < values.length |==> key > values.length
985:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:key < values.length |==> key >= values.length
986:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:key < values.length |==> false
987:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):157:key < values.length |==> true
988:COR:isDefaultValue(value):TRUE:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):159:isDefaultValue(value) |==> false
989:COR:isDefaultValue(value):FALSE:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):159:isDefaultValue(value) |==> true
990:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(java.lang.Double[],double):160:entries.put(key, value) |==> <NO-OP>
991:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.OpenMapRealVector):172:epsilon = v.epsilon |==> <NO-OP>
992:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):181:0.0 |==> 1.0
993:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):181:0.0 |==> -1.0
994:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):182:epsilon = DEFAULT_ZERO_TOLERANCE |==> <NO-OP>
995:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:0 |==> 1
996:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:0 |==> -1
997:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:key < virtualSize |==> key != virtualSize
998:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:key < virtualSize |==> key <= virtualSize
999:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:key < virtualSize |==> key == virtualSize
1000:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:key < virtualSize |==> key > virtualSize
1001:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:key < virtualSize |==> key >= virtualSize
1002:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:key < virtualSize |==> false
1003:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):183:key < virtualSize |==> true
1004:COR:isDefaultValue(value):TRUE:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):185:isDefaultValue(value) |==> false
1005:COR:isDefaultValue(value):FALSE:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):185:isDefaultValue(value) |==> true
1006:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@<init>(org.apache.commons.math.linear.RealVector):186:entries.put(key, value) |==> <NO-OP>
1007:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.OpenMapRealVector@isDefaultValue(double):205:Math.abs(value) < epsilon |==> Math.abs(value) != epsilon
1008:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.OpenMapRealVector@isDefaultValue(double):205:Math.abs(value) < epsilon |==> Math.abs(value) <= epsilon
1009:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.OpenMapRealVector@isDefaultValue(double):205:Math.abs(value) < epsilon |==> Math.abs(value) == epsilon
1010:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.OpenMapRealVector@isDefaultValue(double):205:Math.abs(value) < epsilon |==> Math.abs(value) > epsilon
1011:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.OpenMapRealVector@isDefaultValue(double):205:Math.abs(value) < epsilon |==> Math.abs(value) >= epsilon
1012:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.OpenMapRealVector@isDefaultValue(double):205:Math.abs(value) < epsilon |==> false
1013:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.OpenMapRealVector@isDefaultValue(double):205:Math.abs(value) < epsilon |==> true
1014:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.RealVector):210:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1015:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):225:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1016:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):226:entries.size() > v.entries.size() |==> entries.size() != v.entries.size()
1017:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):226:entries.size() > v.entries.size() |==> entries.size() < v.entries.size()
1018:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):226:entries.size() > v.entries.size() |==> entries.size() <= v.entries.size()
1019:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):226:entries.size() > v.entries.size() |==> entries.size() == v.entries.size()
1020:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):226:entries.size() > v.entries.size() |==> entries.size() >= v.entries.size()
1021:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):226:entries.size() > v.entries.size() |==> false
1022:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):226:entries.size() > v.entries.size() |==> true
1023:COR:copyThis:TRUE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):227:copyThis |==> false
1024:COR:copyThis:FALSE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):227:copyThis |==> true
1025:COR:copyThis:TRUE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):228:copyThis |==> false
1026:COR:copyThis:FALSE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):228:copyThis |==> true
1027:COR:copyThis:TRUE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):229:copyThis |==> false
1028:COR:copyThis:FALSE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):229:copyThis |==> true
1029:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):231:iter.advance() |==> <NO-OP>
1030:COR:randomAccess.containsKey(key):TRUE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):233:randomAccess.containsKey(key) |==> false
1031:COR:randomAccess.containsKey(key):FALSE:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):233:randomAccess.containsKey(key) |==> true
1032:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):234:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) % iter.value()
1033:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):234:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) * iter.value()
1034:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):234:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) - iter.value()
1035:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):234:randomAccess.get(key) + iter.value() |==> randomAccess.get(key) / iter.value()
1036:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):234:res.setEntry(key, randomAccess.get(key) + iter.value()) |==> <NO-OP>
1037:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@add(org.apache.commons.math.linear.OpenMapRealVector):236:res.setEntry(key, iter.value()) |==> <NO-OP>
1038:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@append(org.apache.commons.math.linear.OpenMapRealVector):251:iter.advance() |==> <NO-OP>
1039:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(org.apache.commons.math.linear.OpenMapRealVector):252:iter.key() + virtualSize |==> iter.key() % virtualSize
1040:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(org.apache.commons.math.linear.OpenMapRealVector):252:iter.key() + virtualSize |==> iter.key() * virtualSize
1041:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(org.apache.commons.math.linear.OpenMapRealVector):252:iter.key() + virtualSize |==> iter.key() - virtualSize
1042:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(org.apache.commons.math.linear.OpenMapRealVector):252:iter.key() + virtualSize |==> iter.key() / virtualSize
1043:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@append(org.apache.commons.math.linear.OpenMapRealVector):252:res.setEntry(iter.key() + virtualSize, iter.value()) |==> <NO-OP>
1044:LVR:POS:0:org.apache.commons.math.linear.OpenMapRealVector@append(double):267:1 |==> 0
1045:LVR:POS:NEG:org.apache.commons.math.linear.OpenMapRealVector@append(double):267:1 |==> -1
1046:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@append(double):268:res.setEntry(virtualSize, d) |==> <NO-OP>
1047:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:0 |==> 1
1048:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:0 |==> -1
1049:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:i < a.length |==> i != a.length
1050:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:i < a.length |==> i <= a.length
1051:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:i < a.length |==> i == a.length
1052:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:i < a.length |==> i > a.length
1053:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:i < a.length |==> i >= a.length
1054:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:i < a.length |==> false
1055:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):275:i < a.length |==> true
1056:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):276:i + virtualSize |==> i % virtualSize
1057:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):276:i + virtualSize |==> i * virtualSize
1058:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):276:i + virtualSize |==> i - virtualSize
1059:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@append(double[]):276:i + virtualSize |==> i / virtualSize
1060:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@append(double[]):276:res.setEntry(i + virtualSize, a[i]) |==> <NO-OP>
1061:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):294:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1062:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):295:entries.size() < v.entries.size() |==> entries.size() != v.entries.size()
1063:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):295:entries.size() < v.entries.size() |==> entries.size() <= v.entries.size()
1064:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):295:entries.size() < v.entries.size() |==> entries.size() == v.entries.size()
1065:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):295:entries.size() < v.entries.size() |==> entries.size() > v.entries.size()
1066:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):295:entries.size() < v.entries.size() |==> entries.size() >= v.entries.size()
1067:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):295:entries.size() < v.entries.size() |==> false
1068:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):295:entries.size() < v.entries.size() |==> true
1069:COR:thisIsSmaller:TRUE:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):296:thisIsSmaller |==> false
1070:COR:thisIsSmaller:FALSE:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):296:thisIsSmaller |==> true
1071:COR:thisIsSmaller:TRUE:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):297:thisIsSmaller |==> false
1072:COR:thisIsSmaller:FALSE:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):297:thisIsSmaller |==> true
1073:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):298:0 |==> 1
1074:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):298:0 |==> -1
1075:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):300:iter.advance() |==> <NO-OP>
1076:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):301:iter.value() * larger.get(iter.key()) |==> iter.value() % larger.get(iter.key())
1077:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):301:iter.value() * larger.get(iter.key()) |==> iter.value() + larger.get(iter.key())
1078:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):301:iter.value() * larger.get(iter.key()) |==> iter.value() - larger.get(iter.key())
1079:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):301:iter.value() * larger.get(iter.key()) |==> iter.value() / larger.get(iter.key())
1080:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@dotProduct(org.apache.commons.math.linear.OpenMapRealVector):301:d += iter.value() * larger.get(iter.key()) |==> <NO-OP>
1081:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):317:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1082:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):321:iter.advance() |==> <NO-OP>
1083:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):322:iter.value() / v.getEntry(iter.key()) |==> iter.value() % v.getEntry(iter.key())
1084:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):322:iter.value() / v.getEntry(iter.key()) |==> iter.value() * v.getEntry(iter.key())
1085:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):322:iter.value() / v.getEntry(iter.key()) |==> iter.value() + v.getEntry(iter.key())
1086:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):322:iter.value() / v.getEntry(iter.key()) |==> iter.value() - v.getEntry(iter.key())
1087:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(org.apache.commons.math.linear.RealVector):322:res.setEntry(iter.key(), iter.value() / v.getEntry(iter.key())) |==> <NO-OP>
1088:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(double[]):329:checkVectorDimensions(v.length) |==> <NO-OP>
1089:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(double[]):333:iter.advance() |==> <NO-OP>
1090:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(double[]):334:iter.value() / v[iter.key()] |==> iter.value() % v[iter.key()]
1091:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(double[]):334:iter.value() / v[iter.key()] |==> iter.value() * v[iter.key()]
1092:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(double[]):334:iter.value() / v[iter.key()] |==> iter.value() + v[iter.key()]
1093:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(double[]):334:iter.value() / v[iter.key()] |==> iter.value() - v[iter.key()]
1094:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeDivide(double[]):334:res.setEntry(iter.key(), iter.value() / v[iter.key()]) |==> <NO-OP>
1095:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):341:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1096:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):345:iter.advance() |==> <NO-OP>
1097:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):346:iter.value() * v.getEntry(iter.key()) |==> iter.value() % v.getEntry(iter.key())
1098:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):346:iter.value() * v.getEntry(iter.key()) |==> iter.value() + v.getEntry(iter.key())
1099:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):346:iter.value() * v.getEntry(iter.key()) |==> iter.value() - v.getEntry(iter.key())
1100:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):346:iter.value() * v.getEntry(iter.key()) |==> iter.value() / v.getEntry(iter.key())
1101:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(org.apache.commons.math.linear.RealVector):346:res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key())) |==> <NO-OP>
1102:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(double[]):353:checkVectorDimensions(v.length) |==> <NO-OP>
1103:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(double[]):357:iter.advance() |==> <NO-OP>
1104:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(double[]):358:iter.value() * v[iter.key()] |==> iter.value() % v[iter.key()]
1105:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(double[]):358:iter.value() * v[iter.key()] |==> iter.value() + v[iter.key()]
1106:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(double[]):358:iter.value() * v[iter.key()] |==> iter.value() - v[iter.key()]
1107:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(double[]):358:iter.value() * v[iter.key()] |==> iter.value() / v[iter.key()]
1108:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@ebeMultiply(double[]):358:res.setEntry(iter.key(), iter.value() * v[iter.key()]) |==> <NO-OP>
1109:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):365:checkIndex(index) |==> <NO-OP>
1110:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n |==> index % n
1111:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n |==> index * n
1112:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n |==> index - n
1113:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n |==> index / n
1114:LVR:POS:0:org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:1 |==> 0
1115:LVR:POS:NEG:org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:1 |==> -1
1116:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n - 1 |==> (index + n) % 1
1117:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n - 1 |==> (index + n) * 1
1118:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n - 1 |==> index + n + 1
1119:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:index + n - 1 |==> (index + n) / 1
1120:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):366:checkIndex(index + n - 1) |==> <NO-OP>
1121:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):368:index + n |==> index % n
1122:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):368:index + n |==> index * n
1123:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):368:index + n |==> index - n
1124:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):368:index + n |==> index / n
1125:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):371:iter.advance() |==> <NO-OP>
1126:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index |==> key != index
1127:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index |==> key < index
1128:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index |==> key <= index
1129:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index |==> key == index
1130:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index |==> key > index
1131:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index |==> false
1132:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index |==> true
1133:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key < end |==> key != end
1134:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key < end |==> key <= end
1135:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key < end |==> key == end
1136:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key < end |==> key > end
1137:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key < end |==> key >= end
1138:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key < end |==> false
1139:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key < end |==> true
1140:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index && key < end |==> key >= index != key < end
1141:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index && key < end |==> key >= index == key < end
1142:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index && key < end |==> false
1143:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index && key < end |==> key >= index
1144:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index && key < end |==> key < end
1145:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index && key < end |==> true
1146:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):373:key >= index && key < end |==> key >= index || key < end
1147:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):374:key - index |==> key % index
1148:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):374:key - index |==> key * index
1149:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):374:key - index |==> key + index
1150:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):374:key - index |==> key / index
1151:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getSubVector(int,int):374:res.setEntry(key - index, iter.value()) |==> <NO-OP>
1152:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getData():385:iter.advance() |==> <NO-OP>
1153:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getData():386:res[iter.key()] = iter.value() |==> <NO-OP>
1154:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):404:0 |==> 1
1155:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):404:0 |==> -1
1156:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):406:iter.advance() |==> <NO-OP>
1157:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):409:iter.value() - v.getEntry(key) |==> iter.value() % v.getEntry(key)
1158:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):409:iter.value() - v.getEntry(key) |==> iter.value() * v.getEntry(key)
1159:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):409:iter.value() - v.getEntry(key) |==> iter.value() + v.getEntry(key)
1160:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):409:iter.value() - v.getEntry(key) |==> iter.value() / v.getEntry(key)
1161:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):410:delta * delta |==> delta % delta
1162:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):410:delta * delta |==> delta + delta
1163:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):410:delta * delta |==> delta - delta
1164:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):410:delta * delta |==> delta / delta
1165:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):410:res += delta * delta |==> <NO-OP>
1166:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):412:iter = v.getEntries().iterator() |==> <NO-OP>
1167:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):414:iter.advance() |==> <NO-OP>
1168:COR:entries.containsKey(key):TRUE:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):416:entries.containsKey(key) |==> false
1169:COR:entries.containsKey(key):FALSE:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):416:entries.containsKey(key) |==> true
1170:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):418:value * value |==> value % value
1171:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):418:value * value |==> value + value
1172:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):418:value * value |==> value - value
1173:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):418:value * value |==> value / value
1174:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.OpenMapRealVector):418:res += value * value |==> <NO-OP>
1175:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(org.apache.commons.math.linear.RealVector):426:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1176:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):435:checkVectorDimensions(v.length) |==> <NO-OP>
1177:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):436:0 |==> 1
1178:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):436:0 |==> -1
1179:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:0 |==> 1
1180:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:0 |==> -1
1181:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:i < v.length |==> i != v.length
1182:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:i < v.length |==> i <= v.length
1183:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:i < v.length |==> i == v.length
1184:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:i < v.length |==> i > v.length
1185:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:i < v.length |==> i >= v.length
1186:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:i < v.length |==> false
1187:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):437:i < v.length |==> true
1188:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):438:entries.get(i) - v[i] |==> entries.get(i) % v[i]
1189:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):438:entries.get(i) - v[i] |==> entries.get(i) * v[i]
1190:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):438:entries.get(i) - v[i] |==> entries.get(i) + v[i]
1191:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):438:entries.get(i) - v[i] |==> entries.get(i) / v[i]
1192:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):439:delta * delta |==> delta % delta
1193:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):439:delta * delta |==> delta + delta
1194:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):439:delta * delta |==> delta - delta
1195:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):439:delta * delta |==> delta / delta
1196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getDistance(double[]):439:res += delta * delta |==> <NO-OP>
1197:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getEntry(int):446:checkIndex(index) |==> <NO-OP>
1198:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):459:0 |==> 1
1199:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):459:0 |==> -1
1200:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):462:iter.advance() |==> <NO-OP>
1201:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):463:iter.value() - v.getEntry(iter.key()) |==> iter.value() % v.getEntry(iter.key())
1202:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):463:iter.value() - v.getEntry(iter.key()) |==> iter.value() * v.getEntry(iter.key())
1203:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):463:iter.value() - v.getEntry(iter.key()) |==> iter.value() + v.getEntry(iter.key())
1204:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):463:iter.value() - v.getEntry(iter.key()) |==> iter.value() / v.getEntry(iter.key())
1205:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):464:max += delta |==> <NO-OP>
1206:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):466:iter = v.getEntries().iterator() |==> <NO-OP>
1207:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):468:iter.advance() |==> <NO-OP>
1208:COR:entries.containsKey(key):TRUE:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):470:entries.containsKey(key) |==> false
1209:COR:entries.containsKey(key):FALSE:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):470:entries.containsKey(key) |==> true
1210:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.OpenMapRealVector):472:max += Math.abs(delta) |==> <NO-OP>
1211:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(org.apache.commons.math.linear.RealVector):480:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1212:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):489:checkVectorDimensions(v.length) |==> <NO-OP>
1213:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):490:0 |==> 1
1214:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):490:0 |==> -1
1215:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:0 |==> 1
1216:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:0 |==> -1
1217:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:i < v.length |==> i != v.length
1218:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:i < v.length |==> i <= v.length
1219:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:i < v.length |==> i == v.length
1220:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:i < v.length |==> i > v.length
1221:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:i < v.length |==> i >= v.length
1222:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:i < v.length |==> false
1223:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):491:i < v.length |==> true
1224:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):492:getEntry(i) - v[i] |==> getEntry(i) % v[i]
1225:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):492:getEntry(i) - v[i] |==> getEntry(i) * v[i]
1226:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):492:getEntry(i) - v[i] |==> getEntry(i) + v[i]
1227:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):492:getEntry(i) - v[i] |==> getEntry(i) / v[i]
1228:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getL1Distance(double[]):493:max += delta |==> <NO-OP>
1229:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):504:0 |==> 1
1230:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):504:0 |==> -1
1231:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):507:iter.advance() |==> <NO-OP>
1232:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):508:iter.value() - v.getEntry(iter.key()) |==> iter.value() % v.getEntry(iter.key())
1233:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):508:iter.value() - v.getEntry(iter.key()) |==> iter.value() * v.getEntry(iter.key())
1234:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):508:iter.value() - v.getEntry(iter.key()) |==> iter.value() + v.getEntry(iter.key())
1235:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):508:iter.value() - v.getEntry(iter.key()) |==> iter.value() / v.getEntry(iter.key())
1236:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):509:delta > max |==> delta != max
1237:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):509:delta > max |==> delta < max
1238:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):509:delta > max |==> delta <= max
1239:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):509:delta > max |==> delta == max
1240:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):509:delta > max |==> delta >= max
1241:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):509:delta > max |==> false
1242:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):509:delta > max |==> true
1243:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):510:max = delta |==> <NO-OP>
1244:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):513:iter = v.getEntries().iterator() |==> <NO-OP>
1245:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):515:iter.advance() |==> <NO-OP>
1246:COR:entries.containsKey(key):TRUE:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):517:entries.containsKey(key) |==> false
1247:COR:entries.containsKey(key):FALSE:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):517:entries.containsKey(key) |==> true
1248:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):518:iter.value() > max |==> iter.value() != max
1249:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):518:iter.value() > max |==> iter.value() < max
1250:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):518:iter.value() > max |==> iter.value() <= max
1251:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):518:iter.value() > max |==> iter.value() == max
1252:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):518:iter.value() > max |==> iter.value() >= max
1253:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):518:iter.value() > max |==> false
1254:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):518:iter.value() > max |==> true
1255:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.OpenMapRealVector):519:max = iter.value() |==> <NO-OP>
1256:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(org.apache.commons.math.linear.RealVector):528:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1257:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):537:checkVectorDimensions(v.length) |==> <NO-OP>
1258:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):538:0 |==> 1
1259:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):538:0 |==> -1
1260:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:0 |==> 1
1261:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:0 |==> -1
1262:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:i < v.length |==> i != v.length
1263:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:i < v.length |==> i <= v.length
1264:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:i < v.length |==> i == v.length
1265:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:i < v.length |==> i > v.length
1266:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:i < v.length |==> i >= v.length
1267:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:i < v.length |==> false
1268:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):539:i < v.length |==> true
1269:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):540:getEntry(i) - v[i] |==> getEntry(i) % v[i]
1270:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):540:getEntry(i) - v[i] |==> getEntry(i) * v[i]
1271:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):540:getEntry(i) - v[i] |==> getEntry(i) + v[i]
1272:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):540:getEntry(i) - v[i] |==> getEntry(i) / v[i]
1273:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):541:delta > max |==> delta != max
1274:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):541:delta > max |==> delta < max
1275:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):541:delta > max |==> delta <= max
1276:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):541:delta > max |==> delta == max
1277:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):541:delta > max |==> delta >= max
1278:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):541:delta > max |==> false
1279:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):541:delta > max |==> true
1280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@getLInfDistance(double[]):542:max = delta |==> <NO-OP>
1281:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():550:false |==> true
1282:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():553:iter.advance() |==> <NO-OP>
1283:COR:Double.isNaN(value):TRUE:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():555:Double.isNaN(value) |==> false
1284:COR:Double.isNaN(value):FALSE:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():555:Double.isNaN(value) |==> true
1285:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():556:false |==> true
1286:COR:Double.isInfinite(value):TRUE:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():558:Double.isInfinite(value) |==> false
1287:COR:Double.isInfinite(value):FALSE:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():558:Double.isInfinite(value) |==> true
1288:LVR:TRUE:FALSE:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():559:true |==> false
1289:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@isInfinite():559:infiniteFound = true |==> <NO-OP>
1290:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@isNaN():569:iter.advance() |==> <NO-OP>
1291:COR:Double.isNaN(iter.value()):TRUE:org.apache.commons.math.linear.OpenMapRealVector@isNaN():570:Double.isNaN(iter.value()) |==> false
1292:COR:Double.isNaN(iter.value()):FALSE:org.apache.commons.math.linear.OpenMapRealVector@isNaN():570:Double.isNaN(iter.value()) |==> true
1293:LVR:TRUE:FALSE:org.apache.commons.math.linear.OpenMapRealVector@isNaN():571:true |==> false
1294:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@isNaN():574:false |==> true
1295:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:0 |==> 1
1296:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:0 |==> -1
1297:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:i < virtualSize |==> i != virtualSize
1298:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:i < virtualSize |==> i <= virtualSize
1299:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:i < virtualSize |==> i == virtualSize
1300:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:i < virtualSize |==> i > virtualSize
1301:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:i < virtualSize |==> i >= virtualSize
1302:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:i < virtualSize |==> false
1303:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):584:i < virtualSize |==> true
1304:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):585:getEntry(i) + d |==> getEntry(i) % d
1305:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):585:getEntry(i) + d |==> getEntry(i) * d
1306:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):585:getEntry(i) + d |==> getEntry(i) - d
1307:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):585:getEntry(i) + d |==> getEntry(i) / d
1308:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@mapAddToSelf(double):585:setEntry(i, getEntry(i) + d) |==> <NO-OP>
1309:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):592:checkVectorDimensions(v.length) |==> <NO-OP>
1310:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):596:iter.advance() |==> <NO-OP>
1311:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:0 |==> 1
1312:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:0 |==> -1
1313:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:col < virtualSize |==> col != virtualSize
1314:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:col < virtualSize |==> col <= virtualSize
1315:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:col < virtualSize |==> col == virtualSize
1316:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:col < virtualSize |==> col > virtualSize
1317:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:col < virtualSize |==> col >= virtualSize
1318:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:col < virtualSize |==> false
1319:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):599:col < virtualSize |==> true
1320:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):600:value * v[col] |==> value % v[col]
1321:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):600:value * v[col] |==> value + v[col]
1322:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):600:value * v[col] |==> value - v[col]
1323:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):600:value * v[col] |==> value / v[col]
1324:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@outerProduct(double[]):600:res.setEntry(row, col, value * v[col]) |==> <NO-OP>
1325:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@projection(org.apache.commons.math.linear.RealVector):608:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1326:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@projection(org.apache.commons.math.linear.RealVector):609:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) % v.dotProduct(v)
1327:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@projection(org.apache.commons.math.linear.RealVector):609:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) * v.dotProduct(v)
1328:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@projection(org.apache.commons.math.linear.RealVector):609:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) + v.dotProduct(v)
1329:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@projection(org.apache.commons.math.linear.RealVector):609:dotProduct(v) / v.dotProduct(v) |==> dotProduct(v) - v.dotProduct(v)
1330:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@projection(double[]):614:checkVectorDimensions(v.length) |==> <NO-OP>
1331:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setEntry(int,double):620:checkIndex(index) |==> <NO-OP>
1332:COR:isDefaultValue(value):TRUE:org.apache.commons.math.linear.OpenMapRealVector@setEntry(int,double):621:isDefaultValue(value) |==> false
1333:COR:isDefaultValue(value):FALSE:org.apache.commons.math.linear.OpenMapRealVector@setEntry(int,double):621:isDefaultValue(value) |==> true
1334:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setEntry(int,double):622:entries.put(index, value) |==> <NO-OP>
1335:COR:entries.containsKey(index):TRUE:org.apache.commons.math.linear.OpenMapRealVector@setEntry(int,double):623:entries.containsKey(index) |==> false
1336:COR:entries.containsKey(index):FALSE:org.apache.commons.math.linear.OpenMapRealVector@setEntry(int,double):623:entries.containsKey(index) |==> true
1337:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setEntry(int,double):624:entries.remove(index) |==> <NO-OP>
1338:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):630:checkIndex(index) |==> <NO-OP>
1339:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() |==> index % v.getDimension()
1340:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() |==> index * v.getDimension()
1341:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() |==> index - v.getDimension()
1342:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() |==> index / v.getDimension()
1343:LVR:POS:0:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:1 |==> 0
1344:LVR:POS:NEG:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:1 |==> -1
1345:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() - 1 |==> (index + v.getDimension()) % 1
1346:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() - 1 |==> (index + v.getDimension()) * 1
1347:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() - 1 |==> index + v.getDimension() + 1
1348:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:index + v.getDimension() - 1 |==> (index + v.getDimension()) / 1
1349:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):631:checkIndex(index + v.getDimension() - 1) |==> <NO-OP>
1350:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,org.apache.commons.math.linear.RealVector):632:setSubVector(index, v.getData()) |==> <NO-OP>
1351:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):637:checkIndex(index) |==> <NO-OP>
1352:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length |==> index % v.length
1353:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length |==> index * v.length
1354:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length |==> index - v.length
1355:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length |==> index / v.length
1356:LVR:POS:0:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:1 |==> 0
1357:LVR:POS:NEG:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:1 |==> -1
1358:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length - 1 |==> (index + v.length) % 1
1359:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length - 1 |==> (index + v.length) * 1
1360:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length - 1 |==> index + v.length + 1
1361:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:index + v.length - 1 |==> (index + v.length) / 1
1362:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):638:checkIndex(index + v.length - 1) |==> <NO-OP>
1363:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:0 |==> 1
1364:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:0 |==> -1
1365:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:i < v.length |==> i != v.length
1366:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:i < v.length |==> i <= v.length
1367:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:i < v.length |==> i == v.length
1368:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:i < v.length |==> i > v.length
1369:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:i < v.length |==> i >= v.length
1370:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:i < v.length |==> false
1371:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):639:i < v.length |==> true
1372:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):640:i + index |==> i % index
1373:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):640:i + index |==> i * index
1374:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):640:i + index |==> i - index
1375:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):640:i + index |==> i / index
1376:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@setSubVector(int,double[]):640:setEntry(i + index, v[i]) |==> <NO-OP>
1377:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@set(double):646:0 |==> 1
1378:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@set(double):646:0 |==> -1
1379:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@set(double):646:i < virtualSize |==> i != virtualSize
1380:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@set(double):646:i < virtualSize |==> i <= virtualSize
1381:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@set(double):646:i < virtualSize |==> i == virtualSize
1382:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@set(double):646:i < virtualSize |==> i > virtualSize
1383:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@set(double):646:i < virtualSize |==> i >= virtualSize
1384:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@set(double):646:i < virtualSize |==> false
1385:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@set(double):646:i < virtualSize |==> true
1386:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@set(double):647:setEntry(i, value) |==> <NO-OP>
1387:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):658:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1388:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):662:iter.advance() |==> <NO-OP>
1389:COR:entries.containsKey(key):TRUE:org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):664:entries.containsKey(key) |==> false
1390:COR:entries.containsKey(key):FALSE:org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):664:entries.containsKey(key) |==> true
1391:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):665:entries.get(key) - iter.value() |==> entries.get(key) % iter.value()
1392:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):665:entries.get(key) - iter.value() |==> entries.get(key) * iter.value()
1393:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):665:entries.get(key) - iter.value() |==> entries.get(key) + iter.value()
1394:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):665:entries.get(key) - iter.value() |==> entries.get(key) / iter.value()
1395:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):665:res.setEntry(key, entries.get(key) - iter.value()) |==> <NO-OP>
1396:ORU:-(double):+(double):org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):667:-iter.value() |==> +iter.value()
1397:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.OpenMapRealVector):667:res.setEntry(key, -iter.value()) |==> <NO-OP>
1398:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(org.apache.commons.math.linear.RealVector):675:checkVectorDimensions(v.getDimension()) |==> <NO-OP>
1399:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):684:checkVectorDimensions(v.length) |==> <NO-OP>
1400:LVR:0:POS:org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:0 |==> 1
1401:LVR:0:NEG:org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:0 |==> -1
1402:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:i < v.length |==> i != v.length
1403:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:i < v.length |==> i <= v.length
1404:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:i < v.length |==> i == v.length
1405:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:i < v.length |==> i > v.length
1406:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:i < v.length |==> i >= v.length
1407:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:i < v.length |==> false
1408:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):686:i < v.length |==> true
1409:COR:entries.containsKey(i):TRUE:org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):687:entries.containsKey(i) |==> false
1410:COR:entries.containsKey(i):FALSE:org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):687:entries.containsKey(i) |==> true
1411:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):688:entries.get(i) - v[i] |==> entries.get(i) % v[i]
1412:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):688:entries.get(i) - v[i] |==> entries.get(i) * v[i]
1413:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):688:entries.get(i) - v[i] |==> entries.get(i) + v[i]
1414:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):688:entries.get(i) - v[i] |==> entries.get(i) / v[i]
1415:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):688:res.setEntry(i, entries.get(i) - v[i]) |==> <NO-OP>
1416:ORU:-(double):+(double):org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):690:-v[i] |==> +v[i]
1417:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@subtract(double[]):690:res.setEntry(i, -v[i]) |==> <NO-OP>
1418:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@unitVector():700:res.unitize() |==> <NO-OP>
1419:COR:isDefaultValue(norm):TRUE:org.apache.commons.math.linear.OpenMapRealVector@unitize():707:isDefaultValue(norm) |==> false
1420:COR:isDefaultValue(norm):FALSE:org.apache.commons.math.linear.OpenMapRealVector@unitize():707:isDefaultValue(norm) |==> true
1421:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@unitize():712:iter.advance() |==> <NO-OP>
1422:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@unitize():713:iter.value() / norm |==> iter.value() % norm
1423:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@unitize():713:iter.value() / norm |==> iter.value() * norm
1424:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@unitize():713:iter.value() / norm |==> iter.value() + norm
1425:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@unitize():713:iter.value() / norm |==> iter.value() - norm
1426:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@unitize():713:entries.put(iter.key(), iter.value() / norm) |==> <NO-OP>
1427:LVR:POS:0:org.apache.commons.math.linear.OpenMapRealVector@hashCode():732:1 |==> 0
1428:LVR:POS:NEG:org.apache.commons.math.linear.OpenMapRealVector@hashCode():732:1 |==> -1
1429:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result |==> prime % result
1430:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result |==> prime + result
1431:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result |==> prime - result
1432:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result |==> prime / result
1433:LVR:POS:0:org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:32 |==> 0
1434:LVR:POS:NEG:org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:32 |==> -32
1435:SOR:>>>(long,int):<<(long,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:temp >>> 32 |==> temp << 32
1436:SOR:>>>(long,int):>>(long,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:temp >>> 32 |==> temp >> 32
1437:LOR:^(long,long):&(long,long):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:temp ^ (temp >>> 32) |==> temp & (temp >>> 32)
1438:LOR:^(long,long):|(long,long):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:temp ^ (temp >>> 32) |==> temp | (temp >>> 32)
1439:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result % (int)(temp ^ (temp >>> 32))
1440:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result * (int)(temp ^ (temp >>> 32))
1441:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result - (int)(temp ^ (temp >>> 32))
1442:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:prime * result + (int)(temp ^ (temp >>> 32)) |==> prime * result / (int)(temp ^ (temp >>> 32))
1443:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@hashCode():735:result = prime * result + (int)(temp ^ (temp >>> 32)) |==> <NO-OP>
1444:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result |==> prime % result
1445:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result |==> prime + result
1446:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result |==> prime - result
1447:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result |==> prime / result
1448:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result + virtualSize |==> prime * result % virtualSize
1449:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result + virtualSize |==> prime * result * virtualSize
1450:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result + virtualSize |==> prime * result - virtualSize
1451:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:prime * result + virtualSize |==> prime * result / virtualSize
1452:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@hashCode():736:result = prime * result + virtualSize |==> <NO-OP>
1453:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@hashCode():739:iter.advance() |==> <NO-OP>
1454:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@hashCode():740:temp = Double.doubleToLongBits(iter.value()) |==> <NO-OP>
1455:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result |==> prime % result
1456:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result |==> prime + result
1457:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result |==> prime - result
1458:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result |==> prime / result
1459:LVR:POS:0:org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:32 |==> 0
1460:LVR:POS:NEG:org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:32 |==> -32
1461:SOR:>>(long,int):<<(long,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:temp >> 32 |==> temp << 32
1462:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:temp >> 32 |==> temp >>> 32
1463:LOR:^(long,long):&(long,long):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:temp ^ (temp >> 32) |==> temp & (temp >> 32)
1464:LOR:^(long,long):|(long,long):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:temp ^ (temp >> 32) |==> temp | (temp >> 32)
1465:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result % (int)(temp ^ (temp >> 32))
1466:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result * (int)(temp ^ (temp >> 32))
1467:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result - (int)(temp ^ (temp >> 32))
1468:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:prime * result + (int)(temp ^ (temp >> 32)) |==> prime * result / (int)(temp ^ (temp >> 32))
1469:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@hashCode():741:result = prime * result + (int)(temp ^ (temp >> 32)) |==> <NO-OP>
1470:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):754:this == obj |==> this != obj
1471:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):754:this == obj |==> false
1472:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):754:this == obj |==> true
1473:LVR:TRUE:FALSE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):755:true |==> false
1474:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):757:obj == null |==> obj != null
1475:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):757:obj == null |==> false
1476:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):757:obj == null |==> true
1477:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):758:false |==> true
1478:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):761:false |==> true
1479:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):764:virtualSize != other.virtualSize |==> virtualSize < other.virtualSize
1480:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):764:virtualSize != other.virtualSize |==> virtualSize <= other.virtualSize
1481:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):764:virtualSize != other.virtualSize |==> virtualSize == other.virtualSize
1482:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):764:virtualSize != other.virtualSize |==> virtualSize > other.virtualSize
1483:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):764:virtualSize != other.virtualSize |==> virtualSize >= other.virtualSize
1484:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):764:virtualSize != other.virtualSize |==> false
1485:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):764:virtualSize != other.virtualSize |==> true
1486:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):765:false |==> true
1487:ROR:!=(long,long):<(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):767:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) < Double.doubleToLongBits(other.epsilon)
1488:ROR:!=(long,long):<=(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):767:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) <= Double.doubleToLongBits(other.epsilon)
1489:ROR:!=(long,long):==(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):767:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) == Double.doubleToLongBits(other.epsilon)
1490:ROR:!=(long,long):>(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):767:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) > Double.doubleToLongBits(other.epsilon)
1491:ROR:!=(long,long):>=(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):767:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> Double.doubleToLongBits(epsilon) >= Double.doubleToLongBits(other.epsilon)
1492:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):767:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> false
1493:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):767:Double.doubleToLongBits(epsilon) != Double.doubleToLongBits(other.epsilon) |==> true
1494:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):769:false |==> true
1495:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):773:iter.advance() |==> <NO-OP>
1496:ROR:!=(long,long):<(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):775:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) < Double.doubleToLongBits(iter.value())
1497:ROR:!=(long,long):<=(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):775:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) <= Double.doubleToLongBits(iter.value())
1498:ROR:!=(long,long):==(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):775:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) == Double.doubleToLongBits(iter.value())
1499:ROR:!=(long,long):>(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):775:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) > Double.doubleToLongBits(iter.value())
1500:ROR:!=(long,long):>=(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):775:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> Double.doubleToLongBits(test) >= Double.doubleToLongBits(iter.value())
1501:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):775:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> false
1502:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):775:Double.doubleToLongBits(test) != Double.doubleToLongBits(iter.value()) |==> true
1503:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):776:false |==> true
1504:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):779:iter = other.getEntries().iterator() |==> <NO-OP>
1505:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):781:iter.advance() |==> <NO-OP>
1506:ROR:!=(long,long):<(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):783:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) < Double.doubleToLongBits(getEntry(iter.key()))
1507:ROR:!=(long,long):<=(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):783:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) <= Double.doubleToLongBits(getEntry(iter.key()))
1508:ROR:!=(long,long):==(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):783:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) == Double.doubleToLongBits(getEntry(iter.key()))
1509:ROR:!=(long,long):>(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):783:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) > Double.doubleToLongBits(getEntry(iter.key()))
1510:ROR:!=(long,long):>=(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):783:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> Double.doubleToLongBits(test) >= Double.doubleToLongBits(getEntry(iter.key()))
1511:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):783:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> false
1512:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):783:Double.doubleToLongBits(test) != Double.doubleToLongBits(getEntry(iter.key())) |==> true
1513:LVR:FALSE:TRUE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):784:false |==> true
1514:LVR:TRUE:FALSE:org.apache.commons.math.linear.OpenMapRealVector@equals(java.lang.Object):787:true |==> false
1515:AOR:/(double,double):%(double,double):org.apache.commons.math.linear.OpenMapRealVector@getSparcity():795:(double)entries.size() / (double)getDimension() |==> (double)entries.size() % (double)getDimension()
1516:AOR:/(double,double):*(double,double):org.apache.commons.math.linear.OpenMapRealVector@getSparcity():795:(double)entries.size() / (double)getDimension() |==> (double)entries.size() * (double)getDimension()
1517:AOR:/(double,double):+(double,double):org.apache.commons.math.linear.OpenMapRealVector@getSparcity():795:(double)entries.size() / (double)getDimension() |==> (double)entries.size() + (double)getDimension()
1518:AOR:/(double,double):-(double,double):org.apache.commons.math.linear.OpenMapRealVector@getSparcity():795:(double)entries.size() / (double)getDimension() |==> (double)entries.size() - (double)getDimension()
1519:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry@setValue(double):829:entries.put(iter.key(), value) |==> <NO-OP>
1520:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator@next():866:iter.advance() |==> <NO-OP>