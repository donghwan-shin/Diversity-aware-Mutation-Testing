1:LVR:POS:0:org.apache.commons.math.util.MathUtils:70:1L |==> 0L
2:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:70:1L |==> -1L
3:LVR:POS:0:org.apache.commons.math.util.MathUtils:70:1L |==> 0L
4:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:70:1L |==> -1L
5:LVR:POS:0:org.apache.commons.math.util.MathUtils:70:2L |==> 0L
6:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:70:2L |==> -2L
7:LVR:POS:0:org.apache.commons.math.util.MathUtils:71:6L |==> 0L
8:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:71:6L |==> -6L
9:LVR:POS:0:org.apache.commons.math.util.MathUtils:71:24L |==> 0L
10:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:71:24L |==> -24L
11:LVR:POS:0:org.apache.commons.math.util.MathUtils:71:120L |==> 0L
12:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:71:120L |==> -120L
13:LVR:POS:0:org.apache.commons.math.util.MathUtils:72:720L |==> 0L
14:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:72:720L |==> -720L
15:LVR:POS:0:org.apache.commons.math.util.MathUtils:72:5040L |==> 0L
16:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:72:5040L |==> -5040L
17:LVR:POS:0:org.apache.commons.math.util.MathUtils:72:40320L |==> 0L
18:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:72:40320L |==> -40320L
19:LVR:POS:0:org.apache.commons.math.util.MathUtils:73:362880L |==> 0L
20:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:73:362880L |==> -362880L
21:LVR:POS:0:org.apache.commons.math.util.MathUtils:73:3628800L |==> 0L
22:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:73:3628800L |==> -3628800L
23:LVR:POS:0:org.apache.commons.math.util.MathUtils:73:39916800L |==> 0L
24:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:73:39916800L |==> -39916800L
25:LVR:POS:0:org.apache.commons.math.util.MathUtils:74:479001600L |==> 0L
26:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:74:479001600L |==> -479001600L
27:LVR:POS:0:org.apache.commons.math.util.MathUtils:74:6227020800L |==> 0L
28:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:74:6227020800L |==> -6227020800L
29:LVR:POS:0:org.apache.commons.math.util.MathUtils:74:87178291200L |==> 0L
30:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:74:87178291200L |==> -87178291200L
31:LVR:POS:0:org.apache.commons.math.util.MathUtils:75:1307674368000L |==> 0L
32:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:75:1307674368000L |==> -1307674368000L
33:LVR:POS:0:org.apache.commons.math.util.MathUtils:75:20922789888000L |==> 0L
34:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:75:20922789888000L |==> -20922789888000L
35:LVR:POS:0:org.apache.commons.math.util.MathUtils:75:355687428096000L |==> 0L
36:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:75:355687428096000L |==> -355687428096000L
37:LVR:POS:0:org.apache.commons.math.util.MathUtils:76:6402373705728000L |==> 0L
38:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:76:6402373705728000L |==> -6402373705728000L
39:LVR:POS:0:org.apache.commons.math.util.MathUtils:76:121645100408832000L |==> 0L
40:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:76:121645100408832000L |==> -121645100408832000L
41:LVR:POS:0:org.apache.commons.math.util.MathUtils:76:2432902008176640000L |==> 0L
42:LVR:POS:NEG:org.apache.commons.math.util.MathUtils:76:2432902008176640000L |==> -2432902008176640000L
43:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x % (long)y
44:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x * (long)y
45:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x - (long)y
46:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):96:(long)x + (long)y |==> (long)x / (long)y
47:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> s != Integer.MIN_VALUE
48:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> s <= Integer.MIN_VALUE
49:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> s == Integer.MIN_VALUE
50:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> s > Integer.MIN_VALUE
51:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> s >= Integer.MIN_VALUE
52:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> false
53:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE |==> true
54:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> s != Integer.MAX_VALUE
55:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> s < Integer.MAX_VALUE
56:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> s <= Integer.MAX_VALUE
57:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> s == Integer.MAX_VALUE
58:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> s >= Integer.MAX_VALUE
59:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> false
60:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s > Integer.MAX_VALUE |==> true
61:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE != s > Integer.MAX_VALUE
62:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE && s > Integer.MAX_VALUE
63:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE == s > Integer.MAX_VALUE
64:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> false
65:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE
66:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s > Integer.MAX_VALUE
67:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@addAndCheck(int,int):97:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> true
68:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> a != b
69:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> a < b
70:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> a <= b
71:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> a == b
72:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> a >= b
73:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> false
74:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):130:a > b |==> true
75:LVR:0:POS:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:0 |==> 1
76:LVR:0:NEG:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:0 |==> -1
77:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> a != 0
78:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> a <= 0
79:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> a == 0
80:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> a > 0
81:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> a >= 0
82:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> false
83:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):136:a < 0 |==> true
84:LVR:0:POS:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:0 |==> 1
85:LVR:0:NEG:org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:0 |==> -1
86:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> b != 0
87:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> b <= 0
88:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> b == 0
89:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> b > 0
90:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> b >= 0
91:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> false
92:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):137:b < 0 |==> true
93:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE % b
94:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE * b
95:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE + b
96:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b |==> Long.MIN_VALUE / b
97:ROR:<=(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> Long.MIN_VALUE - b != a
98:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> Long.MIN_VALUE - b < a
99:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> Long.MIN_VALUE - b == a
100:ROR:<=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> Long.MIN_VALUE - b > a
101:ROR:<=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> Long.MIN_VALUE - b >= a
102:ROR:<=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> false
103:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):139:Long.MIN_VALUE - b <= a |==> true
104:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a % b
105:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a * b
106:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a - b
107:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):140:a + b |==> a / b
108:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a % b
109:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a * b
110:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a - b
111:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):146:a + b |==> a / b
112:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE % b
113:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE * b
114:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE + b
115:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:Long.MAX_VALUE - b |==> Long.MAX_VALUE / b
116:ROR:<=(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> a != Long.MAX_VALUE - b
117:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> a < Long.MAX_VALUE - b
118:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> a == Long.MAX_VALUE - b
119:ROR:<=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> a > Long.MAX_VALUE - b
120:ROR:<=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> a >= Long.MAX_VALUE - b
121:ROR:<=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> false
122:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):153:a <= Long.MAX_VALUE - b |==> true
123:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a % b
124:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a * b
125:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a - b
126:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@addAndCheck(long,long,java.lang.String):154:a + b |==> a / b
127:STD:<CALL>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):189:checkBinomial(n, k) |==> <NO-OP>
128:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> n != k
129:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> n < k
130:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> n <= k
131:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> n > k
132:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> n >= k
133:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> false
134:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:n == k |==> true
135:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:0 |==> 1
136:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:0 |==> -1
137:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> k != 0
138:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> k < 0
139:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> k <= 0
140:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> k > 0
141:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> k >= 0
142:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> false
143:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:k == 0 |==> true
144:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (n == k) != (k == 0)
145:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (n == k) && (k == 0)
146:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (n == k) == (k == 0)
147:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> false
148:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (n == k)
149:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> (k == 0)
150:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):190:(n == k) || (k == 0) |==> true
151:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):191:1 |==> 0
152:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):191:1 |==> -1
153:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> 0
154:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> -1
155:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> k != 1
156:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> k < 1
157:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> k <= 1
158:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> k > 1
159:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> k >= 1
160:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> false
161:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == 1 |==> true
162:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> 0
163:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:1 |==> -1
164:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n % 1
165:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n * 1
166:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n + 1
167:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:n - 1 |==> n / 1
168:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> k != n - 1
169:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> k < n - 1
170:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> k <= n - 1
171:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> k > n - 1
172:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> k >= n - 1
173:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> false
174:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:k == n - 1 |==> true
175:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == 1) != (k == n - 1)
176:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == 1) && (k == n - 1)
177:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == 1) == (k == n - 1)
178:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> false
179:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == 1)
180:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> (k == n - 1)
181:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):193:(k == 1) || (k == n - 1) |==> true
182:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:2 |==> 0
183:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:2 |==> -2
184:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n % 2
185:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n * 2
186:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n + 2
187:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:n / 2 |==> n - 2
188:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> k != n / 2
189:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> k < n / 2
190:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> k <= n / 2
191:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> k == n / 2
192:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> k >= n / 2
193:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> false
194:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):197:k > n / 2 |==> true
195:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n % k
196:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n * k
197:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n + k
198:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):198:n - k |==> n / k
199:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):205:1 |==> 0
200:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):205:1 |==> -1
201:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:61 |==> 0
202:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:61 |==> -61
203:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> n != 61
204:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> n < 61
205:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> n == 61
206:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> n > 61
207:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> n >= 61
208:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> false
209:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):206:n <= 61 |==> true
210:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n % k
211:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n * k
212:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n + k
213:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k |==> n / k
214:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:1 |==> 0
215:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:1 |==> -1
216:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> (n - k) % 1
217:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> (n - k) * 1
218:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> n - k - 1
219:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):208:n - k + 1 |==> (n - k) / 1
220:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:1 |==> 0
221:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:1 |==> -1
222:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> j != k
223:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> j < k
224:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> j == k
225:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> j > k
226:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> j >= k
227:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> false
228:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):209:j <= k |==> true
229:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result % i
230:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result + i
231:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result - i
232:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i |==> result / i
233:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i % j
234:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i * j
235:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i + j
236:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result * i / j |==> result * i - j
237:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):210:result = result * i / j |==> <NO-OP>
238:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):211:i++ |==> <NO-OP>
239:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:66 |==> 0
240:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:66 |==> -66
241:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> n != 66
242:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> n < 66
243:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> n == 66
244:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> n > 66
245:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> n >= 66
246:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> false
247:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):213:n <= 66 |==> true
248:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n % k
249:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n * k
250:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n + k
251:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k |==> n / k
252:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:1 |==> 0
253:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:1 |==> -1
254:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> (n - k) % 1
255:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> (n - k) * 1
256:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> n - k - 1
257:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):216:n - k + 1 |==> (n - k) / 1
258:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:1 |==> 0
259:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:1 |==> -1
260:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> j != k
261:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> j < k
262:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> j == k
263:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> j > k
264:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> j >= k
265:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> false
266:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):217:j <= k |==> true
267:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j % d
268:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j * d
269:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j + d
270:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:j / d |==> j - d
271:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result % (j / d)
272:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result * (j / d)
273:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result + (j / d)
274:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result / (j / d) |==> result - (j / d)
275:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i % d
276:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i * d
277:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i + d
278:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:i / d |==> i - d
279:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) % (i / d)
280:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) + (i / d)
281:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) - (i / d)
282:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:(result / (j / d)) * (i / d) |==> (result / (j / d)) / (i / d)
283:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):225:result = (result / (j / d)) * (i / d) |==> <NO-OP>
284:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):226:i++ |==> <NO-OP>
285:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n % k
286:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n * k
287:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n + k
288:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k |==> n / k
289:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:1 |==> 0
290:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:1 |==> -1
291:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> (n - k) % 1
292:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> (n - k) * 1
293:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> n - k - 1
294:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):232:n - k + 1 |==> (n - k) / 1
295:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:1 |==> 0
296:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:1 |==> -1
297:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> j != k
298:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> j < k
299:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> j == k
300:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> j > k
301:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> j >= k
302:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> false
303:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):233:j <= k |==> true
304:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j % d
305:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j * d
306:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j + d
307:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:j / d |==> j - d
308:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result % (j / d)
309:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result * (j / d)
310:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result + (j / d)
311:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result / (j / d) |==> result - (j / d)
312:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i % d
313:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i * d
314:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i + d
315:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:i / d |==> i - d
316:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):235:result = mulAndCheck(result / (j / d), i / d) |==> <NO-OP>
317:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficient(int,int):236:i++ |==> <NO-OP>
318:STD:<CALL>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):265:checkBinomial(n, k) |==> <NO-OP>
319:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> n != k
320:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> n < k
321:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> n <= k
322:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> n > k
323:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> n >= k
324:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> false
325:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:n == k |==> true
326:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:0 |==> 1
327:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:0 |==> -1
328:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> k != 0
329:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> k < 0
330:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> k <= 0
331:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> k > 0
332:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> k >= 0
333:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> false
334:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:k == 0 |==> true
335:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (n == k) != (k == 0)
336:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (n == k) && (k == 0)
337:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (n == k) == (k == 0)
338:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> false
339:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (n == k)
340:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> (k == 0)
341:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):266:(n == k) || (k == 0) |==> true
342:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):267:1.0 |==> 0.0
343:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):267:1.0 |==> -1.0
344:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> 0
345:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> -1
346:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> k != 1
347:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> k < 1
348:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> k <= 1
349:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> k > 1
350:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> k >= 1
351:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> false
352:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == 1 |==> true
353:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> 0
354:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:1 |==> -1
355:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n % 1
356:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n * 1
357:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n + 1
358:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:n - 1 |==> n / 1
359:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> k != n - 1
360:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> k < n - 1
361:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> k <= n - 1
362:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> k > n - 1
363:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> k >= n - 1
364:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> false
365:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:k == n - 1 |==> true
366:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == 1) != (k == n - 1)
367:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == 1) && (k == n - 1)
368:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == 1) == (k == n - 1)
369:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> false
370:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == 1)
371:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> (k == n - 1)
372:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):269:(k == 1) || (k == n - 1) |==> true
373:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:2 |==> 0
374:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:2 |==> -2
375:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n % 2
376:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n * 2
377:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n + 2
378:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:n / 2 |==> n - 2
379:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> k != n / 2
380:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> k < n / 2
381:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> k <= n / 2
382:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> k == n / 2
383:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> k >= n / 2
384:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> false
385:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):272:k > n / 2 |==> true
386:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n % k
387:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n * k
388:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n + k
389:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):273:n - k |==> n / k
390:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:67 |==> 0
391:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:67 |==> -67
392:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> n != 67
393:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> n <= 67
394:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> n == 67
395:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> n > 67
396:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> n >= 67
397:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> false
398:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):275:n < 67 |==> true
399:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):279:1.0 |==> 0.0
400:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):279:1.0 |==> -1.0
401:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:1 |==> 0
402:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:1 |==> -1
403:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> i != k
404:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> i < k
405:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> i == k
406:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> i > k
407:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> i >= k
408:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> false
409:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):280:i <= k |==> true
410:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n % k
411:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n * k
412:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n + k
413:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k |==> n / k
414:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> (n - k) % i
415:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> (n - k) * i
416:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> n - k - i
417:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:n - k + i |==> (n - k) / i
418:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) % (double)i
419:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) * (double)i
420:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) + (double)i
421:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:(double)(n - k + i) / (double)i |==> (double)(n - k + i) - (double)i
422:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):281:result *= (double)(n - k + i) / (double)i |==> <NO-OP>
423:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:0.5 |==> 0.0
424:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:0.5 |==> -0.5
425:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result % 0.5
426:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result * 0.5
427:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result - 0.5
428:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@binomialCoefficientDouble(int,int):284:result + 0.5 |==> result / 0.5
429:STD:<CALL>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):306:checkBinomial(n, k) |==> <NO-OP>
430:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> n != k
431:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> n < k
432:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> n <= k
433:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> n > k
434:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> n >= k
435:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> false
436:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:n == k |==> true
437:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:0 |==> 1
438:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:0 |==> -1
439:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> k != 0
440:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> k < 0
441:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> k <= 0
442:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> k > 0
443:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> k >= 0
444:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> false
445:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:k == 0 |==> true
446:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (n == k) != (k == 0)
447:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (n == k) && (k == 0)
448:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (n == k) == (k == 0)
449:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> false
450:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (n == k)
451:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> (k == 0)
452:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):307:(n == k) || (k == 0) |==> true
453:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):308:0 |==> 1
454:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):308:0 |==> -1
455:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> 0
456:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> -1
457:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> k != 1
458:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> k < 1
459:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> k <= 1
460:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> k > 1
461:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> k >= 1
462:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> false
463:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == 1 |==> true
464:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> 0
465:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:1 |==> -1
466:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n % 1
467:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n * 1
468:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n + 1
469:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:n - 1 |==> n / 1
470:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> k != n - 1
471:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> k < n - 1
472:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> k <= n - 1
473:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> k > n - 1
474:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> k >= n - 1
475:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> false
476:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:k == n - 1 |==> true
477:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == 1) != (k == n - 1)
478:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == 1) && (k == n - 1)
479:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == 1) == (k == n - 1)
480:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> false
481:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == 1)
482:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> (k == n - 1)
483:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):310:(k == 1) || (k == n - 1) |==> true
484:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:67 |==> 0
485:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:67 |==> -67
486:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> n != 67
487:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> n <= 67
488:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> n == 67
489:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> n > 67
490:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> n >= 67
491:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> false
492:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):318:n < 67 |==> true
493:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:1030 |==> 0
494:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:1030 |==> -1030
495:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> n != 1030
496:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> n <= 1030
497:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> n == 1030
498:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> n > 1030
499:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> n >= 1030
500:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> false
501:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):326:n < 1030 |==> true
502:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:2 |==> 0
503:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:2 |==> -2
504:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n % 2
505:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n * 2
506:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n + 2
507:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:n / 2 |==> n - 2
508:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> k != n / 2
509:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> k < n / 2
510:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> k <= n / 2
511:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> k == n / 2
512:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> k >= n / 2
513:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> false
514:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):330:k > n / 2 |==> true
515:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n % k
516:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n * k
517:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n + k
518:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):331:n - k |==> n / k
519:LVR:0:POS:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):337:0 |==> 1
520:LVR:0:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):337:0 |==> -1
521:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n % k
522:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n * k
523:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n + k
524:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k |==> n / k
525:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:1 |==> 0
526:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:1 |==> -1
527:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> (n - k) % 1
528:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> (n - k) * 1
529:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> n - k - 1
530:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:n - k + 1 |==> (n - k) / 1
531:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> i != n
532:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> i < n
533:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> i == n
534:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> i > n
535:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> i >= n
536:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> false
537:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):340:i <= n |==> true
538:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):341:logSum += Math.log(i) |==> <NO-OP>
539:LVR:POS:0:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:2 |==> 0
540:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:2 |==> -2
541:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> i != k
542:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> i < k
543:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> i == k
544:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> i > k
545:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> i >= k
546:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> false
547:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):345:i <= k |==> true
548:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@binomialCoefficientLog(int,int):346:logSum -= Math.log(i) |==> <NO-OP>
549:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> n != k
550:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> n <= k
551:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> n == k
552:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> n > k
553:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> n >= k
554:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> false
555:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):360:n < k |==> true
556:LVR:0:POS:org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:0 |==> 1
557:LVR:0:NEG:org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:0 |==> -1
558:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> n != 0
559:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> n <= 0
560:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> n == 0
561:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> n > 0
562:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> n >= 0
563:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> false
564:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@checkBinomial(int,int):365:n < 0 |==> true
565:COR:equals(x, y, eps):TRUE:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):383:equals(x, y, eps) |==> false
566:COR:equals(x, y, eps):FALSE:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):383:equals(x, y, eps) |==> true
567:LVR:0:POS:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):384:0 |==> 1
568:LVR:0:NEG:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):384:0 |==> -1
569:ROR:<(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> x != y
570:ROR:<(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> x <= y
571:ROR:<(double,double):==(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> x == y
572:ROR:<(double,double):>(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> x > y
573:ROR:<(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> x >= y
574:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> false
575:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@compareTo(double,double,double):385:x < y |==> true
576:LVR:NEG:0:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):386:-1 |==> 0
577:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):386:-1 |==> 1
578:LVR:POS:0:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):388:1 |==> 0
579:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@compareTo(double,double,double):388:1 |==> -1
580:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@cosh(double):399:-x |==> +x
581:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) % Math.exp(-x)
582:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) * Math.exp(-x)
583:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) - Math.exp(-x)
584:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:Math.exp(x) + Math.exp(-x) |==> Math.exp(x) / Math.exp(-x)
585:LVR:POS:0:org.apache.commons.math.util.MathUtils@cosh(double):399:2.0 |==> 0.0
586:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@cosh(double):399:2.0 |==> -2.0
587:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) % 2.0
588:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) * 2.0
589:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) + 2.0
590:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@cosh(double):399:(Math.exp(x) + Math.exp(-x)) / 2.0 |==> (Math.exp(x) + Math.exp(-x)) - 2.0
591:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(x) != Double.isNaN(y)
592:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(x) == Double.isNaN(y)
593:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> false
594:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(x)
595:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(y)
596:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> true
597:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:Double.isNaN(x) && Double.isNaN(y) |==> Double.isNaN(x) || Double.isNaN(y)
598:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> x != y
599:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> x < y
600:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> x <= y
601:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> x > y
602:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> x >= y
603:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> false
604:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@equals(double,double):411:x == y |==> true
605:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> (Double.isNaN(x) && Double.isNaN(y)) != (x == y)
606:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> (Double.isNaN(x) && Double.isNaN(y)) && x == y
607:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> (Double.isNaN(x) && Double.isNaN(y)) == (x == y)
608:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> false
609:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> (Double.isNaN(x) && Double.isNaN(y))
610:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> x == y
611:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double):411:(Double.isNaN(x) && Double.isNaN(y)) || x == y |==> true
612:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y % x
613:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y * x
614:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y + x
615:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:y - x |==> y / x
616:ROR:<=(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> Math.abs(y - x) != eps
617:ROR:<=(double,double):<(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> Math.abs(y - x) < eps
618:ROR:<=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> Math.abs(y - x) == eps
619:ROR:<=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> Math.abs(y - x) > eps
620:ROR:<=(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> Math.abs(y - x) >= eps
621:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> false
622:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:Math.abs(y - x) <= eps |==> true
623:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> equals(x, y) != (Math.abs(y - x) <= eps)
624:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> equals(x, y) && (Math.abs(y - x) <= eps)
625:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> equals(x, y) == (Math.abs(y - x) <= eps)
626:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> false
627:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> equals(x, y)
628:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> (Math.abs(y - x) <= eps)
629:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,double):427:equals(x, y) || (Math.abs(y - x) <= eps) |==> true
630:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double,double,int):447:0 |==> 1
631:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double,double,int):447:0 |==> -1
632:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> maxUlps != 0
633:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> maxUlps < 0
634:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> maxUlps <= 0
635:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> maxUlps == 0
636:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> maxUlps >= 0
637:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> false
638:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 |==> true
639:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> maxUlps != NAN_GAP
640:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> maxUlps <= NAN_GAP
641:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> maxUlps == NAN_GAP
642:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> maxUlps > NAN_GAP
643:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> maxUlps >= NAN_GAP
644:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> false
645:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps < NAN_GAP |==> true
646:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps > 0 != maxUlps < NAN_GAP
647:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps > 0 == maxUlps < NAN_GAP
648:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> false
649:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps > 0
650:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps < NAN_GAP
651:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> true
652:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double,double,int):447:maxUlps > 0 && maxUlps < NAN_GAP |==> maxUlps > 0 || maxUlps < NAN_GAP
653:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double,double,int):453:0 |==> 1
654:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double,double,int):453:0 |==> -1
655:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> xInt != 0
656:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> xInt <= 0
657:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> xInt == 0
658:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> xInt > 0
659:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> xInt >= 0
660:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> false
661:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):453:xInt < 0 |==> true
662:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK % xInt
663:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK * xInt
664:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK + xInt
665:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):454:SGN_MASK - xInt |==> SGN_MASK / xInt
666:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@equals(double,double,int):454:xInt = SGN_MASK - xInt |==> <NO-OP>
667:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double,double,int):456:0 |==> 1
668:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double,double,int):456:0 |==> -1
669:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> yInt != 0
670:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> yInt <= 0
671:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> yInt == 0
672:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> yInt > 0
673:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> yInt >= 0
674:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> false
675:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):456:yInt < 0 |==> true
676:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK % yInt
677:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK * yInt
678:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK + yInt
679:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):457:SGN_MASK - yInt |==> SGN_MASK / yInt
680:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@equals(double,double,int):457:yInt = SGN_MASK - yInt |==> <NO-OP>
681:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt % yInt
682:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt * yInt
683:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt + yInt
684:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:xInt - yInt |==> xInt / yInt
685:ROR:<=(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> Math.abs(xInt - yInt) != maxUlps
686:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> Math.abs(xInt - yInt) < maxUlps
687:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> Math.abs(xInt - yInt) == maxUlps
688:ROR:<=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> Math.abs(xInt - yInt) > maxUlps
689:ROR:<=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> Math.abs(xInt - yInt) >= maxUlps
690:ROR:<=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> false
691:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@equals(double,double,int):460:Math.abs(xInt - yInt) <= maxUlps |==> true
692:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:x == null |==> x != null
693:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:x == null |==> false
694:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:x == null |==> true
695:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:y == null |==> y != null
696:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:y == null |==> false
697:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:y == null |==> true
698:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (x == null) != (y == null)
699:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (x == null) && (y == null)
700:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (x == null) == (y == null)
701:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> false
702:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (x == null)
703:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> (y == null)
704:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):474:(x == null) || (y == null) |==> true
705:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:x == null |==> x != null
706:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:x == null |==> false
707:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:x == null |==> true
708:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:y == null |==> y != null
709:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:y == null |==> false
710:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:y == null |==> true
711:LOR:^(boolean,boolean):&(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:(x == null) ^ (y == null) |==> (x == null) & (y == null)
712:LOR:^(boolean,boolean):|(boolean,boolean):org.apache.commons.math.util.MathUtils@equals(double[],double[]):475:(x == null) ^ (y == null) |==> (x == null) | (y == null)
713:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> x.length < y.length
714:ROR:!=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> x.length <= y.length
715:ROR:!=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> x.length == y.length
716:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> x.length > y.length
717:ROR:!=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> x.length >= y.length
718:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> false
719:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):477:x.length != y.length |==> true
720:LVR:FALSE:TRUE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):478:false |==> true
721:LVR:0:POS:org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:0 |==> 1
722:LVR:0:NEG:org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:0 |==> -1
723:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> i != x.length
724:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> i <= x.length
725:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> i == x.length
726:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> i > x.length
727:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> i >= x.length
728:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> false
729:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@equals(double[],double[]):480:i < x.length |==> true
730:COR:equals(x[i], y[i]):TRUE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):481:equals(x[i], y[i]) |==> false
731:COR:equals(x[i], y[i]):FALSE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):481:equals(x[i], y[i]) |==> true
732:LVR:FALSE:TRUE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):482:false |==> true
733:LVR:TRUE:FALSE:org.apache.commons.math.util.MathUtils@equals(double[],double[]):485:true |==> false
734:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorial(int):511:0 |==> 1
735:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorial(int):511:0 |==> -1
736:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> n != 0
737:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> n <= 0
738:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> n == 0
739:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> n > 0
740:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> n >= 0
741:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> false
742:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorial(int):511:n < 0 |==> true
743:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorial(int):516:20 |==> 0
744:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorial(int):516:20 |==> -20
745:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> n != 20
746:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> n < 20
747:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> n <= 20
748:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> n == 20
749:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> n >= 20
750:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> false
751:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorial(int):516:n > 20 |==> true
752:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorialDouble(int):544:0 |==> 1
753:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorialDouble(int):544:0 |==> -1
754:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> n != 0
755:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> n <= 0
756:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> n == 0
757:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> n > 0
758:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> n >= 0
759:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> false
760:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):544:n < 0 |==> true
761:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialDouble(int):549:21 |==> 0
762:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialDouble(int):549:21 |==> -21
763:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> n != 21
764:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> n <= 21
765:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> n == 21
766:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> n > 21
767:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> n >= 21
768:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> false
769:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorialDouble(int):549:n < 21 |==> true
770:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialDouble(int):552:0.5 |==> 0.0
771:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialDouble(int):552:0.5 |==> -0.5
772:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) % 0.5
773:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) * 0.5
774:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) - 0.5
775:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@factorialDouble(int):552:Math.exp(factorialLog(n)) + 0.5 |==> Math.exp(factorialLog(n)) / 0.5
776:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorialLog(int):569:0 |==> 1
777:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):569:0 |==> -1
778:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> n != 0
779:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> n <= 0
780:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> n == 0
781:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> n > 0
782:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> n >= 0
783:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> false
784:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):569:n < 0 |==> true
785:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialLog(int):574:21 |==> 0
786:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):574:21 |==> -21
787:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> n != 21
788:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> n <= 21
789:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> n == 21
790:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> n > 21
791:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> n >= 21
792:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> false
793:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):574:n < 21 |==> true
794:LVR:0:POS:org.apache.commons.math.util.MathUtils@factorialLog(int):577:0 |==> 1
795:LVR:0:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):577:0 |==> -1
796:LVR:POS:0:org.apache.commons.math.util.MathUtils@factorialLog(int):578:2 |==> 0
797:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@factorialLog(int):578:2 |==> -2
798:ROR:<=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> i != n
799:ROR:<=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> i < n
800:ROR:<=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> i == n
801:ROR:<=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> i > n
802:ROR:<=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> i >= n
803:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> false
804:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@factorialLog(int):578:i <= n |==> true
805:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@factorialLog(int):579:logSum += Math.log(i) |==> <NO-OP>
806:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> 1
807:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> -1
808:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> u != 0
809:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> u < 0
810:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> u <= 0
811:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> u > 0
812:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> u >= 0
813:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> false
814:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:u == 0 |==> true
815:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> 1
816:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):617:0 |==> -1
817:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> v != 0
818:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> v < 0
819:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> v <= 0
820:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> v > 0
821:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> v >= 0
822:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> false
823:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):617:v == 0 |==> true
824:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (u == 0) != (v == 0)
825:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (u == 0) && (v == 0)
826:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (u == 0) == (v == 0)
827:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> false
828:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (u == 0)
829:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> (v == 0)
830:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):617:(u == 0) || (v == 0) |==> true
831:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> u != Integer.MIN_VALUE
832:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> u < Integer.MIN_VALUE
833:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> u <= Integer.MIN_VALUE
834:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> u > Integer.MIN_VALUE
835:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> u >= Integer.MIN_VALUE
836:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> false
837:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:u == Integer.MIN_VALUE |==> true
838:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> v != Integer.MIN_VALUE
839:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> v < Integer.MIN_VALUE
840:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> v <= Integer.MIN_VALUE
841:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> v > Integer.MIN_VALUE
842:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> v >= Integer.MIN_VALUE
843:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> false
844:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):618:v == Integer.MIN_VALUE |==> true
845:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (u == Integer.MIN_VALUE) != (v == Integer.MIN_VALUE)
846:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (u == Integer.MIN_VALUE) && (v == Integer.MIN_VALUE)
847:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (u == Integer.MIN_VALUE) == (v == Integer.MIN_VALUE)
848:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> false
849:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (u == Integer.MIN_VALUE)
850:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> (v == Integer.MIN_VALUE)
851:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):618:(u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE) |==> true
852:AOR:+(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) % Math.abs(v)
853:AOR:+(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) * Math.abs(v)
854:AOR:+(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) - Math.abs(v)
855:AOR:+(int,int):/(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):623:Math.abs(u) + Math.abs(v) |==> Math.abs(u) / Math.abs(v)
856:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):630:0 |==> 1
857:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):630:0 |==> -1
858:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> u != 0
859:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> u < 0
860:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> u <= 0
861:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> u == 0
862:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> u >= 0
863:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> false
864:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):630:u > 0 |==> true
865:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):631:-u |==> +u
866:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):631:-u |==> ~u
867:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):631:u = -u |==> <NO-OP>
868:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):633:0 |==> 1
869:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):633:0 |==> -1
870:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> v != 0
871:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> v < 0
872:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> v <= 0
873:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> v == 0
874:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> v >= 0
875:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> false
876:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):633:v > 0 |==> true
877:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):634:-v |==> +v
878:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):634:-v |==> ~v
879:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):634:v = -v |==> <NO-OP>
880:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):637:0 |==> 1
881:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):637:0 |==> -1
882:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> 0
883:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> -1
884:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:u & 1 |==> u ^ 1
885:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:u & 1 |==> u | 1
886:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> 1
887:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> -1
888:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> (u & 1) != 0
889:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> (u & 1) < 0
890:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> (u & 1) <= 0
891:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> (u & 1) > 0
892:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> (u & 1) >= 0
893:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> false
894:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 |==> true
895:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> 0
896:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:1 |==> -1
897:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:v & 1 |==> v ^ 1
898:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:v & 1 |==> v | 1
899:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> 1
900:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:0 |==> -1
901:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> (v & 1) != 0
902:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> (v & 1) < 0
903:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> (v & 1) <= 0
904:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> (v & 1) > 0
905:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> (v & 1) >= 0
906:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> false
907:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(v & 1) == 0 |==> true
908:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (u & 1) == 0 != ((v & 1) == 0)
909:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (u & 1) == 0 == ((v & 1) == 0)
910:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> false
911:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (u & 1) == 0
912:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (v & 1) == 0
913:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> true
914:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 |==> (u & 1) == 0 || (v & 1) == 0
915:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):638:31 |==> 0
916:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):638:31 |==> -31
917:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> k != 31
918:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> k <= 31
919:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> k == 31
920:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> k > 31
921:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> k >= 31
922:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> false
923:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):638:k < 31 |==> true
924:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> ((u & 1) == 0 && (v & 1) == 0) != k < 31
925:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> ((u & 1) == 0 && (v & 1) == 0) == k < 31
926:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> false
927:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> (u & 1) == 0 && (v & 1) == 0
928:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> k < 31
929:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> true
930:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.util.MathUtils@gcd(int,int):638:(u & 1) == 0 && (v & 1) == 0 && k < 31 |==> (u & 1) == 0 && (v & 1) == 0 || k < 31
931:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):640:2 |==> 0
932:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):640:2 |==> -2
933:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):640:u /= 2 |==> <NO-OP>
934:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):641:2 |==> 0
935:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):641:2 |==> -2
936:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):641:v /= 2 |==> <NO-OP>
937:STD:<INC>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):642:k++ |==> <NO-OP>
938:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):644:31 |==> 0
939:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):644:31 |==> -31
940:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> k != 31
941:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> k < 31
942:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> k <= 31
943:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> k > 31
944:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> k >= 31
945:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> false
946:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):644:k == 31 |==> true
947:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> 0
948:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> -1
949:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u & 1 |==> u ^ 1
950:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u & 1 |==> u | 1
951:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> 0
952:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):651:1 |==> -1
953:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> (u & 1) != 1
954:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> (u & 1) < 1
955:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> (u & 1) <= 1
956:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> (u & 1) > 1
957:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> (u & 1) >= 1
958:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> false
959:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:(u & 1) == 1 |==> true
960:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:-(u / 2) |==> +(u / 2)
961:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:-(u / 2) |==> ~(u / 2)
962:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):651:2 |==> 0
963:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):651:2 |==> -2
964:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u % 2
965:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u * 2
966:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u + 2
967:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):651:u / 2 |==> u - 2
968:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):657:1 |==> 0
969:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):657:1 |==> -1
970:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:t & 1 |==> t ^ 1
971:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:t & 1 |==> t | 1
972:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):657:0 |==> 1
973:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):657:0 |==> -1
974:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> (t & 1) != 0
975:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> (t & 1) < 0
976:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> (t & 1) <= 0
977:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> (t & 1) > 0
978:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> (t & 1) >= 0
979:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> false
980:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):657:(t & 1) == 0 |==> true
981:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):658:2 |==> 0
982:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):658:2 |==> -2
983:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):658:t /= 2 |==> <NO-OP>
984:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):661:0 |==> 1
985:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):661:0 |==> -1
986:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> t != 0
987:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> t < 0
988:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> t <= 0
989:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> t == 0
990:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> t >= 0
991:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> false
992:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):661:t > 0 |==> true
993:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):662:-t |==> +t
994:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):662:-t |==> ~t
995:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):662:u = -t |==> <NO-OP>
996:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):664:v = t |==> <NO-OP>
997:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v % u
998:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v * u
999:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v + u
1000:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:v - u |==> v / u
1001:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):667:2 |==> 0
1002:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):667:2 |==> -2
1003:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) % 2
1004:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) * 2
1005:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) + 2
1006:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):667:(v - u) / 2 |==> (v - u) - 2
1007:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@gcd(int,int):667:t = (v - u) / 2 |==> <NO-OP>
1008:LVR:0:POS:org.apache.commons.math.util.MathUtils@gcd(int,int):670:0 |==> 1
1009:LVR:0:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):670:0 |==> -1
1010:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> t < 0
1011:ROR:!=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> t <= 0
1012:ROR:!=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> t == 0
1013:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> t > 0
1014:ROR:!=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> t >= 0
1015:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> false
1016:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):670:t != 0 |==> true
1017:ORU:-(int):+(int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u |==> +u
1018:ORU:-(int):~(int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u |==> ~u
1019:LVR:POS:0:org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 |==> 0
1020:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 |==> -1
1021:SOR:<<(int,int):>>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 << k |==> 1 >> k
1022:SOR:<<(int,int):>>>(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:1 << k |==> 1 >>> k
1023:AOR:*(int,int):%(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u % (1 << k)
1024:AOR:*(int,int):+(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u + (1 << k)
1025:AOR:*(int,int):-(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u - (1 << k)
1026:AOR:*(int,int):/(int,int):org.apache.commons.math.util.MathUtils@gcd(int,int):671:-u * (1 << k) |==> -u / (1 << k)
1027:ROR:>=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> x != ZB
1028:ROR:>=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> x < ZB
1029:ROR:>=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> x <= ZB
1030:ROR:>=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> x == ZB
1031:ROR:>=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> x > ZB
1032:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> false
1033:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@indicator(byte):703:x >= ZB |==> true
1034:COR:Double.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@indicator(double):715:Double.isNaN(x) |==> false
1035:COR:Double.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@indicator(double):715:Double.isNaN(x) |==> true
1036:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(double):718:0.0 |==> 1.0
1037:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(double):718:0.0 |==> -1.0
1038:ROR:>=(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> x != 0.0
1039:ROR:>=(double,double):<(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> x < 0.0
1040:ROR:>=(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> x <= 0.0
1041:ROR:>=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> x == 0.0
1042:ROR:>=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> x > 0.0
1043:ROR:>=(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> false
1044:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@indicator(double):718:x >= 0.0 |==> true
1045:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> 0.0
1046:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> -1.0
1047:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@indicator(double):718:-1.0 |==> +1.0
1048:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> 0.0
1049:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(double):718:1.0 |==> -1.0
1050:COR:Float.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@indicator(float):729:Float.isNaN(x) |==> false
1051:COR:Float.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@indicator(float):729:Float.isNaN(x) |==> true
1052:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(float):732:0.0F |==> 1.0F
1053:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(float):732:0.0F |==> -1.0F
1054:ROR:>=(float,float):!=(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> x != 0.0F
1055:ROR:>=(float,float):<(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> x < 0.0F
1056:ROR:>=(float,float):<=(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> x <= 0.0F
1057:ROR:>=(float,float):==(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> x == 0.0F
1058:ROR:>=(float,float):>(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> x > 0.0F
1059:ROR:>=(float,float):FALSE(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> false
1060:ROR:>=(float,float):TRUE(float,float):org.apache.commons.math.util.MathUtils@indicator(float):732:x >= 0.0F |==> true
1061:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> 0.0F
1062:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> -1.0F
1063:ORU:-(float):+(float):org.apache.commons.math.util.MathUtils@indicator(float):732:-1.0F |==> +1.0F
1064:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> 0.0F
1065:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(float):732:1.0F |==> -1.0F
1066:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(int):742:0 |==> 1
1067:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(int):742:0 |==> -1
1068:ROR:>=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> x != 0
1069:ROR:>=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> x < 0
1070:ROR:>=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> x <= 0
1071:ROR:>=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> x == 0
1072:ROR:>=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> x > 0
1073:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> false
1074:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@indicator(int):742:x >= 0 |==> true
1075:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(int):742:1 |==> 0
1076:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(int):742:1 |==> -1
1077:LVR:NEG:0:org.apache.commons.math.util.MathUtils@indicator(int):742:-1 |==> 0
1078:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@indicator(int):742:-1 |==> 1
1079:LVR:0:POS:org.apache.commons.math.util.MathUtils@indicator(long):752:0L |==> 1L
1080:LVR:0:NEG:org.apache.commons.math.util.MathUtils@indicator(long):752:0L |==> -1L
1081:ROR:>=(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> x != 0L
1082:ROR:>=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> x < 0L
1083:ROR:>=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> x <= 0L
1084:ROR:>=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> x == 0L
1085:ROR:>=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> x > 0L
1086:ROR:>=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> false
1087:ROR:>=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@indicator(long):752:x >= 0L |==> true
1088:LVR:POS:0:org.apache.commons.math.util.MathUtils@indicator(long):752:1L |==> 0L
1089:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@indicator(long):752:1L |==> -1L
1090:LVR:NEG:0:org.apache.commons.math.util.MathUtils@indicator(long):752:-1L |==> 0L
1091:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@indicator(long):752:-1L |==> 1L
1092:ROR:>=(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> x != ZS
1093:ROR:>=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> x < ZS
1094:ROR:>=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> x <= ZS
1095:ROR:>=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> x == ZS
1096:ROR:>=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> x > ZS
1097:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> false
1098:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@indicator(short):763:x >= ZS |==> true
1099:LVR:0:POS:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> 1
1100:LVR:0:NEG:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> -1
1101:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> a != 0
1102:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> a < 0
1103:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> a <= 0
1104:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> a > 0
1105:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> a >= 0
1106:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> false
1107:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 |==> true
1108:LVR:0:POS:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> 1
1109:LVR:0:NEG:org.apache.commons.math.util.MathUtils@lcm(int,int):790:0 |==> -1
1110:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> b != 0
1111:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> b < 0
1112:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> b <= 0
1113:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> b > 0
1114:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> b >= 0
1115:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> false
1116:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):790:b == 0 |==> true
1117:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> a == 0 != (b == 0)
1118:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> a == 0 && b == 0
1119:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> a == 0 == (b == 0)
1120:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> false
1121:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> a == 0
1122:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> b == 0
1123:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@lcm(int,int):790:a == 0 || b == 0 |==> true
1124:LVR:0:POS:org.apache.commons.math.util.MathUtils@lcm(int,int):791:0 |==> 1
1125:LVR:0:NEG:org.apache.commons.math.util.MathUtils@lcm(int,int):791:0 |==> -1
1126:AOR:/(int,int):%(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a % gcd(a, b)
1127:AOR:/(int,int):*(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a * gcd(a, b)
1128:AOR:/(int,int):+(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a + gcd(a, b)
1129:AOR:/(int,int):-(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):793:a / gcd(a, b) |==> a - gcd(a, b)
1130:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> lcm != Integer.MIN_VALUE
1131:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> lcm < Integer.MIN_VALUE
1132:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> lcm <= Integer.MIN_VALUE
1133:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> lcm > Integer.MIN_VALUE
1134:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> lcm >= Integer.MIN_VALUE
1135:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> false
1136:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@lcm(int,int):794:lcm == Integer.MIN_VALUE |==> true
1137:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) % Math.log(base)
1138:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) * Math.log(base)
1139:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) + Math.log(base)
1140:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@log(double,double):817:Math.log(x) / Math.log(base) |==> Math.log(x) - Math.log(base)
1141:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) % ((long)y)
1142:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) + ((long)y)
1143:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) - ((long)y)
1144:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):831:((long)x) * ((long)y) |==> ((long)x) / ((long)y)
1145:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> m != Integer.MIN_VALUE
1146:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> m <= Integer.MIN_VALUE
1147:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> m == Integer.MIN_VALUE
1148:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> m > Integer.MIN_VALUE
1149:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> m >= Integer.MIN_VALUE
1150:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> false
1151:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE |==> true
1152:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> m != Integer.MAX_VALUE
1153:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> m < Integer.MAX_VALUE
1154:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> m <= Integer.MAX_VALUE
1155:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> m == Integer.MAX_VALUE
1156:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> m >= Integer.MAX_VALUE
1157:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> false
1158:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m > Integer.MAX_VALUE |==> true
1159:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m < Integer.MIN_VALUE != m > Integer.MAX_VALUE
1160:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m < Integer.MIN_VALUE && m > Integer.MAX_VALUE
1161:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m < Integer.MIN_VALUE == m > Integer.MAX_VALUE
1162:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> false
1163:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m < Integer.MIN_VALUE
1164:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> m > Integer.MAX_VALUE
1165:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@mulAndCheck(int,int):832:m < Integer.MIN_VALUE || m > Integer.MAX_VALUE |==> true
1166:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> a != b
1167:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> a < b
1168:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> a <= b
1169:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> a == b
1170:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> a >= b
1171:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> false
1172:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):851:a > b |==> true
1173:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:0 |==> 1
1174:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:0 |==> -1
1175:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> a != 0
1176:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> a <= 0
1177:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> a == 0
1178:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> a > 0
1179:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> a >= 0
1180:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> false
1181:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):855:a < 0 |==> true
1182:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:0 |==> 1
1183:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:0 |==> -1
1184:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> b != 0
1185:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> b <= 0
1186:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> b == 0
1187:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> b > 0
1188:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> b >= 0
1189:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> false
1190:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):856:b < 0 |==> true
1191:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE % b
1192:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE * b
1193:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE + b
1194:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:Long.MAX_VALUE / b |==> Long.MAX_VALUE - b
1195:ROR:>=(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> a != Long.MAX_VALUE / b
1196:ROR:>=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> a < Long.MAX_VALUE / b
1197:ROR:>=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> a <= Long.MAX_VALUE / b
1198:ROR:>=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> a == Long.MAX_VALUE / b
1199:ROR:>=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> a > Long.MAX_VALUE / b
1200:ROR:>=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> false
1201:ROR:>=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):858:a >= Long.MAX_VALUE / b |==> true
1202:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a % b
1203:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a + b
1204:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a - b
1205:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):859:a * b |==> a / b
1206:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:0 |==> 1
1207:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:0 |==> -1
1208:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> b != 0
1209:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> b < 0
1210:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> b <= 0
1211:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> b == 0
1212:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> b >= 0
1213:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> false
1214:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):863:b > 0 |==> true
1215:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE % b
1216:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE * b
1217:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE + b
1218:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b |==> Long.MIN_VALUE - b
1219:ROR:<=(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> Long.MIN_VALUE / b != a
1220:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> Long.MIN_VALUE / b < a
1221:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> Long.MIN_VALUE / b == a
1222:ROR:<=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> Long.MIN_VALUE / b > a
1223:ROR:<=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> Long.MIN_VALUE / b >= a
1224:ROR:<=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> false
1225:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):865:Long.MIN_VALUE / b <= a |==> true
1226:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a % b
1227:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a + b
1228:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a - b
1229:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):866:a * b |==> a / b
1230:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):873:0 |==> 1
1231:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):873:0 |==> -1
1232:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:0 |==> 1
1233:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:0 |==> -1
1234:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> a != 0
1235:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> a < 0
1236:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> a <= 0
1237:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> a == 0
1238:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> a >= 0
1239:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> false
1240:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):875:a > 0 |==> true
1241:AOR:/(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE % b
1242:AOR:/(long,long):*(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE * b
1243:AOR:/(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE + b
1244:AOR:/(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:Long.MAX_VALUE / b |==> Long.MAX_VALUE - b
1245:ROR:<=(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> a != Long.MAX_VALUE / b
1246:ROR:<=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> a < Long.MAX_VALUE / b
1247:ROR:<=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> a == Long.MAX_VALUE / b
1248:ROR:<=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> a > Long.MAX_VALUE / b
1249:ROR:<=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> a >= Long.MAX_VALUE / b
1250:ROR:<=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> false
1251:ROR:<=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):880:a <= Long.MAX_VALUE / b |==> true
1252:AOR:*(long,long):%(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a % b
1253:AOR:*(long,long):+(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a + b
1254:AOR:*(long,long):-(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a - b
1255:AOR:*(long,long):/(long,long):org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):881:a * b |==> a / b
1256:LVR:0:POS:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):887:0 |==> 1
1257:LVR:0:NEG:org.apache.commons.math.util.MathUtils@mulAndCheck(long,long):887:0 |==> -1
1258:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isNaN(d) != Double.isInfinite(d)
1259:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isNaN(d) && Double.isInfinite(d)
1260:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isNaN(d) == Double.isInfinite(d)
1261:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> false
1262:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isNaN(d)
1263:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> Double.isInfinite(d)
1264:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@nextAfter(double,double):913:Double.isNaN(d) || Double.isInfinite(d) |==> true
1265:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:0 |==> 1
1266:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:0 |==> -1
1267:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> d != 0
1268:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> d < 0
1269:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> d <= 0
1270:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> d > 0
1271:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> d >= 0
1272:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> false
1273:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):915:d == 0 |==> true
1274:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:0 |==> 1
1275:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:0 |==> -1
1276:ROR:<(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> direction != 0
1277:ROR:<(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> direction <= 0
1278:ROR:<(double,double):==(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> direction == 0
1279:ROR:<(double,double):>(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> direction > 0
1280:ROR:<(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> direction >= 0
1281:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> false
1282:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:direction < 0 |==> true
1283:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):916:-Double.MIN_VALUE |==> +Double.MIN_VALUE
1284:LVR:NEG:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:-9223372036854775808L |==> 0L
1285:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:-9223372036854775808L |==> -9223372036854775808L
1286:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:bits & -9223372036854775808L |==> bits ^ -9223372036854775808L
1287:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):923:bits & -9223372036854775808L |==> bits | -9223372036854775808L
1288:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:9218868437227405312L |==> 0L
1289:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:9218868437227405312L |==> -9218868437227405312L
1290:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:bits & 9218868437227405312L |==> bits ^ 9218868437227405312L
1291:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):924:bits & 9218868437227405312L |==> bits | 9218868437227405312L
1292:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:4503599627370495L |==> 0L
1293:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:4503599627370495L |==> -4503599627370495L
1294:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:bits & 4503599627370495L |==> bits ^ 4503599627370495L
1295:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):925:bits & 4503599627370495L |==> bits | 4503599627370495L
1296:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction % d
1297:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction * d
1298:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction + d
1299:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:direction - d |==> direction / d
1300:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d % (direction - d)
1301:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d + (direction - d)
1302:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d - (direction - d)
1303:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) |==> d / (direction - d)
1304:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:0 |==> 1
1305:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:0 |==> -1
1306:ROR:>=(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> d * (direction - d) != 0
1307:ROR:>=(double,double):<(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> d * (direction - d) < 0
1308:ROR:>=(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> d * (direction - d) <= 0
1309:ROR:>=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> d * (direction - d) == 0
1310:ROR:>=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> d * (direction - d) > 0
1311:ROR:>=(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> false
1312:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@nextAfter(double,double):927:d * (direction - d) >= 0 |==> true
1313:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:4503599627370495L |==> 0L
1314:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:4503599627370495L |==> -4503599627370495L
1315:ROR:==(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> mantissa != 4503599627370495L
1316:ROR:==(long,long):<(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> mantissa < 4503599627370495L
1317:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> mantissa <= 4503599627370495L
1318:ROR:==(long,long):>(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> mantissa > 4503599627370495L
1319:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> mantissa >= 4503599627370495L
1320:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> false
1321:ROR:==(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):929:mantissa == 4503599627370495L |==> true
1322:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:4503599627370496L |==> 0L
1323:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:4503599627370496L |==> -4503599627370496L
1324:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent % 4503599627370496L
1325:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent * 4503599627370496L
1326:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent - 4503599627370496L
1327:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):931:exponent + 4503599627370496L |==> exponent / 4503599627370496L
1328:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):930:sign | (exponent + 4503599627370496L) |==> sign & (exponent + 4503599627370496L)
1329:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):930:sign | (exponent + 4503599627370496L) |==> sign ^ (exponent + 4503599627370496L)
1330:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent |==> sign & exponent
1331:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent |==> sign ^ exponent
1332:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:1 |==> 0
1333:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:1 |==> -1
1334:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa % 1
1335:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa * 1
1336:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa - 1
1337:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):934:mantissa + 1 |==> mantissa / 1
1338:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent | (mantissa + 1) |==> (sign | exponent) & (mantissa + 1)
1339:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):933:sign | exponent | (mantissa + 1) |==> (sign | exponent) ^ (mantissa + 1)
1340:LVR:0:POS:org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:0L |==> 1L
1341:LVR:0:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:0L |==> -1L
1342:ROR:==(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> mantissa != 0L
1343:ROR:==(long,long):<(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> mantissa < 0L
1344:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> mantissa <= 0L
1345:ROR:==(long,long):>(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> mantissa > 0L
1346:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> mantissa >= 0L
1347:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> false
1348:ROR:==(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):938:mantissa == 0L |==> true
1349:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:4503599627370496L |==> 0L
1350:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:4503599627370496L |==> -4503599627370496L
1351:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent % 4503599627370496L
1352:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent * 4503599627370496L
1353:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent + 4503599627370496L
1354:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):940:exponent - 4503599627370496L |==> exponent / 4503599627370496L
1355:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) |==> sign & (exponent - 4503599627370496L)
1356:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) |==> sign ^ (exponent - 4503599627370496L)
1357:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):941:4503599627370495L |==> 0L
1358:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):941:4503599627370495L |==> -4503599627370495L
1359:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) | 4503599627370495L |==> (sign | (exponent - 4503599627370496L)) & 4503599627370495L
1360:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):939:sign | (exponent - 4503599627370496L) | 4503599627370495L |==> (sign | (exponent - 4503599627370496L)) ^ 4503599627370495L
1361:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent |==> sign & exponent
1362:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent |==> sign ^ exponent
1363:LVR:POS:0:org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:1 |==> 0
1364:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:1 |==> -1
1365:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa % 1
1366:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa * 1
1367:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa + 1
1368:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):944:mantissa - 1 |==> mantissa / 1
1369:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent | (mantissa - 1) |==> (sign | exponent) & (mantissa - 1)
1370:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@nextAfter(double,double):943:sign | exponent | (mantissa - 1) |==> (sign | exponent) ^ (mantissa - 1)
1371:LVR:0:POS:org.apache.commons.math.util.MathUtils@scalb(double,int):962:0 |==> 1
1372:LVR:0:NEG:org.apache.commons.math.util.MathUtils@scalb(double,int):962:0 |==> -1
1373:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> d != 0
1374:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> d < 0
1375:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> d <= 0
1376:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> d > 0
1377:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> d >= 0
1378:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> false
1379:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@scalb(double,int):962:d == 0 |==> true
1380:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> (d == 0) != Double.isNaN(d)
1381:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> (d == 0) && Double.isNaN(d)
1382:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> (d == 0) == Double.isNaN(d)
1383:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> false
1384:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> (d == 0)
1385:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> Double.isNaN(d)
1386:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) |==> true
1387:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> ((d == 0) || Double.isNaN(d)) != Double.isInfinite(d)
1388:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> ((d == 0) || Double.isNaN(d)) && Double.isInfinite(d)
1389:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> ((d == 0) || Double.isNaN(d)) == Double.isInfinite(d)
1390:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> false
1391:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> (d == 0) || Double.isNaN(d)
1392:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> Double.isInfinite(d)
1393:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@scalb(double,int):962:(d == 0) || Double.isNaN(d) || Double.isInfinite(d) |==> true
1394:LVR:POS:0:org.apache.commons.math.util.MathUtils@scalb(double,int):968:9218868437227405312L |==> 0L
1395:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@scalb(double,int):968:9218868437227405312L |==> -9218868437227405312L
1396:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):968:bits & 9218868437227405312L |==> bits ^ 9218868437227405312L
1397:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):968:bits & 9218868437227405312L |==> bits | 9218868437227405312L
1398:LVR:NEG:0:org.apache.commons.math.util.MathUtils@scalb(double,int):969:-9218868437227405313L |==> 0L
1399:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@scalb(double,int):969:-9218868437227405313L |==> 9218868437227405313L
1400:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):969:bits & -9218868437227405313L |==> bits ^ -9218868437227405313L
1401:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):969:bits & -9218868437227405313L |==> bits | -9218868437227405313L
1402:LVR:POS:0:org.apache.commons.math.util.MathUtils@scalb(double,int):972:52 |==> 0
1403:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@scalb(double,int):972:52 |==> -52
1404:SOR:<<(long,int):>>(long,int):org.apache.commons.math.util.MathUtils@scalb(double,int):972:((long)scaleFactor) << 52 |==> ((long)scaleFactor) >> 52
1405:SOR:<<(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@scalb(double,int):972:((long)scaleFactor) << 52 |==> ((long)scaleFactor) >>> 52
1406:AOR:+(long,long):%(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent % (((long)scaleFactor) << 52)
1407:AOR:+(long,long):*(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent * (((long)scaleFactor) << 52)
1408:AOR:+(long,long):-(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent - (((long)scaleFactor) << 52)
1409:AOR:+(long,long):/(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:exponent + (((long)scaleFactor) << 52) |==> exponent / (((long)scaleFactor) << 52)
1410:LOR:|(long,long):&(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:rest | (exponent + (((long)scaleFactor) << 52)) |==> rest & (exponent + (((long)scaleFactor) << 52))
1411:LOR:|(long,long):^(long,long):org.apache.commons.math.util.MathUtils@scalb(double,int):972:rest | (exponent + (((long)scaleFactor) << 52)) |==> rest ^ (exponent + (((long)scaleFactor) << 52))
1412:AOR:+(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a % Math.PI
1413:AOR:+(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a * Math.PI
1414:AOR:+(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a - Math.PI
1415:AOR:+(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI |==> a / Math.PI
1416:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> (a + Math.PI) % center
1417:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> (a + Math.PI) * center
1418:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> a + Math.PI + center
1419:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a + Math.PI - center |==> (a + Math.PI) / center
1420:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) % TWO_PI
1421:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) * TWO_PI
1422:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) + TWO_PI
1423:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:(a + Math.PI - center) / TWO_PI |==> (a + Math.PI - center) - TWO_PI
1424:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI % Math.floor((a + Math.PI - center) / TWO_PI)
1425:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI + Math.floor((a + Math.PI - center) / TWO_PI)
1426:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI - Math.floor((a + Math.PI - center) / TWO_PI)
1427:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> TWO_PI / Math.floor((a + Math.PI - center) / TWO_PI)
1428:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a % (TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI))
1429:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a * (TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI))
1430:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a + TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI)
1431:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeAngle(double,double):997:a - TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI) |==> a / (TWO_PI * Math.floor((a + Math.PI - center) / TWO_PI))
1432:COR:Double.isInfinite(normalizedSum):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1022:Double.isInfinite(normalizedSum) |==> false
1433:COR:Double.isInfinite(normalizedSum):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1022:Double.isInfinite(normalizedSum) |==> true
1434:COR:Double.isNaN(normalizedSum):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1026:Double.isNaN(normalizedSum) |==> false
1435:COR:Double.isNaN(normalizedSum):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1026:Double.isNaN(normalizedSum) |==> true
1436:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1030:0.0 |==> 1.0
1437:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1030:0.0 |==> -1.0
1438:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:0 |==> 1
1439:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:0 |==> -1
1440:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> i != len
1441:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> i <= len
1442:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> i == len
1443:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> i > len
1444:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> i >= len
1445:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> false
1446:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1033:i < len |==> true
1447:COR:Double.isInfinite(values[i]):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1034:Double.isInfinite(values[i]) |==> false
1448:COR:Double.isInfinite(values[i]):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1034:Double.isInfinite(values[i]) |==> true
1449:COR:Double.isNaN(values[i]):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1038:Double.isNaN(values[i]) |==> false
1450:COR:Double.isNaN(values[i]):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1038:Double.isNaN(values[i]) |==> true
1451:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1039:sum += values[i] |==> <NO-OP>
1452:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:0 |==> 1
1453:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:0 |==> -1
1454:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> sum != 0
1455:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> sum < 0
1456:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> sum <= 0
1457:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> sum > 0
1458:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> sum >= 0
1459:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> false
1460:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1042:sum == 0 |==> true
1461:LVR:0:POS:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:0 |==> 1
1462:LVR:0:NEG:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:0 |==> -1
1463:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> i != len
1464:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> i <= len
1465:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> i == len
1466:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> i > len
1467:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> i >= len
1468:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> false
1469:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1046:i < len |==> true
1470:COR:Double.isNaN(values[i]):TRUE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1047:Double.isNaN(values[i]) |==> false
1471:COR:Double.isNaN(values[i]):FALSE:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1047:Double.isNaN(values[i]) |==> true
1472:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1048:out[i] = Double.NaN |==> <NO-OP>
1473:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] % normalizedSum
1474:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] + normalizedSum
1475:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] - normalizedSum
1476:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum |==> values[i] / normalizedSum
1477:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum % sum
1478:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum * sum
1479:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum + sum
1480:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:values[i] * normalizedSum / sum |==> values[i] * normalizedSum - sum
1481:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@normalizeArray(double[],double):1050:out[i] = values[i] * normalizedSum / sum |==> <NO-OP>
1482:COR:Double.isInfinite(x):TRUE:org.apache.commons.math.util.MathUtils@round(double,int,int):1088:Double.isInfinite(x) |==> false
1483:COR:Double.isInfinite(x):FALSE:org.apache.commons.math.util.MathUtils@round(double,int,int):1088:Double.isInfinite(x) |==> true
1484:LVR:POS:0:org.apache.commons.math.util.MathUtils@round(float,int,int):1123:10.0F |==> 0.0F
1485:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@round(float,int,int):1123:10.0F |==> -10.0F
1486:AOR:*(float,float):%(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) % sign
1487:AOR:*(float,float):+(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) + sign
1488:AOR:*(float,float):-(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) - sign
1489:AOR:*(float,float):/(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1123:(float)Math.pow(10.0F, scale) * sign |==> (float)Math.pow(10.0F, scale) / sign
1490:AOR:*(float,float):%(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x % factor
1491:AOR:*(float,float):+(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x + factor
1492:AOR:*(float,float):-(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x - factor
1493:AOR:*(float,float):/(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:x * factor |==> x / factor
1494:AOR:/(float,float):%(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) % factor
1495:AOR:/(float,float):*(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) * factor
1496:AOR:/(float,float):+(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) + factor
1497:AOR:/(float,float):-(float,float):org.apache.commons.math.util.MathUtils@round(float,int,int):1124:(float)roundUnscaled(x * factor, sign, roundingMethod) / factor |==> (float)roundUnscaled(x * factor, sign, roundingMethod) - factor
1498:LVR:NEG:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:-1 |==> 0
1499:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:-1 |==> 1
1500:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> sign != -1
1501:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> sign < -1
1502:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> sign <= -1
1503:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> sign > -1
1504:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> sign >= -1
1505:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> false
1506:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1143:sign == -1 |==> true
1507:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1144:unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY)) |==> <NO-OP>
1508:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1146:unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY)) |==> <NO-OP>
1509:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1150:unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY)) |==> <NO-OP>
1510:LVR:NEG:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:-1 |==> 0
1511:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:-1 |==> 1
1512:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> sign != -1
1513:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> sign < -1
1514:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> sign <= -1
1515:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> sign > -1
1516:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> sign >= -1
1517:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> false
1518:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1153:sign == -1 |==> true
1519:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1154:unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY)) |==> <NO-OP>
1520:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1156:unscaled = Math.floor(nextAfter(unscaled, Double.NEGATIVE_INFINITY)) |==> <NO-OP>
1521:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1160:unscaled = nextAfter(unscaled, Double.NEGATIVE_INFINITY) |==> <NO-OP>
1522:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled % Math.floor(unscaled)
1523:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled * Math.floor(unscaled)
1524:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled + Math.floor(unscaled)
1525:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1161:unscaled - Math.floor(unscaled) |==> unscaled / Math.floor(unscaled)
1526:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:0.5 |==> 0.0
1527:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:0.5 |==> -0.5
1528:ROR:>(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> fraction != 0.5
1529:ROR:>(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> fraction < 0.5
1530:ROR:>(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> fraction <= 0.5
1531:ROR:>(double,double):==(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> fraction == 0.5
1532:ROR:>(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> fraction >= 0.5
1533:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> false
1534:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1162:fraction > 0.5 |==> true
1535:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1163:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1536:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1165:unscaled = Math.floor(unscaled) |==> <NO-OP>
1537:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled % Math.floor(unscaled)
1538:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled * Math.floor(unscaled)
1539:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled + Math.floor(unscaled)
1540:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1170:unscaled - Math.floor(unscaled) |==> unscaled / Math.floor(unscaled)
1541:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:0.5 |==> 0.0
1542:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:0.5 |==> -0.5
1543:ROR:>(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> fraction != 0.5
1544:ROR:>(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> fraction < 0.5
1545:ROR:>(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> fraction <= 0.5
1546:ROR:>(double,double):==(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> fraction == 0.5
1547:ROR:>(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> fraction >= 0.5
1548:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> false
1549:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1171:fraction > 0.5 |==> true
1550:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1172:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1551:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:0.5 |==> 0.0
1552:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:0.5 |==> -0.5
1553:ROR:<(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> fraction != 0.5
1554:ROR:<(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> fraction <= 0.5
1555:ROR:<(double,double):==(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> fraction == 0.5
1556:ROR:<(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> fraction > 0.5
1557:ROR:<(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> fraction >= 0.5
1558:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> false
1559:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1173:fraction < 0.5 |==> true
1560:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1174:unscaled = Math.floor(unscaled) |==> <NO-OP>
1561:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:2.0 |==> 0.0
1562:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:2.0 |==> -2.0
1563:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) % 2.0
1564:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) * 2.0
1565:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) + 2.0
1566:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) - 2.0
1567:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1178:2.0 |==> 0.0
1568:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1178:2.0 |==> -2.0
1569:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) % 2.0
1570:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) * 2.0
1571:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) + 2.0
1572:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 |==> Math.floor(unscaled) - 2.0
1573:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> Math.floor(unscaled) / 2.0 != Math.floor(Math.floor(unscaled) / 2.0)
1574:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> Math.floor(unscaled) / 2.0 < Math.floor(Math.floor(unscaled) / 2.0)
1575:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> Math.floor(unscaled) / 2.0 <= Math.floor(Math.floor(unscaled) / 2.0)
1576:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> Math.floor(unscaled) / 2.0 > Math.floor(Math.floor(unscaled) / 2.0)
1577:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> Math.floor(unscaled) / 2.0 >= Math.floor(Math.floor(unscaled) / 2.0)
1578:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> false
1579:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1177:Math.floor(unscaled) / 2.0 == Math.floor(Math.floor(unscaled) / 2.0) |==> true
1580:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1179:unscaled = Math.floor(unscaled) |==> <NO-OP>
1581:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1181:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1582:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1187:unscaled = nextAfter(unscaled, Double.POSITIVE_INFINITY) |==> <NO-OP>
1583:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled % Math.floor(unscaled)
1584:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled * Math.floor(unscaled)
1585:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled + Math.floor(unscaled)
1586:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1188:unscaled - Math.floor(unscaled) |==> unscaled / Math.floor(unscaled)
1587:LVR:POS:0:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:0.5 |==> 0.0
1588:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:0.5 |==> -0.5
1589:ROR:>=(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> fraction != 0.5
1590:ROR:>=(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> fraction < 0.5
1591:ROR:>=(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> fraction <= 0.5
1592:ROR:>=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> fraction == 0.5
1593:ROR:>=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> fraction > 0.5
1594:ROR:>=(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> false
1595:ROR:>=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1189:fraction >= 0.5 |==> true
1596:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1190:unscaled = Math.ceil(unscaled) |==> <NO-OP>
1597:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1192:unscaled = Math.floor(unscaled) |==> <NO-OP>
1598:ROR:!=(double,double):<(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> unscaled < Math.floor(unscaled)
1599:ROR:!=(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> unscaled <= Math.floor(unscaled)
1600:ROR:!=(double,double):==(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> unscaled == Math.floor(unscaled)
1601:ROR:!=(double,double):>(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> unscaled > Math.floor(unscaled)
1602:ROR:!=(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> unscaled >= Math.floor(unscaled)
1603:ROR:!=(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> false
1604:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1197:unscaled != Math.floor(unscaled) |==> true
1605:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@roundUnscaled(double,double,int):1202:unscaled = Math.ceil(nextAfter(unscaled, Double.POSITIVE_INFINITY)) |==> <NO-OP>
1606:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> x != ZB
1607:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> x < ZB
1608:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> x <= ZB
1609:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> x > ZB
1610:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> x >= ZB
1611:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> false
1612:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x == ZB |==> true
1613:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> x != ZB
1614:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> x < ZB
1615:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> x <= ZB
1616:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> x == ZB
1617:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> x >= ZB
1618:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> false
1619:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@sign(byte):1232:x > ZB |==> true
1620:COR:Double.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@sign(double):1248:Double.isNaN(x) |==> false
1621:COR:Double.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@sign(double):1248:Double.isNaN(x) |==> true
1622:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> 1.0
1623:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> -1.0
1624:ROR:==(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> x != 0.0
1625:ROR:==(double,double):<(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> x < 0.0
1626:ROR:==(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> x <= 0.0
1627:ROR:==(double,double):>(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> x > 0.0
1628:ROR:==(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> x >= 0.0
1629:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> false
1630:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x == 0.0 |==> true
1631:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> 1.0
1632:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> -1.0
1633:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> 1.0
1634:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:0.0 |==> -1.0
1635:ROR:>(double,double):!=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> x != 0.0
1636:ROR:>(double,double):<(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> x < 0.0
1637:ROR:>(double,double):<=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> x <= 0.0
1638:ROR:>(double,double):==(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> x == 0.0
1639:ROR:>(double,double):>=(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> x >= 0.0
1640:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> false
1641:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.util.MathUtils@sign(double):1251:x > 0.0 |==> true
1642:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> 0.0
1643:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> -1.0
1644:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@sign(double):1251:-1.0 |==> +1.0
1645:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> 0.0
1646:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(double):1251:1.0 |==> -1.0
1647:COR:Float.isNaN(x):TRUE:org.apache.commons.math.util.MathUtils@sign(float):1266:Float.isNaN(x) |==> false
1648:COR:Float.isNaN(x):FALSE:org.apache.commons.math.util.MathUtils@sign(float):1266:Float.isNaN(x) |==> true
1649:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> 1.0F
1650:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> -1.0F
1651:ROR:==(float,float):!=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> x != 0.0F
1652:ROR:==(float,float):<(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> x < 0.0F
1653:ROR:==(float,float):<=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> x <= 0.0F
1654:ROR:==(float,float):>(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> x > 0.0F
1655:ROR:==(float,float):>=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> x >= 0.0F
1656:ROR:==(float,float):FALSE(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> false
1657:ROR:==(float,float):TRUE(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x == 0.0F |==> true
1658:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> 1.0F
1659:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> -1.0F
1660:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> 1.0F
1661:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:0.0F |==> -1.0F
1662:ROR:>(float,float):!=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> x != 0.0F
1663:ROR:>(float,float):<(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> x < 0.0F
1664:ROR:>(float,float):<=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> x <= 0.0F
1665:ROR:>(float,float):==(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> x == 0.0F
1666:ROR:>(float,float):>=(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> x >= 0.0F
1667:ROR:>(float,float):FALSE(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> false
1668:ROR:>(float,float):TRUE(float,float):org.apache.commons.math.util.MathUtils@sign(float):1269:x > 0.0F |==> true
1669:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> 0.0F
1670:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> -1.0F
1671:ORU:-(float):+(float):org.apache.commons.math.util.MathUtils@sign(float):1269:-1.0F |==> +1.0F
1672:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> 0.0F
1673:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(float):1269:1.0F |==> -1.0F
1674:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> 1
1675:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> -1
1676:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> x != 0
1677:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> x < 0
1678:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> x <= 0
1679:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> x > 0
1680:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> x >= 0
1681:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> false
1682:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x == 0 |==> true
1683:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> 1
1684:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> -1
1685:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> 1
1686:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:0 |==> -1
1687:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> x != 0
1688:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> x < 0
1689:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> x <= 0
1690:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> x == 0
1691:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> x >= 0
1692:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> false
1693:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@sign(int):1283:x > 0 |==> true
1694:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(int):1283:1 |==> 0
1695:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(int):1283:1 |==> -1
1696:LVR:NEG:0:org.apache.commons.math.util.MathUtils@sign(int):1283:-1 |==> 0
1697:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@sign(int):1283:-1 |==> 1
1698:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> 1L
1699:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> -1L
1700:ROR:==(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> x != 0L
1701:ROR:==(long,long):<(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> x < 0L
1702:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> x <= 0L
1703:ROR:==(long,long):>(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> x > 0L
1704:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> x >= 0L
1705:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> false
1706:ROR:==(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x == 0L |==> true
1707:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> 1L
1708:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> -1L
1709:LVR:0:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> 1L
1710:LVR:0:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:0L |==> -1L
1711:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> x != 0L
1712:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> x < 0L
1713:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> x <= 0L
1714:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> x == 0L
1715:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> x >= 0L
1716:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> false
1717:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@sign(long):1297:x > 0L |==> true
1718:LVR:POS:0:org.apache.commons.math.util.MathUtils@sign(long):1297:1L |==> 0L
1719:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sign(long):1297:1L |==> -1L
1720:LVR:NEG:0:org.apache.commons.math.util.MathUtils@sign(long):1297:-1L |==> 0L
1721:LVR:NEG:POS:org.apache.commons.math.util.MathUtils@sign(long):1297:-1L |==> 1L
1722:ROR:==(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> x != ZS
1723:ROR:==(int,int):<(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> x < ZS
1724:ROR:==(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> x <= ZS
1725:ROR:==(int,int):>(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> x > ZS
1726:ROR:==(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> x >= ZS
1727:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> false
1728:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x == ZS |==> true
1729:ROR:>(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> x != ZS
1730:ROR:>(int,int):<(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> x < ZS
1731:ROR:>(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> x <= ZS
1732:ROR:>(int,int):==(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> x == ZS
1733:ROR:>(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> x >= ZS
1734:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> false
1735:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@sign(short):1312:x > ZS |==> true
1736:ORU:-(double):+(double):org.apache.commons.math.util.MathUtils@sinh(double):1323:-x |==> +x
1737:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) % Math.exp(-x)
1738:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) * Math.exp(-x)
1739:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) + Math.exp(-x)
1740:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:Math.exp(x) - Math.exp(-x) |==> Math.exp(x) / Math.exp(-x)
1741:LVR:POS:0:org.apache.commons.math.util.MathUtils@sinh(double):1323:2.0 |==> 0.0
1742:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@sinh(double):1323:2.0 |==> -2.0
1743:AOR:/(double,double):%(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) % 2.0
1744:AOR:/(double,double):*(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) * 2.0
1745:AOR:/(double,double):+(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) + 2.0
1746:AOR:/(double,double):-(double,double):org.apache.commons.math.util.MathUtils@sinh(double):1323:(Math.exp(x) - Math.exp(-x)) / 2.0 |==> (Math.exp(x) - Math.exp(-x)) - 2.0
1747:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x % (long)y
1748:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x * (long)y
1749:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x + (long)y
1750:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1337:(long)x - (long)y |==> (long)x / (long)y
1751:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> s != Integer.MIN_VALUE
1752:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> s <= Integer.MIN_VALUE
1753:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> s == Integer.MIN_VALUE
1754:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> s > Integer.MIN_VALUE
1755:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> s >= Integer.MIN_VALUE
1756:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> false
1757:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE |==> true
1758:ROR:>(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> s != Integer.MAX_VALUE
1759:ROR:>(long,long):<(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> s < Integer.MAX_VALUE
1760:ROR:>(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> s <= Integer.MAX_VALUE
1761:ROR:>(long,long):==(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> s == Integer.MAX_VALUE
1762:ROR:>(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> s >= Integer.MAX_VALUE
1763:ROR:>(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> false
1764:ROR:>(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s > Integer.MAX_VALUE |==> true
1765:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE != s > Integer.MAX_VALUE
1766:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE && s > Integer.MAX_VALUE
1767:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE == s > Integer.MAX_VALUE
1768:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> false
1769:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s < Integer.MIN_VALUE
1770:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> s > Integer.MAX_VALUE
1771:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.util.MathUtils@subAndCheck(int,int):1338:s < Integer.MIN_VALUE || s > Integer.MAX_VALUE |==> true
1772:ROR:==(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> b != Long.MIN_VALUE
1773:ROR:==(long,long):<(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> b < Long.MIN_VALUE
1774:ROR:==(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> b <= Long.MIN_VALUE
1775:ROR:==(long,long):>(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> b > Long.MIN_VALUE
1776:ROR:==(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> b >= Long.MIN_VALUE
1777:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> false
1778:ROR:==(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1357:b == Long.MIN_VALUE |==> true
1779:LVR:0:POS:org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:0 |==> 1
1780:LVR:0:NEG:org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:0 |==> -1
1781:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> a != 0
1782:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> a <= 0
1783:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> a == 0
1784:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> a > 0
1785:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> a >= 0
1786:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> false
1787:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1358:a < 0 |==> true
1788:AOR:-(long,long):%(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a % b
1789:AOR:-(long,long):*(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a * b
1790:AOR:-(long,long):+(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a + b
1791:AOR:-(long,long):/(long,long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1359:a - b |==> a / b
1792:ORU:-(long):+(long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1365:-b |==> +b
1793:ORU:-(long):~(long):org.apache.commons.math.util.MathUtils@subAndCheck(long,long):1365:-b |==> ~b
1794:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,int):1380:0 |==> 1
1795:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1380:0 |==> -1
1796:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> e != 0
1797:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> e <= 0
1798:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> e == 0
1799:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> e > 0
1800:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> e >= 0
1801:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> false
1802:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1380:e < 0 |==> true
1803:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,int):1386:1 |==> 0
1804:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1386:1 |==> -1
1805:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,int):1388:0 |==> 1
1806:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1388:0 |==> -1
1807:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> e < 0
1808:ROR:!=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> e <= 0
1809:ROR:!=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> e == 0
1810:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> e > 0
1811:ROR:!=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> e >= 0
1812:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> false
1813:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1388:e != 0 |==> true
1814:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,int):1389:1 |==> 0
1815:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1389:1 |==> -1
1816:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:e & 1 |==> e ^ 1
1817:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:e & 1 |==> e | 1
1818:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,int):1389:0 |==> 1
1819:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1389:0 |==> -1
1820:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> (e & 1) < 0
1821:ROR:!=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> (e & 1) <= 0
1822:ROR:!=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> (e & 1) == 0
1823:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> (e & 1) > 0
1824:ROR:!=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> (e & 1) >= 0
1825:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> false
1826:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1389:(e & 1) != 0 |==> true
1827:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,int):1390:result *= k2p |==> <NO-OP>
1828:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,int):1392:k2p *= k2p |==> <NO-OP>
1829:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,int):1393:1 |==> 0
1830:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,int):1393:1 |==> -1
1831:SOR:>>(int,int):<<(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1393:e >> 1 |==> e << 1
1832:SOR:>>(int,int):>>>(int,int):org.apache.commons.math.util.MathUtils@pow(int,int):1393:e >> 1 |==> e >>> 1
1833:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,int):1393:e = e >> 1 |==> <NO-OP>
1834:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,long):1410:0 |==> 1
1835:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1410:0 |==> -1
1836:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> e != 0
1837:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> e <= 0
1838:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> e == 0
1839:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> e > 0
1840:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> e >= 0
1841:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> false
1842:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1410:e < 0 |==> true
1843:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,long):1416:1 |==> 0
1844:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1416:1 |==> -1
1845:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,long):1418:0 |==> 1
1846:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1418:0 |==> -1
1847:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> e < 0
1848:ROR:!=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> e <= 0
1849:ROR:!=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> e == 0
1850:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> e > 0
1851:ROR:!=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> e >= 0
1852:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> false
1853:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1418:e != 0 |==> true
1854:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,long):1419:1 |==> 0
1855:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1419:1 |==> -1
1856:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:e & 1 |==> e ^ 1
1857:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:e & 1 |==> e | 1
1858:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(int,long):1419:0 |==> 1
1859:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1419:0 |==> -1
1860:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> (e & 1) < 0
1861:ROR:!=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> (e & 1) <= 0
1862:ROR:!=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> (e & 1) == 0
1863:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> (e & 1) > 0
1864:ROR:!=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> (e & 1) >= 0
1865:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> false
1866:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(int,long):1419:(e & 1) != 0 |==> true
1867:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,long):1420:result *= k2p |==> <NO-OP>
1868:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,long):1422:k2p *= k2p |==> <NO-OP>
1869:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(int,long):1423:1 |==> 0
1870:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(int,long):1423:1 |==> -1
1871:SOR:>>(long,int):<<(long,int):org.apache.commons.math.util.MathUtils@pow(int,long):1423:e >> 1 |==> e << 1
1872:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@pow(int,long):1423:e >> 1 |==> e >>> 1
1873:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(int,long):1423:e = e >> 1 |==> <NO-OP>
1874:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,int):1440:0 |==> 1
1875:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1440:0 |==> -1
1876:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> e != 0
1877:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> e <= 0
1878:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> e == 0
1879:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> e > 0
1880:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> e >= 0
1881:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> false
1882:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1440:e < 0 |==> true
1883:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,int):1446:1L |==> 0L
1884:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1446:1L |==> -1L
1885:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,int):1448:0 |==> 1
1886:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1448:0 |==> -1
1887:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> e < 0
1888:ROR:!=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> e <= 0
1889:ROR:!=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> e == 0
1890:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> e > 0
1891:ROR:!=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> e >= 0
1892:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> false
1893:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1448:e != 0 |==> true
1894:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,int):1449:1 |==> 0
1895:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1449:1 |==> -1
1896:LOR:&(int,int):^(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:e & 1 |==> e ^ 1
1897:LOR:&(int,int):|(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:e & 1 |==> e | 1
1898:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,int):1449:0 |==> 1
1899:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1449:0 |==> -1
1900:ROR:!=(int,int):<(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> (e & 1) < 0
1901:ROR:!=(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> (e & 1) <= 0
1902:ROR:!=(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> (e & 1) == 0
1903:ROR:!=(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> (e & 1) > 0
1904:ROR:!=(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> (e & 1) >= 0
1905:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> false
1906:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1449:(e & 1) != 0 |==> true
1907:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,int):1450:result *= k2p |==> <NO-OP>
1908:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,int):1452:k2p *= k2p |==> <NO-OP>
1909:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,int):1453:1 |==> 0
1910:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,int):1453:1 |==> -1
1911:SOR:>>(int,int):<<(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1453:e >> 1 |==> e << 1
1912:SOR:>>(int,int):>>>(int,int):org.apache.commons.math.util.MathUtils@pow(long,int):1453:e >> 1 |==> e >>> 1
1913:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,int):1453:e = e >> 1 |==> <NO-OP>
1914:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,long):1470:0 |==> 1
1915:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1470:0 |==> -1
1916:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> e != 0
1917:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> e <= 0
1918:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> e == 0
1919:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> e > 0
1920:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> e >= 0
1921:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> false
1922:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1470:e < 0 |==> true
1923:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,long):1476:1L |==> 0L
1924:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1476:1L |==> -1L
1925:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,long):1478:0 |==> 1
1926:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1478:0 |==> -1
1927:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> e < 0
1928:ROR:!=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> e <= 0
1929:ROR:!=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> e == 0
1930:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> e > 0
1931:ROR:!=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> e >= 0
1932:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> false
1933:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1478:e != 0 |==> true
1934:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,long):1479:1 |==> 0
1935:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1479:1 |==> -1
1936:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:e & 1 |==> e ^ 1
1937:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:e & 1 |==> e | 1
1938:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(long,long):1479:0 |==> 1
1939:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1479:0 |==> -1
1940:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> (e & 1) < 0
1941:ROR:!=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> (e & 1) <= 0
1942:ROR:!=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> (e & 1) == 0
1943:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> (e & 1) > 0
1944:ROR:!=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> (e & 1) >= 0
1945:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> false
1946:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(long,long):1479:(e & 1) != 0 |==> true
1947:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,long):1480:result *= k2p |==> <NO-OP>
1948:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,long):1482:k2p *= k2p |==> <NO-OP>
1949:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(long,long):1483:1 |==> 0
1950:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(long,long):1483:1 |==> -1
1951:SOR:>>(long,int):<<(long,int):org.apache.commons.math.util.MathUtils@pow(long,long):1483:e >> 1 |==> e << 1
1952:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@pow(long,long):1483:e >> 1 |==> e >>> 1
1953:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(long,long):1483:e = e >> 1 |==> <NO-OP>
1954:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:0 |==> 1
1955:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:0 |==> -1
1956:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> e != 0
1957:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> e <= 0
1958:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> e == 0
1959:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> e > 0
1960:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> e >= 0
1961:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> false
1962:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,int):1500:e < 0 |==> true
1963:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:0 |==> 1
1964:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:0 |==> -1
1965:ROR:<(long,long):!=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> e != 0
1966:ROR:<(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> e <= 0
1967:ROR:<(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> e == 0
1968:ROR:<(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> e > 0
1969:ROR:<(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> e >= 0
1970:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> false
1971:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1520:e < 0 |==> true
1972:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:0 |==> 1
1973:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:0 |==> -1
1974:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> e < 0
1975:ROR:!=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> e <= 0
1976:ROR:!=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> e == 0
1977:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> e > 0
1978:ROR:!=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> e >= 0
1979:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> false
1980:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1528:e != 0 |==> true
1981:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:1 |==> 0
1982:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:1 |==> -1
1983:LOR:&(long,long):^(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:e & 1 |==> e ^ 1
1984:LOR:&(long,long):|(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:e & 1 |==> e | 1
1985:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:0 |==> 1
1986:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:0 |==> -1
1987:ROR:!=(long,long):<(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> (e & 1) < 0
1988:ROR:!=(long,long):<=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> (e & 1) <= 0
1989:ROR:!=(long,long):==(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> (e & 1) == 0
1990:ROR:!=(long,long):>(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> (e & 1) > 0
1991:ROR:!=(long,long):>=(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> (e & 1) >= 0
1992:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> false
1993:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1529:(e & 1) != 0 |==> true
1994:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1530:result = result.multiply(k2p) |==> <NO-OP>
1995:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1532:k2p = k2p.multiply(k2p) |==> <NO-OP>
1996:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:1 |==> 0
1997:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:1 |==> -1
1998:SOR:>>(long,int):<<(long,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:e >> 1 |==> e << 1
1999:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:e >> 1 |==> e >>> 1
2000:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,long):1533:e = e >> 1 |==> <NO-OP>
2001:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:0 |==> 1
2002:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:0 |==> -1
2003:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> e.compareTo(BigInteger.ZERO) != 0
2004:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> e.compareTo(BigInteger.ZERO) <= 0
2005:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> e.compareTo(BigInteger.ZERO) == 0
2006:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> e.compareTo(BigInteger.ZERO) > 0
2007:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> e.compareTo(BigInteger.ZERO) >= 0
2008:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> false
2009:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1550:e.compareTo(BigInteger.ZERO) < 0 |==> true
2010:LVR:0:POS:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:0 |==> 1
2011:LVR:0:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:0 |==> -1
2012:COR:e.testBit(0):TRUE:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:e.testBit(0) |==> false
2013:COR:e.testBit(0):FALSE:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1559:e.testBit(0) |==> true
2014:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1560:result = result.multiply(k2p) |==> <NO-OP>
2015:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1562:k2p = k2p.multiply(k2p) |==> <NO-OP>
2016:LVR:POS:0:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1563:1 |==> 0
2017:LVR:POS:NEG:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1563:1 |==> -1
2018:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@pow(java.math.BigInteger,java.math.BigInteger):1563:e = e.shiftRight(1) |==> <NO-OP>
2019:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1578:0 |==> 1
2020:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1578:0 |==> -1
2021:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:0 |==> 1
2022:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:0 |==> -1
2023:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> i != p1.length
2024:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> i <= p1.length
2025:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> i == p1.length
2026:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> i > p1.length
2027:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> i >= p1.length
2028:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> false
2029:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1579:i < p1.length |==> true
2030:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] % p2[i]
2031:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] * p2[i]
2032:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] + p2[i]
2033:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:p1[i] - p2[i] |==> p1[i] / p2[i]
2034:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance1(double[],double[]):1580:sum += Math.abs(p1[i] - p2[i]) |==> <NO-OP>
2035:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1593:0 |==> 1
2036:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1593:0 |==> -1
2037:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:0 |==> 1
2038:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:0 |==> -1
2039:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> i != p1.length
2040:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> i <= p1.length
2041:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> i == p1.length
2042:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> i > p1.length
2043:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> i >= p1.length
2044:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> false
2045:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1594:i < p1.length |==> true
2046:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] % p2[i]
2047:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] * p2[i]
2048:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] + p2[i]
2049:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:p1[i] - p2[i] |==> p1[i] / p2[i]
2050:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance1(int[],int[]):1595:sum += Math.abs(p1[i] - p2[i]) |==> <NO-OP>
2051:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1608:0 |==> 1
2052:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1608:0 |==> -1
2053:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:0 |==> 1
2054:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:0 |==> -1
2055:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> i != p1.length
2056:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> i <= p1.length
2057:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> i == p1.length
2058:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> i > p1.length
2059:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> i >= p1.length
2060:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> false
2061:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1609:i < p1.length |==> true
2062:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] % p2[i]
2063:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] * p2[i]
2064:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] + p2[i]
2065:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1610:p1[i] - p2[i] |==> p1[i] / p2[i]
2066:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp % dp
2067:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp + dp
2068:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp - dp
2069:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:dp * dp |==> dp / dp
2070:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance(double[],double[]):1611:sum += dp * dp |==> <NO-OP>
2071:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1624:0 |==> 1
2072:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1624:0 |==> -1
2073:LVR:0:POS:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:0 |==> 1
2074:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:0 |==> -1
2075:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> i != p1.length
2076:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> i <= p1.length
2077:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> i == p1.length
2078:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> i > p1.length
2079:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> i >= p1.length
2080:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> false
2081:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1625:i < p1.length |==> true
2082:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] % p2[i]
2083:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] * p2[i]
2084:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] + p2[i]
2085:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1626:p1[i] - p2[i] |==> p1[i] / p2[i]
2086:AOR:*(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp % dp
2087:AOR:*(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp + dp
2088:AOR:*(double,double):-(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp - dp
2089:AOR:*(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:dp * dp |==> dp / dp
2090:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distance(int[],int[]):1627:sum += dp * dp |==> <NO-OP>
2091:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1640:0 |==> 1
2092:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1640:0 |==> -1
2093:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:0 |==> 1
2094:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:0 |==> -1
2095:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> i != p1.length
2096:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> i <= p1.length
2097:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> i == p1.length
2098:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> i > p1.length
2099:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> i >= p1.length
2100:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> false
2101:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1641:i < p1.length |==> true
2102:AOR:-(double,double):%(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] % p2[i]
2103:AOR:-(double,double):*(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] * p2[i]
2104:AOR:-(double,double):+(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] + p2[i]
2105:AOR:-(double,double):/(double,double):org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:p1[i] - p2[i] |==> p1[i] / p2[i]
2106:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distanceInf(double[],double[]):1642:max = Math.max(max, Math.abs(p1[i] - p2[i])) |==> <NO-OP>
2107:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1655:0 |==> 1
2108:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1655:0 |==> -1
2109:LVR:0:POS:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:0 |==> 1
2110:LVR:0:NEG:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:0 |==> -1
2111:ROR:<(int,int):!=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> i != p1.length
2112:ROR:<(int,int):<=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> i <= p1.length
2113:ROR:<(int,int):==(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> i == p1.length
2114:ROR:<(int,int):>(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> i > p1.length
2115:ROR:<(int,int):>=(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> i >= p1.length
2116:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> false
2117:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1656:i < p1.length |==> true
2118:AOR:-(int,int):%(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] % p2[i]
2119:AOR:-(int,int):*(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] * p2[i]
2120:AOR:-(int,int):+(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] + p2[i]
2121:AOR:-(int,int):/(int,int):org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:p1[i] - p2[i] |==> p1[i] / p2[i]
2122:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.util.MathUtils@distanceInf(int[],int[]):1657:max = Math.max(max, Math.abs(p1[i] - p2[i])) |==> <NO-OP>