1:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl:67:1 |==> 0
2:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl:67:1 |==> -1
3:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl:73:64 |==> 0
4:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl:73:64 |==> -64
5:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl:76:1.0E-11 |==> 0.0
6:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl:76:1.0E-11 |==> -1.0E-11
7:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl:79:0 |==> 1
8:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl:79:0 |==> -1
9:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl:81:1 |==> 0
10:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl:81:1 |==> -1
11:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:0 |==> 1
12:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:0 |==> -1
13:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 |==> rowDimension != 0
14:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 |==> rowDimension < 0
15:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 |==> rowDimension == 0
16:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 |==> rowDimension > 0
17:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 |==> rowDimension >= 0
18:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 |==> false
19:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 |==> true
20:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:0 |==> 1
21:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:0 |==> -1
22:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:columnDimension <= 0 |==> columnDimension != 0
23:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:columnDimension <= 0 |==> columnDimension < 0
24:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:columnDimension <= 0 |==> columnDimension == 0
25:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:columnDimension <= 0 |==> columnDimension > 0
26:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:columnDimension <= 0 |==> columnDimension >= 0
27:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:columnDimension <= 0 |==> false
28:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:columnDimension <= 0 |==> true
29:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0 != columnDimension <= 0
30:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0 && columnDimension <= 0
31:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0 == columnDimension <= 0
32:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 || columnDimension <= 0 |==> false
33:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0
34:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 || columnDimension <= 0 |==> columnDimension <= 0
35:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):98:rowDimension <= 0 || columnDimension <= 0 |==> true
36:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):102:data = new BigDecimal[rowDimension][columnDimension] |==> <NO-OP>
37:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(int,int):103:lu = null |==> <NO-OP>
38:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][]):119:this.copyIn(d) |==> <NO-OP>
39:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][]):120:lu = null |==> <NO-OP>
40:COR:copyArray:TRUE:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):139:copyArray |==> false
41:COR:copyArray:FALSE:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):139:copyArray |==> true
42:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):140:copyIn(d) |==> <NO-OP>
43:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):142:d == null |==> d != null
44:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):142:d == null |==> false
45:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):142:d == null |==> true
46:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:0 |==> 1
47:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:0 |==> -1
48:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:nRows == 0 |==> nRows != 0
49:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:nRows == 0 |==> nRows < 0
50:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:nRows == 0 |==> nRows <= 0
51:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:nRows == 0 |==> nRows > 0
52:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:nRows == 0 |==> nRows >= 0
53:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:nRows == 0 |==> false
54:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):146:nRows == 0 |==> true
55:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):149:0 |==> 1
56:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):149:0 |==> -1
57:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:0 |==> 1
58:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:0 |==> -1
59:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:nCols == 0 |==> nCols != 0
60:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:nCols == 0 |==> nCols < 0
61:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:nCols == 0 |==> nCols <= 0
62:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:nCols == 0 |==> nCols > 0
63:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:nCols == 0 |==> nCols >= 0
64:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:nCols == 0 |==> false
65:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):150:nCols == 0 |==> true
66:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:1 |==> 0
67:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:1 |==> -1
68:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:r < nRows |==> r != nRows
69:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:r < nRows |==> r <= nRows
70:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:r < nRows |==> r == nRows
71:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:r < nRows |==> r > nRows
72:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:r < nRows |==> r >= nRows
73:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:r < nRows |==> false
74:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):153:r < nRows |==> true
75:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):154:d[r].length != nCols |==> d[r].length < nCols
76:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):154:d[r].length != nCols |==> d[r].length <= nCols
77:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):154:d[r].length != nCols |==> d[r].length == nCols
78:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):154:d[r].length != nCols |==> d[r].length > nCols
79:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):154:d[r].length != nCols |==> d[r].length >= nCols
80:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):154:d[r].length != nCols |==> false
81:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):154:d[r].length != nCols |==> true
82:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):158:data = d |==> <NO-OP>
83:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[][],boolean):160:lu = null |==> <NO-OP>
84:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:0 |==> 1
85:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:0 |==> -1
86:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:nRows == 0 |==> nRows != 0
87:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:nRows == 0 |==> nRows < 0
88:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:nRows == 0 |==> nRows <= 0
89:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:nRows == 0 |==> nRows > 0
90:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:nRows == 0 |==> nRows >= 0
91:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:nRows == 0 |==> false
92:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):176:nRows == 0 |==> true
93:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):180:0 |==> 1
94:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):180:0 |==> -1
95:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:0 |==> 1
96:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:0 |==> -1
97:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:nCols == 0 |==> nCols != 0
98:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:nCols == 0 |==> nCols < 0
99:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:nCols == 0 |==> nCols <= 0
100:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:nCols == 0 |==> nCols > 0
101:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:nCols == 0 |==> nCols >= 0
102:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:nCols == 0 |==> false
103:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):181:nCols == 0 |==> true
104:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:1 |==> 0
105:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:1 |==> -1
106:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:row < nRows |==> row != nRows
107:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:row < nRows |==> row <= nRows
108:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:row < nRows |==> row == nRows
109:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:row < nRows |==> row > nRows
110:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:row < nRows |==> row >= nRows
111:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:row < nRows |==> false
112:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):185:row < nRows |==> true
113:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):186:d[row].length != nCols |==> d[row].length < nCols
114:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):186:d[row].length != nCols |==> d[row].length <= nCols
115:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):186:d[row].length != nCols |==> d[row].length == nCols
116:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):186:d[row].length != nCols |==> d[row].length > nCols
117:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):186:d[row].length != nCols |==> d[row].length >= nCols
118:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):186:d[row].length != nCols |==> false
119:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):186:d[row].length != nCols |==> true
120:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):191:this.copyIn(d) |==> <NO-OP>
121:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(double[][]):192:lu = null |==> <NO-OP>
122:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:0 |==> 1
123:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:0 |==> -1
124:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:nRows == 0 |==> nRows != 0
125:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:nRows == 0 |==> nRows < 0
126:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:nRows == 0 |==> nRows <= 0
127:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:nRows == 0 |==> nRows > 0
128:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:nRows == 0 |==> nRows >= 0
129:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:nRows == 0 |==> false
130:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):206:nRows == 0 |==> true
131:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):210:0 |==> 1
132:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):210:0 |==> -1
133:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:0 |==> 1
134:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:0 |==> -1
135:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:nCols == 0 |==> nCols != 0
136:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:nCols == 0 |==> nCols < 0
137:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:nCols == 0 |==> nCols <= 0
138:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:nCols == 0 |==> nCols > 0
139:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:nCols == 0 |==> nCols >= 0
140:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:nCols == 0 |==> false
141:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):211:nCols == 0 |==> true
142:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:1 |==> 0
143:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:1 |==> -1
144:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:row < nRows |==> row != nRows
145:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:row < nRows |==> row <= nRows
146:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:row < nRows |==> row == nRows
147:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:row < nRows |==> row > nRows
148:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:row < nRows |==> row >= nRows
149:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:row < nRows |==> false
150:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):215:row < nRows |==> true
151:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):216:d[row].length != nCols |==> d[row].length < nCols
152:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):216:d[row].length != nCols |==> d[row].length <= nCols
153:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):216:d[row].length != nCols |==> d[row].length == nCols
154:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):216:d[row].length != nCols |==> d[row].length > nCols
155:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):216:d[row].length != nCols |==> d[row].length >= nCols
156:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):216:d[row].length != nCols |==> false
157:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):216:d[row].length != nCols |==> true
158:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):221:this.copyIn(d) |==> <NO-OP>
159:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.lang.String[][]):222:lu = null |==> <NO-OP>
160:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):236:1 |==> 0
161:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):236:1 |==> -1
162:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):236:data = new BigDecimal[nRows][1] |==> <NO-OP>
163:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:0 |==> 1
164:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:0 |==> -1
165:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:row < nRows |==> row != nRows
166:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:row < nRows |==> row <= nRows
167:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:row < nRows |==> row == nRows
168:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:row < nRows |==> row > nRows
169:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:row < nRows |==> row >= nRows
170:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:row < nRows |==> false
171:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):237:row < nRows |==> true
172:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):238:0 |==> 1
173:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):238:0 |==> -1
174:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@<init>(java.math.BigDecimal[]):238:data[row][0] = v[row] |==> <NO-OP>
175:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@copy():248:false |==> true
176:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
177:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
178:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
179:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
180:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
181:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() |==> false
182:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() |==> true
183:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
184:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
185:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
186:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
187:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
188:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:rowCount != m.getRowDimension() |==> false
189:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:rowCount != m.getRowDimension() |==> true
190:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
191:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
192:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
193:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
194:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
195:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
196:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):264:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
197:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:0 |==> 1
198:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:0 |==> -1
199:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:row < rowCount |==> row != rowCount
200:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:row < rowCount |==> row <= rowCount
201:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:row < rowCount |==> row == rowCount
202:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:row < rowCount |==> row > rowCount
203:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:row < rowCount |==> row >= rowCount
204:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:row < rowCount |==> false
205:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):268:row < rowCount |==> true
206:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:0 |==> 1
207:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:0 |==> -1
208:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:col < columnCount |==> col != columnCount
209:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:col < columnCount |==> col <= columnCount
210:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:col < columnCount |==> col == columnCount
211:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:col < columnCount |==> col > columnCount
212:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:col < columnCount |==> col >= columnCount
213:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:col < columnCount |==> false
214:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):271:col < columnCount |==> true
215:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):272:outDataRow[col] = dataRow[col].add(m.getEntry(row, col)) |==> <NO-OP>
216:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrix):275:false |==> true
217:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
218:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
219:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
220:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
221:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
222:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() |==> false
223:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() |==> true
224:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
225:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
226:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
227:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
228:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
229:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:rowCount != m.getRowDimension() |==> false
230:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:rowCount != m.getRowDimension() |==> true
231:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
232:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
233:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
234:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
235:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
236:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
237:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):289:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
238:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:0 |==> 1
239:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:0 |==> -1
240:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:row < rowCount |==> row != rowCount
241:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:row < rowCount |==> row <= rowCount
242:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:row < rowCount |==> row == rowCount
243:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:row < rowCount |==> row > rowCount
244:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:row < rowCount |==> row >= rowCount
245:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:row < rowCount |==> false
246:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):293:row < rowCount |==> true
247:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:0 |==> 1
248:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:0 |==> -1
249:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:col < columnCount |==> col != columnCount
250:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:col < columnCount |==> col <= columnCount
251:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:col < columnCount |==> col == columnCount
252:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:col < columnCount |==> col > columnCount
253:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:col < columnCount |==> col >= columnCount
254:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:col < columnCount |==> false
255:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):297:col < columnCount |==> true
256:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):298:outDataRow[col] = dataRow[col].add(mRow[col]) |==> <NO-OP>
257:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@add(org.apache.commons.math.linear.BigMatrixImpl):301:false |==> true
258:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
259:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
260:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
261:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
262:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
263:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() |==> false
264:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() |==> true
265:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
266:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
267:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
268:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
269:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
270:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:rowCount != m.getRowDimension() |==> false
271:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:rowCount != m.getRowDimension() |==> true
272:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
273:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
274:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
275:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
276:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
277:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
278:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):317:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
279:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:0 |==> 1
280:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:0 |==> -1
281:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:row < rowCount |==> row != rowCount
282:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:row < rowCount |==> row <= rowCount
283:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:row < rowCount |==> row == rowCount
284:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:row < rowCount |==> row > rowCount
285:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:row < rowCount |==> row >= rowCount
286:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:row < rowCount |==> false
287:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):321:row < rowCount |==> true
288:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:0 |==> 1
289:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:0 |==> -1
290:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:col < columnCount |==> col != columnCount
291:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:col < columnCount |==> col <= columnCount
292:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:col < columnCount |==> col == columnCount
293:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:col < columnCount |==> col > columnCount
294:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:col < columnCount |==> col >= columnCount
295:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:col < columnCount |==> false
296:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):324:col < columnCount |==> true
297:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):325:outDataRow[col] = dataRow[col].subtract(getEntry(row, col)) |==> <NO-OP>
298:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrix):328:false |==> true
299:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
300:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
301:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
302:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
303:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
304:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() |==> false
305:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() |==> true
306:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
307:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
308:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
309:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
310:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
311:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:rowCount != m.getRowDimension() |==> false
312:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:rowCount != m.getRowDimension() |==> true
313:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
314:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
315:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
316:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
317:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
318:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
319:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):342:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
320:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:0 |==> 1
321:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:0 |==> -1
322:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:row < rowCount |==> row != rowCount
323:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:row < rowCount |==> row <= rowCount
324:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:row < rowCount |==> row == rowCount
325:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:row < rowCount |==> row > rowCount
326:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:row < rowCount |==> row >= rowCount
327:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:row < rowCount |==> false
328:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):346:row < rowCount |==> true
329:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:0 |==> 1
330:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:0 |==> -1
331:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:col < columnCount |==> col != columnCount
332:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:col < columnCount |==> col <= columnCount
333:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:col < columnCount |==> col == columnCount
334:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:col < columnCount |==> col > columnCount
335:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:col < columnCount |==> col >= columnCount
336:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:col < columnCount |==> false
337:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):350:col < columnCount |==> true
338:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):351:outDataRow[col] = dataRow[col].subtract(mRow[col]) |==> <NO-OP>
339:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@subtract(org.apache.commons.math.linear.BigMatrixImpl):354:false |==> true
340:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:0 |==> 1
341:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:0 |==> -1
342:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:row < rowCount |==> row != rowCount
343:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:row < rowCount |==> row <= rowCount
344:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:row < rowCount |==> row == rowCount
345:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:row < rowCount |==> row > rowCount
346:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:row < rowCount |==> row >= rowCount
347:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:row < rowCount |==> false
348:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):367:row < rowCount |==> true
349:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:0 |==> 1
350:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:0 |==> -1
351:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:col < columnCount |==> col != columnCount
352:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:col < columnCount |==> col <= columnCount
353:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:col < columnCount |==> col == columnCount
354:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:col < columnCount |==> col > columnCount
355:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:col < columnCount |==> col >= columnCount
356:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:col < columnCount |==> false
357:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):370:col < columnCount |==> true
358:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):371:outDataRow[col] = dataRow[col].add(d) |==> <NO-OP>
359:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@scalarAdd(java.math.BigDecimal):374:false |==> true
360:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:0 |==> 1
361:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:0 |==> -1
362:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:row < rowCount |==> row != rowCount
363:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:row < rowCount |==> row <= rowCount
364:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:row < rowCount |==> row == rowCount
365:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:row < rowCount |==> row > rowCount
366:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:row < rowCount |==> row >= rowCount
367:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:row < rowCount |==> false
368:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):386:row < rowCount |==> true
369:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:0 |==> 1
370:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:0 |==> -1
371:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:col < columnCount |==> col != columnCount
372:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:col < columnCount |==> col <= columnCount
373:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:col < columnCount |==> col == columnCount
374:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:col < columnCount |==> col > columnCount
375:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:col < columnCount |==> col >= columnCount
376:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:col < columnCount |==> false
377:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):389:col < columnCount |==> true
378:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):390:outDataRow[col] = dataRow[col].multiply(d) |==> <NO-OP>
379:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@scalarMultiply(java.math.BigDecimal):393:false |==> true
380:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):407:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() < m.getRowDimension()
381:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):407:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() <= m.getRowDimension()
382:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):407:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() == m.getRowDimension()
383:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):407:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() > m.getRowDimension()
384:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):407:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() >= m.getRowDimension()
385:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):407:this.getColumnDimension() != m.getRowDimension() |==> false
386:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):407:this.getColumnDimension() != m.getRowDimension() |==> true
387:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:0 |==> 1
388:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:0 |==> -1
389:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:row < nRows |==> row != nRows
390:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:row < nRows |==> row <= nRows
391:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:row < nRows |==> row == nRows
392:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:row < nRows |==> row > nRows
393:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:row < nRows |==> row >= nRows
394:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:row < nRows |==> false
395:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):414:row < nRows |==> true
396:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:0 |==> 1
397:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:0 |==> -1
398:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:col < nCols |==> col != nCols
399:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:col < nCols |==> col <= nCols
400:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:col < nCols |==> col == nCols
401:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:col < nCols |==> col > nCols
402:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:col < nCols |==> col >= nCols
403:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:col < nCols |==> false
404:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):417:col < nCols |==> true
405:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:0 |==> 1
406:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:0 |==> -1
407:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:i < nSum |==> i != nSum
408:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:i < nSum |==> i <= nSum
409:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:i < nSum |==> i == nSum
410:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:i < nSum |==> i > nSum
411:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:i < nSum |==> i >= nSum
412:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:i < nSum |==> false
413:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):419:i < nSum |==> true
414:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):420:sum = sum.add(dataRow[i].multiply(m.getEntry(i, col))) |==> <NO-OP>
415:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):422:outDataRow[col] = sum |==> <NO-OP>
416:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrix):425:false |==> true
417:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):437:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() < m.getRowDimension()
418:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):437:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() <= m.getRowDimension()
419:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):437:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() == m.getRowDimension()
420:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):437:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() > m.getRowDimension()
421:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):437:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() >= m.getRowDimension()
422:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):437:this.getColumnDimension() != m.getRowDimension() |==> false
423:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):437:this.getColumnDimension() != m.getRowDimension() |==> true
424:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:0 |==> 1
425:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:0 |==> -1
426:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:row < nRows |==> row != nRows
427:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:row < nRows |==> row <= nRows
428:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:row < nRows |==> row == nRows
429:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:row < nRows |==> row > nRows
430:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:row < nRows |==> row >= nRows
431:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:row < nRows |==> false
432:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):444:row < nRows |==> true
433:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:0 |==> 1
434:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:0 |==> -1
435:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:col < nCols |==> col != nCols
436:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:col < nCols |==> col <= nCols
437:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:col < nCols |==> col == nCols
438:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:col < nCols |==> col > nCols
439:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:col < nCols |==> col >= nCols
440:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:col < nCols |==> false
441:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):447:col < nCols |==> true
442:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:0 |==> 1
443:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:0 |==> -1
444:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:i < nSum |==> i != nSum
445:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:i < nSum |==> i <= nSum
446:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:i < nSum |==> i == nSum
447:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:i < nSum |==> i > nSum
448:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:i < nSum |==> i >= nSum
449:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:i < nSum |==> false
450:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):449:i < nSum |==> true
451:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):450:sum = sum.add(dataRow[i].multiply(m.data[i][col])) |==> <NO-OP>
452:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):452:outDataRow[col] = sum |==> <NO-OP>
453:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@multiply(org.apache.commons.math.linear.BigMatrixImpl):455:false |==> true
454:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:0 |==> 1
455:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:0 |==> -1
456:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:i < nRows |==> i != nRows
457:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:i < nRows |==> i <= nRows
458:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:i < nRows |==> i == nRows
459:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:i < nRows |==> i > nRows
460:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:i < nRows |==> i >= nRows
461:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:i < nRows |==> false
462:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():492:i < nRows |==> true
463:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:0 |==> 1
464:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:0 |==> -1
465:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:j < nCols |==> j != nCols
466:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:j < nCols |==> j <= nCols
467:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:j < nCols |==> j == nCols
468:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:j < nCols |==> j > nCols
469:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:j < nCols |==> j >= nCols
470:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:j < nCols |==> false
471:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():493:j < nCols |==> true
472:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getDataAsDoubleArray():494:d[i][j] = data[i][j].doubleValue() |==> <NO-OP>
473:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@setRoundingMode(int):527:this.roundingMode = roundingMode |==> <NO-OP>
474:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@setScale(int):546:this.scale = scale |==> <NO-OP>
475:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:0 |==> 1
476:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:0 |==> -1
477:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:col < this.getColumnDimension() |==> col != this.getColumnDimension()
478:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:col < this.getColumnDimension() |==> col <= this.getColumnDimension()
479:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:col < this.getColumnDimension() |==> col == this.getColumnDimension()
480:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:col < this.getColumnDimension() |==> col > this.getColumnDimension()
481:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:col < this.getColumnDimension() |==> col >= this.getColumnDimension()
482:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:col < this.getColumnDimension() |==> false
483:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():557:col < this.getColumnDimension() |==> true
484:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:0 |==> 1
485:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:0 |==> -1
486:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:row < this.getRowDimension() |==> row != this.getRowDimension()
487:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:row < this.getRowDimension() |==> row <= this.getRowDimension()
488:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:row < this.getRowDimension() |==> row == this.getRowDimension()
489:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:row < this.getRowDimension() |==> row > this.getRowDimension()
490:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:row < this.getRowDimension() |==> row >= this.getRowDimension()
491:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:row < this.getRowDimension() |==> false
492:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getNorm():559:row < this.getRowDimension() |==> true
493:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getNorm():560:sum = sum.add(data[row][col].abs()) |==> <NO-OP>
494:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getNorm():562:maxColSum = maxColSum.max(sum) |==> <NO-OP>
495:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:0 |==> 1
496:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:0 |==> -1
497:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 |==> startRow != 0
498:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 |==> startRow <= 0
499:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 |==> startRow == 0
500:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 |==> startRow > 0
501:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 |==> startRow >= 0
502:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 |==> false
503:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 |==> true
504:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow > endRow |==> startRow != endRow
505:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow > endRow |==> startRow < endRow
506:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow > endRow |==> startRow <= endRow
507:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow > endRow |==> startRow == endRow
508:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow > endRow |==> startRow >= endRow
509:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow > endRow |==> false
510:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow > endRow |==> true
511:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow |==> startRow < 0 != startRow > endRow
512:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow |==> startRow < 0 && startRow > endRow
513:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow |==> startRow < 0 == startRow > endRow
514:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow |==> false
515:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow |==> startRow < 0
516:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow |==> startRow > endRow
517:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow |==> true
518:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:endRow > data.length |==> endRow != data.length
519:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:endRow > data.length |==> endRow < data.length
520:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:endRow > data.length |==> endRow <= data.length
521:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:endRow > data.length |==> endRow == data.length
522:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:endRow > data.length |==> endRow >= data.length
523:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:endRow > data.length |==> false
524:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:endRow > data.length |==> true
525:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length |==> (startRow < 0 || startRow > endRow) != endRow > data.length
526:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length |==> (startRow < 0 || startRow > endRow) && endRow > data.length
527:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length |==> (startRow < 0 || startRow > endRow) == endRow > data.length
528:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length |==> false
529:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length |==> startRow < 0 || startRow > endRow
530:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length |==> endRow > data.length
531:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length |==> true
532:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:0 |==> 1
533:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:0 |==> -1
534:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn < 0 |==> startColumn != 0
535:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn < 0 |==> startColumn <= 0
536:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn < 0 |==> startColumn == 0
537:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn < 0 |==> startColumn > 0
538:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn < 0 |==> startColumn >= 0
539:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn < 0 |==> false
540:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn < 0 |==> true
541:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> (startRow < 0 || startRow > endRow || endRow > data.length) != startColumn < 0
542:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> (startRow < 0 || startRow > endRow || endRow > data.length) && startColumn < 0
543:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> (startRow < 0 || startRow > endRow || endRow > data.length) == startColumn < 0
544:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> false
545:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> startRow < 0 || startRow > endRow || endRow > data.length
546:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> startColumn < 0
547:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> true
548:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn > endColumn |==> startColumn != endColumn
549:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn > endColumn |==> startColumn < endColumn
550:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn > endColumn |==> startColumn <= endColumn
551:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn > endColumn |==> startColumn == endColumn
552:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn > endColumn |==> startColumn >= endColumn
553:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn > endColumn |==> false
554:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startColumn > endColumn |==> true
555:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0) != startColumn > endColumn
556:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0) && startColumn > endColumn
557:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0) == startColumn > endColumn
558:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> false
559:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0
560:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> startColumn > endColumn
561:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> true
562:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:0 |==> 1
563:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:0 |==> -1
564:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:endColumn > data[0].length |==> endColumn != data[0].length
565:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:endColumn > data[0].length |==> endColumn < data[0].length
566:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:endColumn > data[0].length |==> endColumn <= data[0].length
567:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:endColumn > data[0].length |==> endColumn == data[0].length
568:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:endColumn > data[0].length |==> endColumn >= data[0].length
569:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:endColumn > data[0].length |==> false
570:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:endColumn > data[0].length |==> true
571:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn) != endColumn > data[0].length
572:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn) && endColumn > data[0].length
573:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn) == endColumn > data[0].length
574:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> false
575:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):582:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn
576:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):584:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> endColumn > data[0].length
577:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):583:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> true
578:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow |==> endRow % startRow
579:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow |==> endRow * startRow
580:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow |==> endRow + startRow
581:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow |==> endRow / startRow
582:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:1 |==> 0
583:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:1 |==> -1
584:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow + 1 |==> (endRow - startRow) % 1
585:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow + 1 |==> (endRow - startRow) * 1
586:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow + 1 |==> endRow - startRow - 1
587:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endRow - startRow + 1 |==> (endRow - startRow) / 1
588:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn |==> endColumn % startColumn
589:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn |==> endColumn * startColumn
590:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn |==> endColumn + startColumn
591:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn |==> endColumn / startColumn
592:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:1 |==> 0
593:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:1 |==> -1
594:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn + 1 |==> (endColumn - startColumn) % 1
595:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn + 1 |==> (endColumn - startColumn) * 1
596:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn + 1 |==> endColumn - startColumn - 1
597:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):589:endColumn - startColumn + 1 |==> (endColumn - startColumn) / 1
598:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):590:i <= endRow |==> i != endRow
599:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):590:i <= endRow |==> i < endRow
600:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):590:i <= endRow |==> i == endRow
601:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):590:i <= endRow |==> i > endRow
602:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):590:i <= endRow |==> i >= endRow
603:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):590:i <= endRow |==> false
604:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):590:i <= endRow |==> true
605:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):592:i - startRow |==> i % startRow
606:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):592:i - startRow |==> i * startRow
607:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):592:i - startRow |==> i + startRow
608:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):592:i - startRow |==> i / startRow
609:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):592:0 |==> 1
610:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):592:0 |==> -1
611:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn |==> endColumn % startColumn
612:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn |==> endColumn * startColumn
613:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn |==> endColumn + startColumn
614:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn |==> endColumn / startColumn
615:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:1 |==> 0
616:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:1 |==> -1
617:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn + 1 |==> (endColumn - startColumn) % 1
618:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn + 1 |==> (endColumn - startColumn) * 1
619:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn + 1 |==> endColumn - startColumn - 1
620:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):593:endColumn - startColumn + 1 |==> (endColumn - startColumn) / 1
621:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):591:System.arraycopy(data[i], startColumn, subMatrixData[i - startRow], 0, endColumn - startColumn + 1) |==> <NO-OP>
622:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int,int,int,int):595:false |==> true
623:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length |==> selectedRows.length % selectedColumns.length
624:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length |==> selectedRows.length + selectedColumns.length
625:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length |==> selectedRows.length - selectedColumns.length
626:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length |==> selectedRows.length / selectedColumns.length
627:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:0 |==> 1
628:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:0 |==> -1
629:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length != 0
630:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length < 0
631:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length <= 0
632:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length > 0
633:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length >= 0
634:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length == 0 |==> false
635:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):611:selectedRows.length * selectedColumns.length == 0 |==> true
636:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:0 |==> 1
637:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:0 |==> -1
638:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:i < selectedRows.length |==> i != selectedRows.length
639:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:i < selectedRows.length |==> i <= selectedRows.length
640:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:i < selectedRows.length |==> i == selectedRows.length
641:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:i < selectedRows.length |==> i > selectedRows.length
642:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:i < selectedRows.length |==> i >= selectedRows.length
643:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:i < selectedRows.length |==> false
644:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):618:i < selectedRows.length |==> true
645:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:0 |==> 1
646:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:0 |==> -1
647:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:j < selectedColumns.length |==> j != selectedColumns.length
648:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:j < selectedColumns.length |==> j <= selectedColumns.length
649:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:j < selectedColumns.length |==> j == selectedColumns.length
650:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:j < selectedColumns.length |==> j > selectedColumns.length
651:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:j < selectedColumns.length |==> j >= selectedColumns.length
652:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:j < selectedColumns.length |==> false
653:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):621:j < selectedColumns.length |==> true
654:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):622:subI[j] = dataSelectedI[selectedColumns[j]] |==> <NO-OP>
655:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@getSubMatrix(int[],int[]):629:false |==> true
656:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:0 |==> 1
657:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:0 |==> -1
658:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:row < 0 |==> row != 0
659:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:row < 0 |==> row <= 0
660:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:row < 0 |==> row == 0
661:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:row < 0 |==> row > 0
662:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:row < 0 |==> row >= 0
663:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:row < 0 |==> false
664:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:row < 0 |==> true
665:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:0 |==> 1
666:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:0 |==> -1
667:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:column < 0 |==> column != 0
668:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:column < 0 |==> column <= 0
669:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:column < 0 |==> column == 0
670:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:column < 0 |==> column > 0
671:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:column < 0 |==> column >= 0
672:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:column < 0 |==> false
673:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:column < 0 |==> true
674:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:(row < 0) || (column < 0) |==> (row < 0) != (column < 0)
675:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:(row < 0) || (column < 0) |==> (row < 0) && (column < 0)
676:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:(row < 0) || (column < 0) |==> (row < 0) == (column < 0)
677:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:(row < 0) || (column < 0) |==> false
678:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:(row < 0) || (column < 0) |==> (row < 0)
679:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:(row < 0) || (column < 0) |==> (column < 0)
680:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):661:(row < 0) || (column < 0) |==> true
681:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:0 |==> 1
682:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:0 |==> -1
683:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:nRows == 0 |==> nRows != 0
684:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:nRows == 0 |==> nRows < 0
685:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:nRows == 0 |==> nRows <= 0
686:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:nRows == 0 |==> nRows > 0
687:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:nRows == 0 |==> nRows >= 0
688:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:nRows == 0 |==> false
689:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):666:nRows == 0 |==> true
690:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):670:0 |==> 1
691:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):670:0 |==> -1
692:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:0 |==> 1
693:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:0 |==> -1
694:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:nCols == 0 |==> nCols != 0
695:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:nCols == 0 |==> nCols < 0
696:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:nCols == 0 |==> nCols <= 0
697:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:nCols == 0 |==> nCols > 0
698:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:nCols == 0 |==> nCols >= 0
699:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:nCols == 0 |==> false
700:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):671:nCols == 0 |==> true
701:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:1 |==> 0
702:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:1 |==> -1
703:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:r < nRows |==> r != nRows
704:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:r < nRows |==> r <= nRows
705:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:r < nRows |==> r == nRows
706:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:r < nRows |==> r > nRows
707:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:r < nRows |==> r >= nRows
708:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:r < nRows |==> false
709:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):675:r < nRows |==> true
710:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):676:subMatrix[r].length != nCols |==> subMatrix[r].length < nCols
711:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):676:subMatrix[r].length != nCols |==> subMatrix[r].length <= nCols
712:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):676:subMatrix[r].length != nCols |==> subMatrix[r].length == nCols
713:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):676:subMatrix[r].length != nCols |==> subMatrix[r].length > nCols
714:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):676:subMatrix[r].length != nCols |==> subMatrix[r].length >= nCols
715:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):676:subMatrix[r].length != nCols |==> false
716:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):676:subMatrix[r].length != nCols |==> true
717:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):681:data == null |==> data != null
718:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):681:data == null |==> false
719:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):681:data == null |==> true
720:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:0 |==> 1
721:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:0 |==> -1
722:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:row > 0 |==> row != 0
723:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:row > 0 |==> row < 0
724:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:row > 0 |==> row <= 0
725:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:row > 0 |==> row == 0
726:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:row > 0 |==> row >= 0
727:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:row > 0 |==> false
728:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:row > 0 |==> true
729:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:0 |==> 1
730:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:0 |==> -1
731:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:column > 0 |==> column != 0
732:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:column > 0 |==> column < 0
733:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:column > 0 |==> column <= 0
734:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:column > 0 |==> column == 0
735:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:column > 0 |==> column >= 0
736:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:column > 0 |==> false
737:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:column > 0 |==> true
738:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:(row > 0) || (column > 0) |==> (row > 0) != (column > 0)
739:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:(row > 0) || (column > 0) |==> (row > 0) && (column > 0)
740:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:(row > 0) || (column > 0) |==> (row > 0) == (column > 0)
741:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:(row > 0) || (column > 0) |==> false
742:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:(row > 0) || (column > 0) |==> (row > 0)
743:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:(row > 0) || (column > 0) |==> (column > 0)
744:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):682:(row > 0) || (column > 0) |==> true
745:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):684:data = new BigDecimal[nRows][nCols] |==> <NO-OP>
746:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):685:0 |==> 1
747:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):685:0 |==> -1
748:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):685:0 |==> 1
749:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):685:0 |==> -1
750:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):685:System.arraycopy(subMatrix, 0, data, 0, subMatrix.length) |==> <NO-OP>
751:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:nRows + row |==> nRows % row
752:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:nRows + row |==> nRows * row
753:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:nRows + row |==> nRows - row
754:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:nRows + row |==> nRows / row
755:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:(nRows + row) > this.getRowDimension() |==> (nRows + row) != this.getRowDimension()
756:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:(nRows + row) > this.getRowDimension() |==> (nRows + row) < this.getRowDimension()
757:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:(nRows + row) > this.getRowDimension() |==> (nRows + row) <= this.getRowDimension()
758:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:(nRows + row) > this.getRowDimension() |==> (nRows + row) == this.getRowDimension()
759:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:(nRows + row) > this.getRowDimension() |==> (nRows + row) >= this.getRowDimension()
760:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:(nRows + row) > this.getRowDimension() |==> false
761:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:(nRows + row) > this.getRowDimension() |==> true
762:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column |==> nCols % column
763:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column |==> nCols * column
764:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column |==> nCols - column
765:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column |==> nCols / column
766:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column > this.getColumnDimension() |==> nCols + column != this.getColumnDimension()
767:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column > this.getColumnDimension() |==> nCols + column < this.getColumnDimension()
768:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column > this.getColumnDimension() |==> nCols + column <= this.getColumnDimension()
769:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column > this.getColumnDimension() |==> nCols + column == this.getColumnDimension()
770:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column > this.getColumnDimension() |==> nCols + column >= this.getColumnDimension()
771:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column > this.getColumnDimension() |==> false
772:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:nCols + column > this.getColumnDimension() |==> true
773:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension()) != (nCols + column > this.getColumnDimension())
774:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension()) && (nCols + column > this.getColumnDimension())
775:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension()) == (nCols + column > this.getColumnDimension())
776:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> false
777:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension())
778:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):688:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> (nCols + column > this.getColumnDimension())
779:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):687:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> true
780:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:0 |==> 1
781:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:0 |==> -1
782:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:i < nRows |==> i != nRows
783:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:i < nRows |==> i <= nRows
784:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:i < nRows |==> i == nRows
785:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:i < nRows |==> i > nRows
786:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:i < nRows |==> i >= nRows
787:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:i < nRows |==> false
788:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):691:i < nRows |==> true
789:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):692:0 |==> 1
790:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):692:0 |==> -1
791:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):692:row + i |==> row % i
792:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):692:row + i |==> row * i
793:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):692:row + i |==> row - i
794:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):692:row + i |==> row / i
795:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):692:System.arraycopy(subMatrix[i], 0, data[row + i], column, nCols) |==> <NO-OP>
796:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@setSubMatrix(java.math.BigDecimal[][],int,int):694:lu = null |==> <NO-OP>
797:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):706:0 |==> 1
798:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):706:0 |==> -1
799:COR:isValidCoordinate(row, 0):TRUE:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):706:isValidCoordinate(row, 0) |==> false
800:COR:isValidCoordinate(row, 0):FALSE:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):706:isValidCoordinate(row, 0) |==> true
801:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):710:1 |==> 0
802:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):710:1 |==> -1
803:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):711:0 |==> 1
804:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):711:0 |==> -1
805:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):711:0 |==> 1
806:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):711:0 |==> -1
807:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):711:0 |==> 1
808:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):711:0 |==> -1
809:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):711:System.arraycopy(data[row], 0, out[0], 0, ncols) |==> <NO-OP>
810:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@getRowMatrix(int):712:false |==> true
811:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):724:0 |==> 1
812:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):724:0 |==> -1
813:COR:isValidCoordinate(0, column):TRUE:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):724:isValidCoordinate(0, column) |==> false
814:COR:isValidCoordinate(0, column):FALSE:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):724:isValidCoordinate(0, column) |==> true
815:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):728:1 |==> 0
816:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):728:1 |==> -1
817:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:0 |==> 1
818:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:0 |==> -1
819:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:row < nRows |==> row != nRows
820:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:row < nRows |==> row <= nRows
821:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:row < nRows |==> row == nRows
822:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:row < nRows |==> row > nRows
823:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:row < nRows |==> row >= nRows
824:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:row < nRows |==> false
825:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):729:row < nRows |==> true
826:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):730:0 |==> 1
827:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):730:0 |==> -1
828:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):730:out[row][0] = data[row][column] |==> <NO-OP>
829:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@getColumnMatrix(int):732:false |==> true
830:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):746:0 |==> 1
831:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):746:0 |==> -1
832:COR:isValidCoordinate(row, 0):TRUE:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):746:isValidCoordinate(row, 0) |==> false
833:COR:isValidCoordinate(row, 0):FALSE:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):746:isValidCoordinate(row, 0) |==> true
834:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):751:0 |==> 1
835:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):751:0 |==> -1
836:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):751:0 |==> 1
837:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):751:0 |==> -1
838:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getRow(int):751:System.arraycopy(data[row], 0, out, 0, ncols) |==> <NO-OP>
839:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):767:0 |==> 1
840:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):767:0 |==> -1
841:COR:isValidCoordinate(row, 0):TRUE:org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):767:isValidCoordinate(row, 0) |==> false
842:COR:isValidCoordinate(row, 0):FALSE:org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):767:isValidCoordinate(row, 0) |==> true
843:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:0 |==> 1
844:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:0 |==> -1
845:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:i < ncols |==> i != ncols
846:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:i < ncols |==> i <= ncols
847:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:i < ncols |==> i == ncols
848:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:i < ncols |==> i > ncols
849:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:i < ncols |==> i >= ncols
850:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:i < ncols |==> false
851:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):772:i < ncols |==> true
852:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getRowAsDoubleArray(int):773:out[i] = data[row][i].doubleValue() |==> <NO-OP>
853:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):789:0 |==> 1
854:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):789:0 |==> -1
855:COR:isValidCoordinate(0, col):TRUE:org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):789:isValidCoordinate(0, col) |==> false
856:COR:isValidCoordinate(0, col):FALSE:org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):789:isValidCoordinate(0, col) |==> true
857:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:0 |==> 1
858:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:0 |==> -1
859:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:i < nRows |==> i != nRows
860:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:i < nRows |==> i <= nRows
861:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:i < nRows |==> i == nRows
862:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:i < nRows |==> i > nRows
863:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:i < nRows |==> i >= nRows
864:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:i < nRows |==> false
865:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):794:i < nRows |==> true
866:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getColumn(int):795:out[i] = data[i][col] |==> <NO-OP>
867:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):812:0 |==> 1
868:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):812:0 |==> -1
869:COR:isValidCoordinate(0, col):TRUE:org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):812:isValidCoordinate(0, col) |==> false
870:COR:isValidCoordinate(0, col):FALSE:org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):812:isValidCoordinate(0, col) |==> true
871:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:0 |==> 1
872:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:0 |==> -1
873:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:i < nrows |==> i != nrows
874:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:i < nrows |==> i <= nrows
875:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:i < nrows |==> i == nrows
876:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:i < nrows |==> i > nrows
877:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:i < nrows |==> i >= nrows
878:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:i < nrows |==> false
879:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):817:i < nrows |==> true
880:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getColumnAsDoubleArray(int):818:out[i] = data[i][col].doubleValue() |==> <NO-OP>
881:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@transpose():876:0 |==> 1
882:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@transpose():876:0 |==> -1
883:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():876:row < nRows |==> row != nRows
884:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():876:row < nRows |==> row <= nRows
885:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():876:row < nRows |==> row == nRows
886:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():876:row < nRows |==> row > nRows
887:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():876:row < nRows |==> row >= nRows
888:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():876:row < nRows |==> false
889:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():876:row < nRows |==> true
890:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@transpose():878:0 |==> 1
891:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@transpose():878:0 |==> -1
892:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():878:col < nCols |==> col != nCols
893:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():878:col < nCols |==> col <= nCols
894:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():878:col < nCols |==> col == nCols
895:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():878:col < nCols |==> col > nCols
896:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():878:col < nCols |==> col >= nCols
897:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():878:col < nCols |==> false
898:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@transpose():878:col < nCols |==> true
899:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@transpose():879:outData[col][row] = dataRow[col] |==> <NO-OP>
900:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@transpose():882:false |==> true
901:COR:isSquare():TRUE:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():902:isSquare() |==> false
902:COR:isSquare():FALSE:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():902:isSquare() |==> true
903:COR:isSingular():TRUE:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():905:isSingular() |==> false
904:COR:isSingular():FALSE:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():905:isSingular() |==> true
905:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:1 |==> 0
906:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:1 |==> -1
907:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:parity == 1 |==> parity != 1
908:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:parity == 1 |==> parity < 1
909:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:parity == 1 |==> parity <= 1
910:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:parity == 1 |==> parity > 1
911:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:parity == 1 |==> parity >= 1
912:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:parity == 1 |==> false
913:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():908:parity == 1 |==> true
914:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:0 |==> 1
915:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:0 |==> -1
916:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:i < this.getRowDimension() |==> i != this.getRowDimension()
917:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:i < this.getRowDimension() |==> i <= this.getRowDimension()
918:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:i < this.getRowDimension() |==> i == this.getRowDimension()
919:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:i < this.getRowDimension() |==> i > this.getRowDimension()
920:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:i < this.getRowDimension() |==> i >= this.getRowDimension()
921:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:i < this.getRowDimension() |==> false
922:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():909:i < this.getRowDimension() |==> true
923:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getDeterminant():910:det = det.multiply(lu[i][i]) |==> <NO-OP>
924:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isSquare():921:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() != this.getRowDimension()
925:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@isSquare():921:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() < this.getRowDimension()
926:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isSquare():921:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() <= this.getRowDimension()
927:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@isSquare():921:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() > this.getRowDimension()
928:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isSquare():921:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() >= this.getRowDimension()
929:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isSquare():921:this.getColumnDimension() == this.getRowDimension() |==> false
930:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isSquare():921:this.getColumnDimension() == this.getRowDimension() |==> true
931:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@isSingular():929:lu == null |==> lu != null
932:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@isSingular():929:lu == null |==> false
933:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@isSingular():929:lu == null |==> true
934:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@isSingular():931:luDecompose() |==> <NO-OP>
935:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@isSingular():932:false |==> true
936:LVR:TRUE:FALSE:org.apache.commons.math.linear.BigMatrixImpl@isSingular():934:true |==> false
937:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@isSingular():937:false |==> true
938:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getColumnDimension():956:0 |==> 1
939:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getColumnDimension():956:0 |==> -1
940:COR:isSquare():TRUE:org.apache.commons.math.linear.BigMatrixImpl@getTrace():968:isSquare() |==> false
941:COR:isSquare():FALSE:org.apache.commons.math.linear.BigMatrixImpl@getTrace():968:isSquare() |==> true
942:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getTrace():971:0 |==> 1
943:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getTrace():971:0 |==> -1
944:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getTrace():971:0 |==> 1
945:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getTrace():971:0 |==> -1
946:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:1 |==> 0
947:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:1 |==> -1
948:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:i < this.getRowDimension() |==> i != this.getRowDimension()
949:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:i < this.getRowDimension() |==> i <= this.getRowDimension()
950:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:i < this.getRowDimension() |==> i == this.getRowDimension()
951:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:i < this.getRowDimension() |==> i > this.getRowDimension()
952:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:i < this.getRowDimension() |==> i >= this.getRowDimension()
953:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:i < this.getRowDimension() |==> false
954:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@getTrace():972:i < this.getRowDimension() |==> true
955:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getTrace():973:trace = trace.add(data[i][i]) |==> <NO-OP>
956:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):986:v.length != this.getColumnDimension() |==> v.length < this.getColumnDimension()
957:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):986:v.length != this.getColumnDimension() |==> v.length <= this.getColumnDimension()
958:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):986:v.length != this.getColumnDimension() |==> v.length == this.getColumnDimension()
959:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):986:v.length != this.getColumnDimension() |==> v.length > this.getColumnDimension()
960:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):986:v.length != this.getColumnDimension() |==> v.length >= this.getColumnDimension()
961:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):986:v.length != this.getColumnDimension() |==> false
962:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):986:v.length != this.getColumnDimension() |==> true
963:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:0 |==> 1
964:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:0 |==> -1
965:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:row < nRows |==> row != nRows
966:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:row < nRows |==> row <= nRows
967:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:row < nRows |==> row == nRows
968:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:row < nRows |==> row > nRows
969:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:row < nRows |==> row >= nRows
970:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:row < nRows |==> false
971:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):992:row < nRows |==> true
972:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:0 |==> 1
973:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:0 |==> -1
974:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:i < nCols |==> i != nCols
975:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:i < nCols |==> i <= nCols
976:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:i < nCols |==> i == nCols
977:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:i < nCols |==> i > nCols
978:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:i < nCols |==> i >= nCols
979:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:i < nCols |==> false
980:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):994:i < nCols |==> true
981:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):995:sum = sum.add(data[row][i].multiply(v[i])) |==> <NO-OP>
982:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@operate(java.math.BigDecimal[]):997:out[row] = sum |==> <NO-OP>
983:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:0 |==> 1
984:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:0 |==> -1
985:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:i < bd.length |==> i != bd.length
986:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:i < bd.length |==> i <= bd.length
987:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:i < bd.length |==> i == bd.length
988:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:i < bd.length |==> i > bd.length
989:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:i < bd.length |==> i >= bd.length
990:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:i < bd.length |==> false
991:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1011:i < bd.length |==> true
992:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@operate(double[]):1012:bd[i] = new BigDecimal(v[i]) |==> <NO-OP>
993:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1026:v.length != nRows |==> v.length < nRows
994:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1026:v.length != nRows |==> v.length <= nRows
995:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1026:v.length != nRows |==> v.length == nRows
996:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1026:v.length != nRows |==> v.length > nRows
997:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1026:v.length != nRows |==> v.length >= nRows
998:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1026:v.length != nRows |==> false
999:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1026:v.length != nRows |==> true
1000:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:0 |==> 1
1001:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:0 |==> -1
1002:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:col < nCols |==> col != nCols
1003:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:col < nCols |==> col <= nCols
1004:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:col < nCols |==> col == nCols
1005:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:col < nCols |==> col > nCols
1006:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:col < nCols |==> col >= nCols
1007:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:col < nCols |==> false
1008:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1031:col < nCols |==> true
1009:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:0 |==> 1
1010:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:0 |==> -1
1011:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:i < nRows |==> i != nRows
1012:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:i < nRows |==> i <= nRows
1013:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:i < nRows |==> i == nRows
1014:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:i < nRows |==> i > nRows
1015:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:i < nRows |==> i >= nRows
1016:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:i < nRows |==> false
1017:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1033:i < nRows |==> true
1018:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1034:sum = sum.add(data[i][col].multiply(v[i])) |==> <NO-OP>
1019:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@preMultiply(java.math.BigDecimal[]):1036:out[col] = sum |==> <NO-OP>
1020:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1054:b.length != nRows |==> b.length < nRows
1021:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1054:b.length != nRows |==> b.length <= nRows
1022:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1054:b.length != nRows |==> b.length == nRows
1023:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1054:b.length != nRows |==> b.length > nRows
1024:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1054:b.length != nRows |==> b.length >= nRows
1025:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1054:b.length != nRows |==> false
1026:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1054:b.length != nRows |==> true
1027:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:0 |==> 1
1028:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:0 |==> -1
1029:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:row < nRows |==> row != nRows
1030:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:row < nRows |==> row <= nRows
1031:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:row < nRows |==> row == nRows
1032:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:row < nRows |==> row > nRows
1033:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:row < nRows |==> row >= nRows
1034:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:row < nRows |==> false
1035:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1060:row < nRows |==> true
1036:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1061:0 |==> 1
1037:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1061:0 |==> -1
1038:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@solve(java.math.BigDecimal[]):1061:out[row] = solution[row][0] |==> <NO-OP>
1039:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:0 |==> 1
1040:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:0 |==> -1
1041:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:i < bd.length |==> i != bd.length
1042:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:i < bd.length |==> i <= bd.length
1043:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:i < bd.length |==> i == bd.length
1044:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:i < bd.length |==> i > bd.length
1045:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:i < bd.length |==> i >= bd.length
1046:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:i < bd.length |==> false
1047:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1079:i < bd.length |==> true
1048:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@solve(double[]):1080:bd[i] = new BigDecimal(b[i]) |==> <NO-OP>
1049:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1097:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() < this.getRowDimension()
1050:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1097:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() <= this.getRowDimension()
1051:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1097:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() == this.getRowDimension()
1052:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1097:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() > this.getRowDimension()
1053:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1097:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() >= this.getRowDimension()
1054:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1097:b.getRowDimension() != this.getRowDimension() |==> false
1055:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1097:b.getRowDimension() != this.getRowDimension() |==> true
1056:COR:this.isSquare():TRUE:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1100:this.isSquare() |==> false
1057:COR:this.isSquare():FALSE:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1100:this.isSquare() |==> true
1058:COR:this.isSingular():TRUE:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1103:this.isSingular() |==> false
1059:COR:this.isSingular():FALSE:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1103:this.isSingular() |==> true
1060:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:0 |==> 1
1061:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:0 |==> -1
1062:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:row < nRowB |==> row != nRowB
1063:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:row < nRowB |==> row <= nRowB
1064:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:row < nRowB |==> row == nRowB
1065:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:row < nRowB |==> row > nRowB
1066:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:row < nRowB |==> row >= nRowB
1067:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:row < nRowB |==> false
1068:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1113:row < nRowB |==> true
1069:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:0 |==> 1
1070:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:0 |==> -1
1071:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:col < nColB |==> col != nColB
1072:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:col < nColB |==> col <= nColB
1073:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:col < nColB |==> col == nColB
1074:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:col < nColB |==> col > nColB
1075:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:col < nColB |==> col >= nColB
1076:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:col < nColB |==> false
1077:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1115:col < nColB |==> true
1078:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1116:bpRow[col] = b.getEntry(permutation[row], col) |==> <NO-OP>
1079:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:0 |==> 1
1080:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:0 |==> -1
1081:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:col < nCol |==> col != nCol
1082:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:col < nCol |==> col <= nCol
1083:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:col < nCol |==> col == nCol
1084:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:col < nCol |==> col > nCol
1085:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:col < nCol |==> col >= nCol
1086:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:col < nCol |==> false
1087:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1121:col < nCol |==> true
1088:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:1 |==> 0
1089:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:1 |==> -1
1090:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:col + 1 |==> col % 1
1091:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:col + 1 |==> col * 1
1092:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:col + 1 |==> col - 1
1093:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:col + 1 |==> col / 1
1094:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:i < nCol |==> i != nCol
1095:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:i < nCol |==> i <= nCol
1096:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:i < nCol |==> i == nCol
1097:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:i < nCol |==> i > nCol
1098:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:i < nCol |==> i >= nCol
1099:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:i < nCol |==> false
1100:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1122:i < nCol |==> true
1101:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:0 |==> 1
1102:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:0 |==> -1
1103:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:j < nColB |==> j != nColB
1104:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:j < nColB |==> j <= nColB
1105:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:j < nColB |==> j == nColB
1106:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:j < nColB |==> j > nColB
1107:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:j < nColB |==> j >= nColB
1108:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:j < nColB |==> false
1109:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1125:j < nColB |==> true
1110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1126:bpI[j] = bpI[j].subtract(bp[col][j].multiply(luI[col])) |==> <NO-OP>
1111:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:1 |==> 0
1112:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:1 |==> -1
1113:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:nCol - 1 |==> nCol % 1
1114:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:nCol - 1 |==> nCol * 1
1115:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:nCol - 1 |==> nCol + 1
1116:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:nCol - 1 |==> nCol / 1
1117:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:0 |==> 1
1118:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:0 |==> -1
1119:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:col >= 0 |==> col != 0
1120:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:col >= 0 |==> col < 0
1121:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:col >= 0 |==> col <= 0
1122:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:col >= 0 |==> col == 0
1123:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:col >= 0 |==> col > 0
1124:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:col >= 0 |==> false
1125:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1132:col >= 0 |==> true
1126:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:0 |==> 1
1127:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:0 |==> -1
1128:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:j < nColB |==> j != nColB
1129:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:j < nColB |==> j <= nColB
1130:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:j < nColB |==> j == nColB
1131:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:j < nColB |==> j > nColB
1132:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:j < nColB |==> j >= nColB
1133:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:j < nColB |==> false
1134:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1135:j < nColB |==> true
1135:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1136:bpCol[j] = bpCol[j].divide(luDiag, scale, roundingMode) |==> <NO-OP>
1136:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:0 |==> 1
1137:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:0 |==> -1
1138:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:i < col |==> i != col
1139:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:i < col |==> i <= col
1140:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:i < col |==> i == col
1141:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:i < col |==> i > col
1142:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:i < col |==> i >= col
1143:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:i < col |==> false
1144:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1138:i < col |==> true
1145:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:0 |==> 1
1146:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:0 |==> -1
1147:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:j < nColB |==> j != nColB
1148:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:j < nColB |==> j <= nColB
1149:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:j < nColB |==> j == nColB
1150:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:j < nColB |==> j > nColB
1151:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:j < nColB |==> j >= nColB
1152:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:j < nColB |==> false
1153:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1141:j < nColB |==> true
1154:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1142:bpI[j] = bpI[j].subtract(bp[col][j].multiply(luI[col])) |==> <NO-OP>
1155:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@solve(org.apache.commons.math.linear.BigMatrix):1147:false |==> true
1156:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1173:nRows != nCols |==> nRows < nCols
1157:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1173:nRows != nCols |==> nRows <= nCols
1158:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1173:nRows != nCols |==> nRows == nCols
1159:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1173:nRows != nCols |==> nRows > nCols
1160:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1173:nRows != nCols |==> nRows >= nCols
1161:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1173:nRows != nCols |==> false
1162:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1173:nRows != nCols |==> true
1163:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1176:lu = this.getData() |==> <NO-OP>
1164:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1179:permutation = new int[nRows] |==> <NO-OP>
1165:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:0 |==> 1
1166:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:0 |==> -1
1167:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:row < nRows |==> row != nRows
1168:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:row < nRows |==> row <= nRows
1169:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:row < nRows |==> row == nRows
1170:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:row < nRows |==> row > nRows
1171:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:row < nRows |==> row >= nRows
1172:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:row < nRows |==> false
1173:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1180:row < nRows |==> true
1174:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1181:permutation[row] = row |==> <NO-OP>
1175:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1183:1 |==> 0
1176:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1183:1 |==> -1
1177:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1183:parity = 1 |==> <NO-OP>
1178:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:0 |==> 1
1179:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:0 |==> -1
1180:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:col < nCols |==> col != nCols
1181:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:col < nCols |==> col <= nCols
1182:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:col < nCols |==> col == nCols
1183:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:col < nCols |==> col > nCols
1184:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:col < nCols |==> col >= nCols
1185:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:col < nCols |==> false
1186:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1186:col < nCols |==> true
1187:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:0 |==> 1
1188:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:0 |==> -1
1189:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:row < col |==> row != col
1190:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:row < col |==> row <= col
1191:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:row < col |==> row == col
1192:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:row < col |==> row > col
1193:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:row < col |==> row >= col
1194:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:row < col |==> false
1195:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1191:row < col |==> true
1196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1193:sum = luRow[col] |==> <NO-OP>
1197:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:0 |==> 1
1198:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:0 |==> -1
1199:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:i < row |==> i != row
1200:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:i < row |==> i <= row
1201:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:i < row |==> i == row
1202:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:i < row |==> i > row
1203:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:i < row |==> i >= row
1204:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:i < row |==> false
1205:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1194:i < row |==> true
1206:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1195:sum = sum.subtract(luRow[i].multiply(lu[i][col])) |==> <NO-OP>
1207:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1197:luRow[col] = sum |==> <NO-OP>
1208:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1203:row < nRows |==> row != nRows
1209:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1203:row < nRows |==> row <= nRows
1210:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1203:row < nRows |==> row == nRows
1211:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1203:row < nRows |==> row > nRows
1212:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1203:row < nRows |==> row >= nRows
1213:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1203:row < nRows |==> false
1214:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1203:row < nRows |==> true
1215:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1205:sum = luRow[col] |==> <NO-OP>
1216:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:0 |==> 1
1217:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:0 |==> -1
1218:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:i < col |==> i != col
1219:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:i < col |==> i <= col
1220:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:i < col |==> i == col
1221:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:i < col |==> i > col
1222:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:i < col |==> i >= col
1223:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:i < col |==> false
1224:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1206:i < col |==> true
1225:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1207:sum = sum.subtract(luRow[i].multiply(lu[i][col])) |==> <NO-OP>
1226:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1209:luRow[col] = sum |==> <NO-OP>
1227:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:1 |==> 0
1228:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:1 |==> -1
1229:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:sum.abs().compareTo(largest) == 1 |==> sum.abs().compareTo(largest) != 1
1230:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:sum.abs().compareTo(largest) == 1 |==> sum.abs().compareTo(largest) < 1
1231:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:sum.abs().compareTo(largest) == 1 |==> sum.abs().compareTo(largest) <= 1
1232:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:sum.abs().compareTo(largest) == 1 |==> sum.abs().compareTo(largest) > 1
1233:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:sum.abs().compareTo(largest) == 1 |==> sum.abs().compareTo(largest) >= 1
1234:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:sum.abs().compareTo(largest) == 1 |==> false
1235:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1212:sum.abs().compareTo(largest) == 1 |==> true
1236:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1213:largest = sum.abs() |==> <NO-OP>
1237:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1214:max = row |==> <NO-OP>
1238:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:0 |==> 1
1239:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:0 |==> -1
1240:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:lu[max][col].abs().compareTo(TOO_SMALL) <= 0 |==> lu[max][col].abs().compareTo(TOO_SMALL) != 0
1241:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:lu[max][col].abs().compareTo(TOO_SMALL) <= 0 |==> lu[max][col].abs().compareTo(TOO_SMALL) < 0
1242:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:lu[max][col].abs().compareTo(TOO_SMALL) <= 0 |==> lu[max][col].abs().compareTo(TOO_SMALL) == 0
1243:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:lu[max][col].abs().compareTo(TOO_SMALL) <= 0 |==> lu[max][col].abs().compareTo(TOO_SMALL) > 0
1244:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:lu[max][col].abs().compareTo(TOO_SMALL) <= 0 |==> lu[max][col].abs().compareTo(TOO_SMALL) >= 0
1245:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:lu[max][col].abs().compareTo(TOO_SMALL) <= 0 |==> false
1246:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1219:lu[max][col].abs().compareTo(TOO_SMALL) <= 0 |==> true
1247:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1220:lu = null |==> <NO-OP>
1248:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1225:max != col |==> max < col
1249:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1225:max != col |==> max <= col
1250:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1225:max != col |==> max == col
1251:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1225:max != col |==> max > col
1252:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1225:max != col |==> max >= col
1253:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1225:max != col |==> false
1254:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1225:max != col |==> true
1255:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:0 |==> 1
1256:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:0 |==> -1
1257:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:i < nCols |==> i != nCols
1258:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:i < nCols |==> i <= nCols
1259:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:i < nCols |==> i == nCols
1260:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:i < nCols |==> i > nCols
1261:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:i < nCols |==> i >= nCols
1262:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:i < nCols |==> false
1263:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1227:i < nCols |==> true
1264:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1228:tmp = lu[max][i] |==> <NO-OP>
1265:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1229:lu[max][i] = lu[col][i] |==> <NO-OP>
1266:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1230:lu[col][i] = tmp |==> <NO-OP>
1267:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1233:permutation[max] = permutation[col] |==> <NO-OP>
1268:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1234:permutation[col] = temp |==> <NO-OP>
1269:ORU:-(int):+(int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1235:-parity |==> +parity
1270:ORU:-(int):~(int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1235:-parity |==> ~parity
1271:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1235:parity = -parity |==> <NO-OP>
1272:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:1 |==> 0
1273:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:1 |==> -1
1274:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:col + 1 |==> col % 1
1275:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:col + 1 |==> col * 1
1276:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:col + 1 |==> col - 1
1277:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:col + 1 |==> col / 1
1278:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:row < nRows |==> row != nRows
1279:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:row < nRows |==> row <= nRows
1280:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:row < nRows |==> row == nRows
1281:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:row < nRows |==> row > nRows
1282:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:row < nRows |==> row >= nRows
1283:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:row < nRows |==> false
1284:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1240:row < nRows |==> true
1285:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@luDecompose():1242:luRow[col] = luRow[col].divide(luDiag, scale, roundingMode) |==> <NO-OP>
1286:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@toString():1255:res.append("BigMatrixImpl{") |==> <NO-OP>
1287:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@toString():1256:data != null |==> data == null
1288:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@toString():1256:data != null |==> false
1289:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@toString():1256:data != null |==> true
1290:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@toString():1257:0 |==> 1
1291:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@toString():1257:0 |==> -1
1292:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1257:i < data.length |==> i != data.length
1293:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1257:i < data.length |==> i <= data.length
1294:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1257:i < data.length |==> i == data.length
1295:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1257:i < data.length |==> i > data.length
1296:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1257:i < data.length |==> i >= data.length
1297:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1257:i < data.length |==> false
1298:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1257:i < data.length |==> true
1299:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@toString():1258:0 |==> 1
1300:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@toString():1258:0 |==> -1
1301:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1258:i > 0 |==> i != 0
1302:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1258:i > 0 |==> i < 0
1303:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1258:i > 0 |==> i <= 0
1304:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1258:i > 0 |==> i == 0
1305:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1258:i > 0 |==> i >= 0
1306:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1258:i > 0 |==> false
1307:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1258:i > 0 |==> true
1308:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@toString():1259:res.append(",") |==> <NO-OP>
1309:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@toString():1261:res.append("{") |==> <NO-OP>
1310:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@toString():1262:0 |==> 1
1311:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@toString():1262:0 |==> -1
1312:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@toString():1262:0 |==> 1
1313:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@toString():1262:0 |==> -1
1314:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1262:j < data[0].length |==> j != data[0].length
1315:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1262:j < data[0].length |==> j <= data[0].length
1316:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1262:j < data[0].length |==> j == data[0].length
1317:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1262:j < data[0].length |==> j > data[0].length
1318:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1262:j < data[0].length |==> j >= data[0].length
1319:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1262:j < data[0].length |==> false
1320:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1262:j < data[0].length |==> true
1321:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@toString():1263:0 |==> 1
1322:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@toString():1263:0 |==> -1
1323:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1263:j > 0 |==> j != 0
1324:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1263:j > 0 |==> j < 0
1325:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1263:j > 0 |==> j <= 0
1326:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1263:j > 0 |==> j == 0
1327:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1263:j > 0 |==> j >= 0
1328:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1263:j > 0 |==> false
1329:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@toString():1263:j > 0 |==> true
1330:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@toString():1264:res.append(",") |==> <NO-OP>
1331:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@toString():1266:res.append(data[i][j]) |==> <NO-OP>
1332:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@toString():1268:res.append("}") |==> <NO-OP>
1333:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@toString():1271:res.append("}") |==> <NO-OP>
1334:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1285:object == this |==> object != this
1335:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1285:object == this |==> false
1336:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1285:object == this |==> true
1337:LVR:TRUE:FALSE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1286:true |==> false
1338:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1288:false |==> true
1339:ROR:==(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1288:object instanceof BigMatrixImpl == false |==> object instanceof BigMatrixImpl != false
1340:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1288:object instanceof BigMatrixImpl == false |==> false
1341:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1288:object instanceof BigMatrixImpl == false |==> object instanceof BigMatrixImpl
1342:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1288:object instanceof BigMatrixImpl == false |==> false
1343:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1288:object instanceof BigMatrixImpl == false |==> true
1344:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1289:false |==> true
1345:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols |==> m.getColumnDimension() < nCols
1346:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols |==> m.getColumnDimension() <= nCols
1347:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols |==> m.getColumnDimension() == nCols
1348:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols |==> m.getColumnDimension() > nCols
1349:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols |==> m.getColumnDimension() >= nCols
1350:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols |==> false
1351:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols |==> true
1352:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getRowDimension() != nRows |==> m.getRowDimension() < nRows
1353:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getRowDimension() != nRows |==> m.getRowDimension() <= nRows
1354:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getRowDimension() != nRows |==> m.getRowDimension() == nRows
1355:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getRowDimension() != nRows |==> m.getRowDimension() > nRows
1356:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getRowDimension() != nRows |==> m.getRowDimension() >= nRows
1357:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getRowDimension() != nRows |==> false
1358:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getRowDimension() != nRows |==> true
1359:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols != (m.getRowDimension() != nRows)
1360:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols && m.getRowDimension() != nRows
1361:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols == (m.getRowDimension() != nRows)
1362:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> false
1363:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols
1364:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getRowDimension() != nRows
1365:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1294:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> true
1366:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1295:false |==> true
1367:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:0 |==> 1
1368:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:0 |==> -1
1369:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:row < nRows |==> row != nRows
1370:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:row < nRows |==> row <= nRows
1371:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:row < nRows |==> row == nRows
1372:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:row < nRows |==> row > nRows
1373:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:row < nRows |==> row >= nRows
1374:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:row < nRows |==> false
1375:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1297:row < nRows |==> true
1376:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:0 |==> 1
1377:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:0 |==> -1
1378:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:col < nCols |==> col != nCols
1379:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:col < nCols |==> col <= nCols
1380:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:col < nCols |==> col == nCols
1381:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:col < nCols |==> col > nCols
1382:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:col < nCols |==> col >= nCols
1383:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:col < nCols |==> false
1384:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1299:col < nCols |==> true
1385:COR:dataRow[col].equals(m.getEntry(row, col)):TRUE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1300:dataRow[col].equals(m.getEntry(row, col)) |==> false
1386:COR:dataRow[col].equals(m.getEntry(row, col)):FALSE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1300:dataRow[col].equals(m.getEntry(row, col)) |==> true
1387:LVR:FALSE:TRUE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1301:false |==> true
1388:LVR:TRUE:FALSE:org.apache.commons.math.linear.BigMatrixImpl@equals(java.lang.Object):1305:true |==> false
1389:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1314:7 |==> 0
1390:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1314:7 |==> -7
1391:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:31 |==> 0
1392:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:31 |==> -31
1393:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 |==> ret % 31
1394:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 |==> ret + 31
1395:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 |==> ret - 31
1396:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 |==> ret / 31
1397:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 + nRows |==> ret * 31 % nRows
1398:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 + nRows |==> ret * 31 * nRows
1399:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 + nRows |==> ret * 31 - nRows
1400:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret * 31 + nRows |==> ret * 31 / nRows
1401:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1317:ret = ret * 31 + nRows |==> <NO-OP>
1402:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:31 |==> 0
1403:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:31 |==> -31
1404:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 |==> ret % 31
1405:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 |==> ret + 31
1406:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 |==> ret - 31
1407:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 |==> ret / 31
1408:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 + nCols |==> ret * 31 % nCols
1409:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 + nCols |==> ret * 31 * nCols
1410:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 + nCols |==> ret * 31 - nCols
1411:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret * 31 + nCols |==> ret * 31 / nCols
1412:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1318:ret = ret * 31 + nCols |==> <NO-OP>
1413:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:0 |==> 1
1414:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:0 |==> -1
1415:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:row < nRows |==> row != nRows
1416:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:row < nRows |==> row <= nRows
1417:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:row < nRows |==> row == nRows
1418:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:row < nRows |==> row > nRows
1419:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:row < nRows |==> row >= nRows
1420:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:row < nRows |==> false
1421:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1319:row < nRows |==> true
1422:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:0 |==> 1
1423:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:0 |==> -1
1424:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:col < nCols |==> col != nCols
1425:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:col < nCols |==> col <= nCols
1426:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:col < nCols |==> col == nCols
1427:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:col < nCols |==> col > nCols
1428:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:col < nCols |==> col >= nCols
1429:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:col < nCols |==> false
1430:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1321:col < nCols |==> true
1431:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:31 |==> 0
1432:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:31 |==> -31
1433:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 |==> ret % 31
1434:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 |==> ret + 31
1435:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 |==> ret - 31
1436:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 |==> ret / 31
1437:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 |==> 0
1438:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 |==> -11
1439:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:1 |==> 0
1440:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:1 |==> -1
1441:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:row + 1 |==> row % 1
1442:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:row + 1 |==> row * 1
1443:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:row + 1 |==> row - 1
1444:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:row + 1 |==> row / 1
1445:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) |==> 11 % (row + 1)
1446:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) |==> 11 + (row + 1)
1447:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) |==> 11 - (row + 1)
1448:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) |==> 11 / (row + 1)
1449:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:17 |==> 0
1450:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:17 |==> -17
1451:LVR:POS:0:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:1 |==> 0
1452:LVR:POS:NEG:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:1 |==> -1
1453:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:col + 1 |==> col % 1
1454:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:col + 1 |==> col * 1
1455:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:col + 1 |==> col - 1
1456:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:col + 1 |==> col / 1
1457:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:17 * (col + 1) |==> 17 % (col + 1)
1458:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:17 * (col + 1) |==> 17 + (col + 1)
1459:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:17 * (col + 1) |==> 17 - (col + 1)
1460:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:17 * (col + 1) |==> 17 / (col + 1)
1461:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) % (17 * (col + 1))
1462:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) * (17 * (col + 1))
1463:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) - 17 * (col + 1)
1464:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) / (17 * (col + 1))
1465:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:(11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> (11 * (row + 1) + 17 * (col + 1)) % dataRow[col].hashCode()
1466:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:(11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> (11 * (row + 1) + 17 * (col + 1)) + dataRow[col].hashCode()
1467:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:(11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> (11 * (row + 1) + 17 * (col + 1)) - dataRow[col].hashCode()
1468:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:(11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> (11 * (row + 1) + 17 * (col + 1)) / dataRow[col].hashCode()
1469:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> ret * 31 % ((11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode())
1470:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> ret * 31 * ((11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode())
1471:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> ret * 31 - (11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode()
1472:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> ret * 31 / ((11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode())
1473:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@hashCode():1322:ret = ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * dataRow[col].hashCode() |==> <NO-OP>
1474:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@getLUMatrix():1359:lu == null |==> lu != null
1475:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@getLUMatrix():1359:lu == null |==> false
1476:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.BigMatrixImpl@getLUMatrix():1359:lu == null |==> true
1477:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getLUMatrix():1360:luDecompose() |==> <NO-OP>
1478:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getPermutation():1379:0 |==> 1
1479:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getPermutation():1379:0 |==> -1
1480:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@getPermutation():1379:0 |==> 1
1481:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@getPermutation():1379:0 |==> -1
1482:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@getPermutation():1379:System.arraycopy(permutation, 0, out, 0, permutation.length) |==> <NO-OP>
1483:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:0 |==> 1
1484:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:0 |==> -1
1485:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:i < nRows |==> i != nRows
1486:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:i < nRows |==> i <= nRows
1487:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:i < nRows |==> i == nRows
1488:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:i < nRows |==> i > nRows
1489:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:i < nRows |==> i >= nRows
1490:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:i < nRows |==> false
1491:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyOut():1394:i < nRows |==> true
1492:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyOut():1395:0 |==> 1
1493:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyOut():1395:0 |==> -1
1494:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyOut():1395:0 |==> 1
1495:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyOut():1395:0 |==> -1
1496:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyOut():1395:System.arraycopy(data[i], 0, out[i], 0, data[i].length) |==> <NO-OP>
1497:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.math.BigDecimal[][]):1411:0 |==> 1
1498:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.math.BigDecimal[][]):1411:0 |==> -1
1499:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.math.BigDecimal[][]):1411:0 |==> 1
1500:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.math.BigDecimal[][]):1411:0 |==> -1
1501:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.math.BigDecimal[][]):1411:setSubMatrix(in, 0, 0) |==> <NO-OP>
1502:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1421:0 |==> 1
1503:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1421:0 |==> -1
1504:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1422:data = new BigDecimal[nRows][nCols] |==> <NO-OP>
1505:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:0 |==> 1
1506:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:0 |==> -1
1507:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:i < nRows |==> i != nRows
1508:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:i < nRows |==> i <= nRows
1509:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:i < nRows |==> i == nRows
1510:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:i < nRows |==> i > nRows
1511:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:i < nRows |==> i >= nRows
1512:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:i < nRows |==> false
1513:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1423:i < nRows |==> true
1514:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:0 |==> 1
1515:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:0 |==> -1
1516:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:j < nCols |==> j != nCols
1517:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:j < nCols |==> j <= nCols
1518:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:j < nCols |==> j == nCols
1519:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:j < nCols |==> j > nCols
1520:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:j < nCols |==> j >= nCols
1521:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:j < nCols |==> false
1522:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1426:j < nCols |==> true
1523:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1427:dataI[j] = new BigDecimal(inI[j]) |==> <NO-OP>
1524:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyIn(double[][]):1430:lu = null |==> <NO-OP>
1525:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1441:0 |==> 1
1526:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1441:0 |==> -1
1527:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1442:data = new BigDecimal[nRows][nCols] |==> <NO-OP>
1528:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:0 |==> 1
1529:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:0 |==> -1
1530:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:i < nRows |==> i != nRows
1531:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:i < nRows |==> i <= nRows
1532:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:i < nRows |==> i == nRows
1533:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:i < nRows |==> i > nRows
1534:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:i < nRows |==> i >= nRows
1535:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:i < nRows |==> false
1536:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1443:i < nRows |==> true
1537:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:0 |==> 1
1538:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:0 |==> -1
1539:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:j < nCols |==> j != nCols
1540:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:j < nCols |==> j <= nCols
1541:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:j < nCols |==> j == nCols
1542:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:j < nCols |==> j > nCols
1543:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:j < nCols |==> j >= nCols
1544:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:j < nCols |==> false
1545:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1446:j < nCols |==> true
1546:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1447:dataI[j] = new BigDecimal(inI[j]) |==> <NO-OP>
1547:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.BigMatrixImpl@copyIn(java.lang.String[][]):1450:lu = null |==> <NO-OP>
1548:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:0 |==> 1
1549:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:0 |==> -1
1550:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 |==> row != 0
1551:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 |==> row <= 0
1552:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 |==> row == 0
1553:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 |==> row > 0
1554:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 |==> row >= 0
1555:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 |==> false
1556:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 |==> true
1557:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row >= nRows |==> row != nRows
1558:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row >= nRows |==> row < nRows
1559:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row >= nRows |==> row <= nRows
1560:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row >= nRows |==> row == nRows
1561:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row >= nRows |==> row > nRows
1562:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row >= nRows |==> false
1563:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row >= nRows |==> true
1564:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows |==> row < 0 != row >= nRows
1565:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows |==> row < 0 && row >= nRows
1566:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows |==> row < 0 == row >= nRows
1567:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows |==> false
1568:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows |==> row < 0
1569:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows |==> row >= nRows
1570:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows |==> true
1571:LVR:0:POS:org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:0 |==> 1
1572:LVR:0:NEG:org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:0 |==> -1
1573:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col < 0 |==> col != 0
1574:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col < 0 |==> col <= 0
1575:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col < 0 |==> col == 0
1576:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col < 0 |==> col > 0
1577:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col < 0 |==> col >= 0
1578:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col < 0 |==> false
1579:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col < 0 |==> true
1580:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 |==> (row < 0 || row >= nRows) != col < 0
1581:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 |==> (row < 0 || row >= nRows) && col < 0
1582:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 |==> (row < 0 || row >= nRows) == col < 0
1583:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 |==> false
1584:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 |==> row < 0 || row >= nRows
1585:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 |==> col < 0
1586:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 |==> true
1587:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col >= nCols |==> col != nCols
1588:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col >= nCols |==> col < nCols
1589:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col >= nCols |==> col <= nCols
1590:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col >= nCols |==> col == nCols
1591:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col >= nCols |==> col > nCols
1592:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col >= nCols |==> false
1593:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:col >= nCols |==> true
1594:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 || col >= nCols |==> (row < 0 || row >= nRows || col < 0) != col >= nCols
1595:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 || col >= nCols |==> (row < 0 || row >= nRows || col < 0) && col >= nCols
1596:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 || col >= nCols |==> (row < 0 || row >= nRows || col < 0) == col >= nCols
1597:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 || col >= nCols |==> false
1598:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 || col >= nCols |==> row < 0 || row >= nRows || col < 0
1599:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 || col >= nCols |==> col >= nCols
1600:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.BigMatrixImpl@isValidCoordinate(int,int):1463:row < 0 || row >= nRows || col < 0 || col >= nCols |==> true
1601:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl:69:1 |==> 0
1602:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl:69:1 |==> -1
1603:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:0 |==> 1
1604:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:0 |==> -1
1605:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 |==> rowDimension != 0
1606:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 |==> rowDimension < 0
1607:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 |==> rowDimension == 0
1608:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 |==> rowDimension > 0
1609:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 |==> rowDimension >= 0
1610:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 |==> false
1611:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 |==> true
1612:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:0 |==> 1
1613:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:0 |==> -1
1614:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:columnDimension <= 0 |==> columnDimension != 0
1615:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:columnDimension <= 0 |==> columnDimension < 0
1616:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:columnDimension <= 0 |==> columnDimension == 0
1617:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:columnDimension <= 0 |==> columnDimension > 0
1618:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:columnDimension <= 0 |==> columnDimension >= 0
1619:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:columnDimension <= 0 |==> false
1620:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:columnDimension <= 0 |==> true
1621:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0 != columnDimension <= 0
1622:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0 && columnDimension <= 0
1623:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0 == columnDimension <= 0
1624:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 || columnDimension <= 0 |==> false
1625:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 || columnDimension <= 0 |==> rowDimension <= 0
1626:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 || columnDimension <= 0 |==> columnDimension <= 0
1627:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):89:rowDimension <= 0 || columnDimension <= 0 |==> true
1628:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):93:data = new double[rowDimension][columnDimension] |==> <NO-OP>
1629:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(int,int):94:lu = null |==> <NO-OP>
1630:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][]):111:copyIn(d) |==> <NO-OP>
1631:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][]):112:lu = null |==> <NO-OP>
1632:COR:copyArray:TRUE:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):131:copyArray |==> false
1633:COR:copyArray:FALSE:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):131:copyArray |==> true
1634:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):132:copyIn(d) |==> <NO-OP>
1635:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):134:d == null |==> d != null
1636:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):134:d == null |==> false
1637:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):134:d == null |==> true
1638:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:0 |==> 1
1639:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:0 |==> -1
1640:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:nRows == 0 |==> nRows != 0
1641:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:nRows == 0 |==> nRows < 0
1642:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:nRows == 0 |==> nRows <= 0
1643:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:nRows == 0 |==> nRows > 0
1644:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:nRows == 0 |==> nRows >= 0
1645:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:nRows == 0 |==> false
1646:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):138:nRows == 0 |==> true
1647:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):141:0 |==> 1
1648:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):141:0 |==> -1
1649:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:0 |==> 1
1650:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:0 |==> -1
1651:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:nCols == 0 |==> nCols != 0
1652:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:nCols == 0 |==> nCols < 0
1653:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:nCols == 0 |==> nCols <= 0
1654:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:nCols == 0 |==> nCols > 0
1655:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:nCols == 0 |==> nCols >= 0
1656:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:nCols == 0 |==> false
1657:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):142:nCols == 0 |==> true
1658:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:1 |==> 0
1659:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:1 |==> -1
1660:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:r < nRows |==> r != nRows
1661:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:r < nRows |==> r <= nRows
1662:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:r < nRows |==> r == nRows
1663:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:r < nRows |==> r > nRows
1664:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:r < nRows |==> r >= nRows
1665:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:r < nRows |==> false
1666:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):145:r < nRows |==> true
1667:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):146:d[r].length != nCols |==> d[r].length < nCols
1668:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):146:d[r].length != nCols |==> d[r].length <= nCols
1669:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):146:d[r].length != nCols |==> d[r].length == nCols
1670:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):146:d[r].length != nCols |==> d[r].length > nCols
1671:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):146:d[r].length != nCols |==> d[r].length >= nCols
1672:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):146:d[r].length != nCols |==> false
1673:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):146:d[r].length != nCols |==> true
1674:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):150:data = d |==> <NO-OP>
1675:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[][],boolean):152:lu = null |==> <NO-OP>
1676:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):165:1 |==> 0
1677:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):165:1 |==> -1
1678:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):165:data = new double[nRows][1] |==> <NO-OP>
1679:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:0 |==> 1
1680:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:0 |==> -1
1681:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:row < nRows |==> row != nRows
1682:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:row < nRows |==> row <= nRows
1683:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:row < nRows |==> row == nRows
1684:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:row < nRows |==> row > nRows
1685:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:row < nRows |==> row >= nRows
1686:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:row < nRows |==> false
1687:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):166:row < nRows |==> true
1688:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):167:0 |==> 1
1689:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):167:0 |==> -1
1690:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@<init>(double[]):167:data[row][0] = v[row] |==> <NO-OP>
1691:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@copy():177:false |==> true
1692:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
1693:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
1694:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
1695:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
1696:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
1697:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() |==> false
1698:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() |==> true
1699:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
1700:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
1701:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
1702:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
1703:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
1704:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:rowCount != m.getRowDimension() |==> false
1705:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:rowCount != m.getRowDimension() |==> true
1706:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
1707:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
1708:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
1709:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
1710:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
1711:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
1712:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):193:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
1713:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:0 |==> 1
1714:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:0 |==> -1
1715:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:row < rowCount |==> row != rowCount
1716:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:row < rowCount |==> row <= rowCount
1717:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:row < rowCount |==> row == rowCount
1718:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:row < rowCount |==> row > rowCount
1719:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:row < rowCount |==> row >= rowCount
1720:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:row < rowCount |==> false
1721:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):197:row < rowCount |==> true
1722:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:0 |==> 1
1723:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:0 |==> -1
1724:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:col < columnCount |==> col != columnCount
1725:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:col < columnCount |==> col <= columnCount
1726:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:col < columnCount |==> col == columnCount
1727:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:col < columnCount |==> col > columnCount
1728:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:col < columnCount |==> col >= columnCount
1729:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:col < columnCount |==> false
1730:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):200:col < columnCount |==> true
1731:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):201:dataRow[col] + m.getEntry(row, col) |==> dataRow[col] % m.getEntry(row, col)
1732:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):201:dataRow[col] + m.getEntry(row, col) |==> dataRow[col] * m.getEntry(row, col)
1733:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):201:dataRow[col] + m.getEntry(row, col) |==> dataRow[col] - m.getEntry(row, col)
1734:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):201:dataRow[col] + m.getEntry(row, col) |==> dataRow[col] / m.getEntry(row, col)
1735:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):201:outDataRow[col] = dataRow[col] + m.getEntry(row, col) |==> <NO-OP>
1736:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrix):204:false |==> true
1737:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
1738:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
1739:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
1740:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
1741:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
1742:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() |==> false
1743:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() |==> true
1744:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
1745:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
1746:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
1747:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
1748:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
1749:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:rowCount != m.getRowDimension() |==> false
1750:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:rowCount != m.getRowDimension() |==> true
1751:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
1752:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
1753:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
1754:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
1755:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
1756:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
1757:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):218:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
1758:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:0 |==> 1
1759:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:0 |==> -1
1760:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:row < rowCount |==> row != rowCount
1761:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:row < rowCount |==> row <= rowCount
1762:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:row < rowCount |==> row == rowCount
1763:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:row < rowCount |==> row > rowCount
1764:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:row < rowCount |==> row >= rowCount
1765:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:row < rowCount |==> false
1766:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):222:row < rowCount |==> true
1767:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:0 |==> 1
1768:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:0 |==> -1
1769:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:col < columnCount |==> col != columnCount
1770:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:col < columnCount |==> col <= columnCount
1771:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:col < columnCount |==> col == columnCount
1772:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:col < columnCount |==> col > columnCount
1773:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:col < columnCount |==> col >= columnCount
1774:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:col < columnCount |==> false
1775:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):226:col < columnCount |==> true
1776:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):227:dataRow[col] + mRow[col] |==> dataRow[col] % mRow[col]
1777:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):227:dataRow[col] + mRow[col] |==> dataRow[col] * mRow[col]
1778:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):227:dataRow[col] + mRow[col] |==> dataRow[col] - mRow[col]
1779:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):227:dataRow[col] + mRow[col] |==> dataRow[col] / mRow[col]
1780:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):227:outDataRow[col] = dataRow[col] + mRow[col] |==> <NO-OP>
1781:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@add(org.apache.commons.math.linear.RealMatrixImpl):230:false |==> true
1782:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
1783:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
1784:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
1785:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
1786:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
1787:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() |==> false
1788:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() |==> true
1789:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
1790:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
1791:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
1792:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
1793:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
1794:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:rowCount != m.getRowDimension() |==> false
1795:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:rowCount != m.getRowDimension() |==> true
1796:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
1797:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
1798:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
1799:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
1800:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
1801:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
1802:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):246:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
1803:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:0 |==> 1
1804:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:0 |==> -1
1805:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:row < rowCount |==> row != rowCount
1806:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:row < rowCount |==> row <= rowCount
1807:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:row < rowCount |==> row == rowCount
1808:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:row < rowCount |==> row > rowCount
1809:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:row < rowCount |==> row >= rowCount
1810:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:row < rowCount |==> false
1811:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):250:row < rowCount |==> true
1812:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:0 |==> 1
1813:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:0 |==> -1
1814:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:col < columnCount |==> col != columnCount
1815:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:col < columnCount |==> col <= columnCount
1816:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:col < columnCount |==> col == columnCount
1817:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:col < columnCount |==> col > columnCount
1818:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:col < columnCount |==> col >= columnCount
1819:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:col < columnCount |==> false
1820:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):253:col < columnCount |==> true
1821:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):254:dataRow[col] - m.getEntry(row, col) |==> dataRow[col] % m.getEntry(row, col)
1822:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):254:dataRow[col] - m.getEntry(row, col) |==> dataRow[col] * m.getEntry(row, col)
1823:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):254:dataRow[col] - m.getEntry(row, col) |==> dataRow[col] + m.getEntry(row, col)
1824:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):254:dataRow[col] - m.getEntry(row, col) |==> dataRow[col] / m.getEntry(row, col)
1825:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):254:outDataRow[col] = dataRow[col] - m.getEntry(row, col) |==> <NO-OP>
1826:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrix):257:false |==> true
1827:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() |==> columnCount < m.getColumnDimension()
1828:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() |==> columnCount <= m.getColumnDimension()
1829:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() |==> columnCount == m.getColumnDimension()
1830:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() |==> columnCount > m.getColumnDimension()
1831:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() |==> columnCount >= m.getColumnDimension()
1832:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() |==> false
1833:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() |==> true
1834:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:rowCount != m.getRowDimension() |==> rowCount < m.getRowDimension()
1835:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:rowCount != m.getRowDimension() |==> rowCount <= m.getRowDimension()
1836:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:rowCount != m.getRowDimension() |==> rowCount == m.getRowDimension()
1837:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:rowCount != m.getRowDimension() |==> rowCount > m.getRowDimension()
1838:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:rowCount != m.getRowDimension() |==> rowCount >= m.getRowDimension()
1839:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:rowCount != m.getRowDimension() |==> false
1840:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:rowCount != m.getRowDimension() |==> true
1841:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() != (rowCount != m.getRowDimension())
1842:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() && rowCount != m.getRowDimension()
1843:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension() == (rowCount != m.getRowDimension())
1844:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> false
1845:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> columnCount != m.getColumnDimension()
1846:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> rowCount != m.getRowDimension()
1847:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):271:columnCount != m.getColumnDimension() || rowCount != m.getRowDimension() |==> true
1848:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:0 |==> 1
1849:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:0 |==> -1
1850:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:row < rowCount |==> row != rowCount
1851:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:row < rowCount |==> row <= rowCount
1852:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:row < rowCount |==> row == rowCount
1853:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:row < rowCount |==> row > rowCount
1854:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:row < rowCount |==> row >= rowCount
1855:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:row < rowCount |==> false
1856:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):275:row < rowCount |==> true
1857:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:0 |==> 1
1858:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:0 |==> -1
1859:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:col < columnCount |==> col != columnCount
1860:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:col < columnCount |==> col <= columnCount
1861:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:col < columnCount |==> col == columnCount
1862:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:col < columnCount |==> col > columnCount
1863:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:col < columnCount |==> col >= columnCount
1864:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:col < columnCount |==> false
1865:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):279:col < columnCount |==> true
1866:AOR:-(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):280:dataRow[col] - mRow[col] |==> dataRow[col] % mRow[col]
1867:AOR:-(double,double):*(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):280:dataRow[col] - mRow[col] |==> dataRow[col] * mRow[col]
1868:AOR:-(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):280:dataRow[col] - mRow[col] |==> dataRow[col] + mRow[col]
1869:AOR:-(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):280:dataRow[col] - mRow[col] |==> dataRow[col] / mRow[col]
1870:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):280:outDataRow[col] = dataRow[col] - mRow[col] |==> <NO-OP>
1871:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@subtract(org.apache.commons.math.linear.RealMatrixImpl):283:false |==> true
1872:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:0 |==> 1
1873:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:0 |==> -1
1874:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:row < rowCount |==> row != rowCount
1875:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:row < rowCount |==> row <= rowCount
1876:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:row < rowCount |==> row == rowCount
1877:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:row < rowCount |==> row > rowCount
1878:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:row < rowCount |==> row >= rowCount
1879:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:row < rowCount |==> false
1880:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):296:row < rowCount |==> true
1881:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:0 |==> 1
1882:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:0 |==> -1
1883:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:col < columnCount |==> col != columnCount
1884:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:col < columnCount |==> col <= columnCount
1885:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:col < columnCount |==> col == columnCount
1886:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:col < columnCount |==> col > columnCount
1887:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:col < columnCount |==> col >= columnCount
1888:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:col < columnCount |==> false
1889:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):299:col < columnCount |==> true
1890:AOR:+(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):300:dataRow[col] + d |==> dataRow[col] % d
1891:AOR:+(double,double):*(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):300:dataRow[col] + d |==> dataRow[col] * d
1892:AOR:+(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):300:dataRow[col] + d |==> dataRow[col] - d
1893:AOR:+(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):300:dataRow[col] + d |==> dataRow[col] / d
1894:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):300:outDataRow[col] = dataRow[col] + d |==> <NO-OP>
1895:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@scalarAdd(double):303:false |==> true
1896:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:0 |==> 1
1897:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:0 |==> -1
1898:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:row < rowCount |==> row != rowCount
1899:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:row < rowCount |==> row <= rowCount
1900:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:row < rowCount |==> row == rowCount
1901:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:row < rowCount |==> row > rowCount
1902:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:row < rowCount |==> row >= rowCount
1903:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:row < rowCount |==> false
1904:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):315:row < rowCount |==> true
1905:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:0 |==> 1
1906:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:0 |==> -1
1907:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:col < columnCount |==> col != columnCount
1908:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:col < columnCount |==> col <= columnCount
1909:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:col < columnCount |==> col == columnCount
1910:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:col < columnCount |==> col > columnCount
1911:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:col < columnCount |==> col >= columnCount
1912:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:col < columnCount |==> false
1913:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):318:col < columnCount |==> true
1914:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):319:dataRow[col] * d |==> dataRow[col] % d
1915:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):319:dataRow[col] * d |==> dataRow[col] + d
1916:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):319:dataRow[col] * d |==> dataRow[col] - d
1917:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):319:dataRow[col] * d |==> dataRow[col] / d
1918:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):319:outDataRow[col] = dataRow[col] * d |==> <NO-OP>
1919:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@scalarMultiply(double):322:false |==> true
1920:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):336:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() < m.getRowDimension()
1921:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):336:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() <= m.getRowDimension()
1922:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):336:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() == m.getRowDimension()
1923:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):336:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() > m.getRowDimension()
1924:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):336:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() >= m.getRowDimension()
1925:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):336:this.getColumnDimension() != m.getRowDimension() |==> false
1926:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):336:this.getColumnDimension() != m.getRowDimension() |==> true
1927:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:0 |==> 1
1928:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:0 |==> -1
1929:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:row < nRows |==> row != nRows
1930:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:row < nRows |==> row <= nRows
1931:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:row < nRows |==> row == nRows
1932:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:row < nRows |==> row > nRows
1933:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:row < nRows |==> row >= nRows
1934:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:row < nRows |==> false
1935:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):343:row < nRows |==> true
1936:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:0 |==> 1
1937:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:0 |==> -1
1938:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:col < nCols |==> col != nCols
1939:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:col < nCols |==> col <= nCols
1940:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:col < nCols |==> col == nCols
1941:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:col < nCols |==> col > nCols
1942:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:col < nCols |==> col >= nCols
1943:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:col < nCols |==> false
1944:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):346:col < nCols |==> true
1945:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):347:0 |==> 1
1946:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):347:0 |==> -1
1947:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:0 |==> 1
1948:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:0 |==> -1
1949:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:i < nSum |==> i != nSum
1950:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:i < nSum |==> i <= nSum
1951:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:i < nSum |==> i == nSum
1952:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:i < nSum |==> i > nSum
1953:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:i < nSum |==> i >= nSum
1954:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:i < nSum |==> false
1955:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):348:i < nSum |==> true
1956:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):349:dataRow[i] * m.getEntry(i, col) |==> dataRow[i] % m.getEntry(i, col)
1957:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):349:dataRow[i] * m.getEntry(i, col) |==> dataRow[i] + m.getEntry(i, col)
1958:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):349:dataRow[i] * m.getEntry(i, col) |==> dataRow[i] - m.getEntry(i, col)
1959:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):349:dataRow[i] * m.getEntry(i, col) |==> dataRow[i] / m.getEntry(i, col)
1960:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):349:sum += dataRow[i] * m.getEntry(i, col) |==> <NO-OP>
1961:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):351:outDataRow[col] = sum |==> <NO-OP>
1962:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrix):354:false |==> true
1963:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):366:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() < m.getRowDimension()
1964:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):366:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() <= m.getRowDimension()
1965:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):366:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() == m.getRowDimension()
1966:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):366:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() > m.getRowDimension()
1967:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):366:this.getColumnDimension() != m.getRowDimension() |==> this.getColumnDimension() >= m.getRowDimension()
1968:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):366:this.getColumnDimension() != m.getRowDimension() |==> false
1969:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):366:this.getColumnDimension() != m.getRowDimension() |==> true
1970:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:0 |==> 1
1971:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:0 |==> -1
1972:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:row < nRows |==> row != nRows
1973:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:row < nRows |==> row <= nRows
1974:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:row < nRows |==> row == nRows
1975:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:row < nRows |==> row > nRows
1976:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:row < nRows |==> row >= nRows
1977:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:row < nRows |==> false
1978:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):373:row < nRows |==> true
1979:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:0 |==> 1
1980:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:0 |==> -1
1981:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:col < nCols |==> col != nCols
1982:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:col < nCols |==> col <= nCols
1983:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:col < nCols |==> col == nCols
1984:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:col < nCols |==> col > nCols
1985:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:col < nCols |==> col >= nCols
1986:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:col < nCols |==> false
1987:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):376:col < nCols |==> true
1988:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):377:0 |==> 1
1989:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):377:0 |==> -1
1990:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:0 |==> 1
1991:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:0 |==> -1
1992:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:i < nSum |==> i != nSum
1993:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:i < nSum |==> i <= nSum
1994:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:i < nSum |==> i == nSum
1995:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:i < nSum |==> i > nSum
1996:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:i < nSum |==> i >= nSum
1997:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:i < nSum |==> false
1998:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):378:i < nSum |==> true
1999:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):379:dataRow[i] * m.data[i][col] |==> dataRow[i] % m.data[i][col]
2000:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):379:dataRow[i] * m.data[i][col] |==> dataRow[i] + m.data[i][col]
2001:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):379:dataRow[i] * m.data[i][col] |==> dataRow[i] - m.data[i][col]
2002:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):379:dataRow[i] * m.data[i][col] |==> dataRow[i] / m.data[i][col]
2003:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):379:sum += dataRow[i] * m.data[i][col] |==> <NO-OP>
2004:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):381:outDataRow[col] = sum |==> <NO-OP>
2005:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@multiply(org.apache.commons.math.linear.RealMatrixImpl):384:false |==> true
2006:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getNorm():425:0 |==> 1
2007:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getNorm():425:0 |==> -1
2008:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:0 |==> 1
2009:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:0 |==> -1
2010:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:col < this.getColumnDimension() |==> col != this.getColumnDimension()
2011:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:col < this.getColumnDimension() |==> col <= this.getColumnDimension()
2012:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:col < this.getColumnDimension() |==> col == this.getColumnDimension()
2013:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:col < this.getColumnDimension() |==> col > this.getColumnDimension()
2014:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:col < this.getColumnDimension() |==> col >= this.getColumnDimension()
2015:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:col < this.getColumnDimension() |==> false
2016:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():426:col < this.getColumnDimension() |==> true
2017:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getNorm():427:0 |==> 1
2018:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getNorm():427:0 |==> -1
2019:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:0 |==> 1
2020:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:0 |==> -1
2021:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:row < this.getRowDimension() |==> row != this.getRowDimension()
2022:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:row < this.getRowDimension() |==> row <= this.getRowDimension()
2023:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:row < this.getRowDimension() |==> row == this.getRowDimension()
2024:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:row < this.getRowDimension() |==> row > this.getRowDimension()
2025:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:row < this.getRowDimension() |==> row >= this.getRowDimension()
2026:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:row < this.getRowDimension() |==> false
2027:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getNorm():428:row < this.getRowDimension() |==> true
2028:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getNorm():429:sum += Math.abs(data[row][col]) |==> <NO-OP>
2029:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getNorm():431:maxColSum = Math.max(maxColSum, sum) |==> <NO-OP>
2030:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:0 |==> 1
2031:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:0 |==> -1
2032:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 |==> startRow != 0
2033:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 |==> startRow <= 0
2034:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 |==> startRow == 0
2035:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 |==> startRow > 0
2036:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 |==> startRow >= 0
2037:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 |==> false
2038:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 |==> true
2039:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow > endRow |==> startRow != endRow
2040:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow > endRow |==> startRow < endRow
2041:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow > endRow |==> startRow <= endRow
2042:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow > endRow |==> startRow == endRow
2043:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow > endRow |==> startRow >= endRow
2044:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow > endRow |==> false
2045:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow > endRow |==> true
2046:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow |==> startRow < 0 != startRow > endRow
2047:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow |==> startRow < 0 && startRow > endRow
2048:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow |==> startRow < 0 == startRow > endRow
2049:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow |==> false
2050:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow |==> startRow < 0
2051:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow |==> startRow > endRow
2052:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow |==> true
2053:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:endRow > data.length |==> endRow != data.length
2054:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:endRow > data.length |==> endRow < data.length
2055:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:endRow > data.length |==> endRow <= data.length
2056:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:endRow > data.length |==> endRow == data.length
2057:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:endRow > data.length |==> endRow >= data.length
2058:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:endRow > data.length |==> false
2059:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:endRow > data.length |==> true
2060:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length |==> (startRow < 0 || startRow > endRow) != endRow > data.length
2061:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length |==> (startRow < 0 || startRow > endRow) && endRow > data.length
2062:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length |==> (startRow < 0 || startRow > endRow) == endRow > data.length
2063:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length |==> false
2064:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length |==> startRow < 0 || startRow > endRow
2065:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length |==> endRow > data.length
2066:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length |==> true
2067:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:0 |==> 1
2068:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:0 |==> -1
2069:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn < 0 |==> startColumn != 0
2070:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn < 0 |==> startColumn <= 0
2071:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn < 0 |==> startColumn == 0
2072:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn < 0 |==> startColumn > 0
2073:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn < 0 |==> startColumn >= 0
2074:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn < 0 |==> false
2075:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn < 0 |==> true
2076:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> (startRow < 0 || startRow > endRow || endRow > data.length) != startColumn < 0
2077:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> (startRow < 0 || startRow > endRow || endRow > data.length) && startColumn < 0
2078:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> (startRow < 0 || startRow > endRow || endRow > data.length) == startColumn < 0
2079:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> false
2080:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> startRow < 0 || startRow > endRow || endRow > data.length
2081:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> startColumn < 0
2082:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 |==> true
2083:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn > endColumn |==> startColumn != endColumn
2084:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn > endColumn |==> startColumn < endColumn
2085:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn > endColumn |==> startColumn <= endColumn
2086:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn > endColumn |==> startColumn == endColumn
2087:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn > endColumn |==> startColumn >= endColumn
2088:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn > endColumn |==> false
2089:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startColumn > endColumn |==> true
2090:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0) != startColumn > endColumn
2091:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0) && startColumn > endColumn
2092:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0) == startColumn > endColumn
2093:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> false
2094:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0
2095:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> startColumn > endColumn
2096:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn |==> true
2097:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:0 |==> 1
2098:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:0 |==> -1
2099:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:endColumn > data[0].length |==> endColumn != data[0].length
2100:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:endColumn > data[0].length |==> endColumn < data[0].length
2101:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:endColumn > data[0].length |==> endColumn <= data[0].length
2102:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:endColumn > data[0].length |==> endColumn == data[0].length
2103:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:endColumn > data[0].length |==> endColumn >= data[0].length
2104:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:endColumn > data[0].length |==> false
2105:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:endColumn > data[0].length |==> true
2106:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn) != endColumn > data[0].length
2107:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn) && endColumn > data[0].length
2108:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> (startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn) == endColumn > data[0].length
2109:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> false
2110:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):451:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn
2111:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):453:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> endColumn > data[0].length
2112:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):452:startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length |==> true
2113:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow |==> endRow % startRow
2114:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow |==> endRow * startRow
2115:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow |==> endRow + startRow
2116:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow |==> endRow / startRow
2117:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:1 |==> 0
2118:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:1 |==> -1
2119:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow + 1 |==> (endRow - startRow) % 1
2120:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow + 1 |==> (endRow - startRow) * 1
2121:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow + 1 |==> endRow - startRow - 1
2122:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endRow - startRow + 1 |==> (endRow - startRow) / 1
2123:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn |==> endColumn % startColumn
2124:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn |==> endColumn * startColumn
2125:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn |==> endColumn + startColumn
2126:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn |==> endColumn / startColumn
2127:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:1 |==> 0
2128:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:1 |==> -1
2129:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn + 1 |==> (endColumn - startColumn) % 1
2130:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn + 1 |==> (endColumn - startColumn) * 1
2131:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn + 1 |==> endColumn - startColumn - 1
2132:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):458:endColumn - startColumn + 1 |==> (endColumn - startColumn) / 1
2133:ROR:<=(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):459:i <= endRow |==> i != endRow
2134:ROR:<=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):459:i <= endRow |==> i < endRow
2135:ROR:<=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):459:i <= endRow |==> i == endRow
2136:ROR:<=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):459:i <= endRow |==> i > endRow
2137:ROR:<=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):459:i <= endRow |==> i >= endRow
2138:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):459:i <= endRow |==> false
2139:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):459:i <= endRow |==> true
2140:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):461:i - startRow |==> i % startRow
2141:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):461:i - startRow |==> i * startRow
2142:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):461:i - startRow |==> i + startRow
2143:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):461:i - startRow |==> i / startRow
2144:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):461:0 |==> 1
2145:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):461:0 |==> -1
2146:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn |==> endColumn % startColumn
2147:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn |==> endColumn * startColumn
2148:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn |==> endColumn + startColumn
2149:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn |==> endColumn / startColumn
2150:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:1 |==> 0
2151:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:1 |==> -1
2152:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn + 1 |==> (endColumn - startColumn) % 1
2153:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn + 1 |==> (endColumn - startColumn) * 1
2154:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn + 1 |==> endColumn - startColumn - 1
2155:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):462:endColumn - startColumn + 1 |==> (endColumn - startColumn) / 1
2156:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):460:System.arraycopy(data[i], startColumn, subMatrixData[i - startRow], 0, endColumn - startColumn + 1) |==> <NO-OP>
2157:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int,int,int,int):464:false |==> true
2158:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length |==> selectedRows.length % selectedColumns.length
2159:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length |==> selectedRows.length + selectedColumns.length
2160:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length |==> selectedRows.length - selectedColumns.length
2161:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length |==> selectedRows.length / selectedColumns.length
2162:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:0 |==> 1
2163:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:0 |==> -1
2164:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length != 0
2165:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length < 0
2166:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length <= 0
2167:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length > 0
2168:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length == 0 |==> selectedRows.length * selectedColumns.length >= 0
2169:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length == 0 |==> false
2170:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):480:selectedRows.length * selectedColumns.length == 0 |==> true
2171:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:0 |==> 1
2172:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:0 |==> -1
2173:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:i < selectedRows.length |==> i != selectedRows.length
2174:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:i < selectedRows.length |==> i <= selectedRows.length
2175:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:i < selectedRows.length |==> i == selectedRows.length
2176:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:i < selectedRows.length |==> i > selectedRows.length
2177:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:i < selectedRows.length |==> i >= selectedRows.length
2178:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:i < selectedRows.length |==> false
2179:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):487:i < selectedRows.length |==> true
2180:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:0 |==> 1
2181:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:0 |==> -1
2182:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:j < selectedColumns.length |==> j != selectedColumns.length
2183:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:j < selectedColumns.length |==> j <= selectedColumns.length
2184:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:j < selectedColumns.length |==> j == selectedColumns.length
2185:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:j < selectedColumns.length |==> j > selectedColumns.length
2186:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:j < selectedColumns.length |==> j >= selectedColumns.length
2187:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:j < selectedColumns.length |==> false
2188:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):490:j < selectedColumns.length |==> true
2189:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):491:subI[j] = dataSelectedI[selectedColumns[j]] |==> <NO-OP>
2190:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@getSubMatrix(int[],int[]):497:false |==> true
2191:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:0 |==> 1
2192:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:0 |==> -1
2193:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:row < 0 |==> row != 0
2194:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:row < 0 |==> row <= 0
2195:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:row < 0 |==> row == 0
2196:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:row < 0 |==> row > 0
2197:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:row < 0 |==> row >= 0
2198:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:row < 0 |==> false
2199:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:row < 0 |==> true
2200:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:0 |==> 1
2201:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:0 |==> -1
2202:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:column < 0 |==> column != 0
2203:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:column < 0 |==> column <= 0
2204:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:column < 0 |==> column == 0
2205:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:column < 0 |==> column > 0
2206:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:column < 0 |==> column >= 0
2207:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:column < 0 |==> false
2208:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:column < 0 |==> true
2209:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:(row < 0) || (column < 0) |==> (row < 0) != (column < 0)
2210:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:(row < 0) || (column < 0) |==> (row < 0) && (column < 0)
2211:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:(row < 0) || (column < 0) |==> (row < 0) == (column < 0)
2212:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:(row < 0) || (column < 0) |==> false
2213:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:(row < 0) || (column < 0) |==> (row < 0)
2214:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:(row < 0) || (column < 0) |==> (column < 0)
2215:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):529:(row < 0) || (column < 0) |==> true
2216:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:0 |==> 1
2217:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:0 |==> -1
2218:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:nRows == 0 |==> nRows != 0
2219:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:nRows == 0 |==> nRows < 0
2220:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:nRows == 0 |==> nRows <= 0
2221:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:nRows == 0 |==> nRows > 0
2222:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:nRows == 0 |==> nRows >= 0
2223:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:nRows == 0 |==> false
2224:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):534:nRows == 0 |==> true
2225:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):538:0 |==> 1
2226:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):538:0 |==> -1
2227:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:0 |==> 1
2228:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:0 |==> -1
2229:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:nCols == 0 |==> nCols != 0
2230:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:nCols == 0 |==> nCols < 0
2231:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:nCols == 0 |==> nCols <= 0
2232:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:nCols == 0 |==> nCols > 0
2233:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:nCols == 0 |==> nCols >= 0
2234:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:nCols == 0 |==> false
2235:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):539:nCols == 0 |==> true
2236:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:1 |==> 0
2237:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:1 |==> -1
2238:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:r < nRows |==> r != nRows
2239:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:r < nRows |==> r <= nRows
2240:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:r < nRows |==> r == nRows
2241:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:r < nRows |==> r > nRows
2242:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:r < nRows |==> r >= nRows
2243:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:r < nRows |==> false
2244:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):543:r < nRows |==> true
2245:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):544:subMatrix[r].length != nCols |==> subMatrix[r].length < nCols
2246:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):544:subMatrix[r].length != nCols |==> subMatrix[r].length <= nCols
2247:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):544:subMatrix[r].length != nCols |==> subMatrix[r].length == nCols
2248:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):544:subMatrix[r].length != nCols |==> subMatrix[r].length > nCols
2249:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):544:subMatrix[r].length != nCols |==> subMatrix[r].length >= nCols
2250:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):544:subMatrix[r].length != nCols |==> false
2251:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):544:subMatrix[r].length != nCols |==> true
2252:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):549:data == null |==> data != null
2253:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):549:data == null |==> false
2254:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):549:data == null |==> true
2255:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:0 |==> 1
2256:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:0 |==> -1
2257:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:row > 0 |==> row != 0
2258:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:row > 0 |==> row < 0
2259:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:row > 0 |==> row <= 0
2260:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:row > 0 |==> row == 0
2261:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:row > 0 |==> row >= 0
2262:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:row > 0 |==> false
2263:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:row > 0 |==> true
2264:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:0 |==> 1
2265:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:0 |==> -1
2266:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:column > 0 |==> column != 0
2267:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:column > 0 |==> column < 0
2268:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:column > 0 |==> column <= 0
2269:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:column > 0 |==> column == 0
2270:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:column > 0 |==> column >= 0
2271:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:column > 0 |==> false
2272:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:column > 0 |==> true
2273:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:(row > 0) || (column > 0) |==> (row > 0) != (column > 0)
2274:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:(row > 0) || (column > 0) |==> (row > 0) && (column > 0)
2275:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:(row > 0) || (column > 0) |==> (row > 0) == (column > 0)
2276:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:(row > 0) || (column > 0) |==> false
2277:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:(row > 0) || (column > 0) |==> (row > 0)
2278:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:(row > 0) || (column > 0) |==> (column > 0)
2279:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):550:(row > 0) || (column > 0) |==> true
2280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):552:data = new double[nRows][nCols] |==> <NO-OP>
2281:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):553:0 |==> 1
2282:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):553:0 |==> -1
2283:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):553:0 |==> 1
2284:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):553:0 |==> -1
2285:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):553:System.arraycopy(subMatrix, 0, data, 0, subMatrix.length) |==> <NO-OP>
2286:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:nRows + row |==> nRows % row
2287:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:nRows + row |==> nRows * row
2288:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:nRows + row |==> nRows - row
2289:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:nRows + row |==> nRows / row
2290:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:(nRows + row) > this.getRowDimension() |==> (nRows + row) != this.getRowDimension()
2291:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:(nRows + row) > this.getRowDimension() |==> (nRows + row) < this.getRowDimension()
2292:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:(nRows + row) > this.getRowDimension() |==> (nRows + row) <= this.getRowDimension()
2293:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:(nRows + row) > this.getRowDimension() |==> (nRows + row) == this.getRowDimension()
2294:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:(nRows + row) > this.getRowDimension() |==> (nRows + row) >= this.getRowDimension()
2295:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:(nRows + row) > this.getRowDimension() |==> false
2296:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:(nRows + row) > this.getRowDimension() |==> true
2297:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column |==> nCols % column
2298:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column |==> nCols * column
2299:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column |==> nCols - column
2300:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column |==> nCols / column
2301:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column > this.getColumnDimension() |==> nCols + column != this.getColumnDimension()
2302:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column > this.getColumnDimension() |==> nCols + column < this.getColumnDimension()
2303:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column > this.getColumnDimension() |==> nCols + column <= this.getColumnDimension()
2304:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column > this.getColumnDimension() |==> nCols + column == this.getColumnDimension()
2305:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column > this.getColumnDimension() |==> nCols + column >= this.getColumnDimension()
2306:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column > this.getColumnDimension() |==> false
2307:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:nCols + column > this.getColumnDimension() |==> true
2308:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension()) != (nCols + column > this.getColumnDimension())
2309:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension()) && (nCols + column > this.getColumnDimension())
2310:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension()) == (nCols + column > this.getColumnDimension())
2311:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> false
2312:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> ((nRows + row) > this.getRowDimension())
2313:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):556:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> (nCols + column > this.getColumnDimension())
2314:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):555:((nRows + row) > this.getRowDimension()) || (nCols + column > this.getColumnDimension()) |==> true
2315:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:0 |==> 1
2316:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:0 |==> -1
2317:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:i < nRows |==> i != nRows
2318:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:i < nRows |==> i <= nRows
2319:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:i < nRows |==> i == nRows
2320:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:i < nRows |==> i > nRows
2321:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:i < nRows |==> i >= nRows
2322:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:i < nRows |==> false
2323:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):559:i < nRows |==> true
2324:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):560:0 |==> 1
2325:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):560:0 |==> -1
2326:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):560:row + i |==> row % i
2327:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):560:row + i |==> row * i
2328:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):560:row + i |==> row - i
2329:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):560:row + i |==> row / i
2330:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):560:System.arraycopy(subMatrix[i], 0, data[row + i], column, nCols) |==> <NO-OP>
2331:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@setSubMatrix(double[][],int,int):562:lu = null |==> <NO-OP>
2332:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):574:0 |==> 1
2333:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):574:0 |==> -1
2334:COR:isValidCoordinate(row, 0):TRUE:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):574:isValidCoordinate(row, 0) |==> false
2335:COR:isValidCoordinate(row, 0):FALSE:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):574:isValidCoordinate(row, 0) |==> true
2336:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):578:1 |==> 0
2337:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):578:1 |==> -1
2338:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):579:0 |==> 1
2339:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):579:0 |==> -1
2340:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):579:0 |==> 1
2341:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):579:0 |==> -1
2342:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):579:0 |==> 1
2343:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):579:0 |==> -1
2344:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):579:System.arraycopy(data[row], 0, out[0], 0, ncols) |==> <NO-OP>
2345:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@getRowMatrix(int):580:false |==> true
2346:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):592:0 |==> 1
2347:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):592:0 |==> -1
2348:COR:isValidCoordinate(0, column):TRUE:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):592:isValidCoordinate(0, column) |==> false
2349:COR:isValidCoordinate(0, column):FALSE:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):592:isValidCoordinate(0, column) |==> true
2350:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):596:1 |==> 0
2351:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):596:1 |==> -1
2352:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:0 |==> 1
2353:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:0 |==> -1
2354:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:row < nRows |==> row != nRows
2355:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:row < nRows |==> row <= nRows
2356:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:row < nRows |==> row == nRows
2357:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:row < nRows |==> row > nRows
2358:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:row < nRows |==> row >= nRows
2359:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:row < nRows |==> false
2360:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):597:row < nRows |==> true
2361:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):598:0 |==> 1
2362:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):598:0 |==> -1
2363:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):598:out[row][0] = data[row][column] |==> <NO-OP>
2364:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@getColumnMatrix(int):600:false |==> true
2365:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):614:0 |==> 1
2366:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):614:0 |==> -1
2367:COR:isValidCoordinate(row, 0):TRUE:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):614:isValidCoordinate(row, 0) |==> false
2368:COR:isValidCoordinate(row, 0):FALSE:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):614:isValidCoordinate(row, 0) |==> true
2369:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):619:0 |==> 1
2370:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):619:0 |==> -1
2371:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):619:0 |==> 1
2372:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):619:0 |==> -1
2373:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getRow(int):619:System.arraycopy(data[row], 0, out, 0, ncols) |==> <NO-OP>
2374:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):634:0 |==> 1
2375:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):634:0 |==> -1
2376:COR:isValidCoordinate(0, col):TRUE:org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):634:isValidCoordinate(0, col) |==> false
2377:COR:isValidCoordinate(0, col):FALSE:org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):634:isValidCoordinate(0, col) |==> true
2378:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:0 |==> 1
2379:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:0 |==> -1
2380:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:row < nRows |==> row != nRows
2381:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:row < nRows |==> row <= nRows
2382:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:row < nRows |==> row == nRows
2383:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:row < nRows |==> row > nRows
2384:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:row < nRows |==> row >= nRows
2385:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:row < nRows |==> false
2386:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):639:row < nRows |==> true
2387:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getColumn(int):640:out[row] = data[row][col] |==> <NO-OP>
2388:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@transpose():678:0 |==> 1
2389:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@transpose():678:0 |==> -1
2390:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():678:row < nRows |==> row != nRows
2391:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():678:row < nRows |==> row <= nRows
2392:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():678:row < nRows |==> row == nRows
2393:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():678:row < nRows |==> row > nRows
2394:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():678:row < nRows |==> row >= nRows
2395:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():678:row < nRows |==> false
2396:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():678:row < nRows |==> true
2397:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@transpose():680:0 |==> 1
2398:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@transpose():680:0 |==> -1
2399:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():680:col < nCols |==> col != nCols
2400:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():680:col < nCols |==> col <= nCols
2401:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():680:col < nCols |==> col == nCols
2402:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():680:col < nCols |==> col > nCols
2403:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():680:col < nCols |==> col >= nCols
2404:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():680:col < nCols |==> false
2405:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@transpose():680:col < nCols |==> true
2406:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@transpose():681:outData[col][row] = dataRow[col] |==> <NO-OP>
2407:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@transpose():684:false |==> true
2408:COR:isSquare():TRUE:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():702:isSquare() |==> false
2409:COR:isSquare():FALSE:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():702:isSquare() |==> true
2410:COR:isSingular():TRUE:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():705:isSingular() |==> false
2411:COR:isSingular():FALSE:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():705:isSingular() |==> true
2412:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():706:0.0 |==> 1.0
2413:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():706:0.0 |==> -1.0
2414:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:0 |==> 1
2415:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:0 |==> -1
2416:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:i < this.getRowDimension() |==> i != this.getRowDimension()
2417:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:i < this.getRowDimension() |==> i <= this.getRowDimension()
2418:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:i < this.getRowDimension() |==> i == this.getRowDimension()
2419:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:i < this.getRowDimension() |==> i > this.getRowDimension()
2420:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:i < this.getRowDimension() |==> i >= this.getRowDimension()
2421:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:i < this.getRowDimension() |==> false
2422:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():709:i < this.getRowDimension() |==> true
2423:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getDeterminant():710:det *= lu[i][i] |==> <NO-OP>
2424:ROR:==(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isSquare():720:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() != this.getRowDimension()
2425:ROR:==(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@isSquare():720:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() < this.getRowDimension()
2426:ROR:==(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isSquare():720:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() <= this.getRowDimension()
2427:ROR:==(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@isSquare():720:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() > this.getRowDimension()
2428:ROR:==(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isSquare():720:this.getColumnDimension() == this.getRowDimension() |==> this.getColumnDimension() >= this.getRowDimension()
2429:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isSquare():720:this.getColumnDimension() == this.getRowDimension() |==> false
2430:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isSquare():720:this.getColumnDimension() == this.getRowDimension() |==> true
2431:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@isSingular():727:lu == null |==> lu != null
2432:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@isSingular():727:lu == null |==> false
2433:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@isSingular():727:lu == null |==> true
2434:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@isSingular():729:luDecompose() |==> <NO-OP>
2435:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@isSingular():730:false |==> true
2436:LVR:TRUE:FALSE:org.apache.commons.math.linear.RealMatrixImpl@isSingular():732:true |==> false
2437:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@isSingular():735:false |==> true
2438:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getColumnDimension():750:0 |==> 1
2439:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getColumnDimension():750:0 |==> -1
2440:COR:isSquare():TRUE:org.apache.commons.math.linear.RealMatrixImpl@getTrace():758:isSquare() |==> false
2441:COR:isSquare():FALSE:org.apache.commons.math.linear.RealMatrixImpl@getTrace():758:isSquare() |==> true
2442:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getTrace():761:0 |==> 1
2443:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getTrace():761:0 |==> -1
2444:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getTrace():761:0 |==> 1
2445:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getTrace():761:0 |==> -1
2446:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:1 |==> 0
2447:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:1 |==> -1
2448:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:i < this.getRowDimension() |==> i != this.getRowDimension()
2449:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:i < this.getRowDimension() |==> i <= this.getRowDimension()
2450:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:i < this.getRowDimension() |==> i == this.getRowDimension()
2451:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:i < this.getRowDimension() |==> i > this.getRowDimension()
2452:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:i < this.getRowDimension() |==> i >= this.getRowDimension()
2453:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:i < this.getRowDimension() |==> false
2454:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@getTrace():762:i < this.getRowDimension() |==> true
2455:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getTrace():763:trace += data[i][i] |==> <NO-OP>
2456:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):776:v.length != nCols |==> v.length < nCols
2457:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):776:v.length != nCols |==> v.length <= nCols
2458:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):776:v.length != nCols |==> v.length == nCols
2459:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):776:v.length != nCols |==> v.length > nCols
2460:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):776:v.length != nCols |==> v.length >= nCols
2461:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):776:v.length != nCols |==> false
2462:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):776:v.length != nCols |==> true
2463:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:0 |==> 1
2464:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:0 |==> -1
2465:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:row < nRows |==> row != nRows
2466:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:row < nRows |==> row <= nRows
2467:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:row < nRows |==> row == nRows
2468:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:row < nRows |==> row > nRows
2469:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:row < nRows |==> row >= nRows
2470:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:row < nRows |==> false
2471:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):780:row < nRows |==> true
2472:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):782:0 |==> 1
2473:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):782:0 |==> -1
2474:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:0 |==> 1
2475:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:0 |==> -1
2476:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:i < nCols |==> i != nCols
2477:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:i < nCols |==> i <= nCols
2478:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:i < nCols |==> i == nCols
2479:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:i < nCols |==> i > nCols
2480:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:i < nCols |==> i >= nCols
2481:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:i < nCols |==> false
2482:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):783:i < nCols |==> true
2483:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):784:dataRow[i] * v[i] |==> dataRow[i] % v[i]
2484:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):784:dataRow[i] * v[i] |==> dataRow[i] + v[i]
2485:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):784:dataRow[i] * v[i] |==> dataRow[i] - v[i]
2486:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):784:dataRow[i] * v[i] |==> dataRow[i] / v[i]
2487:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):784:sum += dataRow[i] * v[i] |==> <NO-OP>
2488:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@operate(double[]):786:out[row] = sum |==> <NO-OP>
2489:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):798:v.length != nRows |==> v.length < nRows
2490:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):798:v.length != nRows |==> v.length <= nRows
2491:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):798:v.length != nRows |==> v.length == nRows
2492:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):798:v.length != nRows |==> v.length > nRows
2493:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):798:v.length != nRows |==> v.length >= nRows
2494:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):798:v.length != nRows |==> false
2495:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):798:v.length != nRows |==> true
2496:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:0 |==> 1
2497:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:0 |==> -1
2498:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:col < nCols |==> col != nCols
2499:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:col < nCols |==> col <= nCols
2500:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:col < nCols |==> col == nCols
2501:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:col < nCols |==> col > nCols
2502:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:col < nCols |==> col >= nCols
2503:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:col < nCols |==> false
2504:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):803:col < nCols |==> true
2505:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):804:0 |==> 1
2506:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):804:0 |==> -1
2507:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:0 |==> 1
2508:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:0 |==> -1
2509:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:i < nRows |==> i != nRows
2510:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:i < nRows |==> i <= nRows
2511:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:i < nRows |==> i == nRows
2512:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:i < nRows |==> i > nRows
2513:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:i < nRows |==> i >= nRows
2514:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:i < nRows |==> false
2515:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):805:i < nRows |==> true
2516:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):806:data[i][col] * v[i] |==> data[i][col] % v[i]
2517:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):806:data[i][col] * v[i] |==> data[i][col] + v[i]
2518:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):806:data[i][col] * v[i] |==> data[i][col] - v[i]
2519:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):806:data[i][col] * v[i] |==> data[i][col] / v[i]
2520:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):806:sum += data[i][col] * v[i] |==> <NO-OP>
2521:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@preMultiply(double[]):808:out[col] = sum |==> <NO-OP>
2522:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):826:b.length != nRows |==> b.length < nRows
2523:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):826:b.length != nRows |==> b.length <= nRows
2524:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):826:b.length != nRows |==> b.length == nRows
2525:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):826:b.length != nRows |==> b.length > nRows
2526:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):826:b.length != nRows |==> b.length >= nRows
2527:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):826:b.length != nRows |==> false
2528:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):826:b.length != nRows |==> true
2529:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:0 |==> 1
2530:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:0 |==> -1
2531:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:row < nRows |==> row != nRows
2532:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:row < nRows |==> row <= nRows
2533:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:row < nRows |==> row == nRows
2534:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:row < nRows |==> row > nRows
2535:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:row < nRows |==> row >= nRows
2536:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:row < nRows |==> false
2537:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):832:row < nRows |==> true
2538:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):833:0 |==> 1
2539:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):833:0 |==> -1
2540:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@solve(double[]):833:out[row] = solution[row][0] |==> <NO-OP>
2541:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):850:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() < this.getRowDimension()
2542:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):850:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() <= this.getRowDimension()
2543:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):850:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() == this.getRowDimension()
2544:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):850:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() > this.getRowDimension()
2545:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):850:b.getRowDimension() != this.getRowDimension() |==> b.getRowDimension() >= this.getRowDimension()
2546:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):850:b.getRowDimension() != this.getRowDimension() |==> false
2547:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):850:b.getRowDimension() != this.getRowDimension() |==> true
2548:COR:this.isSquare():TRUE:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):853:this.isSquare() |==> false
2549:COR:this.isSquare():FALSE:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):853:this.isSquare() |==> true
2550:COR:this.isSingular():TRUE:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):856:this.isSingular() |==> false
2551:COR:this.isSingular():FALSE:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):856:this.isSingular() |==> true
2552:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:0 |==> 1
2553:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:0 |==> -1
2554:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:row < nRowB |==> row != nRowB
2555:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:row < nRowB |==> row <= nRowB
2556:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:row < nRowB |==> row == nRowB
2557:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:row < nRowB |==> row > nRowB
2558:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:row < nRowB |==> row >= nRowB
2559:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:row < nRowB |==> false
2560:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):866:row < nRowB |==> true
2561:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:0 |==> 1
2562:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:0 |==> -1
2563:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:col < nColB |==> col != nColB
2564:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:col < nColB |==> col <= nColB
2565:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:col < nColB |==> col == nColB
2566:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:col < nColB |==> col > nColB
2567:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:col < nColB |==> col >= nColB
2568:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:col < nColB |==> false
2569:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):868:col < nColB |==> true
2570:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):869:bpRow[col] = b.getEntry(permutation[row], col) |==> <NO-OP>
2571:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:0 |==> 1
2572:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:0 |==> -1
2573:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:col < nCol |==> col != nCol
2574:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:col < nCol |==> col <= nCol
2575:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:col < nCol |==> col == nCol
2576:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:col < nCol |==> col > nCol
2577:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:col < nCol |==> col >= nCol
2578:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:col < nCol |==> false
2579:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):874:col < nCol |==> true
2580:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:1 |==> 0
2581:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:1 |==> -1
2582:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:col + 1 |==> col % 1
2583:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:col + 1 |==> col * 1
2584:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:col + 1 |==> col - 1
2585:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:col + 1 |==> col / 1
2586:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:i < nCol |==> i != nCol
2587:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:i < nCol |==> i <= nCol
2588:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:i < nCol |==> i == nCol
2589:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:i < nCol |==> i > nCol
2590:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:i < nCol |==> i >= nCol
2591:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:i < nCol |==> false
2592:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):875:i < nCol |==> true
2593:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:0 |==> 1
2594:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:0 |==> -1
2595:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:j < nColB |==> j != nColB
2596:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:j < nColB |==> j <= nColB
2597:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:j < nColB |==> j == nColB
2598:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:j < nColB |==> j > nColB
2599:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:j < nColB |==> j >= nColB
2600:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:j < nColB |==> false
2601:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):878:j < nColB |==> true
2602:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):879:bp[col][j] * luI[col] |==> bp[col][j] % luI[col]
2603:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):879:bp[col][j] * luI[col] |==> bp[col][j] + luI[col]
2604:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):879:bp[col][j] * luI[col] |==> bp[col][j] - luI[col]
2605:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):879:bp[col][j] * luI[col] |==> bp[col][j] / luI[col]
2606:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):879:bpI[j] -= bp[col][j] * luI[col] |==> <NO-OP>
2607:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:1 |==> 0
2608:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:1 |==> -1
2609:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:nCol - 1 |==> nCol % 1
2610:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:nCol - 1 |==> nCol * 1
2611:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:nCol - 1 |==> nCol + 1
2612:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:nCol - 1 |==> nCol / 1
2613:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:0 |==> 1
2614:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:0 |==> -1
2615:ROR:>=(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:col >= 0 |==> col != 0
2616:ROR:>=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:col >= 0 |==> col < 0
2617:ROR:>=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:col >= 0 |==> col <= 0
2618:ROR:>=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:col >= 0 |==> col == 0
2619:ROR:>=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:col >= 0 |==> col > 0
2620:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:col >= 0 |==> false
2621:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):885:col >= 0 |==> true
2622:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:0 |==> 1
2623:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:0 |==> -1
2624:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:j < nColB |==> j != nColB
2625:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:j < nColB |==> j <= nColB
2626:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:j < nColB |==> j == nColB
2627:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:j < nColB |==> j > nColB
2628:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:j < nColB |==> j >= nColB
2629:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:j < nColB |==> false
2630:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):888:j < nColB |==> true
2631:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):889:bpCol[j] /= luDiag |==> <NO-OP>
2632:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:0 |==> 1
2633:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:0 |==> -1
2634:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:i < col |==> i != col
2635:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:i < col |==> i <= col
2636:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:i < col |==> i == col
2637:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:i < col |==> i > col
2638:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:i < col |==> i >= col
2639:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:i < col |==> false
2640:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):891:i < col |==> true
2641:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:0 |==> 1
2642:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:0 |==> -1
2643:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:j < nColB |==> j != nColB
2644:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:j < nColB |==> j <= nColB
2645:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:j < nColB |==> j == nColB
2646:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:j < nColB |==> j > nColB
2647:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:j < nColB |==> j >= nColB
2648:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:j < nColB |==> false
2649:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):894:j < nColB |==> true
2650:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):895:bp[col][j] * luI[col] |==> bp[col][j] % luI[col]
2651:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):895:bp[col][j] * luI[col] |==> bp[col][j] + luI[col]
2652:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):895:bp[col][j] * luI[col] |==> bp[col][j] - luI[col]
2653:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):895:bp[col][j] * luI[col] |==> bp[col][j] / luI[col]
2654:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):895:bpI[j] -= bp[col][j] * luI[col] |==> <NO-OP>
2655:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@solve(org.apache.commons.math.linear.RealMatrix):900:false |==> true
2656:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():926:nRows != nCols |==> nRows < nCols
2657:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():926:nRows != nCols |==> nRows <= nCols
2658:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():926:nRows != nCols |==> nRows == nCols
2659:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():926:nRows != nCols |==> nRows > nCols
2660:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():926:nRows != nCols |==> nRows >= nCols
2661:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():926:nRows != nCols |==> false
2662:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():926:nRows != nCols |==> true
2663:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():929:lu = getData() |==> <NO-OP>
2664:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():932:permutation = new int[nRows] |==> <NO-OP>
2665:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:0 |==> 1
2666:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:0 |==> -1
2667:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:row < nRows |==> row != nRows
2668:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:row < nRows |==> row <= nRows
2669:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:row < nRows |==> row == nRows
2670:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:row < nRows |==> row > nRows
2671:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:row < nRows |==> row >= nRows
2672:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:row < nRows |==> false
2673:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():933:row < nRows |==> true
2674:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():934:permutation[row] = row |==> <NO-OP>
2675:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():936:1 |==> 0
2676:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():936:1 |==> -1
2677:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():936:parity = 1 |==> <NO-OP>
2678:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:0 |==> 1
2679:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:0 |==> -1
2680:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:col < nCols |==> col != nCols
2681:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:col < nCols |==> col <= nCols
2682:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:col < nCols |==> col == nCols
2683:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:col < nCols |==> col > nCols
2684:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:col < nCols |==> col >= nCols
2685:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:col < nCols |==> false
2686:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():939:col < nCols |==> true
2687:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():941:0 |==> 1
2688:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():941:0 |==> -1
2689:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:0 |==> 1
2690:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:0 |==> -1
2691:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:row < col |==> row != col
2692:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:row < col |==> row <= col
2693:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:row < col |==> row == col
2694:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:row < col |==> row > col
2695:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:row < col |==> row >= col
2696:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:row < col |==> false
2697:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():944:row < col |==> true
2698:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():946:sum = luRow[col] |==> <NO-OP>
2699:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:0 |==> 1
2700:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:0 |==> -1
2701:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:i < row |==> i != row
2702:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:i < row |==> i <= row
2703:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:i < row |==> i == row
2704:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:i < row |==> i > row
2705:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:i < row |==> i >= row
2706:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:i < row |==> false
2707:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():947:i < row |==> true
2708:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():948:luRow[i] * lu[i][col] |==> luRow[i] % lu[i][col]
2709:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():948:luRow[i] * lu[i][col] |==> luRow[i] + lu[i][col]
2710:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():948:luRow[i] * lu[i][col] |==> luRow[i] - lu[i][col]
2711:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():948:luRow[i] * lu[i][col] |==> luRow[i] / lu[i][col]
2712:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():948:sum -= luRow[i] * lu[i][col] |==> <NO-OP>
2713:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():950:luRow[col] = sum |==> <NO-OP>
2714:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():955:0.0 |==> 1.0
2715:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():955:0.0 |==> -1.0
2716:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():956:row < nRows |==> row != nRows
2717:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():956:row < nRows |==> row <= nRows
2718:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():956:row < nRows |==> row == nRows
2719:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():956:row < nRows |==> row > nRows
2720:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():956:row < nRows |==> row >= nRows
2721:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():956:row < nRows |==> false
2722:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():956:row < nRows |==> true
2723:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():958:sum = luRow[col] |==> <NO-OP>
2724:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:0 |==> 1
2725:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:0 |==> -1
2726:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:i < col |==> i != col
2727:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:i < col |==> i <= col
2728:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:i < col |==> i == col
2729:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:i < col |==> i > col
2730:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:i < col |==> i >= col
2731:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:i < col |==> false
2732:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():959:i < col |==> true
2733:AOR:*(double,double):%(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():960:luRow[i] * lu[i][col] |==> luRow[i] % lu[i][col]
2734:AOR:*(double,double):+(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():960:luRow[i] * lu[i][col] |==> luRow[i] + lu[i][col]
2735:AOR:*(double,double):-(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():960:luRow[i] * lu[i][col] |==> luRow[i] - lu[i][col]
2736:AOR:*(double,double):/(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():960:luRow[i] * lu[i][col] |==> luRow[i] / lu[i][col]
2737:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():960:sum -= luRow[i] * lu[i][col] |==> <NO-OP>
2738:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():962:luRow[col] = sum |==> <NO-OP>
2739:ROR:>(double,double):!=(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():965:Math.abs(sum) > largest |==> Math.abs(sum) != largest
2740:ROR:>(double,double):<(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():965:Math.abs(sum) > largest |==> Math.abs(sum) < largest
2741:ROR:>(double,double):<=(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():965:Math.abs(sum) > largest |==> Math.abs(sum) <= largest
2742:ROR:>(double,double):==(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():965:Math.abs(sum) > largest |==> Math.abs(sum) == largest
2743:ROR:>(double,double):>=(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():965:Math.abs(sum) > largest |==> Math.abs(sum) >= largest
2744:ROR:>(double,double):FALSE(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():965:Math.abs(sum) > largest |==> false
2745:ROR:>(double,double):TRUE(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():965:Math.abs(sum) > largest |==> true
2746:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():966:largest = Math.abs(sum) |==> <NO-OP>
2747:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():967:max = row |==> <NO-OP>
2748:ROR:<(double,double):!=(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():972:Math.abs(lu[max][col]) < TOO_SMALL |==> Math.abs(lu[max][col]) != TOO_SMALL
2749:ROR:<(double,double):<=(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():972:Math.abs(lu[max][col]) < TOO_SMALL |==> Math.abs(lu[max][col]) <= TOO_SMALL
2750:ROR:<(double,double):==(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():972:Math.abs(lu[max][col]) < TOO_SMALL |==> Math.abs(lu[max][col]) == TOO_SMALL
2751:ROR:<(double,double):>(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():972:Math.abs(lu[max][col]) < TOO_SMALL |==> Math.abs(lu[max][col]) > TOO_SMALL
2752:ROR:<(double,double):>=(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():972:Math.abs(lu[max][col]) < TOO_SMALL |==> Math.abs(lu[max][col]) >= TOO_SMALL
2753:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():972:Math.abs(lu[max][col]) < TOO_SMALL |==> false
2754:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():972:Math.abs(lu[max][col]) < TOO_SMALL |==> true
2755:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():973:lu = null |==> <NO-OP>
2756:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():978:max != col |==> max < col
2757:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():978:max != col |==> max <= col
2758:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():978:max != col |==> max == col
2759:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():978:max != col |==> max > col
2760:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():978:max != col |==> max >= col
2761:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():978:max != col |==> false
2762:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():978:max != col |==> true
2763:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():979:0 |==> 1
2764:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():979:0 |==> -1
2765:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:0 |==> 1
2766:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:0 |==> -1
2767:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:i < nCols |==> i != nCols
2768:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:i < nCols |==> i <= nCols
2769:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:i < nCols |==> i == nCols
2770:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:i < nCols |==> i > nCols
2771:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:i < nCols |==> i >= nCols
2772:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:i < nCols |==> false
2773:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():980:i < nCols |==> true
2774:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():981:tmp = lu[max][i] |==> <NO-OP>
2775:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():982:lu[max][i] = lu[col][i] |==> <NO-OP>
2776:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():983:lu[col][i] = tmp |==> <NO-OP>
2777:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():986:permutation[max] = permutation[col] |==> <NO-OP>
2778:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():987:permutation[col] = temp |==> <NO-OP>
2779:ORU:-(int):+(int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():988:-parity |==> +parity
2780:ORU:-(int):~(int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():988:-parity |==> ~parity
2781:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():988:parity = -parity |==> <NO-OP>
2782:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:1 |==> 0
2783:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:1 |==> -1
2784:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:col + 1 |==> col % 1
2785:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:col + 1 |==> col * 1
2786:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:col + 1 |==> col - 1
2787:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:col + 1 |==> col / 1
2788:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:row < nRows |==> row != nRows
2789:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:row < nRows |==> row <= nRows
2790:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:row < nRows |==> row == nRows
2791:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:row < nRows |==> row > nRows
2792:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:row < nRows |==> row >= nRows
2793:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:row < nRows |==> false
2794:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@luDecompose():993:row < nRows |==> true
2795:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@luDecompose():994:lu[row][col] /= luDiag |==> <NO-OP>
2796:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@toString():1005:res.append("RealMatrixImpl{") |==> <NO-OP>
2797:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@toString():1006:data != null |==> data == null
2798:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@toString():1006:data != null |==> false
2799:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@toString():1006:data != null |==> true
2800:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@toString():1007:0 |==> 1
2801:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@toString():1007:0 |==> -1
2802:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1007:i < data.length |==> i != data.length
2803:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1007:i < data.length |==> i <= data.length
2804:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1007:i < data.length |==> i == data.length
2805:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1007:i < data.length |==> i > data.length
2806:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1007:i < data.length |==> i >= data.length
2807:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1007:i < data.length |==> false
2808:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1007:i < data.length |==> true
2809:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@toString():1008:0 |==> 1
2810:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@toString():1008:0 |==> -1
2811:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1008:i > 0 |==> i != 0
2812:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1008:i > 0 |==> i < 0
2813:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1008:i > 0 |==> i <= 0
2814:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1008:i > 0 |==> i == 0
2815:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1008:i > 0 |==> i >= 0
2816:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1008:i > 0 |==> false
2817:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1008:i > 0 |==> true
2818:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@toString():1009:res.append(",") |==> <NO-OP>
2819:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@toString():1011:res.append("{") |==> <NO-OP>
2820:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@toString():1012:0 |==> 1
2821:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@toString():1012:0 |==> -1
2822:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@toString():1012:0 |==> 1
2823:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@toString():1012:0 |==> -1
2824:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1012:j < data[0].length |==> j != data[0].length
2825:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1012:j < data[0].length |==> j <= data[0].length
2826:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1012:j < data[0].length |==> j == data[0].length
2827:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1012:j < data[0].length |==> j > data[0].length
2828:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1012:j < data[0].length |==> j >= data[0].length
2829:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1012:j < data[0].length |==> false
2830:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1012:j < data[0].length |==> true
2831:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@toString():1013:0 |==> 1
2832:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@toString():1013:0 |==> -1
2833:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1013:j > 0 |==> j != 0
2834:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1013:j > 0 |==> j < 0
2835:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1013:j > 0 |==> j <= 0
2836:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1013:j > 0 |==> j == 0
2837:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1013:j > 0 |==> j >= 0
2838:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1013:j > 0 |==> false
2839:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@toString():1013:j > 0 |==> true
2840:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@toString():1014:res.append(",") |==> <NO-OP>
2841:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@toString():1016:res.append(data[i][j]) |==> <NO-OP>
2842:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@toString():1018:res.append("}") |==> <NO-OP>
2843:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@toString():1021:res.append("}") |==> <NO-OP>
2844:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1035:object == this |==> object != this
2845:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1035:object == this |==> false
2846:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1035:object == this |==> true
2847:LVR:TRUE:FALSE:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1036:true |==> false
2848:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1038:false |==> true
2849:ROR:==(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1038:object instanceof RealMatrixImpl == false |==> object instanceof RealMatrixImpl != false
2850:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1038:object instanceof RealMatrixImpl == false |==> false
2851:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1038:object instanceof RealMatrixImpl == false |==> object instanceof RealMatrixImpl
2852:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1038:object instanceof RealMatrixImpl == false |==> false
2853:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1038:object instanceof RealMatrixImpl == false |==> true
2854:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1039:false |==> true
2855:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols |==> m.getColumnDimension() < nCols
2856:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols |==> m.getColumnDimension() <= nCols
2857:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols |==> m.getColumnDimension() == nCols
2858:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols |==> m.getColumnDimension() > nCols
2859:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols |==> m.getColumnDimension() >= nCols
2860:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols |==> false
2861:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols |==> true
2862:ROR:!=(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getRowDimension() != nRows |==> m.getRowDimension() < nRows
2863:ROR:!=(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getRowDimension() != nRows |==> m.getRowDimension() <= nRows
2864:ROR:!=(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getRowDimension() != nRows |==> m.getRowDimension() == nRows
2865:ROR:!=(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getRowDimension() != nRows |==> m.getRowDimension() > nRows
2866:ROR:!=(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getRowDimension() != nRows |==> m.getRowDimension() >= nRows
2867:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getRowDimension() != nRows |==> false
2868:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getRowDimension() != nRows |==> true
2869:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols != (m.getRowDimension() != nRows)
2870:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols && m.getRowDimension() != nRows
2871:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols == (m.getRowDimension() != nRows)
2872:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> false
2873:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getColumnDimension() != nCols
2874:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> m.getRowDimension() != nRows
2875:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1044:m.getColumnDimension() != nCols || m.getRowDimension() != nRows |==> true
2876:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1045:false |==> true
2877:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:0 |==> 1
2878:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:0 |==> -1
2879:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:row < nRows |==> row != nRows
2880:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:row < nRows |==> row <= nRows
2881:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:row < nRows |==> row == nRows
2882:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:row < nRows |==> row > nRows
2883:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:row < nRows |==> row >= nRows
2884:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:row < nRows |==> false
2885:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1047:row < nRows |==> true
2886:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:0 |==> 1
2887:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:0 |==> -1
2888:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:col < nCols |==> col != nCols
2889:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:col < nCols |==> col <= nCols
2890:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:col < nCols |==> col == nCols
2891:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:col < nCols |==> col > nCols
2892:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:col < nCols |==> col >= nCols
2893:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:col < nCols |==> false
2894:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1049:col < nCols |==> true
2895:ROR:!=(long,long):<(long,long):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1050:Double.doubleToLongBits(dataRow[col]) != Double.doubleToLongBits(m.getEntry(row, col)) |==> Double.doubleToLongBits(dataRow[col]) < Double.doubleToLongBits(m.getEntry(row, col))
2896:ROR:!=(long,long):<=(long,long):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1050:Double.doubleToLongBits(dataRow[col]) != Double.doubleToLongBits(m.getEntry(row, col)) |==> Double.doubleToLongBits(dataRow[col]) <= Double.doubleToLongBits(m.getEntry(row, col))
2897:ROR:!=(long,long):==(long,long):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1050:Double.doubleToLongBits(dataRow[col]) != Double.doubleToLongBits(m.getEntry(row, col)) |==> Double.doubleToLongBits(dataRow[col]) == Double.doubleToLongBits(m.getEntry(row, col))
2898:ROR:!=(long,long):>(long,long):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1050:Double.doubleToLongBits(dataRow[col]) != Double.doubleToLongBits(m.getEntry(row, col)) |==> Double.doubleToLongBits(dataRow[col]) > Double.doubleToLongBits(m.getEntry(row, col))
2899:ROR:!=(long,long):>=(long,long):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1050:Double.doubleToLongBits(dataRow[col]) != Double.doubleToLongBits(m.getEntry(row, col)) |==> Double.doubleToLongBits(dataRow[col]) >= Double.doubleToLongBits(m.getEntry(row, col))
2900:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1050:Double.doubleToLongBits(dataRow[col]) != Double.doubleToLongBits(m.getEntry(row, col)) |==> false
2901:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1050:Double.doubleToLongBits(dataRow[col]) != Double.doubleToLongBits(m.getEntry(row, col)) |==> true
2902:LVR:FALSE:TRUE:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1052:false |==> true
2903:LVR:TRUE:FALSE:org.apache.commons.math.linear.RealMatrixImpl@equals(java.lang.Object):1056:true |==> false
2904:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1065:7 |==> 0
2905:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1065:7 |==> -7
2906:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:31 |==> 0
2907:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:31 |==> -31
2908:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 |==> ret % 31
2909:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 |==> ret + 31
2910:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 |==> ret - 31
2911:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 |==> ret / 31
2912:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 + nRows |==> ret * 31 % nRows
2913:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 + nRows |==> ret * 31 * nRows
2914:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 + nRows |==> ret * 31 - nRows
2915:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret * 31 + nRows |==> ret * 31 / nRows
2916:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1068:ret = ret * 31 + nRows |==> <NO-OP>
2917:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:31 |==> 0
2918:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:31 |==> -31
2919:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 |==> ret % 31
2920:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 |==> ret + 31
2921:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 |==> ret - 31
2922:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 |==> ret / 31
2923:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 + nCols |==> ret * 31 % nCols
2924:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 + nCols |==> ret * 31 * nCols
2925:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 + nCols |==> ret * 31 - nCols
2926:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret * 31 + nCols |==> ret * 31 / nCols
2927:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1069:ret = ret * 31 + nCols |==> <NO-OP>
2928:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:0 |==> 1
2929:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:0 |==> -1
2930:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:row < nRows |==> row != nRows
2931:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:row < nRows |==> row <= nRows
2932:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:row < nRows |==> row == nRows
2933:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:row < nRows |==> row > nRows
2934:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:row < nRows |==> row >= nRows
2935:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:row < nRows |==> false
2936:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1070:row < nRows |==> true
2937:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:0 |==> 1
2938:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:0 |==> -1
2939:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:col < nCols |==> col != nCols
2940:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:col < nCols |==> col <= nCols
2941:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:col < nCols |==> col == nCols
2942:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:col < nCols |==> col > nCols
2943:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:col < nCols |==> col >= nCols
2944:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:col < nCols |==> false
2945:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1072:col < nCols |==> true
2946:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:31 |==> 0
2947:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:31 |==> -31
2948:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 |==> ret % 31
2949:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 |==> ret + 31
2950:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 |==> ret - 31
2951:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 |==> ret / 31
2952:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 |==> 0
2953:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 |==> -11
2954:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:1 |==> 0
2955:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:1 |==> -1
2956:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:row + 1 |==> row % 1
2957:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:row + 1 |==> row * 1
2958:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:row + 1 |==> row - 1
2959:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:row + 1 |==> row / 1
2960:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) |==> 11 % (row + 1)
2961:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) |==> 11 + (row + 1)
2962:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) |==> 11 - (row + 1)
2963:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) |==> 11 / (row + 1)
2964:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:17 |==> 0
2965:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:17 |==> -17
2966:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:1 |==> 0
2967:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:1 |==> -1
2968:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:col + 1 |==> col % 1
2969:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:col + 1 |==> col * 1
2970:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:col + 1 |==> col - 1
2971:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:col + 1 |==> col / 1
2972:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:17 * (col + 1) |==> 17 % (col + 1)
2973:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:17 * (col + 1) |==> 17 + (col + 1)
2974:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:17 * (col + 1) |==> 17 - (col + 1)
2975:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:17 * (col + 1) |==> 17 / (col + 1)
2976:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) % (17 * (col + 1))
2977:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) * (17 * (col + 1))
2978:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) - 17 * (col + 1)
2979:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:11 * (row + 1) + 17 * (col + 1) |==> 11 * (row + 1) / (17 * (col + 1))
2980:AOR:*(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:(11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> (11 * (row + 1) + 17 * (col + 1)) % MathUtils.hash(dataRow[col])
2981:AOR:*(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:(11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> (11 * (row + 1) + 17 * (col + 1)) + MathUtils.hash(dataRow[col])
2982:AOR:*(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:(11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> (11 * (row + 1) + 17 * (col + 1)) - MathUtils.hash(dataRow[col])
2983:AOR:*(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:(11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> (11 * (row + 1) + 17 * (col + 1)) / MathUtils.hash(dataRow[col])
2984:AOR:+(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> ret * 31 % ((11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]))
2985:AOR:+(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> ret * 31 * ((11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]))
2986:AOR:+(int,int):-(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> ret * 31 - (11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col])
2987:AOR:+(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> ret * 31 / ((11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]))
2988:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@hashCode():1073:ret = ret * 31 + (11 * (row + 1) + 17 * (col + 1)) * MathUtils.hash(dataRow[col]) |==> <NO-OP>
2989:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@getLUMatrix():1110:lu == null |==> lu != null
2990:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@getLUMatrix():1110:lu == null |==> false
2991:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.linear.RealMatrixImpl@getLUMatrix():1110:lu == null |==> true
2992:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getLUMatrix():1111:luDecompose() |==> <NO-OP>
2993:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getPermutation():1130:0 |==> 1
2994:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getPermutation():1130:0 |==> -1
2995:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@getPermutation():1130:0 |==> 1
2996:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@getPermutation():1130:0 |==> -1
2997:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@getPermutation():1130:System.arraycopy(permutation, 0, out, 0, permutation.length) |==> <NO-OP>
2998:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:0 |==> 1
2999:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:0 |==> -1
3000:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:i < nRows |==> i != nRows
3001:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:i < nRows |==> i <= nRows
3002:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:i < nRows |==> i == nRows
3003:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:i < nRows |==> i > nRows
3004:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:i < nRows |==> i >= nRows
3005:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:i < nRows |==> false
3006:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@copyOut():1145:i < nRows |==> true
3007:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@copyOut():1146:0 |==> 1
3008:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@copyOut():1146:0 |==> -1
3009:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@copyOut():1146:0 |==> 1
3010:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@copyOut():1146:0 |==> -1
3011:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@copyOut():1146:System.arraycopy(data[i], 0, out[i], 0, data[i].length) |==> <NO-OP>
3012:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@copyIn(double[][]):1162:0 |==> 1
3013:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@copyIn(double[][]):1162:0 |==> -1
3014:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@copyIn(double[][]):1162:0 |==> 1
3015:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@copyIn(double[][]):1162:0 |==> -1
3016:STD:<CALL>:<NO-OP>:org.apache.commons.math.linear.RealMatrixImpl@copyIn(double[][]):1162:setSubMatrix(in, 0, 0) |==> <NO-OP>
3017:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:0 |==> 1
3018:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:0 |==> -1
3019:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 |==> row != 0
3020:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 |==> row <= 0
3021:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 |==> row == 0
3022:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 |==> row > 0
3023:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 |==> row >= 0
3024:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 |==> false
3025:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 |==> true
3026:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:1 |==> 0
3027:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:1 |==> -1
3028:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nRows - 1 |==> nRows % 1
3029:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nRows - 1 |==> nRows * 1
3030:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nRows - 1 |==> nRows + 1
3031:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nRows - 1 |==> nRows / 1
3032:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row > nRows - 1 |==> row != nRows - 1
3033:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row > nRows - 1 |==> row < nRows - 1
3034:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row > nRows - 1 |==> row <= nRows - 1
3035:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row > nRows - 1 |==> row == nRows - 1
3036:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row > nRows - 1 |==> row >= nRows - 1
3037:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row > nRows - 1 |==> false
3038:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row > nRows - 1 |==> true
3039:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 |==> row < 0 != row > nRows - 1
3040:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 |==> row < 0 && row > nRows - 1
3041:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 |==> row < 0 == row > nRows - 1
3042:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 |==> false
3043:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 |==> row < 0
3044:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 |==> row > nRows - 1
3045:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 |==> true
3046:LVR:0:POS:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:0 |==> 1
3047:LVR:0:NEG:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:0 |==> -1
3048:ROR:<(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col < 0 |==> col != 0
3049:ROR:<(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col < 0 |==> col <= 0
3050:ROR:<(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col < 0 |==> col == 0
3051:ROR:<(int,int):>(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col < 0 |==> col > 0
3052:ROR:<(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col < 0 |==> col >= 0
3053:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col < 0 |==> false
3054:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col < 0 |==> true
3055:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 |==> (row < 0 || row > nRows - 1) != col < 0
3056:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 |==> (row < 0 || row > nRows - 1) && col < 0
3057:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 |==> (row < 0 || row > nRows - 1) == col < 0
3058:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 |==> false
3059:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 |==> row < 0 || row > nRows - 1
3060:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 |==> col < 0
3061:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 |==> true
3062:LVR:POS:0:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:1 |==> 0
3063:LVR:POS:NEG:org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:1 |==> -1
3064:AOR:-(int,int):%(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nCols - 1 |==> nCols % 1
3065:AOR:-(int,int):*(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nCols - 1 |==> nCols * 1
3066:AOR:-(int,int):+(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nCols - 1 |==> nCols + 1
3067:AOR:-(int,int):/(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:nCols - 1 |==> nCols / 1
3068:ROR:>(int,int):!=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col > nCols - 1 |==> col != nCols - 1
3069:ROR:>(int,int):<(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col > nCols - 1 |==> col < nCols - 1
3070:ROR:>(int,int):<=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col > nCols - 1 |==> col <= nCols - 1
3071:ROR:>(int,int):==(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col > nCols - 1 |==> col == nCols - 1
3072:ROR:>(int,int):>=(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col > nCols - 1 |==> col >= nCols - 1
3073:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col > nCols - 1 |==> false
3074:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:col > nCols - 1 |==> true
3075:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 || col > nCols - 1 |==> (row < 0 || row > nRows - 1 || col < 0) != col > nCols - 1
3076:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 || col > nCols - 1 |==> (row < 0 || row > nRows - 1 || col < 0) && col > nCols - 1
3077:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 || col > nCols - 1 |==> (row < 0 || row > nRows - 1 || col < 0) == col > nCols - 1
3078:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 || col > nCols - 1 |==> false
3079:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 || col > nCols - 1 |==> row < 0 || row > nRows - 1 || col < 0
3080:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 || col > nCols - 1 |==> col > nCols - 1
3081:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.linear.RealMatrixImpl@isValidCoordinate(int,int):1175:row < 0 || row > nRows - 1 || col < 0 || col > nCols - 1 |==> true
