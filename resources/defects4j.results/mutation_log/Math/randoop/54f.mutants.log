1:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):182:mant = new int[field.getRadixDigits()] |==> <NO-OP>
2:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):183:1 |==> 0
3:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):183:1 |==> -1
4:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):183:sign = 1 |==> <NO-OP>
5:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):184:0 |==> 1
6:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):184:0 |==> -1
7:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):184:exp = 0 |==> <NO-OP>
8:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField):185:nans = FINITE |==> <NO-OP>
9:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):212:mant = new int[field.getRadixDigits()] |==> <NO-OP>
10:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):213:nans = FINITE |==> <NO-OP>
11:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):216:false |==> true
12:ROR:==(long,long):!=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):217:x == Long.MIN_VALUE |==> x != Long.MIN_VALUE
13:ROR:==(long,long):<(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):217:x == Long.MIN_VALUE |==> x < Long.MIN_VALUE
14:ROR:==(long,long):<=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):217:x == Long.MIN_VALUE |==> x <= Long.MIN_VALUE
15:ROR:==(long,long):>(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):217:x == Long.MIN_VALUE |==> x > Long.MIN_VALUE
16:ROR:==(long,long):>=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):217:x == Long.MIN_VALUE |==> x >= Long.MIN_VALUE
17:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):217:x == Long.MIN_VALUE |==> false
18:ROR:==(long,long):TRUE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):217:x == Long.MIN_VALUE |==> true
19:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):220:true |==> false
20:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):220:isLongMin = true |==> <NO-OP>
21:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):221:++x |==> <NO-OP>
22:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:0 |==> 1
23:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:0 |==> -1
24:ROR:<(long,long):!=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:x < 0 |==> x != 0
25:ROR:<(long,long):<=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:x < 0 |==> x <= 0
26:ROR:<(long,long):==(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:x < 0 |==> x == 0
27:ROR:<(long,long):>(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:x < 0 |==> x > 0
28:ROR:<(long,long):>=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:x < 0 |==> x >= 0
29:ROR:<(long,long):FALSE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:x < 0 |==> false
30:ROR:<(long,long):TRUE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):225:x < 0 |==> true
31:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):226:-1 |==> 0
32:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):226:-1 |==> 1
33:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):226:sign = -1 |==> <NO-OP>
34:ORU:-(long):+(long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):227:-x |==> +x
35:ORU:-(long):~(long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):227:-x |==> ~x
36:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):227:x = -x |==> <NO-OP>
37:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):229:1 |==> 0
38:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):229:1 |==> -1
39:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):229:sign = 1 |==> <NO-OP>
40:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):232:0 |==> 1
41:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):232:0 |==> -1
42:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):232:exp = 0 |==> <NO-OP>
43:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:0 |==> 1
44:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:0 |==> -1
45:ROR:!=(long,long):<(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:x != 0 |==> x < 0
46:ROR:!=(long,long):<=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:x != 0 |==> x <= 0
47:ROR:!=(long,long):==(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:x != 0 |==> x == 0
48:ROR:!=(long,long):>(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:x != 0 |==> x > 0
49:ROR:!=(long,long):>=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:x != 0 |==> x >= 0
50:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:x != 0 |==> false
51:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):233:x != 0 |==> true
52:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - exp |==> mant.length % exp
53:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - exp |==> mant.length * exp
54:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - exp |==> mant.length + exp
55:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - exp |==> mant.length / exp
56:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:1 |==> 0
57:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:1 |==> -1
58:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 |==> mant.length % 1
59:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 |==> mant.length * 1
60:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 |==> mant.length + 1
61:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 |==> mant.length / 1
62:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 - exp |==> (mant.length - 1) % exp
63:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 - exp |==> (mant.length - 1) * exp
64:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 - exp |==> mant.length - 1 + exp
65:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:mant.length - 1 - exp |==> (mant.length - 1) / exp
66:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):234:System.arraycopy(mant, mant.length - exp, mant, mant.length - 1 - exp, exp) |==> <NO-OP>
67:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:1 |==> 0
68:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:1 |==> -1
69:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:mant.length - 1 |==> mant.length % 1
70:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:mant.length - 1 |==> mant.length * 1
71:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:mant.length - 1 |==> mant.length + 1
72:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:mant.length - 1 |==> mant.length / 1
73:AOR:%(long,long):*(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:x % RADIX |==> x * RADIX
74:AOR:%(long,long):+(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:x % RADIX |==> x + RADIX
75:AOR:%(long,long):-(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:x % RADIX |==> x - RADIX
76:AOR:%(long,long):/(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:x % RADIX |==> x / RADIX
77:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):235:mant[mant.length - 1] = (int)(x % RADIX) |==> <NO-OP>
78:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):236:x /= RADIX |==> <NO-OP>
79:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):237:exp++ |==> <NO-OP>
80:COR:isLongMin:TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):240:isLongMin |==> false
81:COR:isLongMin:FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):240:isLongMin |==> true
82:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:0 |==> 1
83:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:0 |==> -1
84:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:1 |==> 0
85:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:1 |==> -1
86:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:mant.length - 1 |==> mant.length % 1
87:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:mant.length - 1 |==> mant.length * 1
88:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:mant.length - 1 |==> mant.length + 1
89:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:mant.length - 1 |==> mant.length / 1
90:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:i < mant.length - 1 |==> i != mant.length - 1
91:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:i < mant.length - 1 |==> i <= mant.length - 1
92:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:i < mant.length - 1 |==> i == mant.length - 1
93:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:i < mant.length - 1 |==> i > mant.length - 1
94:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:i < mant.length - 1 |==> i >= mant.length - 1
95:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:i < mant.length - 1 |==> false
96:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):243:i < mant.length - 1 |==> true
97:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:0 |==> 1
98:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:0 |==> -1
99:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:mant[i] != 0 |==> mant[i] < 0
100:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:mant[i] != 0 |==> mant[i] <= 0
101:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:mant[i] != 0 |==> mant[i] == 0
102:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:mant[i] != 0 |==> mant[i] > 0
103:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:mant[i] != 0 |==> mant[i] >= 0
104:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:mant[i] != 0 |==> false
105:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):244:mant[i] != 0 |==> true
106:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,long):245:mant[i]++ |==> <NO-OP>
107:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):259:mant = new int[field.getRadixDigits()] |==> <NO-OP>
108:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):260:1 |==> 0
109:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):260:1 |==> -1
110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):260:sign = 1 |==> <NO-OP>
111:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):261:0 |==> 1
112:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):261:0 |==> -1
113:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):261:exp = 0 |==> <NO-OP>
114:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):262:nans = FINITE |==> <NO-OP>
115:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):266:4503599627370495L |==> 0L
116:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):266:4503599627370495L |==> -4503599627370495L
117:LOR:&(long,long):^(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):266:bits & 4503599627370495L |==> bits ^ 4503599627370495L
118:LOR:&(long,long):|(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):266:bits & 4503599627370495L |==> bits | 4503599627370495L
119:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:9218868437227405312L |==> 0L
120:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:9218868437227405312L |==> -9218868437227405312L
121:LOR:&(long,long):^(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:bits & 9218868437227405312L |==> bits ^ 9218868437227405312L
122:LOR:&(long,long):|(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:bits & 9218868437227405312L |==> bits | 9218868437227405312L
123:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:52 |==> 0
124:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:52 |==> -52
125:SOR:>>(long,int):<<(long,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:(bits & 9218868437227405312L) >> 52 |==> (bits & 9218868437227405312L) << 52
126:SOR:>>(long,int):>>>(long,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:(bits & 9218868437227405312L) >> 52 |==> (bits & 9218868437227405312L) >>> 52
127:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:1023 |==> 0
128:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:1023 |==> -1023
129:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:(int)((bits & 9218868437227405312L) >> 52) - 1023 |==> (int)((bits & 9218868437227405312L) >> 52) % 1023
130:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:(int)((bits & 9218868437227405312L) >> 52) - 1023 |==> (int)((bits & 9218868437227405312L) >> 52) * 1023
131:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:(int)((bits & 9218868437227405312L) >> 52) - 1023 |==> (int)((bits & 9218868437227405312L) >> 52) + 1023
132:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):267:(int)((bits & 9218868437227405312L) >> 52) - 1023 |==> (int)((bits & 9218868437227405312L) >> 52) / 1023
133:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:-1023 |==> 0
134:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:-1023 |==> 1023
135:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:exponent == -1023 |==> exponent != -1023
136:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:exponent == -1023 |==> exponent < -1023
137:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:exponent == -1023 |==> exponent <= -1023
138:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:exponent == -1023 |==> exponent > -1023
139:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:exponent == -1023 |==> exponent >= -1023
140:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:exponent == -1023 |==> false
141:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):269:exponent == -1023 |==> true
142:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:0 |==> 1
143:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:0 |==> -1
144:ROR:==(double,double):!=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:x == 0 |==> x != 0
145:ROR:==(double,double):<(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:x == 0 |==> x < 0
146:ROR:==(double,double):<=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:x == 0 |==> x <= 0
147:ROR:==(double,double):>(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:x == 0 |==> x > 0
148:ROR:==(double,double):>=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:x == 0 |==> x >= 0
149:ROR:==(double,double):FALSE(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:x == 0 |==> false
150:ROR:==(double,double):TRUE(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):271:x == 0 |==> true
151:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:-9223372036854775808L |==> 0L
152:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:-9223372036854775808L |==> -9223372036854775808L
153:LOR:&(long,long):^(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:bits & -9223372036854775808L |==> bits ^ -9223372036854775808L
154:LOR:&(long,long):|(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:bits & -9223372036854775808L |==> bits | -9223372036854775808L
155:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:0 |==> 1
156:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:0 |==> -1
157:ROR:!=(long,long):<(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) < 0
158:ROR:!=(long,long):<=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) <= 0
159:ROR:!=(long,long):==(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) == 0
160:ROR:!=(long,long):>(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) > 0
161:ROR:!=(long,long):>=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) >= 0
162:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:(bits & -9223372036854775808L) != 0 |==> false
163:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):273:(bits & -9223372036854775808L) != 0 |==> true
164:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):274:-1 |==> 0
165:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):274:-1 |==> 1
166:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):274:sign = -1 |==> <NO-OP>
167:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):279:exponent++ |==> <NO-OP>
168:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:4503599627370496L |==> 0L
169:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:4503599627370496L |==> -4503599627370496L
170:LOR:&(long,long):^(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:mantissa & 4503599627370496L |==> mantissa ^ 4503599627370496L
171:LOR:&(long,long):|(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:mantissa & 4503599627370496L |==> mantissa | 4503599627370496L
172:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:0 |==> 1
173:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:0 |==> -1
174:ROR:==(long,long):!=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:(mantissa & 4503599627370496L) == 0 |==> (mantissa & 4503599627370496L) != 0
175:ROR:==(long,long):<(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:(mantissa & 4503599627370496L) == 0 |==> (mantissa & 4503599627370496L) < 0
176:ROR:==(long,long):<=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:(mantissa & 4503599627370496L) == 0 |==> (mantissa & 4503599627370496L) <= 0
177:ROR:==(long,long):>(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:(mantissa & 4503599627370496L) == 0 |==> (mantissa & 4503599627370496L) > 0
178:ROR:==(long,long):>=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:(mantissa & 4503599627370496L) == 0 |==> (mantissa & 4503599627370496L) >= 0
179:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:(mantissa & 4503599627370496L) == 0 |==> false
180:ROR:==(long,long):TRUE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):282:(mantissa & 4503599627370496L) == 0 |==> true
181:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):283:exponent-- |==> <NO-OP>
182:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):284:1 |==> 0
183:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):284:1 |==> -1
184:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):284:mantissa <<= 1 |==> <NO-OP>
185:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):286:4503599627370495L |==> 0L
186:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):286:4503599627370495L |==> -4503599627370495L
187:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):286:mantissa &= 4503599627370495L |==> <NO-OP>
188:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:1024 |==> 0
189:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:1024 |==> -1024
190:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:exponent == 1024 |==> exponent != 1024
191:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:exponent == 1024 |==> exponent < 1024
192:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:exponent == 1024 |==> exponent <= 1024
193:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:exponent == 1024 |==> exponent > 1024
194:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:exponent == 1024 |==> exponent >= 1024
195:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:exponent == 1024 |==> false
196:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):289:exponent == 1024 |==> true
197:ROR:!=(double,double):<(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):291:x != x |==> x < x
198:ROR:!=(double,double):<=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):291:x != x |==> x <= x
199:ROR:!=(double,double):==(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):291:x != x |==> x == x
200:ROR:!=(double,double):>(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):291:x != x |==> x > x
201:ROR:!=(double,double):>=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):291:x != x |==> x >= x
202:ROR:!=(double,double):FALSE(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):291:x != x |==> false
203:ROR:!=(double,double):TRUE(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):291:x != x |==> true
204:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):292:1 |==> 0
205:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):292:1 |==> -1
206:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):292:sign = (byte)1 |==> <NO-OP>
207:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):293:nans = QNAN |==> <NO-OP>
208:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:0 |==> 1
209:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:0 |==> -1
210:ROR:<(double,double):!=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:x < 0 |==> x != 0
211:ROR:<(double,double):<=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:x < 0 |==> x <= 0
212:ROR:<(double,double):==(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:x < 0 |==> x == 0
213:ROR:<(double,double):>(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:x < 0 |==> x > 0
214:ROR:<(double,double):>=(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:x < 0 |==> x >= 0
215:ROR:<(double,double):FALSE(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:x < 0 |==> false
216:ROR:<(double,double):TRUE(double,double):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):294:x < 0 |==> true
217:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):295:-1 |==> 0
218:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):295:-1 |==> 1
219:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):295:sign = (byte)-1 |==> <NO-OP>
220:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):296:nans = INFINITE |==> <NO-OP>
221:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):298:1 |==> 0
222:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):298:1 |==> -1
223:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):298:sign = (byte)1 |==> <NO-OP>
224:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):299:nans = INFINITE |==> <NO-OP>
225:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):305:4503599627370496L |==> 0L
226:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):305:4503599627370496L |==> -4503599627370496L
227:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):305:xdfp = xdfp.divide(new Dfp(field, 4503599627370496L)).add(field.getOne()) |==> <NO-OP>
228:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):306:xdfp = xdfp.multiply(DfpMath.pow(field.getTwo(), exponent)) |==> <NO-OP>
229:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:-9223372036854775808L |==> 0L
230:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:-9223372036854775808L |==> -9223372036854775808L
231:LOR:&(long,long):^(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:bits & -9223372036854775808L |==> bits ^ -9223372036854775808L
232:LOR:&(long,long):|(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:bits & -9223372036854775808L |==> bits | -9223372036854775808L
233:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:0 |==> 1
234:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:0 |==> -1
235:ROR:!=(long,long):<(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) < 0
236:ROR:!=(long,long):<=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) <= 0
237:ROR:!=(long,long):==(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) == 0
238:ROR:!=(long,long):>(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) > 0
239:ROR:!=(long,long):>=(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:(bits & -9223372036854775808L) != 0 |==> (bits & -9223372036854775808L) >= 0
240:ROR:!=(long,long):FALSE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:(bits & -9223372036854775808L) != 0 |==> false
241:ROR:!=(long,long):TRUE(long,long):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):308:(bits & -9223372036854775808L) != 0 |==> true
242:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):309:xdfp = xdfp.negate() |==> <NO-OP>
243:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):312:0 |==> 1
244:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):312:0 |==> -1
245:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):312:0 |==> 1
246:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):312:0 |==> -1
247:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):312:System.arraycopy(xdfp.mant, 0, mant, 0, mant.length) |==> <NO-OP>
248:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):313:sign = xdfp.sign |==> <NO-OP>
249:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):314:exp = xdfp.exp |==> <NO-OP>
250:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,double):315:nans = xdfp.nans |==> <NO-OP>
251:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.Dfp):323:mant = d.mant.clone() |==> <NO-OP>
252:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.Dfp):324:sign = d.sign |==> <NO-OP>
253:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.Dfp):325:exp = d.exp |==> <NO-OP>
254:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.Dfp):326:nans = d.nans |==> <NO-OP>
255:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):337:mant = new int[field.getRadixDigits()] |==> <NO-OP>
256:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):338:1 |==> 0
257:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):338:1 |==> -1
258:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):338:sign = 1 |==> <NO-OP>
259:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):339:0 |==> 1
260:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):339:0 |==> -1
261:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):339:exp = 0 |==> <NO-OP>
262:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):340:nans = FINITE |==> <NO-OP>
263:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):343:false |==> true
264:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize |==> getRadixDigits() % rsize
265:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize |==> getRadixDigits() + rsize
266:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize |==> getRadixDigits() - rsize
267:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize |==> getRadixDigits() / rsize
268:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:2 |==> 0
269:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:2 |==> -2
270:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:offset * 2 |==> offset % 2
271:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:offset * 2 |==> offset + 2
272:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:offset * 2 |==> offset - 2
273:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:offset * 2 |==> offset / 2
274:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize + offset * 2 |==> getRadixDigits() * rsize % (offset * 2)
275:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize + offset * 2 |==> getRadixDigits() * rsize * (offset * 2)
276:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize + offset * 2 |==> getRadixDigits() * rsize - offset * 2
277:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):346:getRadixDigits() * rsize + offset * 2 |==> getRadixDigits() * rsize / (offset * 2)
278:COR:s.equals(POS_INFINITY_STRING):TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):349:s.equals(POS_INFINITY_STRING) |==> false
279:COR:s.equals(POS_INFINITY_STRING):FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):349:s.equals(POS_INFINITY_STRING) |==> true
280:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):350:1 |==> 0
281:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):350:1 |==> -1
282:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):350:sign = (byte)1 |==> <NO-OP>
283:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):351:nans = INFINITE |==> <NO-OP>
284:COR:s.equals(NEG_INFINITY_STRING):TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):355:s.equals(NEG_INFINITY_STRING) |==> false
285:COR:s.equals(NEG_INFINITY_STRING):FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):355:s.equals(NEG_INFINITY_STRING) |==> true
286:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):356:-1 |==> 0
287:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):356:-1 |==> 1
288:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):356:sign = (byte)-1 |==> <NO-OP>
289:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):357:nans = INFINITE |==> <NO-OP>
290:COR:s.equals(NAN_STRING):TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):361:s.equals(NAN_STRING) |==> false
291:COR:s.equals(NAN_STRING):FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):361:s.equals(NAN_STRING) |==> true
292:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):362:1 |==> 0
293:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):362:1 |==> -1
294:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):362:sign = (byte)1 |==> <NO-OP>
295:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):363:nans = QNAN |==> <NO-OP>
296:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:-1 |==> 0
297:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:-1 |==> 1
298:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:p == -1 |==> p != -1
299:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:p == -1 |==> p < -1
300:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:p == -1 |==> p <= -1
301:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:p == -1 |==> p > -1
302:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:p == -1 |==> p >= -1
303:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:p == -1 |==> false
304:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):369:p == -1 |==> true
305:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):370:p = s.indexOf("E") |==> <NO-OP>
306:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):374:0 |==> 1
307:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):374:0 |==> -1
308:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:-1 |==> 0
309:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:-1 |==> 1
310:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:p != -1 |==> p < -1
311:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:p != -1 |==> p <= -1
312:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:p != -1 |==> p == -1
313:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:p != -1 |==> p > -1
314:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:p != -1 |==> p >= -1
315:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:p != -1 |==> false
316:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):375:p != -1 |==> true
317:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):377:0 |==> 1
318:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):377:0 |==> -1
319:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):378:1 |==> 0
320:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):378:1 |==> -1
321:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):378:p + 1 |==> p % 1
322:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):378:p + 1 |==> p * 1
323:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):378:p + 1 |==> p - 1
324:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):378:p + 1 |==> p / 1
325:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):379:false |==> true
326:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:0 |==> 1
327:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:0 |==> -1
328:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:i < fpexp.length() |==> i != fpexp.length()
329:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:i < fpexp.length() |==> i <= fpexp.length()
330:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:i < fpexp.length() |==> i == fpexp.length()
331:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:i < fpexp.length() |==> i > fpexp.length()
332:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:i < fpexp.length() |==> i >= fpexp.length()
333:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:i < fpexp.length() |==> false
334:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):381:i < fpexp.length() |==> true
335:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):383:fpexp.charAt(i) == '-' |==> fpexp.charAt(i) != '-'
336:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):383:fpexp.charAt(i) == '-' |==> fpexp.charAt(i) < '-'
337:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):383:fpexp.charAt(i) == '-' |==> fpexp.charAt(i) <= '-'
338:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):383:fpexp.charAt(i) == '-' |==> fpexp.charAt(i) > '-'
339:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):383:fpexp.charAt(i) == '-' |==> fpexp.charAt(i) >= '-'
340:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):383:fpexp.charAt(i) == '-' |==> false
341:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):383:fpexp.charAt(i) == '-' |==> true
342:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):385:true |==> false
343:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):385:negative = true |==> <NO-OP>
344:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' |==> fpexp.charAt(i) != '0'
345:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' |==> fpexp.charAt(i) < '0'
346:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' |==> fpexp.charAt(i) <= '0'
347:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' |==> fpexp.charAt(i) == '0'
348:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' |==> fpexp.charAt(i) > '0'
349:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' |==> false
350:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' |==> true
351:ROR:<=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) != '9'
352:ROR:<=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) < '9'
353:ROR:<=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) == '9'
354:ROR:<=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) > '9'
355:ROR:<=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) >= '9'
356:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) <= '9' |==> false
357:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) <= '9' |==> true
358:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) >= '0' != fpexp.charAt(i) <= '9'
359:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) >= '0' == fpexp.charAt(i) <= '9'
360:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9' |==> false
361:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) >= '0'
362:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) <= '9'
363:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9' |==> true
364:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):388:fpexp.charAt(i) >= '0' && fpexp.charAt(i) <= '9' |==> fpexp.charAt(i) >= '0' || fpexp.charAt(i) <= '9'
365:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:10 |==> 0
366:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:10 |==> -10
367:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 |==> sciexp % 10
368:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 |==> sciexp + 10
369:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 |==> sciexp - 10
370:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 |==> sciexp / 10
371:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) |==> sciexp * 10 % fpexp.charAt(i)
372:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) |==> sciexp * 10 * fpexp.charAt(i)
373:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) |==> sciexp * 10 - fpexp.charAt(i)
374:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) |==> sciexp * 10 / fpexp.charAt(i)
375:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) - '0' |==> (sciexp * 10 + fpexp.charAt(i)) % '0'
376:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) - '0' |==> (sciexp * 10 + fpexp.charAt(i)) * '0'
377:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) - '0' |==> sciexp * 10 + fpexp.charAt(i) + '0'
378:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp * 10 + fpexp.charAt(i) - '0' |==> (sciexp * 10 + fpexp.charAt(i)) / '0'
379:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):389:sciexp = sciexp * 10 + fpexp.charAt(i) - '0' |==> <NO-OP>
380:COR:negative:TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):392:negative |==> false
381:COR:negative:FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):392:negative |==> true
382:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):393:-sciexp |==> +sciexp
383:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):393:-sciexp |==> ~sciexp
384:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):393:sciexp = -sciexp |==> <NO-OP>
385:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:-1 |==> 0
386:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:-1 |==> 1
387:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:fpdecimal.indexOf("-") != -1 |==> fpdecimal.indexOf("-") < -1
388:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:fpdecimal.indexOf("-") != -1 |==> fpdecimal.indexOf("-") <= -1
389:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:fpdecimal.indexOf("-") != -1 |==> fpdecimal.indexOf("-") == -1
390:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:fpdecimal.indexOf("-") != -1 |==> fpdecimal.indexOf("-") > -1
391:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:fpdecimal.indexOf("-") != -1 |==> fpdecimal.indexOf("-") >= -1
392:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:fpdecimal.indexOf("-") != -1 |==> false
393:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):401:fpdecimal.indexOf("-") != -1 |==> true
394:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):402:-1 |==> 0
395:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):402:-1 |==> 1
396:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):402:sign = -1 |==> <NO-OP>
397:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):406:0 |==> 1
398:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):406:0 |==> -1
399:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):406:p = 0 |==> <NO-OP>
400:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):409:0 |==> 1
401:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):409:0 |==> -1
402:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' |==> fpdecimal.charAt(p) != '1'
403:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' |==> fpdecimal.charAt(p) < '1'
404:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' |==> fpdecimal.charAt(p) <= '1'
405:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' |==> fpdecimal.charAt(p) == '1'
406:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' |==> fpdecimal.charAt(p) > '1'
407:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' |==> false
408:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' |==> true
409:ROR:<=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) != '9'
410:ROR:<=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) < '9'
411:ROR:<=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) == '9'
412:ROR:<=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) > '9'
413:ROR:<=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) >= '9'
414:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) <= '9' |==> false
415:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) <= '9' |==> true
416:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) >= '1' != fpdecimal.charAt(p) <= '9'
417:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) >= '1' == fpdecimal.charAt(p) <= '9'
418:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9' |==> false
419:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) >= '1'
420:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) <= '9'
421:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9' |==> true
422:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):411:fpdecimal.charAt(p) >= '1' && fpdecimal.charAt(p) <= '9' |==> fpdecimal.charAt(p) >= '1' || fpdecimal.charAt(p) <= '9'
423:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:fpdecimal.charAt(p) == '0' |==> fpdecimal.charAt(p) != '0'
424:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:fpdecimal.charAt(p) == '0' |==> fpdecimal.charAt(p) < '0'
425:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:fpdecimal.charAt(p) == '0' |==> fpdecimal.charAt(p) <= '0'
426:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:fpdecimal.charAt(p) == '0' |==> fpdecimal.charAt(p) > '0'
427:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:fpdecimal.charAt(p) == '0' |==> fpdecimal.charAt(p) >= '0'
428:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:fpdecimal.charAt(p) == '0' |==> false
429:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:fpdecimal.charAt(p) == '0' |==> true
430:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:decimalFound && fpdecimal.charAt(p) == '0' |==> decimalFound != (fpdecimal.charAt(p) == '0')
431:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:decimalFound && fpdecimal.charAt(p) == '0' |==> decimalFound == (fpdecimal.charAt(p) == '0')
432:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:decimalFound && fpdecimal.charAt(p) == '0' |==> false
433:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:decimalFound && fpdecimal.charAt(p) == '0' |==> decimalFound
434:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:decimalFound && fpdecimal.charAt(p) == '0' |==> fpdecimal.charAt(p) == '0'
435:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:decimalFound && fpdecimal.charAt(p) == '0' |==> true
436:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):415:decimalFound && fpdecimal.charAt(p) == '0' |==> decimalFound || fpdecimal.charAt(p) == '0'
437:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):416:decimalPos-- |==> <NO-OP>
438:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):419:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) != '.'
439:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):419:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) < '.'
440:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):419:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) <= '.'
441:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):419:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) > '.'
442:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):419:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) >= '.'
443:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):419:fpdecimal.charAt(p) == '.' |==> false
444:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):419:fpdecimal.charAt(p) == '.' |==> true
445:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):420:true |==> false
446:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):420:decimalFound = true |==> <NO-OP>
447:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):423:p++ |==> <NO-OP>
448:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):425:p == fpdecimal.length() |==> p != fpdecimal.length()
449:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):425:p == fpdecimal.length() |==> p < fpdecimal.length()
450:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):425:p == fpdecimal.length() |==> p <= fpdecimal.length()
451:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):425:p == fpdecimal.length() |==> p > fpdecimal.length()
452:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):425:p == fpdecimal.length() |==> p >= fpdecimal.length()
453:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):425:p == fpdecimal.length() |==> false
454:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):425:p == fpdecimal.length() |==> true
455:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):432:0 |==> 1
456:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):432:0 |==> -1
457:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):432:striped[0] = '0' |==> <NO-OP>
458:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):433:1 |==> 0
459:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):433:1 |==> -1
460:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):433:striped[1] = '0' |==> <NO-OP>
461:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):434:2 |==> 0
462:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):434:2 |==> -2
463:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):434:striped[2] = '0' |==> <NO-OP>
464:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):435:3 |==> 0
465:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):435:3 |==> -3
466:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):435:striped[3] = '0' |==> <NO-OP>
467:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):436:0 |==> 1
468:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):436:0 |==> -1
469:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):438:p == (fpdecimal.length()) |==> p != (fpdecimal.length())
470:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):438:p == (fpdecimal.length()) |==> p < (fpdecimal.length())
471:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):438:p == (fpdecimal.length()) |==> p <= (fpdecimal.length())
472:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):438:p == (fpdecimal.length()) |==> p > (fpdecimal.length())
473:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):438:p == (fpdecimal.length()) |==> p >= (fpdecimal.length())
474:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):438:p == (fpdecimal.length()) |==> false
475:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):438:p == (fpdecimal.length()) |==> true
476:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize |==> mant.length % rsize
477:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize |==> mant.length + rsize
478:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize |==> mant.length - rsize
479:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize |==> mant.length / rsize
480:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset |==> mant.length * rsize % offset
481:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset |==> mant.length * rsize * offset
482:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset |==> mant.length * rsize - offset
483:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset |==> mant.length * rsize / offset
484:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:1 |==> 0
485:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:1 |==> -1
486:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset + 1 |==> (mant.length * rsize + offset) % 1
487:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset + 1 |==> (mant.length * rsize + offset) * 1
488:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset + 1 |==> mant.length * rsize + offset - 1
489:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:mant.length * rsize + offset + 1 |==> (mant.length * rsize + offset) / 1
490:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:q == mant.length * rsize + offset + 1 |==> q != mant.length * rsize + offset + 1
491:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:q == mant.length * rsize + offset + 1 |==> q < mant.length * rsize + offset + 1
492:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:q == mant.length * rsize + offset + 1 |==> q <= mant.length * rsize + offset + 1
493:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:q == mant.length * rsize + offset + 1 |==> q > mant.length * rsize + offset + 1
494:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:q == mant.length * rsize + offset + 1 |==> q >= mant.length * rsize + offset + 1
495:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:q == mant.length * rsize + offset + 1 |==> false
496:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):443:q == mant.length * rsize + offset + 1 |==> true
497:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):447:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) != '.'
498:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):447:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) < '.'
499:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):447:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) <= '.'
500:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):447:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) > '.'
501:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):447:fpdecimal.charAt(p) == '.' |==> fpdecimal.charAt(p) >= '.'
502:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):447:fpdecimal.charAt(p) == '.' |==> false
503:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):447:fpdecimal.charAt(p) == '.' |==> true
504:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):448:true |==> false
505:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):448:decimalFound = true |==> <NO-OP>
506:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):449:decimalPos = significantDigits |==> <NO-OP>
507:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):450:p++ |==> <NO-OP>
508:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' |==> fpdecimal.charAt(p) != '0'
509:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' |==> fpdecimal.charAt(p) <= '0'
510:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' |==> fpdecimal.charAt(p) == '0'
511:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' |==> fpdecimal.charAt(p) > '0'
512:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' |==> fpdecimal.charAt(p) >= '0'
513:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' |==> false
514:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' |==> true
515:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) != '9'
516:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) < '9'
517:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) <= '9'
518:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) == '9'
519:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) >= '9'
520:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) > '9' |==> false
521:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) > '9' |==> true
522:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) < '0' != fpdecimal.charAt(p) > '9'
523:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) < '0' && fpdecimal.charAt(p) > '9'
524:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) < '0' == fpdecimal.charAt(p) > '9'
525:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9' |==> false
526:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) < '0'
527:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9' |==> fpdecimal.charAt(p) > '9'
528:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):454:fpdecimal.charAt(p) < '0' || fpdecimal.charAt(p) > '9' |==> true
529:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):455:p++ |==> <NO-OP>
530:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):459:striped[q] = fpdecimal.charAt(p) |==> <NO-OP>
531:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):460:q++ |==> <NO-OP>
532:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):461:p++ |==> <NO-OP>
533:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):462:significantDigits++ |==> <NO-OP>
534:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:q != offset |==> q < offset
535:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:q != offset |==> q <= offset
536:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:q != offset |==> q == offset
537:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:q != offset |==> q > offset
538:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:q != offset |==> q >= offset
539:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:q != offset |==> false
540:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:q != offset |==> true
541:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:decimalFound && q != offset |==> decimalFound != (q != offset)
542:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:decimalFound && q != offset |==> decimalFound == (q != offset)
543:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:decimalFound && q != offset |==> false
544:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:decimalFound && q != offset |==> decimalFound
545:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:decimalFound && q != offset |==> q != offset
546:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:decimalFound && q != offset |==> true
547:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):467:decimalFound && q != offset |==> decimalFound || q != offset
548:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):469:q-- |==> <NO-OP>
549:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):470:q == offset |==> q != offset
550:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):470:q == offset |==> q < offset
551:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):470:q == offset |==> q <= offset
552:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):470:q == offset |==> q > offset
553:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):470:q == offset |==> q >= offset
554:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):470:q == offset |==> false
555:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):470:q == offset |==> true
556:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):473:striped[q] == '0' |==> striped[q] != '0'
557:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):473:striped[q] == '0' |==> striped[q] < '0'
558:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):473:striped[q] == '0' |==> striped[q] <= '0'
559:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):473:striped[q] == '0' |==> striped[q] > '0'
560:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):473:striped[q] == '0' |==> striped[q] >= '0'
561:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):473:striped[q] == '0' |==> false
562:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):473:striped[q] == '0' |==> true
563:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):474:significantDigits-- |==> <NO-OP>
564:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:0 |==> 1
565:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:0 |==> -1
566:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:significantDigits == 0 |==> significantDigits != 0
567:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:significantDigits == 0 |==> significantDigits < 0
568:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:significantDigits == 0 |==> significantDigits <= 0
569:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:significantDigits == 0 |==> significantDigits > 0
570:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:significantDigits == 0 |==> significantDigits >= 0
571:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:significantDigits == 0 |==> false
572:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:significantDigits == 0 |==> true
573:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:decimalFound && significantDigits == 0 |==> decimalFound != (significantDigits == 0)
574:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:decimalFound && significantDigits == 0 |==> decimalFound == (significantDigits == 0)
575:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:decimalFound && significantDigits == 0 |==> false
576:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:decimalFound && significantDigits == 0 |==> decimalFound
577:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:decimalFound && significantDigits == 0 |==> significantDigits == 0
578:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:decimalFound && significantDigits == 0 |==> true
579:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):482:decimalFound && significantDigits == 0 |==> decimalFound || significantDigits == 0
580:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):483:0 |==> 1
581:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):483:0 |==> -1
582:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):483:decimalPos = 0 |==> <NO-OP>
583:COR:decimalFound:TRUE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):487:decimalFound |==> false
584:COR:decimalFound:FALSE:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):487:decimalFound |==> true
585:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):488:q - offset |==> q % offset
586:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):488:q - offset |==> q * offset
587:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):488:q - offset |==> q + offset
588:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):488:q - offset |==> q / offset
589:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):488:decimalPos = q - offset |==> <NO-OP>
590:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):492:q = offset |==> <NO-OP>
591:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:1 |==> 0
592:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:1 |==> -1
593:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 |==> significantDigits % 1
594:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 |==> significantDigits * 1
595:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 |==> significantDigits + 1
596:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 |==> significantDigits / 1
597:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 + offset |==> (significantDigits - 1) % offset
598:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 + offset |==> (significantDigits - 1) * offset
599:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 + offset |==> significantDigits - 1 - offset
600:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:significantDigits - 1 + offset |==> (significantDigits - 1) / offset
601:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):493:p = significantDigits - 1 + offset |==> <NO-OP>
602:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):495:0 |==> 1
603:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):495:0 |==> -1
604:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):496:p > q |==> p != q
605:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):496:p > q |==> p < q
606:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):496:p > q |==> p <= q
607:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):496:p > q |==> p == q
608:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):496:p > q |==> p >= q
609:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):496:p > q |==> false
610:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):496:p > q |==> true
611:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):497:striped[p] != '0' |==> striped[p] < '0'
612:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):497:striped[p] != '0' |==> striped[p] <= '0'
613:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):497:striped[p] != '0' |==> striped[p] == '0'
614:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):497:striped[p] != '0' |==> striped[p] > '0'
615:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):497:striped[p] != '0' |==> striped[p] >= '0'
616:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):497:striped[p] != '0' |==> false
617:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):497:striped[p] != '0' |==> true
618:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):500:trailingZeros++ |==> <NO-OP>
619:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):501:p-- |==> <NO-OP>
620:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:100 |==> 0
621:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:100 |==> -100
622:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:rsize * 100 |==> rsize % 100
623:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:rsize * 100 |==> rsize + 100
624:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:rsize * 100 |==> rsize - 100
625:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:rsize * 100 |==> rsize / 100
626:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos |==> (rsize * 100) % decimalPos
627:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos |==> (rsize * 100) * decimalPos
628:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos |==> (rsize * 100) + decimalPos
629:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos |==> (rsize * 100) / decimalPos
630:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:sciexp % rsize |==> sciexp * rsize
631:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:sciexp % rsize |==> sciexp + rsize
632:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:sciexp % rsize |==> sciexp - rsize
633:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:sciexp % rsize |==> sciexp / rsize
634:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos - sciexp % rsize |==> ((rsize * 100) - decimalPos) % (sciexp % rsize)
635:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos - sciexp % rsize |==> ((rsize * 100) - decimalPos) * (sciexp % rsize)
636:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos - sciexp % rsize |==> (rsize * 100) - decimalPos + sciexp % rsize
637:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:(rsize * 100) - decimalPos - sciexp % rsize |==> ((rsize * 100) - decimalPos) / (sciexp % rsize)
638:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:((rsize * 100) - decimalPos - sciexp % rsize) % rsize |==> ((rsize * 100) - decimalPos - sciexp % rsize) * rsize
639:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:((rsize * 100) - decimalPos - sciexp % rsize) % rsize |==> ((rsize * 100) - decimalPos - sciexp % rsize) + rsize
640:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:((rsize * 100) - decimalPos - sciexp % rsize) % rsize |==> ((rsize * 100) - decimalPos - sciexp % rsize) - rsize
641:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):505:((rsize * 100) - decimalPos - sciexp % rsize) % rsize |==> ((rsize * 100) - decimalPos - sciexp % rsize) / rsize
642:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):506:q -= i |==> <NO-OP>
643:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):507:decimalPos += i |==> <NO-OP>
644:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:p - q |==> p % q
645:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:p - q |==> p * q
646:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:p - q |==> p + q
647:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:p - q |==> p / q
648:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:mant.length * rsize |==> mant.length % rsize
649:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:mant.length * rsize |==> mant.length + rsize
650:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:mant.length * rsize |==> mant.length - rsize
651:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:mant.length * rsize |==> mant.length / rsize
652:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:(p - q) < (mant.length * rsize) |==> (p - q) != (mant.length * rsize)
653:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:(p - q) < (mant.length * rsize) |==> (p - q) <= (mant.length * rsize)
654:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:(p - q) < (mant.length * rsize) |==> (p - q) == (mant.length * rsize)
655:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:(p - q) < (mant.length * rsize) |==> (p - q) > (mant.length * rsize)
656:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:(p - q) < (mant.length * rsize) |==> (p - q) >= (mant.length * rsize)
657:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:(p - q) < (mant.length * rsize) |==> false
658:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):510:(p - q) < (mant.length * rsize) |==> true
659:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:0 |==> 1
660:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:0 |==> -1
661:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i = 0 |==> <NO-OP>
662:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i < rsize |==> i != rsize
663:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i < rsize |==> i <= rsize
664:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i < rsize |==> i == rsize
665:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i < rsize |==> i > rsize
666:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i < rsize |==> i >= rsize
667:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i < rsize |==> false
668:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):511:i < rsize |==> true
669:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):512:striped[++p] = '0' |==> <NO-OP>
670:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:1 |==> 0
671:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:1 |==> -1
672:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:mant.length - 1 |==> mant.length % 1
673:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:mant.length - 1 |==> mant.length * 1
674:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:mant.length - 1 |==> mant.length + 1
675:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:mant.length - 1 |==> mant.length / 1
676:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i = mant.length - 1 |==> <NO-OP>
677:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:0 |==> 1
678:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:0 |==> -1
679:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i >= 0 |==> i != 0
680:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i >= 0 |==> i < 0
681:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i >= 0 |==> i <= 0
682:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i >= 0 |==> i == 0
683:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i >= 0 |==> i > 0
684:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i >= 0 |==> false
685:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):518:i >= 0 |==> true
686:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:striped[q] - '0' |==> striped[q] % '0'
687:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:striped[q] - '0' |==> striped[q] * '0'
688:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:striped[q] - '0' |==> striped[q] + '0'
689:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:striped[q] - '0' |==> striped[q] / '0'
690:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:1000 |==> 0
691:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:1000 |==> -1000
692:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 |==> (striped[q] - '0') % 1000
693:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 |==> (striped[q] - '0') + 1000
694:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 |==> (striped[q] - '0') - 1000
695:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 |==> (striped[q] - '0') / 1000
696:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:1 |==> 0
697:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:1 |==> -1
698:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:q + 1 |==> q % 1
699:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:q + 1 |==> q * 1
700:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:q + 1 |==> q - 1
701:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:q + 1 |==> q / 1
702:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:striped[q + 1] - '0' |==> striped[q + 1] % '0'
703:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:striped[q + 1] - '0' |==> striped[q + 1] * '0'
704:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:striped[q + 1] - '0' |==> striped[q + 1] + '0'
705:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:striped[q + 1] - '0' |==> striped[q + 1] / '0'
706:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:100 |==> 0
707:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:100 |==> -100
708:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:(striped[q + 1] - '0') * 100 |==> (striped[q + 1] - '0') % 100
709:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:(striped[q + 1] - '0') * 100 |==> (striped[q + 1] - '0') + 100
710:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:(striped[q + 1] - '0') * 100 |==> (striped[q + 1] - '0') - 100
711:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):520:(striped[q + 1] - '0') * 100 |==> (striped[q + 1] - '0') / 100
712:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 |==> (striped[q] - '0') * 1000 % ((striped[q + 1] - '0') * 100)
713:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 |==> (striped[q] - '0') * 1000 * ((striped[q + 1] - '0') * 100)
714:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 |==> (striped[q] - '0') * 1000 - (striped[q + 1] - '0') * 100
715:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 |==> (striped[q] - '0') * 1000 / ((striped[q + 1] - '0') * 100)
716:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:2 |==> 0
717:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:2 |==> -2
718:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:q + 2 |==> q % 2
719:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:q + 2 |==> q * 2
720:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:q + 2 |==> q - 2
721:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:q + 2 |==> q / 2
722:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:striped[q + 2] - '0' |==> striped[q + 2] % '0'
723:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:striped[q + 2] - '0' |==> striped[q + 2] * '0'
724:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:striped[q + 2] - '0' |==> striped[q + 2] + '0'
725:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:striped[q + 2] - '0' |==> striped[q + 2] / '0'
726:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:10 |==> 0
727:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:10 |==> -10
728:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:(striped[q + 2] - '0') * 10 |==> (striped[q + 2] - '0') % 10
729:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:(striped[q + 2] - '0') * 10 |==> (striped[q + 2] - '0') + 10
730:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:(striped[q + 2] - '0') * 10 |==> (striped[q + 2] - '0') - 10
731:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):521:(striped[q + 2] - '0') * 10 |==> (striped[q + 2] - '0') / 10
732:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 |==> ((striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100) % ((striped[q + 2] - '0') * 10)
733:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 |==> ((striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100) * ((striped[q + 2] - '0') * 10)
734:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 |==> (striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 - (striped[q + 2] - '0') * 10
735:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 |==> ((striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100) / ((striped[q + 2] - '0') * 10)
736:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:3 |==> 0
737:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:3 |==> -3
738:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:q + 3 |==> q % 3
739:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:q + 3 |==> q * 3
740:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:q + 3 |==> q - 3
741:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:q + 3 |==> q / 3
742:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:striped[q + 3] - '0' |==> striped[q + 3] % '0'
743:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:striped[q + 3] - '0' |==> striped[q + 3] * '0'
744:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:striped[q + 3] - '0' |==> striped[q + 3] + '0'
745:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):522:striped[q + 3] - '0' |==> striped[q + 3] / '0'
746:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 + (striped[q + 3] - '0') |==> ((striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10) % (striped[q + 3] - '0')
747:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 + (striped[q + 3] - '0') |==> ((striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10) * (striped[q + 3] - '0')
748:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 + (striped[q + 3] - '0') |==> (striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 - (striped[q + 3] - '0')
749:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:(striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 + (striped[q + 3] - '0') |==> ((striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10) / (striped[q + 3] - '0')
750:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):519:mant[i] = (striped[q] - '0') * 1000 + (striped[q + 1] - '0') * 100 + (striped[q + 2] - '0') * 10 + (striped[q + 3] - '0') |==> <NO-OP>
751:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):523:4 |==> 0
752:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):523:4 |==> -4
753:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):523:q += 4 |==> <NO-OP>
754:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:decimalPos + sciexp |==> decimalPos % sciexp
755:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:decimalPos + sciexp |==> decimalPos * sciexp
756:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:decimalPos + sciexp |==> decimalPos - sciexp
757:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:decimalPos + sciexp |==> decimalPos / sciexp
758:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:(decimalPos + sciexp) / rsize |==> (decimalPos + sciexp) % rsize
759:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:(decimalPos + sciexp) / rsize |==> (decimalPos + sciexp) * rsize
760:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:(decimalPos + sciexp) / rsize |==> (decimalPos + sciexp) + rsize
761:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:(decimalPos + sciexp) / rsize |==> (decimalPos + sciexp) - rsize
762:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):527:exp = (decimalPos + sciexp) / rsize |==> <NO-OP>
763:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):529:q < striped.length |==> q != striped.length
764:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):529:q < striped.length |==> q <= striped.length
765:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):529:q < striped.length |==> q == striped.length
766:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):529:q < striped.length |==> q > striped.length
767:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):529:q < striped.length |==> q >= striped.length
768:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):529:q < striped.length |==> false
769:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):529:q < striped.length |==> true
770:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:striped[q] - '0' |==> striped[q] % '0'
771:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:striped[q] - '0' |==> striped[q] * '0'
772:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:striped[q] - '0' |==> striped[q] + '0'
773:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:striped[q] - '0' |==> striped[q] / '0'
774:LVR:POS:0:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:1000 |==> 0
775:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:1000 |==> -1000
776:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:(striped[q] - '0') * 1000 |==> (striped[q] - '0') % 1000
777:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:(striped[q] - '0') * 1000 |==> (striped[q] - '0') + 1000
778:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:(striped[q] - '0') * 1000 |==> (striped[q] - '0') - 1000
779:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:(striped[q] - '0') * 1000 |==> (striped[q] - '0') / 1000
780:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,java.lang.String):531:round((striped[q] - '0') * 1000) |==> <NO-OP>
781:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,byte,byte):544:this.mant = new int[field.getRadixDigits()] |==> <NO-OP>
782:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,byte,byte):545:this.sign = sign |==> <NO-OP>
783:LVR:0:POS:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,byte,byte):546:0 |==> 1
784:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,byte,byte):546:0 |==> -1
785:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,byte,byte):546:this.exp = 0 |==> <NO-OP>
786:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@<init>(org.apache.commons.math.dfp.DfpField,byte,byte):547:this.nans = nans |==> <NO-OP>
787:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):598:field.getRadixDigits() != d.field.getRadixDigits() |==> field.getRadixDigits() < d.field.getRadixDigits()
788:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):598:field.getRadixDigits() != d.field.getRadixDigits() |==> field.getRadixDigits() <= d.field.getRadixDigits()
789:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):598:field.getRadixDigits() != d.field.getRadixDigits() |==> field.getRadixDigits() == d.field.getRadixDigits()
790:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):598:field.getRadixDigits() != d.field.getRadixDigits() |==> field.getRadixDigits() > d.field.getRadixDigits()
791:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):598:field.getRadixDigits() != d.field.getRadixDigits() |==> field.getRadixDigits() >= d.field.getRadixDigits()
792:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):598:field.getRadixDigits() != d.field.getRadixDigits() |==> false
793:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):598:field.getRadixDigits() != d.field.getRadixDigits() |==> true
794:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):599:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
795:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@newInstance(org.apache.commons.math.dfp.Dfp):601:result.nans = QNAN |==> <NO-OP>
796:LVR:POS:0:org.apache.commons.math.dfp.Dfp@shiftLeft():670:1 |==> 0
797:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@shiftLeft():670:1 |==> -1
798:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:mant.length - 1 |==> mant.length % 1
799:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:mant.length - 1 |==> mant.length * 1
800:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:mant.length - 1 |==> mant.length + 1
801:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:mant.length - 1 |==> mant.length / 1
802:LVR:0:POS:org.apache.commons.math.dfp.Dfp@shiftLeft():670:0 |==> 1
803:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@shiftLeft():670:0 |==> -1
804:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:i > 0 |==> i != 0
805:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:i > 0 |==> i < 0
806:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:i > 0 |==> i <= 0
807:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:i > 0 |==> i == 0
808:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:i > 0 |==> i >= 0
809:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:i > 0 |==> false
810:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():670:i > 0 |==> true
811:LVR:POS:0:org.apache.commons.math.dfp.Dfp@shiftLeft():671:1 |==> 0
812:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@shiftLeft():671:1 |==> -1
813:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():671:i - 1 |==> i % 1
814:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():671:i - 1 |==> i * 1
815:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():671:i - 1 |==> i + 1
816:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@shiftLeft():671:i - 1 |==> i / 1
817:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@shiftLeft():671:mant[i] = mant[i - 1] |==> <NO-OP>
818:LVR:0:POS:org.apache.commons.math.dfp.Dfp@shiftLeft():673:0 |==> 1
819:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@shiftLeft():673:0 |==> -1
820:LVR:0:POS:org.apache.commons.math.dfp.Dfp@shiftLeft():673:0 |==> 1
821:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@shiftLeft():673:0 |==> -1
822:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@shiftLeft():673:mant[0] = 0 |==> <NO-OP>
823:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@shiftLeft():674:exp-- |==> <NO-OP>
824:LVR:0:POS:org.apache.commons.math.dfp.Dfp@shiftRight():682:0 |==> 1
825:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@shiftRight():682:0 |==> -1
826:LVR:POS:0:org.apache.commons.math.dfp.Dfp@shiftRight():682:1 |==> 0
827:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@shiftRight():682:1 |==> -1
828:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:mant.length - 1 |==> mant.length % 1
829:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:mant.length - 1 |==> mant.length * 1
830:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:mant.length - 1 |==> mant.length + 1
831:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:mant.length - 1 |==> mant.length / 1
832:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:i < mant.length - 1 |==> i != mant.length - 1
833:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:i < mant.length - 1 |==> i <= mant.length - 1
834:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:i < mant.length - 1 |==> i == mant.length - 1
835:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:i < mant.length - 1 |==> i > mant.length - 1
836:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:i < mant.length - 1 |==> i >= mant.length - 1
837:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:i < mant.length - 1 |==> false
838:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():682:i < mant.length - 1 |==> true
839:LVR:POS:0:org.apache.commons.math.dfp.Dfp@shiftRight():683:1 |==> 0
840:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@shiftRight():683:1 |==> -1
841:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():683:i + 1 |==> i % 1
842:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():683:i + 1 |==> i * 1
843:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():683:i + 1 |==> i - 1
844:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():683:i + 1 |==> i / 1
845:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@shiftRight():683:mant[i] = mant[i + 1] |==> <NO-OP>
846:LVR:POS:0:org.apache.commons.math.dfp.Dfp@shiftRight():685:1 |==> 0
847:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@shiftRight():685:1 |==> -1
848:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():685:mant.length - 1 |==> mant.length % 1
849:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():685:mant.length - 1 |==> mant.length * 1
850:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():685:mant.length - 1 |==> mant.length + 1
851:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@shiftRight():685:mant.length - 1 |==> mant.length / 1
852:LVR:0:POS:org.apache.commons.math.dfp.Dfp@shiftRight():685:0 |==> 1
853:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@shiftRight():685:0 |==> -1
854:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@shiftRight():685:mant[mant.length - 1] = 0 |==> <NO-OP>
855:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@shiftRight():686:exp++ |==> <NO-OP>
856:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):698:0 |==> 1
857:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):698:0 |==> -1
858:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@align(int):699:false |==> true
859:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@align(int):701:exp - e |==> exp % e
860:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@align(int):701:exp - e |==> exp * e
861:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@align(int):701:exp - e |==> exp + e
862:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@align(int):701:exp - e |==> exp / e
863:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):704:0 |==> 1
864:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):704:0 |==> -1
865:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@align(int):704:adiff < 0 |==> adiff != 0
866:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@align(int):704:adiff < 0 |==> adiff <= 0
867:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@align(int):704:adiff < 0 |==> adiff == 0
868:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@align(int):704:adiff < 0 |==> adiff > 0
869:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@align(int):704:adiff < 0 |==> adiff >= 0
870:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@align(int):704:adiff < 0 |==> false
871:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@align(int):704:adiff < 0 |==> true
872:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@align(int):705:-adiff |==> +adiff
873:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@align(int):705:-adiff |==> ~adiff
874:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):705:adiff = -adiff |==> <NO-OP>
875:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):708:0 |==> 1
876:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):708:0 |==> -1
877:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@align(int):708:diff == 0 |==> diff != 0
878:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@align(int):708:diff == 0 |==> diff < 0
879:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@align(int):708:diff == 0 |==> diff <= 0
880:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@align(int):708:diff == 0 |==> diff > 0
881:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@align(int):708:diff == 0 |==> diff >= 0
882:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@align(int):708:diff == 0 |==> false
883:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@align(int):708:diff == 0 |==> true
884:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):709:0 |==> 1
885:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):709:0 |==> -1
886:LVR:POS:0:org.apache.commons.math.dfp.Dfp@align(int):712:1 |==> 0
887:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@align(int):712:1 |==> -1
888:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:mant.length + 1 |==> mant.length % 1
889:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:mant.length + 1 |==> mant.length * 1
890:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:mant.length + 1 |==> mant.length - 1
891:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:mant.length + 1 |==> mant.length / 1
892:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:adiff > (mant.length + 1) |==> adiff != (mant.length + 1)
893:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:adiff > (mant.length + 1) |==> adiff < (mant.length + 1)
894:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:adiff > (mant.length + 1) |==> adiff <= (mant.length + 1)
895:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:adiff > (mant.length + 1) |==> adiff == (mant.length + 1)
896:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:adiff > (mant.length + 1) |==> adiff >= (mant.length + 1)
897:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:adiff > (mant.length + 1) |==> false
898:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@align(int):712:adiff > (mant.length + 1) |==> true
899:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):714:0 |==> 1
900:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):714:0 |==> -1
901:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):714:Arrays.fill(mant, 0) |==> <NO-OP>
902:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):715:exp = e |==> <NO-OP>
903:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):717:field.setIEEEFlagsBits(DfpField.FLAG_INEXACT) |==> <NO-OP>
904:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):718:dotrap(DfpField.FLAG_INEXACT, ALIGN_TRAP, this, this) |==> <NO-OP>
905:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):720:0 |==> 1
906:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):720:0 |==> -1
907:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):723:0 |==> 1
908:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):723:0 |==> -1
909:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@align(int):723:i < adiff |==> i != adiff
910:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@align(int):723:i < adiff |==> i <= adiff
911:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@align(int):723:i < adiff |==> i == adiff
912:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@align(int):723:i < adiff |==> i > adiff
913:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@align(int):723:i < adiff |==> i >= adiff
914:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@align(int):723:i < adiff |==> false
915:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@align(int):723:i < adiff |==> true
916:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):724:0 |==> 1
917:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):724:0 |==> -1
918:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@align(int):724:diff < 0 |==> diff != 0
919:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@align(int):724:diff < 0 |==> diff <= 0
920:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@align(int):724:diff < 0 |==> diff == 0
921:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@align(int):724:diff < 0 |==> diff > 0
922:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@align(int):724:diff < 0 |==> diff >= 0
923:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@align(int):724:diff < 0 |==> false
924:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@align(int):724:diff < 0 |==> true
925:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):729:0 |==> 1
926:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):729:0 |==> -1
927:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@align(int):729:lostdigit != 0 |==> lostdigit < 0
928:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@align(int):729:lostdigit != 0 |==> lostdigit <= 0
929:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@align(int):729:lostdigit != 0 |==> lostdigit == 0
930:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@align(int):729:lostdigit != 0 |==> lostdigit > 0
931:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@align(int):729:lostdigit != 0 |==> lostdigit >= 0
932:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@align(int):729:lostdigit != 0 |==> false
933:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@align(int):729:lostdigit != 0 |==> true
934:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@align(int):730:true |==> false
935:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):730:inexact = true |==> <NO-OP>
936:LVR:0:POS:org.apache.commons.math.dfp.Dfp@align(int):733:0 |==> 1
937:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@align(int):733:0 |==> -1
938:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):733:lostdigit = mant[0] |==> <NO-OP>
939:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):735:shiftRight() |==> <NO-OP>
940:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):737:shiftLeft() |==> <NO-OP>
941:COR:inexact:TRUE:org.apache.commons.math.dfp.Dfp@align(int):741:inexact |==> false
942:COR:inexact:FALSE:org.apache.commons.math.dfp.Dfp@align(int):741:inexact |==> true
943:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):742:field.setIEEEFlagsBits(DfpField.FLAG_INEXACT) |==> <NO-OP>
944:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@align(int):743:dotrap(DfpField.FLAG_INEXACT, ALIGN_TRAP, this, this) |==> <NO-OP>
945:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):757:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() < x.field.getRadixDigits()
946:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):757:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() <= x.field.getRadixDigits()
947:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):757:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() == x.field.getRadixDigits()
948:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):757:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() > x.field.getRadixDigits()
949:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):757:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() >= x.field.getRadixDigits()
950:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):757:field.getRadixDigits() != x.field.getRadixDigits() |==> false
951:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):757:field.getRadixDigits() != x.field.getRadixDigits() |==> true
952:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):758:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
953:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):760:result.nans = QNAN |==> <NO-OP>
954:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):761:dotrap(DfpField.FLAG_INVALID, LESS_THAN_TRAP, x, result) |==> <NO-OP>
955:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):762:false |==> true
956:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):766:isNaN() || x.isNaN() |==> isNaN() != x.isNaN()
957:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):766:isNaN() || x.isNaN() |==> isNaN() && x.isNaN()
958:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):766:isNaN() || x.isNaN() |==> isNaN() == x.isNaN()
959:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):766:isNaN() || x.isNaN() |==> false
960:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):766:isNaN() || x.isNaN() |==> isNaN()
961:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):766:isNaN() || x.isNaN() |==> x.isNaN()
962:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):766:isNaN() || x.isNaN() |==> true
963:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):767:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
964:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):768:dotrap(DfpField.FLAG_INVALID, LESS_THAN_TRAP, x, newInstance(getZero())) |==> <NO-OP>
965:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):769:false |==> true
966:LVR:0:POS:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:0 |==> 1
967:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:0 |==> -1
968:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:compare(this, x) < 0 |==> compare(this, x) != 0
969:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:compare(this, x) < 0 |==> compare(this, x) <= 0
970:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:compare(this, x) < 0 |==> compare(this, x) == 0
971:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:compare(this, x) < 0 |==> compare(this, x) > 0
972:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:compare(this, x) < 0 |==> compare(this, x) >= 0
973:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:compare(this, x) < 0 |==> false
974:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@lessThan(org.apache.commons.math.dfp.Dfp):772:compare(this, x) < 0 |==> true
975:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):782:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() < x.field.getRadixDigits()
976:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):782:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() <= x.field.getRadixDigits()
977:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):782:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() == x.field.getRadixDigits()
978:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):782:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() > x.field.getRadixDigits()
979:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):782:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() >= x.field.getRadixDigits()
980:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):782:field.getRadixDigits() != x.field.getRadixDigits() |==> false
981:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):782:field.getRadixDigits() != x.field.getRadixDigits() |==> true
982:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):783:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
983:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):785:result.nans = QNAN |==> <NO-OP>
984:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):786:dotrap(DfpField.FLAG_INVALID, GREATER_THAN_TRAP, x, result) |==> <NO-OP>
985:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):787:false |==> true
986:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):791:isNaN() || x.isNaN() |==> isNaN() != x.isNaN()
987:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):791:isNaN() || x.isNaN() |==> isNaN() && x.isNaN()
988:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):791:isNaN() || x.isNaN() |==> isNaN() == x.isNaN()
989:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):791:isNaN() || x.isNaN() |==> false
990:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):791:isNaN() || x.isNaN() |==> isNaN()
991:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):791:isNaN() || x.isNaN() |==> x.isNaN()
992:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):791:isNaN() || x.isNaN() |==> true
993:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):792:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
994:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):793:dotrap(DfpField.FLAG_INVALID, GREATER_THAN_TRAP, x, newInstance(getZero())) |==> <NO-OP>
995:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):794:false |==> true
996:LVR:0:POS:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:0 |==> 1
997:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:0 |==> -1
998:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:compare(this, x) > 0 |==> compare(this, x) != 0
999:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:compare(this, x) > 0 |==> compare(this, x) < 0
1000:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:compare(this, x) > 0 |==> compare(this, x) <= 0
1001:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:compare(this, x) > 0 |==> compare(this, x) == 0
1002:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:compare(this, x) > 0 |==> compare(this, x) >= 0
1003:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:compare(this, x) > 0 |==> false
1004:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@greaterThan(org.apache.commons.math.dfp.Dfp):797:compare(this, x) > 0 |==> true
1005:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@isInfinite():804:nans == INFINITE |==> nans != INFINITE
1006:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@isInfinite():804:nans == INFINITE |==> nans < INFINITE
1007:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@isInfinite():804:nans == INFINITE |==> nans <= INFINITE
1008:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@isInfinite():804:nans == INFINITE |==> nans > INFINITE
1009:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@isInfinite():804:nans == INFINITE |==> nans >= INFINITE
1010:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@isInfinite():804:nans == INFINITE |==> false
1011:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@isInfinite():804:nans == INFINITE |==> true
1012:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == QNAN |==> nans != QNAN
1013:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == QNAN |==> nans < QNAN
1014:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == QNAN |==> nans <= QNAN
1015:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == QNAN |==> nans > QNAN
1016:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == QNAN |==> nans >= QNAN
1017:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == QNAN |==> false
1018:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == QNAN |==> true
1019:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == SNAN |==> nans != SNAN
1020:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == SNAN |==> nans < SNAN
1021:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == SNAN |==> nans <= SNAN
1022:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == SNAN |==> nans > SNAN
1023:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == SNAN |==> nans >= SNAN
1024:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == SNAN |==> false
1025:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@isNaN():811:nans == SNAN |==> true
1026:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@isNaN():811:(nans == QNAN) || (nans == SNAN) |==> (nans == QNAN) != (nans == SNAN)
1027:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@isNaN():811:(nans == QNAN) || (nans == SNAN) |==> (nans == QNAN) && (nans == SNAN)
1028:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@isNaN():811:(nans == QNAN) || (nans == SNAN) |==> (nans == QNAN) == (nans == SNAN)
1029:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@isNaN():811:(nans == QNAN) || (nans == SNAN) |==> false
1030:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@isNaN():811:(nans == QNAN) || (nans == SNAN) |==> (nans == QNAN)
1031:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@isNaN():811:(nans == QNAN) || (nans == SNAN) |==> (nans == SNAN)
1032:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@isNaN():811:(nans == QNAN) || (nans == SNAN) |==> true
1033:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() |==> isNaN() != x.isNaN()
1034:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() |==> isNaN() && x.isNaN()
1035:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() |==> isNaN() == x.isNaN()
1036:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() |==> false
1037:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() |==> isNaN()
1038:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() |==> x.isNaN()
1039:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() |==> true
1040:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() < x.field.getRadixDigits()
1041:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() <= x.field.getRadixDigits()
1042:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() == x.field.getRadixDigits()
1043:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() > x.field.getRadixDigits()
1044:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() >= x.field.getRadixDigits()
1045:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:field.getRadixDigits() != x.field.getRadixDigits() |==> false
1046:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:field.getRadixDigits() != x.field.getRadixDigits() |==> true
1047:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> (isNaN() || x.isNaN()) != (field.getRadixDigits() != x.field.getRadixDigits())
1048:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> (isNaN() || x.isNaN()) && field.getRadixDigits() != x.field.getRadixDigits()
1049:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> (isNaN() || x.isNaN()) == (field.getRadixDigits() != x.field.getRadixDigits())
1050:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> false
1051:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> isNaN() || x.isNaN()
1052:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() != x.field.getRadixDigits()
1053:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):823:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> true
1054:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):824:false |==> true
1055:LVR:0:POS:org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:0 |==> 1
1056:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:0 |==> -1
1057:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:compare(this, x) == 0 |==> compare(this, x) != 0
1058:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:compare(this, x) == 0 |==> compare(this, x) < 0
1059:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:compare(this, x) == 0 |==> compare(this, x) <= 0
1060:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:compare(this, x) == 0 |==> compare(this, x) > 0
1061:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:compare(this, x) == 0 |==> compare(this, x) >= 0
1062:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:compare(this, x) == 0 |==> false
1063:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):827:compare(this, x) == 0 |==> true
1064:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@equals(java.lang.Object):830:false |==> true
1065:LVR:POS:0:org.apache.commons.math.dfp.Dfp@hashCode():840:17 |==> 0
1066:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@hashCode():840:17 |==> -17
1067:LVR:POS:0:org.apache.commons.math.dfp.Dfp@hashCode():840:8 |==> 0
1068:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@hashCode():840:8 |==> -8
1069:SOR:<<(int,int):>>(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:sign << 8 |==> sign >> 8
1070:SOR:<<(int,int):>>>(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:sign << 8 |==> sign >>> 8
1071:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) |==> 17 % (sign << 8)
1072:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) |==> 17 * (sign << 8)
1073:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) |==> 17 - (sign << 8)
1074:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) |==> 17 / (sign << 8)
1075:LVR:POS:0:org.apache.commons.math.dfp.Dfp@hashCode():840:16 |==> 0
1076:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@hashCode():840:16 |==> -16
1077:SOR:<<(int,int):>>(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:nans << 16 |==> nans >> 16
1078:SOR:<<(int,int):>>>(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:nans << 16 |==> nans >>> 16
1079:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) |==> (17 + (sign << 8)) % (nans << 16)
1080:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) |==> (17 + (sign << 8)) * (nans << 16)
1081:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) |==> 17 + (sign << 8) - (nans << 16)
1082:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) |==> (17 + (sign << 8)) / (nans << 16)
1083:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp |==> (17 + (sign << 8) + (nans << 16)) % exp
1084:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp |==> (17 + (sign << 8) + (nans << 16)) * exp
1085:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp |==> 17 + (sign << 8) + (nans << 16) - exp
1086:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp |==> (17 + (sign << 8) + (nans << 16)) / exp
1087:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp + Arrays.hashCode(mant) |==> (17 + (sign << 8) + (nans << 16) + exp) % Arrays.hashCode(mant)
1088:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp + Arrays.hashCode(mant) |==> (17 + (sign << 8) + (nans << 16) + exp) * Arrays.hashCode(mant)
1089:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp + Arrays.hashCode(mant) |==> 17 + (sign << 8) + (nans << 16) + exp - Arrays.hashCode(mant)
1090:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@hashCode():840:17 + (sign << 8) + (nans << 16) + exp + Arrays.hashCode(mant) |==> (17 + (sign << 8) + (nans << 16) + exp) / Arrays.hashCode(mant)
1091:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() |==> isNaN() != x.isNaN()
1092:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() |==> isNaN() && x.isNaN()
1093:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() |==> isNaN() == x.isNaN()
1094:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() |==> false
1095:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() |==> isNaN()
1096:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() |==> x.isNaN()
1097:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() |==> true
1098:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() < x.field.getRadixDigits()
1099:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() <= x.field.getRadixDigits()
1100:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() == x.field.getRadixDigits()
1101:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() > x.field.getRadixDigits()
1102:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() >= x.field.getRadixDigits()
1103:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:field.getRadixDigits() != x.field.getRadixDigits() |==> false
1104:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:field.getRadixDigits() != x.field.getRadixDigits() |==> true
1105:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> (isNaN() || x.isNaN()) != (field.getRadixDigits() != x.field.getRadixDigits())
1106:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> (isNaN() || x.isNaN()) && field.getRadixDigits() != x.field.getRadixDigits()
1107:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> (isNaN() || x.isNaN()) == (field.getRadixDigits() != x.field.getRadixDigits())
1108:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> false
1109:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> isNaN() || x.isNaN()
1110:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() != x.field.getRadixDigits()
1111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):848:isNaN() || x.isNaN() || field.getRadixDigits() != x.field.getRadixDigits() |==> true
1112:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):849:false |==> true
1113:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):852:greaterThan(x) || lessThan(x) |==> greaterThan(x) != lessThan(x)
1114:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):852:greaterThan(x) || lessThan(x) |==> greaterThan(x) && lessThan(x)
1115:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):852:greaterThan(x) || lessThan(x) |==> greaterThan(x) == lessThan(x)
1116:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):852:greaterThan(x) || lessThan(x) |==> false
1117:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):852:greaterThan(x) || lessThan(x) |==> greaterThan(x)
1118:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):852:greaterThan(x) || lessThan(x) |==> lessThan(x)
1119:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@unequal(org.apache.commons.math.dfp.Dfp):852:greaterThan(x) || lessThan(x) |==> true
1120:LVR:POS:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:1 |==> 0
1121:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:1 |==> -1
1122:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant.length - 1 |==> a.mant.length % 1
1123:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant.length - 1 |==> a.mant.length * 1
1124:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant.length - 1 |==> a.mant.length + 1
1125:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant.length - 1 |==> a.mant.length / 1
1126:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:0 |==> 1
1127:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:0 |==> -1
1128:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] != 0
1129:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] < 0
1130:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] <= 0
1131:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] > 0
1132:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] >= 0
1133:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 |==> false
1134:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 |==> true
1135:LVR:POS:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:1 |==> 0
1136:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:1 |==> -1
1137:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant.length - 1 |==> b.mant.length % 1
1138:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant.length - 1 |==> b.mant.length * 1
1139:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant.length - 1 |==> b.mant.length + 1
1140:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant.length - 1 |==> b.mant.length / 1
1141:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:0 |==> 1
1142:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:0 |==> -1
1143:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant[b.mant.length - 1] == 0 |==> b.mant[b.mant.length - 1] != 0
1144:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant[b.mant.length - 1] == 0 |==> b.mant[b.mant.length - 1] < 0
1145:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant[b.mant.length - 1] == 0 |==> b.mant[b.mant.length - 1] <= 0
1146:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant[b.mant.length - 1] == 0 |==> b.mant[b.mant.length - 1] > 0
1147:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant[b.mant.length - 1] == 0 |==> b.mant[b.mant.length - 1] >= 0
1148:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant[b.mant.length - 1] == 0 |==> false
1149:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:b.mant[b.mant.length - 1] == 0 |==> true
1150:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] == 0 != (b.mant[b.mant.length - 1] == 0)
1151:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] == 0 == (b.mant[b.mant.length - 1] == 0)
1152:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 |==> false
1153:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] == 0
1154:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 |==> b.mant[b.mant.length - 1] == 0
1155:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 |==> true
1156:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 |==> a.mant[a.mant.length - 1] == 0 || b.mant[b.mant.length - 1] == 0
1157:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.nans == FINITE |==> a.nans != FINITE
1158:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.nans == FINITE |==> a.nans < FINITE
1159:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.nans == FINITE |==> a.nans <= FINITE
1160:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.nans == FINITE |==> a.nans > FINITE
1161:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.nans == FINITE |==> a.nans >= FINITE
1162:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.nans == FINITE |==> false
1163:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.nans == FINITE |==> true
1164:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE |==> (a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0) != (a.nans == FINITE)
1165:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE |==> (a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0) == (a.nans == FINITE)
1166:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE |==> false
1167:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE |==> a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0
1168:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE |==> a.nans == FINITE
1169:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE |==> true
1170:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE |==> a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 || a.nans == FINITE
1171:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:b.nans == FINITE |==> b.nans != FINITE
1172:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:b.nans == FINITE |==> b.nans < FINITE
1173:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:b.nans == FINITE |==> b.nans <= FINITE
1174:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:b.nans == FINITE |==> b.nans > FINITE
1175:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:b.nans == FINITE |==> b.nans >= FINITE
1176:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:b.nans == FINITE |==> false
1177:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:b.nans == FINITE |==> true
1178:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE |==> (a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE) != (b.nans == FINITE)
1179:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE |==> (a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE) == (b.nans == FINITE)
1180:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE |==> false
1181:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE |==> a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE
1182:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE |==> b.nans == FINITE
1183:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):864:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE |==> true
1184:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):863:a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE && b.nans == FINITE |==> a.mant[a.mant.length - 1] == 0 && b.mant[b.mant.length - 1] == 0 && a.nans == FINITE || b.nans == FINITE
1185:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):865:0 |==> 1
1186:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):865:0 |==> -1
1187:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):868:a.sign != b.sign |==> a.sign < b.sign
1188:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):868:a.sign != b.sign |==> a.sign <= b.sign
1189:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):868:a.sign != b.sign |==> a.sign == b.sign
1190:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):868:a.sign != b.sign |==> a.sign > b.sign
1191:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):868:a.sign != b.sign |==> a.sign >= b.sign
1192:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):868:a.sign != b.sign |==> false
1193:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):868:a.sign != b.sign |==> true
1194:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:-1 |==> 0
1195:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:-1 |==> 1
1196:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:a.sign == -1 |==> a.sign != -1
1197:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:a.sign == -1 |==> a.sign < -1
1198:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:a.sign == -1 |==> a.sign <= -1
1199:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:a.sign == -1 |==> a.sign > -1
1200:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:a.sign == -1 |==> a.sign >= -1
1201:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:a.sign == -1 |==> false
1202:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):869:a.sign == -1 |==> true
1203:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):870:-1 |==> 0
1204:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):870:-1 |==> 1
1205:LVR:POS:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):872:1 |==> 0
1206:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):872:1 |==> -1
1207:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE |==> a.nans != INFINITE
1208:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE |==> a.nans < INFINITE
1209:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE |==> a.nans <= INFINITE
1210:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE |==> a.nans > INFINITE
1211:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE |==> a.nans >= INFINITE
1212:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE |==> false
1213:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE |==> true
1214:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:b.nans == FINITE |==> b.nans != FINITE
1215:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:b.nans == FINITE |==> b.nans < FINITE
1216:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:b.nans == FINITE |==> b.nans <= FINITE
1217:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:b.nans == FINITE |==> b.nans > FINITE
1218:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:b.nans == FINITE |==> b.nans >= FINITE
1219:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:b.nans == FINITE |==> false
1220:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:b.nans == FINITE |==> true
1221:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE && b.nans == FINITE |==> a.nans == INFINITE != (b.nans == FINITE)
1222:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE && b.nans == FINITE |==> a.nans == INFINITE == (b.nans == FINITE)
1223:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE && b.nans == FINITE |==> false
1224:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE && b.nans == FINITE |==> a.nans == INFINITE
1225:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE && b.nans == FINITE |==> b.nans == FINITE
1226:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE && b.nans == FINITE |==> true
1227:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):877:a.nans == INFINITE && b.nans == FINITE |==> a.nans == INFINITE || b.nans == FINITE
1228:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE |==> a.nans != FINITE
1229:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE |==> a.nans < FINITE
1230:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE |==> a.nans <= FINITE
1231:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE |==> a.nans > FINITE
1232:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE |==> a.nans >= FINITE
1233:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE |==> false
1234:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE |==> true
1235:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:b.nans == INFINITE |==> b.nans != INFINITE
1236:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:b.nans == INFINITE |==> b.nans < INFINITE
1237:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:b.nans == INFINITE |==> b.nans <= INFINITE
1238:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:b.nans == INFINITE |==> b.nans > INFINITE
1239:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:b.nans == INFINITE |==> b.nans >= INFINITE
1240:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:b.nans == INFINITE |==> false
1241:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:b.nans == INFINITE |==> true
1242:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE && b.nans == INFINITE |==> a.nans == FINITE != (b.nans == INFINITE)
1243:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE && b.nans == INFINITE |==> a.nans == FINITE == (b.nans == INFINITE)
1244:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE && b.nans == INFINITE |==> false
1245:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE && b.nans == INFINITE |==> a.nans == FINITE
1246:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE && b.nans == INFINITE |==> b.nans == INFINITE
1247:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE && b.nans == INFINITE |==> true
1248:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):881:a.nans == FINITE && b.nans == INFINITE |==> a.nans == FINITE || b.nans == INFINITE
1249:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):882:-b.sign |==> +b.sign
1250:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):882:-b.sign |==> ~b.sign
1251:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE |==> a.nans != INFINITE
1252:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE |==> a.nans < INFINITE
1253:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE |==> a.nans <= INFINITE
1254:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE |==> a.nans > INFINITE
1255:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE |==> a.nans >= INFINITE
1256:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE |==> false
1257:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE |==> true
1258:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:b.nans == INFINITE |==> b.nans != INFINITE
1259:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:b.nans == INFINITE |==> b.nans < INFINITE
1260:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:b.nans == INFINITE |==> b.nans <= INFINITE
1261:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:b.nans == INFINITE |==> b.nans > INFINITE
1262:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:b.nans == INFINITE |==> b.nans >= INFINITE
1263:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:b.nans == INFINITE |==> false
1264:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:b.nans == INFINITE |==> true
1265:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE && b.nans == INFINITE |==> a.nans == INFINITE != (b.nans == INFINITE)
1266:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE && b.nans == INFINITE |==> a.nans == INFINITE == (b.nans == INFINITE)
1267:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE && b.nans == INFINITE |==> false
1268:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE && b.nans == INFINITE |==> a.nans == INFINITE
1269:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE && b.nans == INFINITE |==> b.nans == INFINITE
1270:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE && b.nans == INFINITE |==> true
1271:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):885:a.nans == INFINITE && b.nans == INFINITE |==> a.nans == INFINITE || b.nans == INFINITE
1272:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):886:0 |==> 1
1273:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):886:0 |==> -1
1274:LVR:POS:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:1 |==> 0
1275:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:1 |==> -1
1276:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length % 1
1277:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length * 1
1278:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length + 1
1279:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length / 1
1280:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:0 |==> 1
1281:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:0 |==> -1
1282:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] < 0
1283:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] <= 0
1284:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] == 0
1285:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] > 0
1286:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] >= 0
1287:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 |==> false
1288:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 |==> true
1289:LVR:POS:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:1 |==> 0
1290:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:1 |==> -1
1291:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length % 1
1292:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length * 1
1293:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length + 1
1294:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant.length - 1 |==> b.mant.length / 1
1295:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:0 |==> 1
1296:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:0 |==> -1
1297:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:a.mant[b.mant.length - 1] != 0 |==> a.mant[b.mant.length - 1] < 0
1298:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:a.mant[b.mant.length - 1] != 0 |==> a.mant[b.mant.length - 1] <= 0
1299:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:a.mant[b.mant.length - 1] != 0 |==> a.mant[b.mant.length - 1] == 0
1300:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:a.mant[b.mant.length - 1] != 0 |==> a.mant[b.mant.length - 1] > 0
1301:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:a.mant[b.mant.length - 1] != 0 |==> a.mant[b.mant.length - 1] >= 0
1302:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:a.mant[b.mant.length - 1] != 0 |==> false
1303:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:a.mant[b.mant.length - 1] != 0 |==> true
1304:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 && a.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] != 0 != (a.mant[b.mant.length - 1] != 0)
1305:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 && a.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] != 0 == (a.mant[b.mant.length - 1] != 0)
1306:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 && a.mant[b.mant.length - 1] != 0 |==> false
1307:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 && a.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] != 0
1308:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 && a.mant[b.mant.length - 1] != 0 |==> a.mant[b.mant.length - 1] != 0
1309:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 && a.mant[b.mant.length - 1] != 0 |==> true
1310:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):890:b.mant[b.mant.length - 1] != 0 && a.mant[b.mant.length - 1] != 0 |==> b.mant[b.mant.length - 1] != 0 || a.mant[b.mant.length - 1] != 0
1311:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):891:a.exp < b.exp |==> a.exp != b.exp
1312:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):891:a.exp < b.exp |==> a.exp <= b.exp
1313:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):891:a.exp < b.exp |==> a.exp == b.exp
1314:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):891:a.exp < b.exp |==> a.exp > b.exp
1315:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):891:a.exp < b.exp |==> a.exp >= b.exp
1316:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):891:a.exp < b.exp |==> false
1317:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):891:a.exp < b.exp |==> true
1318:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):892:-a.sign |==> +a.sign
1319:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):892:-a.sign |==> ~a.sign
1320:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):895:a.exp > b.exp |==> a.exp != b.exp
1321:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):895:a.exp > b.exp |==> a.exp < b.exp
1322:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):895:a.exp > b.exp |==> a.exp <= b.exp
1323:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):895:a.exp > b.exp |==> a.exp == b.exp
1324:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):895:a.exp > b.exp |==> a.exp >= b.exp
1325:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):895:a.exp > b.exp |==> false
1326:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):895:a.exp > b.exp |==> true
1327:LVR:POS:0:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:1 |==> 0
1328:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:1 |==> -1
1329:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:a.mant.length - 1 |==> a.mant.length % 1
1330:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:a.mant.length - 1 |==> a.mant.length * 1
1331:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:a.mant.length - 1 |==> a.mant.length + 1
1332:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:a.mant.length - 1 |==> a.mant.length / 1
1333:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:0 |==> 1
1334:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:0 |==> -1
1335:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:i >= 0 |==> i != 0
1336:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:i >= 0 |==> i < 0
1337:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:i >= 0 |==> i <= 0
1338:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:i >= 0 |==> i == 0
1339:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:i >= 0 |==> i > 0
1340:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:i >= 0 |==> false
1341:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):901:i >= 0 |==> true
1342:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):902:a.mant[i] > b.mant[i] |==> a.mant[i] != b.mant[i]
1343:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):902:a.mant[i] > b.mant[i] |==> a.mant[i] < b.mant[i]
1344:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):902:a.mant[i] > b.mant[i] |==> a.mant[i] <= b.mant[i]
1345:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):902:a.mant[i] > b.mant[i] |==> a.mant[i] == b.mant[i]
1346:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):902:a.mant[i] > b.mant[i] |==> a.mant[i] >= b.mant[i]
1347:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):902:a.mant[i] > b.mant[i] |==> false
1348:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):902:a.mant[i] > b.mant[i] |==> true
1349:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):906:a.mant[i] < b.mant[i] |==> a.mant[i] != b.mant[i]
1350:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):906:a.mant[i] < b.mant[i] |==> a.mant[i] <= b.mant[i]
1351:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):906:a.mant[i] < b.mant[i] |==> a.mant[i] == b.mant[i]
1352:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):906:a.mant[i] < b.mant[i] |==> a.mant[i] > b.mant[i]
1353:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):906:a.mant[i] < b.mant[i] |==> a.mant[i] >= b.mant[i]
1354:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):906:a.mant[i] < b.mant[i] |==> false
1355:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):906:a.mant[i] < b.mant[i] |==> true
1356:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):907:-a.sign |==> +a.sign
1357:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):907:-a.sign |==> ~a.sign
1358:LVR:0:POS:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):911:0 |==> 1
1359:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@compare(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):911:0 |==> -1
1360:LVR:POS:0:org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:1 |==> 0
1361:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:1 |==> -1
1362:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:mant.length - 1 |==> mant.length % 1
1363:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:mant.length - 1 |==> mant.length * 1
1364:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:mant.length - 1 |==> mant.length + 1
1365:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:mant.length - 1 |==> mant.length / 1
1366:LVR:0:POS:org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:0 |==> 1
1367:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:0 |==> -1
1368:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] != 0
1369:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] < 0
1370:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] <= 0
1371:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] > 0
1372:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] >= 0
1373:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:result.mant[mant.length - 1] == 0 |==> false
1374:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):949:result.mant[mant.length - 1] == 0 |==> true
1375:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@remainder(org.apache.commons.math.dfp.Dfp):950:result.sign = sign |==> <NO-OP>
1376:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):962:false |==> true
1377:COR:isNaN():TRUE:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):964:isNaN() |==> false
1378:COR:isNaN():FALSE:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):964:isNaN() |==> true
1379:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):968:nans == INFINITE |==> nans != INFINITE
1380:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):968:nans == INFINITE |==> nans < INFINITE
1381:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):968:nans == INFINITE |==> nans <= INFINITE
1382:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):968:nans == INFINITE |==> nans > INFINITE
1383:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):968:nans == INFINITE |==> nans >= INFINITE
1384:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):968:nans == INFINITE |==> false
1385:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):968:nans == INFINITE |==> true
1386:LVR:POS:0:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:1 |==> 0
1387:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:1 |==> -1
1388:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant.length - 1 |==> mant.length % 1
1389:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant.length - 1 |==> mant.length * 1
1390:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant.length - 1 |==> mant.length + 1
1391:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant.length - 1 |==> mant.length / 1
1392:LVR:0:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:0 |==> 1
1393:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:0 |==> -1
1394:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] != 0
1395:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] < 0
1396:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] <= 0
1397:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] > 0
1398:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] >= 0
1399:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant[mant.length - 1] == 0 |==> false
1400:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):972:mant[mant.length - 1] == 0 |==> true
1401:LVR:0:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:0 |==> 1
1402:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:0 |==> -1
1403:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:exp < 0 |==> exp != 0
1404:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:exp < 0 |==> exp <= 0
1405:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:exp < 0 |==> exp == 0
1406:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:exp < 0 |==> exp > 0
1407:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:exp < 0 |==> exp >= 0
1408:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:exp < 0 |==> false
1409:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):979:exp < 0 |==> true
1410:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):980:field.setIEEEFlagsBits(DfpField.FLAG_INEXACT) |==> <NO-OP>
1411:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):982:result = dotrap(DfpField.FLAG_INEXACT, TRUNC_TRAP, this, result) |==> <NO-OP>
1412:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):990:exp >= mant.length |==> exp != mant.length
1413:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):990:exp >= mant.length |==> exp < mant.length
1414:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):990:exp >= mant.length |==> exp <= mant.length
1415:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):990:exp >= mant.length |==> exp == mant.length
1416:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):990:exp >= mant.length |==> exp > mant.length
1417:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):990:exp >= mant.length |==> false
1418:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):990:exp >= mant.length |==> true
1419:LVR:0:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:0 |==> 1
1420:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:0 |==> -1
1421:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:mant.length - result.exp |==> mant.length % result.exp
1422:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:mant.length - result.exp |==> mant.length * result.exp
1423:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:mant.length - result.exp |==> mant.length + result.exp
1424:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:mant.length - result.exp |==> mant.length / result.exp
1425:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:i < mant.length - result.exp |==> i != mant.length - result.exp
1426:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:i < mant.length - result.exp |==> i <= mant.length - result.exp
1427:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:i < mant.length - result.exp |==> i == mant.length - result.exp
1428:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:i < mant.length - result.exp |==> i > mant.length - result.exp
1429:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:i < mant.length - result.exp |==> i >= mant.length - result.exp
1430:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:i < mant.length - result.exp |==> false
1431:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):998:i < mant.length - result.exp |==> true
1432:LVR:0:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:0 |==> 1
1433:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:0 |==> -1
1434:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:result.mant[i] != 0 |==> result.mant[i] < 0
1435:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:result.mant[i] != 0 |==> result.mant[i] <= 0
1436:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:result.mant[i] != 0 |==> result.mant[i] == 0
1437:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:result.mant[i] != 0 |==> result.mant[i] > 0
1438:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:result.mant[i] != 0 |==> result.mant[i] >= 0
1439:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:result.mant[i] != 0 |==> false
1440:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:result.mant[i] != 0 |==> true
1441:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):999:changed |= result.mant[i] != 0 |==> <NO-OP>
1442:LVR:0:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1000:0 |==> 1
1443:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1000:0 |==> -1
1444:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1000:result.mant[i] = 0 |==> <NO-OP>
1445:COR:changed:TRUE:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1003:changed |==> false
1446:COR:changed:FALSE:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1003:changed |==> true
1447:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:-1 |==> 0
1448:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:-1 |==> 1
1449:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:result.sign == -1 |==> result.sign != -1
1450:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:result.sign == -1 |==> result.sign < -1
1451:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:result.sign == -1 |==> result.sign <= -1
1452:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:result.sign == -1 |==> result.sign > -1
1453:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:result.sign == -1 |==> result.sign >= -1
1454:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:result.sign == -1 |==> false
1455:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1006:result.sign == -1 |==> true
1456:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1008:-1 |==> 0
1457:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1008:-1 |==> 1
1458:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1008:result = result.add(newInstance(-1)) |==> <NO-OP>
1459:LVR:POS:0:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:1 |==> 0
1460:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:1 |==> -1
1461:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:result.sign == 1 |==> result.sign != 1
1462:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:result.sign == 1 |==> result.sign < 1
1463:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:result.sign == 1 |==> result.sign <= 1
1464:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:result.sign == 1 |==> result.sign > 1
1465:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:result.sign == 1 |==> result.sign >= 1
1466:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:result.sign == 1 |==> false
1467:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1013:result.sign == 1 |==> true
1468:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1015:result = result.add(getOne()) |==> <NO-OP>
1469:LVR:POS:0:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1023:1 |==> 0
1470:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1023:1 |==> -1
1471:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1023:a.sign = 1 |==> <NO-OP>
1472:COR:a.greaterThan(half):TRUE:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1024:a.greaterThan(half) |==> false
1473:COR:a.greaterThan(half):FALSE:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1024:a.greaterThan(half) |==> true
1474:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1025:a = newInstance(getOne()) |==> <NO-OP>
1475:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1026:a.sign = sign |==> <NO-OP>
1476:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1027:result = result.add(a) |==> <NO-OP>
1477:LVR:0:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:0 |==> 1
1478:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:0 |==> -1
1479:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.exp > 0 |==> result.exp != 0
1480:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.exp > 0 |==> result.exp < 0
1481:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.exp > 0 |==> result.exp <= 0
1482:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.exp > 0 |==> result.exp == 0
1483:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.exp > 0 |==> result.exp >= 0
1484:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.exp > 0 |==> false
1485:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.exp > 0 |==> true
1486:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 |==> a.equals(half) != result.exp > 0
1487:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 |==> a.equals(half) == result.exp > 0
1488:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 |==> false
1489:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 |==> a.equals(half)
1490:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 |==> result.exp > 0
1491:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 |==> true
1492:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 |==> a.equals(half) || result.exp > 0
1493:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:mant.length - result.exp |==> mant.length % result.exp
1494:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:mant.length - result.exp |==> mant.length * result.exp
1495:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:mant.length - result.exp |==> mant.length + result.exp
1496:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:mant.length - result.exp |==> mant.length / result.exp
1497:LVR:POS:0:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:1 |==> 0
1498:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:1 |==> -1
1499:LOR:&(int,int):^(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.mant[mant.length - result.exp] & 1 |==> result.mant[mant.length - result.exp] ^ 1
1500:LOR:&(int,int):|(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:result.mant[mant.length - result.exp] & 1 |==> result.mant[mant.length - result.exp] | 1
1501:LVR:0:POS:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:0 |==> 1
1502:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:0 |==> -1
1503:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:(result.mant[mant.length - result.exp] & 1) != 0 |==> (result.mant[mant.length - result.exp] & 1) < 0
1504:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:(result.mant[mant.length - result.exp] & 1) != 0 |==> (result.mant[mant.length - result.exp] & 1) <= 0
1505:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:(result.mant[mant.length - result.exp] & 1) != 0 |==> (result.mant[mant.length - result.exp] & 1) == 0
1506:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:(result.mant[mant.length - result.exp] & 1) != 0 |==> (result.mant[mant.length - result.exp] & 1) > 0
1507:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:(result.mant[mant.length - result.exp] & 1) != 0 |==> (result.mant[mant.length - result.exp] & 1) >= 0
1508:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:(result.mant[mant.length - result.exp] & 1) != 0 |==> false
1509:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:(result.mant[mant.length - result.exp] & 1) != 0 |==> true
1510:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 && (result.mant[mant.length - result.exp] & 1) != 0 |==> (a.equals(half) && result.exp > 0) != ((result.mant[mant.length - result.exp] & 1) != 0)
1511:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 && (result.mant[mant.length - result.exp] & 1) != 0 |==> (a.equals(half) && result.exp > 0) == ((result.mant[mant.length - result.exp] & 1) != 0)
1512:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 && (result.mant[mant.length - result.exp] & 1) != 0 |==> false
1513:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 && (result.mant[mant.length - result.exp] & 1) != 0 |==> a.equals(half) && result.exp > 0
1514:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 && (result.mant[mant.length - result.exp] & 1) != 0 |==> (result.mant[mant.length - result.exp] & 1) != 0
1515:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 && (result.mant[mant.length - result.exp] & 1) != 0 |==> true
1516:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1031:a.equals(half) && result.exp > 0 && (result.mant[mant.length - result.exp] & 1) != 0 |==> a.equals(half) && result.exp > 0 || (result.mant[mant.length - result.exp] & 1) != 0
1517:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1032:a = newInstance(getOne()) |==> <NO-OP>
1518:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1033:a.sign = sign |==> <NO-OP>
1519:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1034:result = result.add(a) |==> <NO-OP>
1520:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1039:field.setIEEEFlagsBits(DfpField.FLAG_INEXACT) |==> <NO-OP>
1521:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@trunc(org.apache.commons.math.dfp.DfpField.RoundingMode):1040:result = dotrap(DfpField.FLAG_INEXACT, TRUNC_TRAP, this, result) |==> <NO-OP>
1522:LVR:0:POS:org.apache.commons.math.dfp.Dfp@intValue():1053:0 |==> 1
1523:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@intValue():1053:0 |==> -1
1524:LVR:POS:0:org.apache.commons.math.dfp.Dfp@intValue():1057:2147483647 |==> 0
1525:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@intValue():1057:2147483647 |==> -2147483647
1526:COR:rounded.greaterThan(newInstance(2147483647)):TRUE:org.apache.commons.math.dfp.Dfp@intValue():1057:rounded.greaterThan(newInstance(2147483647)) |==> false
1527:COR:rounded.greaterThan(newInstance(2147483647)):FALSE:org.apache.commons.math.dfp.Dfp@intValue():1057:rounded.greaterThan(newInstance(2147483647)) |==> true
1528:LVR:POS:0:org.apache.commons.math.dfp.Dfp@intValue():1058:2147483647 |==> 0
1529:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@intValue():1058:2147483647 |==> -2147483647
1530:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@intValue():1061:-2147483648 |==> 0
1531:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@intValue():1061:-2147483648 |==> -2147483648
1532:COR:rounded.lessThan(newInstance(-2147483648)):TRUE:org.apache.commons.math.dfp.Dfp@intValue():1061:rounded.lessThan(newInstance(-2147483648)) |==> false
1533:COR:rounded.lessThan(newInstance(-2147483648)):FALSE:org.apache.commons.math.dfp.Dfp@intValue():1061:rounded.lessThan(newInstance(-2147483648)) |==> true
1534:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@intValue():1062:-2147483648 |==> 0
1535:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@intValue():1062:-2147483648 |==> -2147483648
1536:LVR:POS:0:org.apache.commons.math.dfp.Dfp@intValue():1065:1 |==> 0
1537:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@intValue():1065:1 |==> -1
1538:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - 1 |==> mant.length % 1
1539:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - 1 |==> mant.length * 1
1540:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - 1 |==> mant.length + 1
1541:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - 1 |==> mant.length / 1
1542:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - rounded.exp |==> mant.length % rounded.exp
1543:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - rounded.exp |==> mant.length * rounded.exp
1544:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - rounded.exp |==> mant.length + rounded.exp
1545:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:mant.length - rounded.exp |==> mant.length / rounded.exp
1546:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:i >= mant.length - rounded.exp |==> i != mant.length - rounded.exp
1547:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:i >= mant.length - rounded.exp |==> i < mant.length - rounded.exp
1548:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:i >= mant.length - rounded.exp |==> i <= mant.length - rounded.exp
1549:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:i >= mant.length - rounded.exp |==> i == mant.length - rounded.exp
1550:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:i >= mant.length - rounded.exp |==> i > mant.length - rounded.exp
1551:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:i >= mant.length - rounded.exp |==> false
1552:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@intValue():1065:i >= mant.length - rounded.exp |==> true
1553:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX |==> result % RADIX
1554:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX |==> result + RADIX
1555:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX |==> result - RADIX
1556:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX |==> result / RADIX
1557:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX + rounded.mant[i] |==> result * RADIX % rounded.mant[i]
1558:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX + rounded.mant[i] |==> result * RADIX * rounded.mant[i]
1559:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX + rounded.mant[i] |==> result * RADIX - rounded.mant[i]
1560:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@intValue():1066:result * RADIX + rounded.mant[i] |==> result * RADIX / rounded.mant[i]
1561:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@intValue():1066:result = result * RADIX + rounded.mant[i] |==> <NO-OP>
1562:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@intValue():1069:-1 |==> 0
1563:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@intValue():1069:-1 |==> 1
1564:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@intValue():1069:rounded.sign == -1 |==> rounded.sign != -1
1565:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@intValue():1069:rounded.sign == -1 |==> rounded.sign < -1
1566:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@intValue():1069:rounded.sign == -1 |==> rounded.sign <= -1
1567:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@intValue():1069:rounded.sign == -1 |==> rounded.sign > -1
1568:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@intValue():1069:rounded.sign == -1 |==> rounded.sign >= -1
1569:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@intValue():1069:rounded.sign == -1 |==> false
1570:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@intValue():1069:rounded.sign == -1 |==> true
1571:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@intValue():1070:-result |==> +result
1572:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@intValue():1070:-result |==> ~result
1573:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@intValue():1070:result = -result |==> <NO-OP>
1574:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10K():1082:1 |==> 0
1575:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10K():1082:1 |==> -1
1576:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10K():1082:exp - 1 |==> exp % 1
1577:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10K():1082:exp - 1 |==> exp * 1
1578:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10K():1082:exp - 1 |==> exp + 1
1579:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10K():1082:exp - 1 |==> exp / 1
1580:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10K(int):1091:1 |==> 0
1581:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10K(int):1091:1 |==> -1
1582:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@power10K(int):1091:e + 1 |==> e % 1
1583:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10K(int):1091:e + 1 |==> e * 1
1584:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10K(int):1091:e + 1 |==> e - 1
1585:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@power10K(int):1091:e + 1 |==> e / 1
1586:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@power10K(int):1091:d.exp = e + 1 |==> <NO-OP>
1587:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1099:1 |==> 0
1588:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1099:1 |==> -1
1589:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant.length - 1 |==> mant.length % 1
1590:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant.length - 1 |==> mant.length * 1
1591:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant.length - 1 |==> mant.length + 1
1592:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant.length - 1 |==> mant.length / 1
1593:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1099:1000 |==> 0
1594:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1099:1000 |==> -1000
1595:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant[mant.length - 1] > 1000 |==> mant[mant.length - 1] != 1000
1596:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant[mant.length - 1] > 1000 |==> mant[mant.length - 1] < 1000
1597:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant[mant.length - 1] > 1000 |==> mant[mant.length - 1] <= 1000
1598:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant[mant.length - 1] > 1000 |==> mant[mant.length - 1] == 1000
1599:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant[mant.length - 1] > 1000 |==> mant[mant.length - 1] >= 1000
1600:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant[mant.length - 1] > 1000 |==> false
1601:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@log10():1099:mant[mant.length - 1] > 1000 |==> true
1602:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1100:4 |==> 0
1603:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1100:4 |==> -4
1604:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 |==> exp % 4
1605:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 |==> exp + 4
1606:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 |==> exp - 4
1607:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 |==> exp / 4
1608:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1100:1 |==> 0
1609:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1100:1 |==> -1
1610:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 - 1 |==> exp * 4 % 1
1611:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 - 1 |==> exp * 4 * 1
1612:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 - 1 |==> exp * 4 + 1
1613:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1100:exp * 4 - 1 |==> exp * 4 / 1
1614:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1102:1 |==> 0
1615:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1102:1 |==> -1
1616:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant.length - 1 |==> mant.length % 1
1617:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant.length - 1 |==> mant.length * 1
1618:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant.length - 1 |==> mant.length + 1
1619:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant.length - 1 |==> mant.length / 1
1620:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1102:100 |==> 0
1621:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1102:100 |==> -100
1622:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant[mant.length - 1] > 100 |==> mant[mant.length - 1] != 100
1623:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant[mant.length - 1] > 100 |==> mant[mant.length - 1] < 100
1624:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant[mant.length - 1] > 100 |==> mant[mant.length - 1] <= 100
1625:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant[mant.length - 1] > 100 |==> mant[mant.length - 1] == 100
1626:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant[mant.length - 1] > 100 |==> mant[mant.length - 1] >= 100
1627:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant[mant.length - 1] > 100 |==> false
1628:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@log10():1102:mant[mant.length - 1] > 100 |==> true
1629:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1103:4 |==> 0
1630:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1103:4 |==> -4
1631:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 |==> exp % 4
1632:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 |==> exp + 4
1633:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 |==> exp - 4
1634:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 |==> exp / 4
1635:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1103:2 |==> 0
1636:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1103:2 |==> -2
1637:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 - 2 |==> exp * 4 % 2
1638:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 - 2 |==> exp * 4 * 2
1639:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 - 2 |==> exp * 4 + 2
1640:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1103:exp * 4 - 2 |==> exp * 4 / 2
1641:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1105:1 |==> 0
1642:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1105:1 |==> -1
1643:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant.length - 1 |==> mant.length % 1
1644:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant.length - 1 |==> mant.length * 1
1645:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant.length - 1 |==> mant.length + 1
1646:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant.length - 1 |==> mant.length / 1
1647:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1105:10 |==> 0
1648:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1105:10 |==> -10
1649:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant[mant.length - 1] > 10 |==> mant[mant.length - 1] != 10
1650:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant[mant.length - 1] > 10 |==> mant[mant.length - 1] < 10
1651:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant[mant.length - 1] > 10 |==> mant[mant.length - 1] <= 10
1652:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant[mant.length - 1] > 10 |==> mant[mant.length - 1] == 10
1653:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant[mant.length - 1] > 10 |==> mant[mant.length - 1] >= 10
1654:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant[mant.length - 1] > 10 |==> false
1655:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@log10():1105:mant[mant.length - 1] > 10 |==> true
1656:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1106:4 |==> 0
1657:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1106:4 |==> -4
1658:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 |==> exp % 4
1659:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 |==> exp + 4
1660:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 |==> exp - 4
1661:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 |==> exp / 4
1662:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1106:3 |==> 0
1663:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1106:3 |==> -3
1664:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 - 3 |==> exp * 4 % 3
1665:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 - 3 |==> exp * 4 * 3
1666:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 - 3 |==> exp * 4 + 3
1667:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1106:exp * 4 - 3 |==> exp * 4 / 3
1668:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1108:4 |==> 0
1669:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1108:4 |==> -4
1670:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 |==> exp % 4
1671:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 |==> exp + 4
1672:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 |==> exp - 4
1673:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 |==> exp / 4
1674:LVR:POS:0:org.apache.commons.math.dfp.Dfp@log10():1108:4 |==> 0
1675:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@log10():1108:4 |==> -4
1676:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 - 4 |==> exp * 4 % 4
1677:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 - 4 |==> exp * 4 * 4
1678:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 - 4 |==> exp * 4 + 4
1679:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@log10():1108:exp * 4 - 4 |==> exp * 4 / 4
1680:LVR:0:POS:org.apache.commons.math.dfp.Dfp@power10(int):1118:0 |==> 1
1681:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1118:0 |==> -1
1682:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1118:e >= 0 |==> e != 0
1683:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1118:e >= 0 |==> e < 0
1684:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1118:e >= 0 |==> e <= 0
1685:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1118:e >= 0 |==> e == 0
1686:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1118:e >= 0 |==> e > 0
1687:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1118:e >= 0 |==> false
1688:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1118:e >= 0 |==> true
1689:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1119:4 |==> 0
1690:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1119:4 |==> -4
1691:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 |==> e % 4
1692:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 |==> e * 4
1693:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 |==> e + 4
1694:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 |==> e - 4
1695:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1119:1 |==> 0
1696:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1119:1 |==> -1
1697:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 + 1 |==> e / 4 % 1
1698:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 + 1 |==> e / 4 * 1
1699:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 + 1 |==> e / 4 - 1
1700:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1119:e / 4 + 1 |==> e / 4 / 1
1701:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@power10(int):1119:d.exp = e / 4 + 1 |==> <NO-OP>
1702:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1121:1 |==> 0
1703:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1121:1 |==> -1
1704:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:e + 1 |==> e % 1
1705:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:e + 1 |==> e * 1
1706:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:e + 1 |==> e - 1
1707:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:e + 1 |==> e / 1
1708:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1121:4 |==> 0
1709:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1121:4 |==> -4
1710:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:(e + 1) / 4 |==> (e + 1) % 4
1711:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:(e + 1) / 4 |==> (e + 1) * 4
1712:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:(e + 1) / 4 |==> (e + 1) + 4
1713:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1121:(e + 1) / 4 |==> (e + 1) - 4
1714:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@power10(int):1121:d.exp = (e + 1) / 4 |==> <NO-OP>
1715:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1124:4 |==> 0
1716:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1124:4 |==> -4
1717:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 |==> e * 4
1718:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 |==> e + 4
1719:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 |==> e - 4
1720:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 |==> e / 4
1721:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1124:4 |==> 0
1722:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1124:4 |==> -4
1723:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 + 4 |==> e % 4 % 4
1724:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 + 4 |==> e % 4 * 4
1725:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 + 4 |==> e % 4 - 4
1726:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:e % 4 + 4 |==> e % 4 / 4
1727:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1124:4 |==> 0
1728:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1124:4 |==> -4
1729:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:(e % 4 + 4) % 4 |==> (e % 4 + 4) * 4
1730:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:(e % 4 + 4) % 4 |==> (e % 4 + 4) + 4
1731:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:(e % 4 + 4) % 4 |==> (e % 4 + 4) - 4
1732:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@power10(int):1124:(e % 4 + 4) % 4 |==> (e % 4 + 4) / 4
1733:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1128:10 |==> 0
1734:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1128:10 |==> -10
1735:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@power10(int):1128:d = d.multiply(10) |==> <NO-OP>
1736:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1131:100 |==> 0
1737:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1131:100 |==> -100
1738:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@power10(int):1131:d = d.multiply(100) |==> <NO-OP>
1739:LVR:POS:0:org.apache.commons.math.dfp.Dfp@power10(int):1134:1000 |==> 0
1740:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@power10(int):1134:1000 |==> -1000
1741:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@power10(int):1134:d = d.multiply(1000) |==> <NO-OP>
1742:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1148:RADIX - extra |==> RADIX % extra
1743:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1148:RADIX - extra |==> RADIX * extra
1744:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1148:RADIX - extra |==> RADIX + extra
1745:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1148:RADIX - extra |==> RADIX / extra
1746:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@complement(int):1148:extra = RADIX - extra |==> <NO-OP>
1747:LVR:0:POS:org.apache.commons.math.dfp.Dfp@complement(int):1149:0 |==> 1
1748:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@complement(int):1149:0 |==> -1
1749:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1149:i < mant.length |==> i != mant.length
1750:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1149:i < mant.length |==> i <= mant.length
1751:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1149:i < mant.length |==> i == mant.length
1752:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1149:i < mant.length |==> i > mant.length
1753:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1149:i < mant.length |==> i >= mant.length
1754:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1149:i < mant.length |==> false
1755:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1149:i < mant.length |==> true
1756:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] |==> RADIX % mant[i]
1757:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] |==> RADIX * mant[i]
1758:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] |==> RADIX + mant[i]
1759:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] |==> RADIX / mant[i]
1760:LVR:POS:0:org.apache.commons.math.dfp.Dfp@complement(int):1150:1 |==> 0
1761:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@complement(int):1150:1 |==> -1
1762:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] - 1 |==> (RADIX - mant[i]) % 1
1763:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] - 1 |==> (RADIX - mant[i]) * 1
1764:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] - 1 |==> RADIX - mant[i] + 1
1765:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1150:RADIX - mant[i] - 1 |==> (RADIX - mant[i]) / 1
1766:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@complement(int):1150:mant[i] = RADIX - mant[i] - 1 |==> <NO-OP>
1767:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1153:extra / RADIX |==> extra % RADIX
1768:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1153:extra / RADIX |==> extra * RADIX
1769:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1153:extra / RADIX |==> extra + RADIX
1770:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1153:extra / RADIX |==> extra - RADIX
1771:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:rh * RADIX |==> rh % RADIX
1772:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:rh * RADIX |==> rh + RADIX
1773:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:rh * RADIX |==> rh - RADIX
1774:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:rh * RADIX |==> rh / RADIX
1775:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:extra - rh * RADIX |==> extra % (rh * RADIX)
1776:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:extra - rh * RADIX |==> extra * (rh * RADIX)
1777:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:extra - rh * RADIX |==> extra + rh * RADIX
1778:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1154:extra - rh * RADIX |==> extra / (rh * RADIX)
1779:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@complement(int):1154:extra = extra - rh * RADIX |==> <NO-OP>
1780:LVR:0:POS:org.apache.commons.math.dfp.Dfp@complement(int):1155:0 |==> 1
1781:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@complement(int):1155:0 |==> -1
1782:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1155:i < mant.length |==> i != mant.length
1783:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1155:i < mant.length |==> i <= mant.length
1784:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1155:i < mant.length |==> i == mant.length
1785:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1155:i < mant.length |==> i > mant.length
1786:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1155:i < mant.length |==> i >= mant.length
1787:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1155:i < mant.length |==> false
1788:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1155:i < mant.length |==> true
1789:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1156:mant[i] + rh |==> mant[i] % rh
1790:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1156:mant[i] + rh |==> mant[i] * rh
1791:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1156:mant[i] + rh |==> mant[i] - rh
1792:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1156:mant[i] + rh |==> mant[i] / rh
1793:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1157:r / RADIX |==> r % RADIX
1794:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1157:r / RADIX |==> r * RADIX
1795:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1157:r / RADIX |==> r + RADIX
1796:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1157:r / RADIX |==> r - RADIX
1797:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@complement(int):1157:rh = r / RADIX |==> <NO-OP>
1798:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:rh * RADIX |==> rh % RADIX
1799:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:rh * RADIX |==> rh + RADIX
1800:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:rh * RADIX |==> rh - RADIX
1801:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:rh * RADIX |==> rh / RADIX
1802:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:r - rh * RADIX |==> r % (rh * RADIX)
1803:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:r - rh * RADIX |==> r * (rh * RADIX)
1804:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:r - rh * RADIX |==> r + rh * RADIX
1805:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@complement(int):1158:r - rh * RADIX |==> r / (rh * RADIX)
1806:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@complement(int):1158:mant[i] = r - rh * RADIX |==> <NO-OP>
1807:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1171:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() < x.field.getRadixDigits()
1808:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1171:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() <= x.field.getRadixDigits()
1809:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1171:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() == x.field.getRadixDigits()
1810:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1171:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() > x.field.getRadixDigits()
1811:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1171:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() >= x.field.getRadixDigits()
1812:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1171:field.getRadixDigits() != x.field.getRadixDigits() |==> false
1813:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1171:field.getRadixDigits() != x.field.getRadixDigits() |==> true
1814:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1172:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
1815:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1174:result.nans = QNAN |==> <NO-OP>
1816:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE |==> nans < FINITE
1817:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE |==> nans <= FINITE
1818:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE |==> nans == FINITE
1819:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE |==> nans > FINITE
1820:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE |==> nans >= FINITE
1821:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE |==> false
1822:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE |==> true
1823:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:x.nans != FINITE |==> x.nans < FINITE
1824:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:x.nans != FINITE |==> x.nans <= FINITE
1825:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:x.nans != FINITE |==> x.nans == FINITE
1826:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:x.nans != FINITE |==> x.nans > FINITE
1827:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:x.nans != FINITE |==> x.nans >= FINITE
1828:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:x.nans != FINITE |==> false
1829:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:x.nans != FINITE |==> true
1830:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE || x.nans != FINITE |==> nans != FINITE != (x.nans != FINITE)
1831:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE || x.nans != FINITE |==> nans != FINITE && x.nans != FINITE
1832:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE || x.nans != FINITE |==> nans != FINITE == (x.nans != FINITE)
1833:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE || x.nans != FINITE |==> false
1834:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE || x.nans != FINITE |==> nans != FINITE
1835:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE || x.nans != FINITE |==> x.nans != FINITE
1836:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1179:nans != FINITE || x.nans != FINITE |==> true
1837:COR:isNaN():TRUE:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1180:isNaN() |==> false
1838:COR:isNaN():FALSE:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1180:isNaN() |==> true
1839:COR:x.isNaN():TRUE:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1184:x.isNaN() |==> false
1840:COR:x.isNaN():FALSE:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1184:x.isNaN() |==> true
1841:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE |==> nans != INFINITE
1842:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE |==> nans < INFINITE
1843:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE |==> nans <= INFINITE
1844:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE |==> nans > INFINITE
1845:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE |==> nans >= INFINITE
1846:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE |==> false
1847:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE |==> true
1848:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:x.nans == FINITE |==> x.nans != FINITE
1849:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:x.nans == FINITE |==> x.nans < FINITE
1850:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:x.nans == FINITE |==> x.nans <= FINITE
1851:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:x.nans == FINITE |==> x.nans > FINITE
1852:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:x.nans == FINITE |==> x.nans >= FINITE
1853:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:x.nans == FINITE |==> false
1854:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:x.nans == FINITE |==> true
1855:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE != (x.nans == FINITE)
1856:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE == (x.nans == FINITE)
1857:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE && x.nans == FINITE |==> false
1858:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE
1859:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE && x.nans == FINITE |==> x.nans == FINITE
1860:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE && x.nans == FINITE |==> true
1861:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1188:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE || x.nans == FINITE
1862:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE |==> x.nans != INFINITE
1863:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE |==> x.nans < INFINITE
1864:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE |==> x.nans <= INFINITE
1865:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE |==> x.nans > INFINITE
1866:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE |==> x.nans >= INFINITE
1867:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE |==> false
1868:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE |==> true
1869:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:nans == FINITE |==> nans != FINITE
1870:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:nans == FINITE |==> nans < FINITE
1871:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:nans == FINITE |==> nans <= FINITE
1872:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:nans == FINITE |==> nans > FINITE
1873:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:nans == FINITE |==> nans >= FINITE
1874:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:nans == FINITE |==> false
1875:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:nans == FINITE |==> true
1876:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE != (nans == FINITE)
1877:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE == (nans == FINITE)
1878:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE && nans == FINITE |==> false
1879:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE
1880:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE && nans == FINITE |==> nans == FINITE
1881:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE && nans == FINITE |==> true
1882:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1192:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE || nans == FINITE
1883:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE |==> x.nans != INFINITE
1884:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE |==> x.nans < INFINITE
1885:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE |==> x.nans <= INFINITE
1886:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE |==> x.nans > INFINITE
1887:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE |==> x.nans >= INFINITE
1888:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE |==> false
1889:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE |==> true
1890:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:nans == INFINITE |==> nans != INFINITE
1891:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:nans == INFINITE |==> nans < INFINITE
1892:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:nans == INFINITE |==> nans <= INFINITE
1893:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:nans == INFINITE |==> nans > INFINITE
1894:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:nans == INFINITE |==> nans >= INFINITE
1895:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:nans == INFINITE |==> false
1896:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:nans == INFINITE |==> true
1897:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE != (nans == INFINITE)
1898:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE == (nans == INFINITE)
1899:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE |==> false
1900:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE
1901:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE |==> nans == INFINITE
1902:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE |==> true
1903:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE || nans == INFINITE
1904:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:sign == x.sign |==> sign != x.sign
1905:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:sign == x.sign |==> sign < x.sign
1906:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:sign == x.sign |==> sign <= x.sign
1907:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:sign == x.sign |==> sign > x.sign
1908:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:sign == x.sign |==> sign >= x.sign
1909:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:sign == x.sign |==> false
1910:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:sign == x.sign |==> true
1911:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE && sign == x.sign |==> (x.nans == INFINITE && nans == INFINITE) != (sign == x.sign)
1912:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE && sign == x.sign |==> (x.nans == INFINITE && nans == INFINITE) == (sign == x.sign)
1913:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE && sign == x.sign |==> false
1914:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE && sign == x.sign |==> x.nans == INFINITE && nans == INFINITE
1915:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE && sign == x.sign |==> sign == x.sign
1916:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE && sign == x.sign |==> true
1917:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1196:x.nans == INFINITE && nans == INFINITE && sign == x.sign |==> x.nans == INFINITE && nans == INFINITE || sign == x.sign
1918:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE |==> x.nans != INFINITE
1919:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE |==> x.nans < INFINITE
1920:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE |==> x.nans <= INFINITE
1921:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE |==> x.nans > INFINITE
1922:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE |==> x.nans >= INFINITE
1923:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE |==> false
1924:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE |==> true
1925:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:nans == INFINITE |==> nans != INFINITE
1926:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:nans == INFINITE |==> nans < INFINITE
1927:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:nans == INFINITE |==> nans <= INFINITE
1928:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:nans == INFINITE |==> nans > INFINITE
1929:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:nans == INFINITE |==> nans >= INFINITE
1930:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:nans == INFINITE |==> false
1931:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:nans == INFINITE |==> true
1932:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE != (nans == INFINITE)
1933:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE == (nans == INFINITE)
1934:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE |==> false
1935:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE
1936:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE |==> nans == INFINITE
1937:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE |==> true
1938:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE || nans == INFINITE
1939:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:sign != x.sign |==> sign < x.sign
1940:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:sign != x.sign |==> sign <= x.sign
1941:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:sign != x.sign |==> sign == x.sign
1942:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:sign != x.sign |==> sign > x.sign
1943:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:sign != x.sign |==> sign >= x.sign
1944:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:sign != x.sign |==> false
1945:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:sign != x.sign |==> true
1946:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE && sign != x.sign |==> (x.nans == INFINITE && nans == INFINITE) != (sign != x.sign)
1947:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE && sign != x.sign |==> (x.nans == INFINITE && nans == INFINITE) == (sign != x.sign)
1948:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE && sign != x.sign |==> false
1949:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE && sign != x.sign |==> x.nans == INFINITE && nans == INFINITE
1950:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE && sign != x.sign |==> sign != x.sign
1951:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE && sign != x.sign |==> true
1952:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1200:x.nans == INFINITE && nans == INFINITE && sign != x.sign |==> x.nans == INFINITE && nans == INFINITE || sign != x.sign
1953:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1201:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
1954:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1203:result.nans = QNAN |==> <NO-OP>
1955:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1204:result = dotrap(DfpField.FLAG_INVALID, ADD_TRAP, x, result) |==> <NO-OP>
1956:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1220:1 |==> 0
1957:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1220:1 |==> -1
1958:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1220:a.sign = 1 |==> <NO-OP>
1959:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1221:1 |==> 0
1960:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1221:1 |==> -1
1961:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1221:b.sign = 1 |==> <NO-OP>
1962:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:0 |==> 1
1963:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:0 |==> -1
1964:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:compare(a, b) > 0 |==> compare(a, b) != 0
1965:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:compare(a, b) > 0 |==> compare(a, b) < 0
1966:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:compare(a, b) > 0 |==> compare(a, b) <= 0
1967:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:compare(a, b) > 0 |==> compare(a, b) == 0
1968:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:compare(a, b) > 0 |==> compare(a, b) >= 0
1969:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:compare(a, b) > 0 |==> false
1970:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1225:compare(a, b) > 0 |==> true
1971:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1226:rsign = asign |==> <NO-OP>
1972:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:1 |==> 0
1973:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:1 |==> -1
1974:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:mant.length - 1 |==> mant.length % 1
1975:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:mant.length - 1 |==> mant.length * 1
1976:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:mant.length - 1 |==> mant.length + 1
1977:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:mant.length - 1 |==> mant.length / 1
1978:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:0 |==> 1
1979:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:0 |==> -1
1980:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:b.mant[mant.length - 1] == 0 |==> b.mant[mant.length - 1] != 0
1981:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:b.mant[mant.length - 1] == 0 |==> b.mant[mant.length - 1] < 0
1982:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:b.mant[mant.length - 1] == 0 |==> b.mant[mant.length - 1] <= 0
1983:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:b.mant[mant.length - 1] == 0 |==> b.mant[mant.length - 1] > 0
1984:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:b.mant[mant.length - 1] == 0 |==> b.mant[mant.length - 1] >= 0
1985:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:b.mant[mant.length - 1] == 0 |==> false
1986:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1232:b.mant[mant.length - 1] == 0 |==> true
1987:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1233:b.exp = a.exp |==> <NO-OP>
1988:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:1 |==> 0
1989:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:1 |==> -1
1990:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:mant.length - 1 |==> mant.length % 1
1991:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:mant.length - 1 |==> mant.length * 1
1992:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:mant.length - 1 |==> mant.length + 1
1993:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:mant.length - 1 |==> mant.length / 1
1994:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:0 |==> 1
1995:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:0 |==> -1
1996:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:a.mant[mant.length - 1] == 0 |==> a.mant[mant.length - 1] != 0
1997:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:a.mant[mant.length - 1] == 0 |==> a.mant[mant.length - 1] < 0
1998:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:a.mant[mant.length - 1] == 0 |==> a.mant[mant.length - 1] <= 0
1999:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:a.mant[mant.length - 1] == 0 |==> a.mant[mant.length - 1] > 0
2000:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:a.mant[mant.length - 1] == 0 |==> a.mant[mant.length - 1] >= 0
2001:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:a.mant[mant.length - 1] == 0 |==> false
2002:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1236:a.mant[mant.length - 1] == 0 |==> true
2003:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1237:a.exp = b.exp |==> <NO-OP>
2004:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1241:0 |==> 1
2005:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1241:0 |==> -1
2006:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1242:0 |==> 1
2007:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1242:0 |==> -1
2008:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1243:a.exp < b.exp |==> a.exp != b.exp
2009:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1243:a.exp < b.exp |==> a.exp <= b.exp
2010:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1243:a.exp < b.exp |==> a.exp == b.exp
2011:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1243:a.exp < b.exp |==> a.exp > b.exp
2012:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1243:a.exp < b.exp |==> a.exp >= b.exp
2013:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1243:a.exp < b.exp |==> false
2014:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1243:a.exp < b.exp |==> true
2015:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1244:aextradigit = a.align(b.exp) |==> <NO-OP>
2016:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1246:bextradigit = b.align(a.exp) |==> <NO-OP>
2017:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1250:asign != bsign |==> asign < bsign
2018:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1250:asign != bsign |==> asign <= bsign
2019:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1250:asign != bsign |==> asign == bsign
2020:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1250:asign != bsign |==> asign > bsign
2021:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1250:asign != bsign |==> asign >= bsign
2022:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1250:asign != bsign |==> false
2023:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1250:asign != bsign |==> true
2024:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1251:asign == rsign |==> asign != rsign
2025:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1251:asign == rsign |==> asign < rsign
2026:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1251:asign == rsign |==> asign <= rsign
2027:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1251:asign == rsign |==> asign > rsign
2028:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1251:asign == rsign |==> asign >= rsign
2029:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1251:asign == rsign |==> false
2030:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1251:asign == rsign |==> true
2031:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1252:bextradigit = b.complement(bextradigit) |==> <NO-OP>
2032:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1254:aextradigit = a.complement(aextradigit) |==> <NO-OP>
2033:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1259:0 |==> 1
2034:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1259:0 |==> -1
2035:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:0 |==> 1
2036:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:0 |==> -1
2037:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:i < mant.length |==> i != mant.length
2038:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:i < mant.length |==> i <= mant.length
2039:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:i < mant.length |==> i == mant.length
2040:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:i < mant.length |==> i > mant.length
2041:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:i < mant.length |==> i >= mant.length
2042:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:i < mant.length |==> false
2043:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1260:i < mant.length |==> true
2044:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] |==> a.mant[i] % b.mant[i]
2045:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] |==> a.mant[i] * b.mant[i]
2046:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] |==> a.mant[i] - b.mant[i]
2047:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] |==> a.mant[i] / b.mant[i]
2048:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] + rh |==> (a.mant[i] + b.mant[i]) % rh
2049:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] + rh |==> (a.mant[i] + b.mant[i]) * rh
2050:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] + rh |==> a.mant[i] + b.mant[i] - rh
2051:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1261:a.mant[i] + b.mant[i] + rh |==> (a.mant[i] + b.mant[i]) / rh
2052:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1262:r / RADIX |==> r % RADIX
2053:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1262:r / RADIX |==> r * RADIX
2054:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1262:r / RADIX |==> r + RADIX
2055:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1262:r / RADIX |==> r - RADIX
2056:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1262:rh = r / RADIX |==> <NO-OP>
2057:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:rh * RADIX |==> rh % RADIX
2058:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:rh * RADIX |==> rh + RADIX
2059:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:rh * RADIX |==> rh - RADIX
2060:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:rh * RADIX |==> rh / RADIX
2061:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:r - rh * RADIX |==> r % (rh * RADIX)
2062:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:r - rh * RADIX |==> r * (rh * RADIX)
2063:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:r - rh * RADIX |==> r + rh * RADIX
2064:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:r - rh * RADIX |==> r / (rh * RADIX)
2065:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1263:result.mant[i] = r - rh * RADIX |==> <NO-OP>
2066:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1265:result.exp = a.exp |==> <NO-OP>
2067:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1266:result.sign = rsign |==> <NO-OP>
2068:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:0 |==> 1
2069:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:0 |==> -1
2070:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 |==> rh < 0
2071:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 |==> rh <= 0
2072:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 |==> rh == 0
2073:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 |==> rh > 0
2074:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 |==> rh >= 0
2075:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 |==> false
2076:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 |==> true
2077:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:asign == bsign |==> asign != bsign
2078:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:asign == bsign |==> asign < bsign
2079:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:asign == bsign |==> asign <= bsign
2080:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:asign == bsign |==> asign > bsign
2081:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:asign == bsign |==> asign >= bsign
2082:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:asign == bsign |==> false
2083:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:asign == bsign |==> true
2084:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 && (asign == bsign) |==> rh != 0 != (asign == bsign)
2085:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 && (asign == bsign) |==> rh != 0 == (asign == bsign)
2086:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 && (asign == bsign) |==> false
2087:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 && (asign == bsign) |==> rh != 0
2088:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 && (asign == bsign) |==> (asign == bsign)
2089:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 && (asign == bsign) |==> true
2090:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1271:rh != 0 && (asign == bsign) |==> rh != 0 || (asign == bsign)
2091:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1272:0 |==> 1
2092:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1272:0 |==> -1
2093:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1273:result.shiftRight() |==> <NO-OP>
2094:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1274:1 |==> 0
2095:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1274:1 |==> -1
2096:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1274:mant.length - 1 |==> mant.length % 1
2097:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1274:mant.length - 1 |==> mant.length * 1
2098:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1274:mant.length - 1 |==> mant.length + 1
2099:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1274:mant.length - 1 |==> mant.length / 1
2100:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1274:result.mant[mant.length - 1] = rh |==> <NO-OP>
2101:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:0 |==> 1
2102:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:0 |==> -1
2103:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:excp != 0 |==> excp < 0
2104:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:excp != 0 |==> excp <= 0
2105:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:excp != 0 |==> excp == 0
2106:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:excp != 0 |==> excp > 0
2107:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:excp != 0 |==> excp >= 0
2108:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:excp != 0 |==> false
2109:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1276:excp != 0 |==> true
2110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1277:result = dotrap(excp, ADD_TRAP, x, result) |==> <NO-OP>
2111:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:0 |==> 1
2112:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:0 |==> -1
2113:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:i < mant.length |==> i != mant.length
2114:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:i < mant.length |==> i <= mant.length
2115:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:i < mant.length |==> i == mant.length
2116:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:i < mant.length |==> i > mant.length
2117:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:i < mant.length |==> i >= mant.length
2118:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:i < mant.length |==> false
2119:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1282:i < mant.length |==> true
2120:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:1 |==> 0
2121:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:1 |==> -1
2122:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:mant.length - 1 |==> mant.length % 1
2123:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:mant.length - 1 |==> mant.length * 1
2124:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:mant.length - 1 |==> mant.length + 1
2125:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:mant.length - 1 |==> mant.length / 1
2126:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:0 |==> 1
2127:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:0 |==> -1
2128:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:result.mant[mant.length - 1] != 0 |==> result.mant[mant.length - 1] < 0
2129:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:result.mant[mant.length - 1] != 0 |==> result.mant[mant.length - 1] <= 0
2130:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:result.mant[mant.length - 1] != 0 |==> result.mant[mant.length - 1] == 0
2131:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:result.mant[mant.length - 1] != 0 |==> result.mant[mant.length - 1] > 0
2132:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:result.mant[mant.length - 1] != 0 |==> result.mant[mant.length - 1] >= 0
2133:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:result.mant[mant.length - 1] != 0 |==> false
2134:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1283:result.mant[mant.length - 1] != 0 |==> true
2135:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1286:result.shiftLeft() |==> <NO-OP>
2136:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:0 |==> 1
2137:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:0 |==> -1
2138:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:i == 0 |==> i != 0
2139:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:i == 0 |==> i < 0
2140:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:i == 0 |==> i <= 0
2141:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:i == 0 |==> i > 0
2142:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:i == 0 |==> i >= 0
2143:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:i == 0 |==> false
2144:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1287:i == 0 |==> true
2145:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1288:0 |==> 1
2146:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1288:0 |==> -1
2147:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1288:aextradigit + bextradigit |==> aextradigit % bextradigit
2148:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1288:aextradigit + bextradigit |==> aextradigit * bextradigit
2149:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1288:aextradigit + bextradigit |==> aextradigit - bextradigit
2150:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1288:aextradigit + bextradigit |==> aextradigit / bextradigit
2151:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1288:result.mant[0] = aextradigit + bextradigit |==> <NO-OP>
2152:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1289:0 |==> 1
2153:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1289:0 |==> -1
2154:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1289:aextradigit = 0 |==> <NO-OP>
2155:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1290:0 |==> 1
2156:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1290:0 |==> -1
2157:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1290:bextradigit = 0 |==> <NO-OP>
2158:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:1 |==> 0
2159:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:1 |==> -1
2160:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:mant.length - 1 |==> mant.length % 1
2161:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:mant.length - 1 |==> mant.length * 1
2162:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:mant.length - 1 |==> mant.length + 1
2163:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:mant.length - 1 |==> mant.length / 1
2164:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:0 |==> 1
2165:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:0 |==> -1
2166:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] != 0
2167:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] < 0
2168:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] <= 0
2169:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] > 0
2170:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] >= 0
2171:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:result.mant[mant.length - 1] == 0 |==> false
2172:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1295:result.mant[mant.length - 1] == 0 |==> true
2173:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1296:0 |==> 1
2174:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1296:0 |==> -1
2175:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1296:result.exp = 0 |==> <NO-OP>
2176:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1298:asign != bsign |==> asign < bsign
2177:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1298:asign != bsign |==> asign <= bsign
2178:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1298:asign != bsign |==> asign == bsign
2179:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1298:asign != bsign |==> asign > bsign
2180:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1298:asign != bsign |==> asign >= bsign
2181:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1298:asign != bsign |==> false
2182:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1298:asign != bsign |==> true
2183:LVR:POS:0:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1300:1 |==> 0
2184:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1300:1 |==> -1
2185:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1300:result.sign = 1 |==> <NO-OP>
2186:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1305:aextradigit + bextradigit |==> aextradigit % bextradigit
2187:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1305:aextradigit + bextradigit |==> aextradigit * bextradigit
2188:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1305:aextradigit + bextradigit |==> aextradigit - bextradigit
2189:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1305:aextradigit + bextradigit |==> aextradigit / bextradigit
2190:LVR:0:POS:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:0 |==> 1
2191:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:0 |==> -1
2192:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:excp != 0 |==> excp < 0
2193:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:excp != 0 |==> excp <= 0
2194:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:excp != 0 |==> excp == 0
2195:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:excp != 0 |==> excp > 0
2196:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:excp != 0 |==> excp >= 0
2197:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:excp != 0 |==> false
2198:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1306:excp != 0 |==> true
2199:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@add(org.apache.commons.math.dfp.Dfp):1307:result = dotrap(excp, ADD_TRAP, x, result) |==> <NO-OP>
2200:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@negate():1318:-result.sign |==> +result.sign
2201:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@negate():1318:-result.sign |==> ~result.sign
2202:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@negate():1318:result.sign = (byte)-result.sign |==> <NO-OP>
2203:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@round(int):1335:false |==> true
2204:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@round(int):1338:false |==> true
2205:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1338:inc = false |==> <NO-OP>
2206:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1342:0 |==> 1
2207:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1342:0 |==> -1
2208:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1342:n != 0 |==> n < 0
2209:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1342:n != 0 |==> n <= 0
2210:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1342:n != 0 |==> n == 0
2211:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1342:n != 0 |==> n > 0
2212:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1342:n != 0 |==> n >= 0
2213:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1342:n != 0 |==> false
2214:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1342:n != 0 |==> true
2215:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1342:inc = n != 0 |==> <NO-OP>
2216:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1346:5000 |==> 0
2217:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1346:5000 |==> -5000
2218:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1346:n >= 5000 |==> n != 5000
2219:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1346:n >= 5000 |==> n < 5000
2220:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1346:n >= 5000 |==> n <= 5000
2221:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1346:n >= 5000 |==> n == 5000
2222:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1346:n >= 5000 |==> n > 5000
2223:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1346:n >= 5000 |==> false
2224:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1346:n >= 5000 |==> true
2225:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1346:inc = n >= 5000 |==> <NO-OP>
2226:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1350:5000 |==> 0
2227:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1350:5000 |==> -5000
2228:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1350:n > 5000 |==> n != 5000
2229:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1350:n > 5000 |==> n < 5000
2230:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1350:n > 5000 |==> n <= 5000
2231:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1350:n > 5000 |==> n == 5000
2232:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1350:n > 5000 |==> n >= 5000
2233:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1350:n > 5000 |==> false
2234:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1350:n > 5000 |==> true
2235:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1350:inc = n > 5000 |==> <NO-OP>
2236:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1354:5000 |==> 0
2237:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1354:5000 |==> -5000
2238:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 |==> n != 5000
2239:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 |==> n < 5000
2240:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 |==> n <= 5000
2241:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 |==> n == 5000
2242:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 |==> n >= 5000
2243:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 |==> false
2244:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 |==> true
2245:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1354:5000 |==> 0
2246:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1354:5000 |==> -5000
2247:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 |==> n != 5000
2248:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 |==> n < 5000
2249:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 |==> n <= 5000
2250:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 |==> n > 5000
2251:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 |==> n >= 5000
2252:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 |==> false
2253:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 |==> true
2254:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1354:0 |==> 1
2255:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1354:0 |==> -1
2256:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1354:1 |==> 0
2257:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1354:1 |==> -1
2258:LOR:&(int,int):^(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:mant[0] & 1 |==> mant[0] ^ 1
2259:LOR:&(int,int):|(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:mant[0] & 1 |==> mant[0] | 1
2260:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1354:1 |==> 0
2261:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1354:1 |==> -1
2262:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:(mant[0] & 1) == 1 |==> (mant[0] & 1) != 1
2263:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:(mant[0] & 1) == 1 |==> (mant[0] & 1) < 1
2264:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:(mant[0] & 1) == 1 |==> (mant[0] & 1) <= 1
2265:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:(mant[0] & 1) == 1 |==> (mant[0] & 1) > 1
2266:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:(mant[0] & 1) == 1 |==> (mant[0] & 1) >= 1
2267:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:(mant[0] & 1) == 1 |==> false
2268:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1354:(mant[0] & 1) == 1 |==> true
2269:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 && (mant[0] & 1) == 1 |==> n == 5000 != ((mant[0] & 1) == 1)
2270:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 && (mant[0] & 1) == 1 |==> n == 5000 == ((mant[0] & 1) == 1)
2271:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 && (mant[0] & 1) == 1 |==> false
2272:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 && (mant[0] & 1) == 1 |==> n == 5000
2273:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 && (mant[0] & 1) == 1 |==> (mant[0] & 1) == 1
2274:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 && (mant[0] & 1) == 1 |==> true
2275:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n == 5000 && (mant[0] & 1) == 1 |==> n == 5000 || (mant[0] & 1) == 1
2276:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> n > 5000 != (n == 5000 && (mant[0] & 1) == 1)
2277:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> n > 5000 && (n == 5000 && (mant[0] & 1) == 1)
2278:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> n > 5000 == (n == 5000 && (mant[0] & 1) == 1)
2279:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> false
2280:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> n > 5000
2281:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> (n == 5000 && (mant[0] & 1) == 1)
2282:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1354:n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> true
2283:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1354:inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 1) |==> <NO-OP>
2284:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1358:5000 |==> 0
2285:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1358:5000 |==> -5000
2286:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 |==> n != 5000
2287:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 |==> n < 5000
2288:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 |==> n <= 5000
2289:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 |==> n == 5000
2290:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 |==> n >= 5000
2291:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 |==> false
2292:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 |==> true
2293:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1358:5000 |==> 0
2294:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1358:5000 |==> -5000
2295:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 |==> n != 5000
2296:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 |==> n < 5000
2297:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 |==> n <= 5000
2298:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 |==> n > 5000
2299:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 |==> n >= 5000
2300:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 |==> false
2301:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 |==> true
2302:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1358:0 |==> 1
2303:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1358:0 |==> -1
2304:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1358:1 |==> 0
2305:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1358:1 |==> -1
2306:LOR:&(int,int):^(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:mant[0] & 1 |==> mant[0] ^ 1
2307:LOR:&(int,int):|(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:mant[0] & 1 |==> mant[0] | 1
2308:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1358:0 |==> 1
2309:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1358:0 |==> -1
2310:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:(mant[0] & 1) == 0 |==> (mant[0] & 1) != 0
2311:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:(mant[0] & 1) == 0 |==> (mant[0] & 1) < 0
2312:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:(mant[0] & 1) == 0 |==> (mant[0] & 1) <= 0
2313:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:(mant[0] & 1) == 0 |==> (mant[0] & 1) > 0
2314:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:(mant[0] & 1) == 0 |==> (mant[0] & 1) >= 0
2315:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:(mant[0] & 1) == 0 |==> false
2316:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1358:(mant[0] & 1) == 0 |==> true
2317:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 && (mant[0] & 1) == 0 |==> n == 5000 != ((mant[0] & 1) == 0)
2318:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 && (mant[0] & 1) == 0 |==> n == 5000 == ((mant[0] & 1) == 0)
2319:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 && (mant[0] & 1) == 0 |==> false
2320:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 && (mant[0] & 1) == 0 |==> n == 5000
2321:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 && (mant[0] & 1) == 0 |==> (mant[0] & 1) == 0
2322:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 && (mant[0] & 1) == 0 |==> true
2323:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n == 5000 && (mant[0] & 1) == 0 |==> n == 5000 || (mant[0] & 1) == 0
2324:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> n > 5000 != (n == 5000 && (mant[0] & 1) == 0)
2325:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> n > 5000 && (n == 5000 && (mant[0] & 1) == 0)
2326:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> n > 5000 == (n == 5000 && (mant[0] & 1) == 0)
2327:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> false
2328:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> n > 5000
2329:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> (n == 5000 && (mant[0] & 1) == 0)
2330:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1358:n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> true
2331:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1358:inc = n > 5000 || (n == 5000 && (mant[0] & 1) == 0) |==> <NO-OP>
2332:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1362:1 |==> 0
2333:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1362:1 |==> -1
2334:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 |==> sign != 1
2335:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 |==> sign < 1
2336:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 |==> sign <= 1
2337:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 |==> sign > 1
2338:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 |==> sign >= 1
2339:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 |==> false
2340:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 |==> true
2341:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1362:0 |==> 1
2342:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1362:0 |==> -1
2343:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:n != 0 |==> n < 0
2344:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:n != 0 |==> n <= 0
2345:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:n != 0 |==> n == 0
2346:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:n != 0 |==> n > 0
2347:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:n != 0 |==> n >= 0
2348:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:n != 0 |==> false
2349:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1362:n != 0 |==> true
2350:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 && n != 0 |==> sign == 1 != (n != 0)
2351:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 && n != 0 |==> sign == 1 == (n != 0)
2352:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 && n != 0 |==> false
2353:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 && n != 0 |==> sign == 1
2354:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 && n != 0 |==> n != 0
2355:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 && n != 0 |==> true
2356:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1362:sign == 1 && n != 0 |==> sign == 1 || n != 0
2357:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1362:inc = sign == 1 && n != 0 |==> <NO-OP>
2358:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@round(int):1367:-1 |==> 0
2359:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@round(int):1367:-1 |==> 1
2360:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 |==> sign != -1
2361:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 |==> sign < -1
2362:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 |==> sign <= -1
2363:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 |==> sign > -1
2364:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 |==> sign >= -1
2365:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 |==> false
2366:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 |==> true
2367:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1367:0 |==> 1
2368:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1367:0 |==> -1
2369:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:n != 0 |==> n < 0
2370:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:n != 0 |==> n <= 0
2371:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:n != 0 |==> n == 0
2372:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:n != 0 |==> n > 0
2373:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:n != 0 |==> n >= 0
2374:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:n != 0 |==> false
2375:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1367:n != 0 |==> true
2376:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 && n != 0 |==> sign == -1 != (n != 0)
2377:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 && n != 0 |==> sign == -1 == (n != 0)
2378:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 && n != 0 |==> false
2379:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 && n != 0 |==> sign == -1
2380:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 && n != 0 |==> n != 0
2381:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 && n != 0 |==> true
2382:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@round(int):1367:sign == -1 && n != 0 |==> sign == -1 || n != 0
2383:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1367:inc = sign == -1 && n != 0 |==> <NO-OP>
2384:COR:inc:TRUE:org.apache.commons.math.dfp.Dfp@round(int):1371:inc |==> false
2385:COR:inc:FALSE:org.apache.commons.math.dfp.Dfp@round(int):1371:inc |==> true
2386:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1373:1 |==> 0
2387:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1373:1 |==> -1
2388:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1374:0 |==> 1
2389:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1374:0 |==> -1
2390:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1374:i < mant.length |==> i != mant.length
2391:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1374:i < mant.length |==> i <= mant.length
2392:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1374:i < mant.length |==> i == mant.length
2393:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1374:i < mant.length |==> i > mant.length
2394:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1374:i < mant.length |==> i >= mant.length
2395:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1374:i < mant.length |==> false
2396:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1374:i < mant.length |==> true
2397:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@round(int):1375:mant[i] + rh |==> mant[i] % rh
2398:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@round(int):1375:mant[i] + rh |==> mant[i] * rh
2399:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@round(int):1375:mant[i] + rh |==> mant[i] - rh
2400:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@round(int):1375:mant[i] + rh |==> mant[i] / rh
2401:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@round(int):1376:r / RADIX |==> r % RADIX
2402:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@round(int):1376:r / RADIX |==> r * RADIX
2403:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@round(int):1376:r / RADIX |==> r + RADIX
2404:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@round(int):1376:r / RADIX |==> r - RADIX
2405:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1376:rh = r / RADIX |==> <NO-OP>
2406:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:rh * RADIX |==> rh % RADIX
2407:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:rh * RADIX |==> rh + RADIX
2408:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:rh * RADIX |==> rh - RADIX
2409:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:rh * RADIX |==> rh / RADIX
2410:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:r - rh * RADIX |==> r % (rh * RADIX)
2411:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:r - rh * RADIX |==> r * (rh * RADIX)
2412:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:r - rh * RADIX |==> r + rh * RADIX
2413:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@round(int):1377:r - rh * RADIX |==> r / (rh * RADIX)
2414:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1377:mant[i] = r - rh * RADIX |==> <NO-OP>
2415:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1380:0 |==> 1
2416:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1380:0 |==> -1
2417:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1380:rh != 0 |==> rh < 0
2418:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1380:rh != 0 |==> rh <= 0
2419:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1380:rh != 0 |==> rh == 0
2420:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1380:rh != 0 |==> rh > 0
2421:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1380:rh != 0 |==> rh >= 0
2422:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1380:rh != 0 |==> false
2423:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1380:rh != 0 |==> true
2424:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1381:shiftRight() |==> <NO-OP>
2425:LVR:POS:0:org.apache.commons.math.dfp.Dfp@round(int):1382:1 |==> 0
2426:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@round(int):1382:1 |==> -1
2427:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@round(int):1382:mant.length - 1 |==> mant.length % 1
2428:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@round(int):1382:mant.length - 1 |==> mant.length * 1
2429:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@round(int):1382:mant.length - 1 |==> mant.length + 1
2430:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@round(int):1382:mant.length - 1 |==> mant.length / 1
2431:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1382:mant[mant.length - 1] = rh |==> <NO-OP>
2432:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1387:exp < MIN_EXP |==> exp != MIN_EXP
2433:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1387:exp < MIN_EXP |==> exp <= MIN_EXP
2434:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1387:exp < MIN_EXP |==> exp == MIN_EXP
2435:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1387:exp < MIN_EXP |==> exp > MIN_EXP
2436:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1387:exp < MIN_EXP |==> exp >= MIN_EXP
2437:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1387:exp < MIN_EXP |==> false
2438:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1387:exp < MIN_EXP |==> true
2439:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1389:field.setIEEEFlagsBits(DfpField.FLAG_UNDERFLOW) |==> <NO-OP>
2440:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1393:exp > MAX_EXP |==> exp != MAX_EXP
2441:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1393:exp > MAX_EXP |==> exp < MAX_EXP
2442:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1393:exp > MAX_EXP |==> exp <= MAX_EXP
2443:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1393:exp > MAX_EXP |==> exp == MAX_EXP
2444:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1393:exp > MAX_EXP |==> exp >= MAX_EXP
2445:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1393:exp > MAX_EXP |==> false
2446:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1393:exp > MAX_EXP |==> true
2447:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1395:field.setIEEEFlagsBits(DfpField.FLAG_OVERFLOW) |==> <NO-OP>
2448:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1399:0 |==> 1
2449:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1399:0 |==> -1
2450:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@round(int):1399:n != 0 |==> n < 0
2451:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1399:n != 0 |==> n <= 0
2452:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@round(int):1399:n != 0 |==> n == 0
2453:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@round(int):1399:n != 0 |==> n > 0
2454:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@round(int):1399:n != 0 |==> n >= 0
2455:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1399:n != 0 |==> false
2456:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@round(int):1399:n != 0 |==> true
2457:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@round(int):1401:field.setIEEEFlagsBits(DfpField.FLAG_INEXACT) |==> <NO-OP>
2458:LVR:0:POS:org.apache.commons.math.dfp.Dfp@round(int):1405:0 |==> 1
2459:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@round(int):1405:0 |==> -1
2460:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1416:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() < x.field.getRadixDigits()
2461:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1416:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() <= x.field.getRadixDigits()
2462:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1416:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() == x.field.getRadixDigits()
2463:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1416:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() > x.field.getRadixDigits()
2464:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1416:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() >= x.field.getRadixDigits()
2465:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1416:field.getRadixDigits() != x.field.getRadixDigits() |==> false
2466:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1416:field.getRadixDigits() != x.field.getRadixDigits() |==> true
2467:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1417:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
2468:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1419:result.nans = QNAN |==> <NO-OP>
2469:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE |==> nans < FINITE
2470:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE |==> nans <= FINITE
2471:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE |==> nans == FINITE
2472:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE |==> nans > FINITE
2473:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE |==> nans >= FINITE
2474:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE |==> false
2475:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE |==> true
2476:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:x.nans != FINITE |==> x.nans < FINITE
2477:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:x.nans != FINITE |==> x.nans <= FINITE
2478:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:x.nans != FINITE |==> x.nans == FINITE
2479:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:x.nans != FINITE |==> x.nans > FINITE
2480:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:x.nans != FINITE |==> x.nans >= FINITE
2481:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:x.nans != FINITE |==> false
2482:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:x.nans != FINITE |==> true
2483:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE || x.nans != FINITE |==> nans != FINITE != (x.nans != FINITE)
2484:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE || x.nans != FINITE |==> nans != FINITE && x.nans != FINITE
2485:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE || x.nans != FINITE |==> nans != FINITE == (x.nans != FINITE)
2486:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE || x.nans != FINITE |==> false
2487:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE || x.nans != FINITE |==> nans != FINITE
2488:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE || x.nans != FINITE |==> x.nans != FINITE
2489:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1426:nans != FINITE || x.nans != FINITE |==> true
2490:COR:isNaN():TRUE:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1427:isNaN() |==> false
2491:COR:isNaN():FALSE:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1427:isNaN() |==> true
2492:COR:x.isNaN():TRUE:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1431:x.isNaN() |==> false
2493:COR:x.isNaN():FALSE:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1431:x.isNaN() |==> true
2494:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE |==> nans != INFINITE
2495:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE |==> nans < INFINITE
2496:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE |==> nans <= INFINITE
2497:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE |==> nans > INFINITE
2498:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE |==> nans >= INFINITE
2499:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE |==> false
2500:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE |==> true
2501:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.nans == FINITE |==> x.nans != FINITE
2502:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.nans == FINITE |==> x.nans < FINITE
2503:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.nans == FINITE |==> x.nans <= FINITE
2504:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.nans == FINITE |==> x.nans > FINITE
2505:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.nans == FINITE |==> x.nans >= FINITE
2506:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.nans == FINITE |==> false
2507:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.nans == FINITE |==> true
2508:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE != (x.nans == FINITE)
2509:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE == (x.nans == FINITE)
2510:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE |==> false
2511:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE
2512:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE |==> x.nans == FINITE
2513:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE |==> true
2514:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE || x.nans == FINITE
2515:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:1 |==> 0
2516:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:1 |==> -1
2517:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:mant.length - 1 |==> mant.length % 1
2518:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:mant.length - 1 |==> mant.length * 1
2519:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:mant.length - 1 |==> mant.length + 1
2520:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:mant.length - 1 |==> mant.length / 1
2521:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:0 |==> 1
2522:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:0 |==> -1
2523:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.mant[mant.length - 1] != 0 |==> x.mant[mant.length - 1] < 0
2524:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.mant[mant.length - 1] != 0 |==> x.mant[mant.length - 1] <= 0
2525:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.mant[mant.length - 1] != 0 |==> x.mant[mant.length - 1] == 0
2526:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.mant[mant.length - 1] != 0 |==> x.mant[mant.length - 1] > 0
2527:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.mant[mant.length - 1] != 0 |==> x.mant[mant.length - 1] >= 0
2528:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.mant[mant.length - 1] != 0 |==> false
2529:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:x.mant[mant.length - 1] != 0 |==> true
2530:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] != 0 |==> (nans == INFINITE && x.nans == FINITE) != (x.mant[mant.length - 1] != 0)
2531:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] != 0 |==> (nans == INFINITE && x.nans == FINITE) == (x.mant[mant.length - 1] != 0)
2532:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] != 0 |==> false
2533:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] != 0 |==> nans == INFINITE && x.nans == FINITE
2534:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] != 0 |==> x.mant[mant.length - 1] != 0
2535:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] != 0 |==> true
2536:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1435:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] != 0 |==> nans == INFINITE && x.nans == FINITE || x.mant[mant.length - 1] != 0
2537:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1436:result = newInstance(this) |==> <NO-OP>
2538:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1437:sign * x.sign |==> sign % x.sign
2539:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1437:sign * x.sign |==> sign + x.sign
2540:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1437:sign * x.sign |==> sign - x.sign
2541:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1437:sign * x.sign |==> sign / x.sign
2542:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1437:result.sign = (byte)(sign * x.sign) |==> <NO-OP>
2543:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE |==> x.nans != INFINITE
2544:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE |==> x.nans < INFINITE
2545:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE |==> x.nans <= INFINITE
2546:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE |==> x.nans > INFINITE
2547:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE |==> x.nans >= INFINITE
2548:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE |==> false
2549:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE |==> true
2550:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:nans == FINITE |==> nans != FINITE
2551:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:nans == FINITE |==> nans < FINITE
2552:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:nans == FINITE |==> nans <= FINITE
2553:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:nans == FINITE |==> nans > FINITE
2554:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:nans == FINITE |==> nans >= FINITE
2555:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:nans == FINITE |==> false
2556:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:nans == FINITE |==> true
2557:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE != (nans == FINITE)
2558:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE == (nans == FINITE)
2559:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE |==> false
2560:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE
2561:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE |==> nans == FINITE
2562:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE |==> true
2563:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE || nans == FINITE
2564:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:1 |==> 0
2565:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:1 |==> -1
2566:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant.length - 1 |==> mant.length % 1
2567:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant.length - 1 |==> mant.length * 1
2568:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant.length - 1 |==> mant.length + 1
2569:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant.length - 1 |==> mant.length / 1
2570:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:0 |==> 1
2571:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:0 |==> -1
2572:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] < 0
2573:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] <= 0
2574:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] == 0
2575:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] > 0
2576:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] >= 0
2577:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant[mant.length - 1] != 0 |==> false
2578:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:mant[mant.length - 1] != 0 |==> true
2579:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] != 0 |==> (x.nans == INFINITE && nans == FINITE) != (mant[mant.length - 1] != 0)
2580:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] != 0 |==> (x.nans == INFINITE && nans == FINITE) == (mant[mant.length - 1] != 0)
2581:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] != 0 |==> false
2582:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] != 0 |==> x.nans == INFINITE && nans == FINITE
2583:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] != 0 |==> mant[mant.length - 1] != 0
2584:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] != 0 |==> true
2585:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1441:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] != 0 |==> x.nans == INFINITE && nans == FINITE || mant[mant.length - 1] != 0
2586:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1442:result = newInstance(x) |==> <NO-OP>
2587:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1443:sign * x.sign |==> sign % x.sign
2588:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1443:sign * x.sign |==> sign + x.sign
2589:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1443:sign * x.sign |==> sign - x.sign
2590:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1443:sign * x.sign |==> sign / x.sign
2591:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1443:result.sign = (byte)(sign * x.sign) |==> <NO-OP>
2592:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE |==> x.nans != INFINITE
2593:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE |==> x.nans < INFINITE
2594:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE |==> x.nans <= INFINITE
2595:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE |==> x.nans > INFINITE
2596:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE |==> x.nans >= INFINITE
2597:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE |==> false
2598:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE |==> true
2599:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:nans == INFINITE |==> nans != INFINITE
2600:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:nans == INFINITE |==> nans < INFINITE
2601:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:nans == INFINITE |==> nans <= INFINITE
2602:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:nans == INFINITE |==> nans > INFINITE
2603:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:nans == INFINITE |==> nans >= INFINITE
2604:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:nans == INFINITE |==> false
2605:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:nans == INFINITE |==> true
2606:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE != (nans == INFINITE)
2607:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE == (nans == INFINITE)
2608:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE && nans == INFINITE |==> false
2609:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE
2610:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE && nans == INFINITE |==> nans == INFINITE
2611:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE && nans == INFINITE |==> true
2612:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1447:x.nans == INFINITE && nans == INFINITE |==> x.nans == INFINITE || nans == INFINITE
2613:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1448:result = newInstance(this) |==> <NO-OP>
2614:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1449:sign * x.sign |==> sign % x.sign
2615:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1449:sign * x.sign |==> sign + x.sign
2616:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1449:sign * x.sign |==> sign - x.sign
2617:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1449:sign * x.sign |==> sign / x.sign
2618:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1449:result.sign = (byte)(sign * x.sign) |==> <NO-OP>
2619:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE |==> x.nans != INFINITE
2620:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE |==> x.nans < INFINITE
2621:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE |==> x.nans <= INFINITE
2622:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE |==> x.nans > INFINITE
2623:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE |==> x.nans >= INFINITE
2624:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE |==> false
2625:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE |==> true
2626:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:nans == FINITE |==> nans != FINITE
2627:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:nans == FINITE |==> nans < FINITE
2628:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:nans == FINITE |==> nans <= FINITE
2629:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:nans == FINITE |==> nans > FINITE
2630:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:nans == FINITE |==> nans >= FINITE
2631:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:nans == FINITE |==> false
2632:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:nans == FINITE |==> true
2633:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE != (nans == FINITE)
2634:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE == (nans == FINITE)
2635:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE |==> false
2636:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE
2637:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE |==> nans == FINITE
2638:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE |==> true
2639:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE |==> x.nans == INFINITE || nans == FINITE
2640:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:1 |==> 0
2641:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:1 |==> -1
2642:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant.length - 1 |==> mant.length % 1
2643:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant.length - 1 |==> mant.length * 1
2644:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant.length - 1 |==> mant.length + 1
2645:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant.length - 1 |==> mant.length / 1
2646:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:0 |==> 1
2647:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:0 |==> -1
2648:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] != 0
2649:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] < 0
2650:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] <= 0
2651:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] > 0
2652:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] >= 0
2653:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant[mant.length - 1] == 0 |==> false
2654:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:mant[mant.length - 1] == 0 |==> true
2655:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0 |==> (x.nans == INFINITE && nans == FINITE) != (mant[mant.length - 1] == 0)
2656:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0 |==> (x.nans == INFINITE && nans == FINITE) == (mant[mant.length - 1] == 0)
2657:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0 |==> false
2658:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0 |==> x.nans == INFINITE && nans == FINITE
2659:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0 |==> mant[mant.length - 1] == 0
2660:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0 |==> true
2661:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0 |==> x.nans == INFINITE && nans == FINITE || mant[mant.length - 1] == 0
2662:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE |==> nans != INFINITE
2663:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE |==> nans < INFINITE
2664:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE |==> nans <= INFINITE
2665:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE |==> nans > INFINITE
2666:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE |==> nans >= INFINITE
2667:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE |==> false
2668:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE |==> true
2669:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.nans == FINITE |==> x.nans != FINITE
2670:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.nans == FINITE |==> x.nans < FINITE
2671:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.nans == FINITE |==> x.nans <= FINITE
2672:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.nans == FINITE |==> x.nans > FINITE
2673:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.nans == FINITE |==> x.nans >= FINITE
2674:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.nans == FINITE |==> false
2675:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.nans == FINITE |==> true
2676:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE != (x.nans == FINITE)
2677:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE == (x.nans == FINITE)
2678:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE |==> false
2679:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE
2680:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE |==> x.nans == FINITE
2681:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE |==> true
2682:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE |==> nans == INFINITE || x.nans == FINITE
2683:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:1 |==> 0
2684:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:1 |==> -1
2685:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:mant.length - 1 |==> mant.length % 1
2686:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:mant.length - 1 |==> mant.length * 1
2687:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:mant.length - 1 |==> mant.length + 1
2688:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:mant.length - 1 |==> mant.length / 1
2689:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:0 |==> 1
2690:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:0 |==> -1
2691:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.mant[mant.length - 1] == 0 |==> x.mant[mant.length - 1] != 0
2692:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.mant[mant.length - 1] == 0 |==> x.mant[mant.length - 1] < 0
2693:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.mant[mant.length - 1] == 0 |==> x.mant[mant.length - 1] <= 0
2694:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.mant[mant.length - 1] == 0 |==> x.mant[mant.length - 1] > 0
2695:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.mant[mant.length - 1] == 0 |==> x.mant[mant.length - 1] >= 0
2696:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.mant[mant.length - 1] == 0 |==> false
2697:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:x.mant[mant.length - 1] == 0 |==> true
2698:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0 |==> (nans == INFINITE && x.nans == FINITE) != (x.mant[mant.length - 1] == 0)
2699:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0 |==> (nans == INFINITE && x.nans == FINITE) == (x.mant[mant.length - 1] == 0)
2700:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0 |==> false
2701:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0 |==> nans == INFINITE && x.nans == FINITE
2702:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0 |==> x.mant[mant.length - 1] == 0
2703:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0 |==> true
2704:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0 |==> nans == INFINITE && x.nans == FINITE || x.mant[mant.length - 1] == 0
2705:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:(x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) || (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0) |==> (x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) != (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0)
2706:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:(x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) || (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0) |==> (x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) && (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0)
2707:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:(x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) || (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0) |==> (x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) == (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0)
2708:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:(x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) || (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0) |==> false
2709:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:(x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) || (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0) |==> (x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0)
2710:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1454:(x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) || (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0) |==> (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0)
2711:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1453:(x.nans == INFINITE && nans == FINITE && mant[mant.length - 1] == 0) || (nans == INFINITE && x.nans == FINITE && x.mant[mant.length - 1] == 0) |==> true
2712:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1455:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
2713:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1456:result = newInstance(getZero()) |==> <NO-OP>
2714:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1457:result.nans = QNAN |==> <NO-OP>
2715:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1458:result = dotrap(DfpField.FLAG_INVALID, MULTIPLY_TRAP, x, result) |==> <NO-OP>
2716:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1463:2 |==> 0
2717:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1463:2 |==> -2
2718:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1463:mant.length * 2 |==> mant.length % 2
2719:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1463:mant.length * 2 |==> mant.length + 2
2720:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1463:mant.length * 2 |==> mant.length - 2
2721:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1463:mant.length * 2 |==> mant.length / 2
2722:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:0 |==> 1
2723:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:0 |==> -1
2724:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:i < mant.length |==> i != mant.length
2725:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:i < mant.length |==> i <= mant.length
2726:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:i < mant.length |==> i == mant.length
2727:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:i < mant.length |==> i > mant.length
2728:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:i < mant.length |==> i >= mant.length
2729:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:i < mant.length |==> false
2730:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1465:i < mant.length |==> true
2731:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1466:0 |==> 1
2732:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1466:0 |==> -1
2733:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:0 |==> 1
2734:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:0 |==> -1
2735:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:j < mant.length |==> j != mant.length
2736:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:j < mant.length |==> j <= mant.length
2737:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:j < mant.length |==> j == mant.length
2738:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:j < mant.length |==> j > mant.length
2739:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:j < mant.length |==> j >= mant.length
2740:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:j < mant.length |==> false
2741:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1467:j < mant.length |==> true
2742:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1468:mant[i] * x.mant[j] |==> mant[i] % x.mant[j]
2743:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1468:mant[i] * x.mant[j] |==> mant[i] + x.mant[j]
2744:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1468:mant[i] * x.mant[j] |==> mant[i] - x.mant[j]
2745:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1468:mant[i] * x.mant[j] |==> mant[i] / x.mant[j]
2746:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:i + j |==> i % j
2747:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:i + j |==> i * j
2748:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:i + j |==> i - j
2749:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:i + j |==> i / j
2750:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] |==> r % product[i + j]
2751:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] |==> r * product[i + j]
2752:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] |==> r - product[i + j]
2753:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] |==> r / product[i + j]
2754:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] + rh |==> (r + product[i + j]) % rh
2755:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] + rh |==> (r + product[i + j]) * rh
2756:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] + rh |==> r + product[i + j] - rh
2757:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r + product[i + j] + rh |==> (r + product[i + j]) / rh
2758:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1469:r = r + product[i + j] + rh |==> <NO-OP>
2759:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1471:r / RADIX |==> r % RADIX
2760:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1471:r / RADIX |==> r * RADIX
2761:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1471:r / RADIX |==> r + RADIX
2762:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1471:r / RADIX |==> r - RADIX
2763:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1471:rh = r / RADIX |==> <NO-OP>
2764:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:i + j |==> i % j
2765:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:i + j |==> i * j
2766:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:i + j |==> i - j
2767:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:i + j |==> i / j
2768:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:rh * RADIX |==> rh % RADIX
2769:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:rh * RADIX |==> rh + RADIX
2770:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:rh * RADIX |==> rh - RADIX
2771:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:rh * RADIX |==> rh / RADIX
2772:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:r - rh * RADIX |==> r % (rh * RADIX)
2773:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:r - rh * RADIX |==> r * (rh * RADIX)
2774:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:r - rh * RADIX |==> r + rh * RADIX
2775:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:r - rh * RADIX |==> r / (rh * RADIX)
2776:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1472:product[i + j] = r - rh * RADIX |==> <NO-OP>
2777:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1474:i + mant.length |==> i % mant.length
2778:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1474:i + mant.length |==> i * mant.length
2779:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1474:i + mant.length |==> i - mant.length
2780:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1474:i + mant.length |==> i / mant.length
2781:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1474:product[i + mant.length] = rh |==> <NO-OP>
2782:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:2 |==> 0
2783:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:2 |==> -2
2784:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 |==> mant.length % 2
2785:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 |==> mant.length + 2
2786:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 |==> mant.length - 2
2787:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 |==> mant.length / 2
2788:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:1 |==> 0
2789:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:1 |==> -1
2790:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 - 1 |==> mant.length * 2 % 1
2791:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 - 1 |==> mant.length * 2 * 1
2792:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 - 1 |==> mant.length * 2 + 1
2793:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1478:mant.length * 2 - 1 |==> mant.length * 2 / 1
2794:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:2 |==> 0
2795:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:2 |==> -2
2796:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 |==> mant.length % 2
2797:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 |==> mant.length + 2
2798:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 |==> mant.length - 2
2799:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 |==> mant.length / 2
2800:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:1 |==> 0
2801:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:1 |==> -1
2802:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 - 1 |==> mant.length * 2 % 1
2803:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 - 1 |==> mant.length * 2 * 1
2804:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 - 1 |==> mant.length * 2 + 1
2805:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:mant.length * 2 - 1 |==> mant.length * 2 / 1
2806:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:0 |==> 1
2807:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:0 |==> -1
2808:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:i >= 0 |==> i != 0
2809:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:i >= 0 |==> i < 0
2810:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:i >= 0 |==> i <= 0
2811:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:i >= 0 |==> i == 0
2812:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:i >= 0 |==> i > 0
2813:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:i >= 0 |==> false
2814:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1479:i >= 0 |==> true
2815:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:0 |==> 1
2816:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:0 |==> -1
2817:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:product[i] != 0 |==> product[i] < 0
2818:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:product[i] != 0 |==> product[i] <= 0
2819:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:product[i] != 0 |==> product[i] == 0
2820:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:product[i] != 0 |==> product[i] > 0
2821:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:product[i] != 0 |==> product[i] >= 0
2822:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:product[i] != 0 |==> false
2823:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1480:product[i] != 0 |==> true
2824:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1481:md = i |==> <NO-OP>
2825:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:0 |==> 1
2826:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:0 |==> -1
2827:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:i < mant.length |==> i != mant.length
2828:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:i < mant.length |==> i <= mant.length
2829:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:i < mant.length |==> i == mant.length
2830:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:i < mant.length |==> i > mant.length
2831:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:i < mant.length |==> i >= mant.length
2832:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:i < mant.length |==> false
2833:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1487:i < mant.length |==> true
2834:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i |==> mant.length % i
2835:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i |==> mant.length * i
2836:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i |==> mant.length + i
2837:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i |==> mant.length / i
2838:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:1 |==> 0
2839:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:1 |==> -1
2840:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i - 1 |==> (mant.length - i) % 1
2841:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i - 1 |==> (mant.length - i) * 1
2842:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i - 1 |==> mant.length - i + 1
2843:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:mant.length - i - 1 |==> (mant.length - i) / 1
2844:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:md - i |==> md % i
2845:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:md - i |==> md * i
2846:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:md - i |==> md + i
2847:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:md - i |==> md / i
2848:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1488:result.mant[mant.length - i - 1] = product[md - i] |==> <NO-OP>
2849:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp |==> exp % x.exp
2850:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp |==> exp * x.exp
2851:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp |==> exp - x.exp
2852:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp |==> exp / x.exp
2853:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md |==> (exp + x.exp) % md
2854:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md |==> (exp + x.exp) * md
2855:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md |==> exp + x.exp - md
2856:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md |==> (exp + x.exp) / md
2857:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:2 |==> 0
2858:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:2 |==> -2
2859:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:2 * mant.length |==> 2 % mant.length
2860:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:2 * mant.length |==> 2 + mant.length
2861:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:2 * mant.length |==> 2 - mant.length
2862:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:2 * mant.length |==> 2 / mant.length
2863:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length |==> (exp + x.exp + md) % (2 * mant.length)
2864:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length |==> (exp + x.exp + md) * (2 * mant.length)
2865:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length |==> exp + x.exp + md + 2 * mant.length
2866:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length |==> (exp + x.exp + md) / (2 * mant.length)
2867:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:1 |==> 0
2868:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:1 |==> -1
2869:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length + 1 |==> (exp + x.exp + md - 2 * mant.length) % 1
2870:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length + 1 |==> (exp + x.exp + md - 2 * mant.length) * 1
2871:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length + 1 |==> exp + x.exp + md - 2 * mant.length - 1
2872:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:exp + x.exp + md - 2 * mant.length + 1 |==> (exp + x.exp + md - 2 * mant.length) / 1
2873:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1492:result.exp = exp + x.exp + md - 2 * mant.length + 1 |==> <NO-OP>
2874:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:sign == x.sign |==> sign != x.sign
2875:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:sign == x.sign |==> sign < x.sign
2876:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:sign == x.sign |==> sign <= x.sign
2877:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:sign == x.sign |==> sign > x.sign
2878:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:sign == x.sign |==> sign >= x.sign
2879:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:sign == x.sign |==> false
2880:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:sign == x.sign |==> true
2881:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:1 |==> 0
2882:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:1 |==> -1
2883:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:-1 |==> 0
2884:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:-1 |==> 1
2885:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1493:result.sign = (byte)((sign == x.sign) ? 1 : -1) |==> <NO-OP>
2886:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:1 |==> 0
2887:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:1 |==> -1
2888:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:mant.length - 1 |==> mant.length % 1
2889:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:mant.length - 1 |==> mant.length * 1
2890:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:mant.length - 1 |==> mant.length + 1
2891:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:mant.length - 1 |==> mant.length / 1
2892:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:0 |==> 1
2893:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:0 |==> -1
2894:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] != 0
2895:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] < 0
2896:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] <= 0
2897:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] > 0
2898:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] >= 0
2899:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:result.mant[mant.length - 1] == 0 |==> false
2900:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1495:result.mant[mant.length - 1] == 0 |==> true
2901:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1497:0 |==> 1
2902:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1497:0 |==> -1
2903:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1497:result.exp = 0 |==> <NO-OP>
2904:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:1 |==> 0
2905:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:1 |==> -1
2906:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:mant.length - 1 |==> mant.length % 1
2907:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:mant.length - 1 |==> mant.length * 1
2908:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:mant.length - 1 |==> mant.length + 1
2909:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:mant.length - 1 |==> mant.length / 1
2910:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:md > (mant.length - 1) |==> md != (mant.length - 1)
2911:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:md > (mant.length - 1) |==> md < (mant.length - 1)
2912:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:md > (mant.length - 1) |==> md <= (mant.length - 1)
2913:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:md > (mant.length - 1) |==> md == (mant.length - 1)
2914:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:md > (mant.length - 1) |==> md >= (mant.length - 1)
2915:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:md > (mant.length - 1) |==> false
2916:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1501:md > (mant.length - 1) |==> true
2917:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1502:md - mant.length |==> md % mant.length
2918:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1502:md - mant.length |==> md * mant.length
2919:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1502:md - mant.length |==> md + mant.length
2920:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1502:md - mant.length |==> md / mant.length
2921:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1504:0 |==> 1
2922:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1504:0 |==> -1
2923:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:0 |==> 1
2924:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:0 |==> -1
2925:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:excp != 0 |==> excp < 0
2926:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:excp != 0 |==> excp <= 0
2927:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:excp != 0 |==> excp == 0
2928:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:excp != 0 |==> excp > 0
2929:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:excp != 0 |==> excp >= 0
2930:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:excp != 0 |==> false
2931:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1507:excp != 0 |==> true
2932:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(org.apache.commons.math.dfp.Dfp):1508:result = dotrap(excp, MULTIPLY_TRAP, x, result) |==> <NO-OP>
2933:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1524:nans != FINITE |==> nans < FINITE
2934:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1524:nans != FINITE |==> nans <= FINITE
2935:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1524:nans != FINITE |==> nans == FINITE
2936:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1524:nans != FINITE |==> nans > FINITE
2937:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1524:nans != FINITE |==> nans >= FINITE
2938:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1524:nans != FINITE |==> false
2939:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1524:nans != FINITE |==> true
2940:COR:isNaN():TRUE:org.apache.commons.math.dfp.Dfp@multiply(int):1525:isNaN() |==> false
2941:COR:isNaN():FALSE:org.apache.commons.math.dfp.Dfp@multiply(int):1525:isNaN() |==> true
2942:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE |==> nans != INFINITE
2943:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE |==> nans < INFINITE
2944:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE |==> nans <= INFINITE
2945:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE |==> nans > INFINITE
2946:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE |==> nans >= INFINITE
2947:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE |==> false
2948:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE |==> true
2949:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1529:0 |==> 1
2950:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1529:0 |==> -1
2951:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:x != 0 |==> x < 0
2952:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:x != 0 |==> x <= 0
2953:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:x != 0 |==> x == 0
2954:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:x != 0 |==> x > 0
2955:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:x != 0 |==> x >= 0
2956:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:x != 0 |==> false
2957:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1529:x != 0 |==> true
2958:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE && x != 0 |==> nans == INFINITE != (x != 0)
2959:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE && x != 0 |==> nans == INFINITE == (x != 0)
2960:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE && x != 0 |==> false
2961:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE && x != 0 |==> nans == INFINITE
2962:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE && x != 0 |==> x != 0
2963:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE && x != 0 |==> true
2964:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1529:nans == INFINITE && x != 0 |==> nans == INFINITE || x != 0
2965:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1530:result = newInstance(this) |==> <NO-OP>
2966:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE |==> nans != INFINITE
2967:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE |==> nans < INFINITE
2968:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE |==> nans <= INFINITE
2969:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE |==> nans > INFINITE
2970:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE |==> nans >= INFINITE
2971:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE |==> false
2972:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE |==> true
2973:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1534:0 |==> 1
2974:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1534:0 |==> -1
2975:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:x == 0 |==> x != 0
2976:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:x == 0 |==> x < 0
2977:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:x == 0 |==> x <= 0
2978:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:x == 0 |==> x > 0
2979:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:x == 0 |==> x >= 0
2980:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:x == 0 |==> false
2981:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1534:x == 0 |==> true
2982:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE && x == 0 |==> nans == INFINITE != (x == 0)
2983:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE && x == 0 |==> nans == INFINITE == (x == 0)
2984:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE && x == 0 |==> false
2985:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE && x == 0 |==> nans == INFINITE
2986:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE && x == 0 |==> x == 0
2987:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE && x == 0 |==> true
2988:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1534:nans == INFINITE && x == 0 |==> nans == INFINITE || x == 0
2989:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1535:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
2990:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1536:result = newInstance(getZero()) |==> <NO-OP>
2991:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1537:result.nans = QNAN |==> <NO-OP>
2992:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1538:result = dotrap(DfpField.FLAG_INVALID, MULTIPLY_TRAP, newInstance(getZero()), result) |==> <NO-OP>
2993:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1544:0 |==> 1
2994:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1544:0 |==> -1
2995:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 |==> x != 0
2996:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 |==> x <= 0
2997:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 |==> x == 0
2998:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 |==> x > 0
2999:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 |==> x >= 0
3000:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 |==> false
3001:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 |==> true
3002:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x >= RADIX |==> x != RADIX
3003:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x >= RADIX |==> x < RADIX
3004:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x >= RADIX |==> x <= RADIX
3005:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x >= RADIX |==> x == RADIX
3006:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x >= RADIX |==> x > RADIX
3007:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x >= RADIX |==> false
3008:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x >= RADIX |==> true
3009:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 || x >= RADIX |==> x < 0 != x >= RADIX
3010:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 || x >= RADIX |==> x < 0 && x >= RADIX
3011:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 || x >= RADIX |==> x < 0 == x >= RADIX
3012:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 || x >= RADIX |==> false
3013:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 || x >= RADIX |==> x < 0
3014:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 || x >= RADIX |==> x >= RADIX
3015:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@multiply(int):1544:x < 0 || x >= RADIX |==> true
3016:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1545:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
3017:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1546:result = newInstance(getZero()) |==> <NO-OP>
3018:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1547:result.nans = QNAN |==> <NO-OP>
3019:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1548:result = dotrap(DfpField.FLAG_INVALID, MULTIPLY_TRAP, result, result) |==> <NO-OP>
3020:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1552:0 |==> 1
3021:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1552:0 |==> -1
3022:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1553:0 |==> 1
3023:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1553:0 |==> -1
3024:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1553:i < mant.length |==> i != mant.length
3025:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1553:i < mant.length |==> i <= mant.length
3026:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1553:i < mant.length |==> i == mant.length
3027:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1553:i < mant.length |==> i > mant.length
3028:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1553:i < mant.length |==> i >= mant.length
3029:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1553:i < mant.length |==> false
3030:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1553:i < mant.length |==> true
3031:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x |==> mant[i] % x
3032:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x |==> mant[i] + x
3033:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x |==> mant[i] - x
3034:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x |==> mant[i] / x
3035:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x + rh |==> mant[i] * x % rh
3036:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x + rh |==> mant[i] * x * rh
3037:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x + rh |==> mant[i] * x - rh
3038:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1554:mant[i] * x + rh |==> mant[i] * x / rh
3039:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1555:r / RADIX |==> r % RADIX
3040:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1555:r / RADIX |==> r * RADIX
3041:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1555:r / RADIX |==> r + RADIX
3042:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1555:r / RADIX |==> r - RADIX
3043:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1555:rh = r / RADIX |==> <NO-OP>
3044:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:rh * RADIX |==> rh % RADIX
3045:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:rh * RADIX |==> rh + RADIX
3046:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:rh * RADIX |==> rh - RADIX
3047:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:rh * RADIX |==> rh / RADIX
3048:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:r - rh * RADIX |==> r % (rh * RADIX)
3049:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:r - rh * RADIX |==> r * (rh * RADIX)
3050:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:r - rh * RADIX |==> r + rh * RADIX
3051:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1556:r - rh * RADIX |==> r / (rh * RADIX)
3052:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1556:result.mant[i] = r - rh * RADIX |==> <NO-OP>
3053:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1559:0 |==> 1
3054:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1559:0 |==> -1
3055:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1560:0 |==> 1
3056:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1560:0 |==> -1
3057:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1560:rh != 0 |==> rh < 0
3058:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1560:rh != 0 |==> rh <= 0
3059:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1560:rh != 0 |==> rh == 0
3060:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1560:rh != 0 |==> rh > 0
3061:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1560:rh != 0 |==> rh >= 0
3062:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1560:rh != 0 |==> false
3063:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1560:rh != 0 |==> true
3064:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1561:0 |==> 1
3065:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1561:0 |==> -1
3066:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1561:lostdigit = result.mant[0] |==> <NO-OP>
3067:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1562:result.shiftRight() |==> <NO-OP>
3068:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(int):1563:1 |==> 0
3069:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1563:1 |==> -1
3070:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1563:mant.length - 1 |==> mant.length % 1
3071:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1563:mant.length - 1 |==> mant.length * 1
3072:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1563:mant.length - 1 |==> mant.length + 1
3073:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1563:mant.length - 1 |==> mant.length / 1
3074:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1563:result.mant[mant.length - 1] = rh |==> <NO-OP>
3075:LVR:POS:0:org.apache.commons.math.dfp.Dfp@multiply(int):1566:1 |==> 0
3076:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1566:1 |==> -1
3077:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:mant.length - 1 |==> mant.length % 1
3078:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:mant.length - 1 |==> mant.length * 1
3079:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:mant.length - 1 |==> mant.length + 1
3080:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:mant.length - 1 |==> mant.length / 1
3081:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1566:0 |==> 1
3082:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1566:0 |==> -1
3083:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] != 0
3084:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] < 0
3085:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] <= 0
3086:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] > 0
3087:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] >= 0
3088:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:result.mant[mant.length - 1] == 0 |==> false
3089:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1566:result.mant[mant.length - 1] == 0 |==> true
3090:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1567:0 |==> 1
3091:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1567:0 |==> -1
3092:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1567:result.exp = 0 |==> <NO-OP>
3093:LVR:0:POS:org.apache.commons.math.dfp.Dfp@multiply(int):1571:0 |==> 1
3094:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@multiply(int):1571:0 |==> -1
3095:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1571:excp != 0 |==> excp < 0
3096:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1571:excp != 0 |==> excp <= 0
3097:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1571:excp != 0 |==> excp == 0
3098:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1571:excp != 0 |==> excp > 0
3099:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1571:excp != 0 |==> excp >= 0
3100:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1571:excp != 0 |==> false
3101:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@multiply(int):1571:excp != 0 |==> true
3102:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@multiply(int):1572:result = dotrap(excp, MULTIPLY_TRAP, result, result) |==> <NO-OP>
3103:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1588:0 |==> 1
3104:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1588:0 |==> -1
3105:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1591:0 |==> 1
3106:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1591:0 |==> -1
3107:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1595:field.getRadixDigits() != divisor.field.getRadixDigits() |==> field.getRadixDigits() < divisor.field.getRadixDigits()
3108:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1595:field.getRadixDigits() != divisor.field.getRadixDigits() |==> field.getRadixDigits() <= divisor.field.getRadixDigits()
3109:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1595:field.getRadixDigits() != divisor.field.getRadixDigits() |==> field.getRadixDigits() == divisor.field.getRadixDigits()
3110:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1595:field.getRadixDigits() != divisor.field.getRadixDigits() |==> field.getRadixDigits() > divisor.field.getRadixDigits()
3111:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1595:field.getRadixDigits() != divisor.field.getRadixDigits() |==> field.getRadixDigits() >= divisor.field.getRadixDigits()
3112:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1595:field.getRadixDigits() != divisor.field.getRadixDigits() |==> false
3113:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1595:field.getRadixDigits() != divisor.field.getRadixDigits() |==> true
3114:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1596:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
3115:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1598:result.nans = QNAN |==> <NO-OP>
3116:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE |==> nans < FINITE
3117:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE |==> nans <= FINITE
3118:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE |==> nans == FINITE
3119:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE |==> nans > FINITE
3120:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE |==> nans >= FINITE
3121:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE |==> false
3122:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE |==> true
3123:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:divisor.nans != FINITE |==> divisor.nans < FINITE
3124:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:divisor.nans != FINITE |==> divisor.nans <= FINITE
3125:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:divisor.nans != FINITE |==> divisor.nans == FINITE
3126:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:divisor.nans != FINITE |==> divisor.nans > FINITE
3127:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:divisor.nans != FINITE |==> divisor.nans >= FINITE
3128:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:divisor.nans != FINITE |==> false
3129:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:divisor.nans != FINITE |==> true
3130:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE || divisor.nans != FINITE |==> nans != FINITE != (divisor.nans != FINITE)
3131:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE || divisor.nans != FINITE |==> nans != FINITE && divisor.nans != FINITE
3132:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE || divisor.nans != FINITE |==> nans != FINITE == (divisor.nans != FINITE)
3133:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE || divisor.nans != FINITE |==> false
3134:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE || divisor.nans != FINITE |==> nans != FINITE
3135:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE || divisor.nans != FINITE |==> divisor.nans != FINITE
3136:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1605:nans != FINITE || divisor.nans != FINITE |==> true
3137:COR:isNaN():TRUE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1606:isNaN() |==> false
3138:COR:isNaN():FALSE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1606:isNaN() |==> true
3139:COR:divisor.isNaN():TRUE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1610:divisor.isNaN() |==> false
3140:COR:divisor.isNaN():FALSE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1610:divisor.isNaN() |==> true
3141:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE |==> nans != INFINITE
3142:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE |==> nans < INFINITE
3143:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE |==> nans <= INFINITE
3144:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE |==> nans > INFINITE
3145:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE |==> nans >= INFINITE
3146:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE |==> false
3147:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE |==> true
3148:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:divisor.nans == FINITE |==> divisor.nans != FINITE
3149:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:divisor.nans == FINITE |==> divisor.nans < FINITE
3150:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:divisor.nans == FINITE |==> divisor.nans <= FINITE
3151:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:divisor.nans == FINITE |==> divisor.nans > FINITE
3152:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:divisor.nans == FINITE |==> divisor.nans >= FINITE
3153:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:divisor.nans == FINITE |==> false
3154:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:divisor.nans == FINITE |==> true
3155:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE && divisor.nans == FINITE |==> nans == INFINITE != (divisor.nans == FINITE)
3156:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE && divisor.nans == FINITE |==> nans == INFINITE == (divisor.nans == FINITE)
3157:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE && divisor.nans == FINITE |==> false
3158:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE && divisor.nans == FINITE |==> nans == INFINITE
3159:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE && divisor.nans == FINITE |==> divisor.nans == FINITE
3160:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE && divisor.nans == FINITE |==> true
3161:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1614:nans == INFINITE && divisor.nans == FINITE |==> nans == INFINITE || divisor.nans == FINITE
3162:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1615:result = newInstance(this) |==> <NO-OP>
3163:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1616:sign * divisor.sign |==> sign % divisor.sign
3164:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1616:sign * divisor.sign |==> sign + divisor.sign
3165:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1616:sign * divisor.sign |==> sign - divisor.sign
3166:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1616:sign * divisor.sign |==> sign / divisor.sign
3167:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1616:result.sign = (byte)(sign * divisor.sign) |==> <NO-OP>
3168:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE |==> divisor.nans != INFINITE
3169:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE |==> divisor.nans < INFINITE
3170:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE |==> divisor.nans <= INFINITE
3171:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE |==> divisor.nans > INFINITE
3172:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE |==> divisor.nans >= INFINITE
3173:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE |==> false
3174:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE |==> true
3175:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:nans == FINITE |==> nans != FINITE
3176:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:nans == FINITE |==> nans < FINITE
3177:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:nans == FINITE |==> nans <= FINITE
3178:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:nans == FINITE |==> nans > FINITE
3179:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:nans == FINITE |==> nans >= FINITE
3180:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:nans == FINITE |==> false
3181:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:nans == FINITE |==> true
3182:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE && nans == FINITE |==> divisor.nans == INFINITE != (nans == FINITE)
3183:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE && nans == FINITE |==> divisor.nans == INFINITE == (nans == FINITE)
3184:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE && nans == FINITE |==> false
3185:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE && nans == FINITE |==> divisor.nans == INFINITE
3186:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE && nans == FINITE |==> nans == FINITE
3187:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE && nans == FINITE |==> true
3188:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1620:divisor.nans == INFINITE && nans == FINITE |==> divisor.nans == INFINITE || nans == FINITE
3189:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1621:result = newInstance(getZero()) |==> <NO-OP>
3190:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1622:sign * divisor.sign |==> sign % divisor.sign
3191:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1622:sign * divisor.sign |==> sign + divisor.sign
3192:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1622:sign * divisor.sign |==> sign - divisor.sign
3193:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1622:sign * divisor.sign |==> sign / divisor.sign
3194:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1622:result.sign = (byte)(sign * divisor.sign) |==> <NO-OP>
3195:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE |==> divisor.nans != INFINITE
3196:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE |==> divisor.nans < INFINITE
3197:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE |==> divisor.nans <= INFINITE
3198:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE |==> divisor.nans > INFINITE
3199:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE |==> divisor.nans >= INFINITE
3200:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE |==> false
3201:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE |==> true
3202:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:nans == INFINITE |==> nans != INFINITE
3203:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:nans == INFINITE |==> nans < INFINITE
3204:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:nans == INFINITE |==> nans <= INFINITE
3205:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:nans == INFINITE |==> nans > INFINITE
3206:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:nans == INFINITE |==> nans >= INFINITE
3207:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:nans == INFINITE |==> false
3208:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:nans == INFINITE |==> true
3209:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE && nans == INFINITE |==> divisor.nans == INFINITE != (nans == INFINITE)
3210:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE && nans == INFINITE |==> divisor.nans == INFINITE == (nans == INFINITE)
3211:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE && nans == INFINITE |==> false
3212:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE && nans == INFINITE |==> divisor.nans == INFINITE
3213:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE && nans == INFINITE |==> nans == INFINITE
3214:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE && nans == INFINITE |==> true
3215:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1626:divisor.nans == INFINITE && nans == INFINITE |==> divisor.nans == INFINITE || nans == INFINITE
3216:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1627:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
3217:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1628:result = newInstance(getZero()) |==> <NO-OP>
3218:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1629:result.nans = QNAN |==> <NO-OP>
3219:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1630:result = dotrap(DfpField.FLAG_INVALID, DIVIDE_TRAP, divisor, result) |==> <NO-OP>
3220:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:1 |==> 0
3221:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:1 |==> -1
3222:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:mant.length - 1 |==> mant.length % 1
3223:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:mant.length - 1 |==> mant.length * 1
3224:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:mant.length - 1 |==> mant.length + 1
3225:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:mant.length - 1 |==> mant.length / 1
3226:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:0 |==> 1
3227:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:0 |==> -1
3228:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:divisor.mant[mant.length - 1] == 0 |==> divisor.mant[mant.length - 1] != 0
3229:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:divisor.mant[mant.length - 1] == 0 |==> divisor.mant[mant.length - 1] < 0
3230:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:divisor.mant[mant.length - 1] == 0 |==> divisor.mant[mant.length - 1] <= 0
3231:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:divisor.mant[mant.length - 1] == 0 |==> divisor.mant[mant.length - 1] > 0
3232:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:divisor.mant[mant.length - 1] == 0 |==> divisor.mant[mant.length - 1] >= 0
3233:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:divisor.mant[mant.length - 1] == 0 |==> false
3234:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1636:divisor.mant[mant.length - 1] == 0 |==> true
3235:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1637:field.setIEEEFlagsBits(DfpField.FLAG_DIV_ZERO) |==> <NO-OP>
3236:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1638:result = newInstance(getZero()) |==> <NO-OP>
3237:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1639:sign * divisor.sign |==> sign % divisor.sign
3238:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1639:sign * divisor.sign |==> sign + divisor.sign
3239:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1639:sign * divisor.sign |==> sign - divisor.sign
3240:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1639:sign * divisor.sign |==> sign / divisor.sign
3241:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1639:result.sign = (byte)(sign * divisor.sign) |==> <NO-OP>
3242:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1640:result.nans = INFINITE |==> <NO-OP>
3243:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1641:result = dotrap(DfpField.FLAG_DIV_ZERO, DIVIDE_TRAP, divisor, result) |==> <NO-OP>
3244:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1645:1 |==> 0
3245:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1645:1 |==> -1
3246:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1645:mant.length + 1 |==> mant.length % 1
3247:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1645:mant.length + 1 |==> mant.length * 1
3248:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1645:mant.length + 1 |==> mant.length - 1
3249:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1645:mant.length + 1 |==> mant.length / 1
3250:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1646:2 |==> 0
3251:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1646:2 |==> -2
3252:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1646:mant.length + 2 |==> mant.length % 2
3253:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1646:mant.length + 2 |==> mant.length * 2
3254:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1646:mant.length + 2 |==> mant.length - 2
3255:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1646:mant.length + 2 |==> mant.length / 2
3256:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1647:1 |==> 0
3257:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1647:1 |==> -1
3258:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1647:mant.length + 1 |==> mant.length % 1
3259:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1647:mant.length + 1 |==> mant.length * 1
3260:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1647:mant.length + 1 |==> mant.length - 1
3261:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1647:mant.length + 1 |==> mant.length / 1
3262:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1651:0 |==> 1
3263:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1651:0 |==> -1
3264:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1651:dividend[mant.length] = 0 |==> <NO-OP>
3265:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1652:0 |==> 1
3266:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1652:0 |==> -1
3267:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1652:quotient[mant.length] = 0 |==> <NO-OP>
3268:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:1 |==> 0
3269:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:1 |==> -1
3270:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:mant.length + 1 |==> mant.length % 1
3271:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:mant.length + 1 |==> mant.length * 1
3272:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:mant.length + 1 |==> mant.length - 1
3273:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:mant.length + 1 |==> mant.length / 1
3274:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:0 |==> 1
3275:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:0 |==> -1
3276:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1653:quotient[mant.length + 1] = 0 |==> <NO-OP>
3277:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1654:0 |==> 1
3278:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1654:0 |==> -1
3279:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1654:remainder[mant.length] = 0 |==> <NO-OP>
3280:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:0 |==> 1
3281:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:0 |==> -1
3282:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:i < mant.length |==> i != mant.length
3283:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:i < mant.length |==> i <= mant.length
3284:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:i < mant.length |==> i == mant.length
3285:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:i < mant.length |==> i > mant.length
3286:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:i < mant.length |==> i >= mant.length
3287:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:i < mant.length |==> false
3288:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1659:i < mant.length |==> true
3289:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1660:dividend[i] = mant[i] |==> <NO-OP>
3290:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1661:0 |==> 1
3291:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1661:0 |==> -1
3292:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1661:quotient[i] = 0 |==> <NO-OP>
3293:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1662:0 |==> 1
3294:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1662:0 |==> -1
3295:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1662:remainder[i] = 0 |==> <NO-OP>
3296:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1666:0 |==> 1
3297:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1666:0 |==> -1
3298:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:1 |==> 0
3299:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:1 |==> -1
3300:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:mant.length + 1 |==> mant.length % 1
3301:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:mant.length + 1 |==> mant.length * 1
3302:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:mant.length + 1 |==> mant.length - 1
3303:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:mant.length + 1 |==> mant.length / 1
3304:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:0 |==> 1
3305:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:0 |==> -1
3306:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:qd >= 0 |==> qd != 0
3307:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:qd >= 0 |==> qd < 0
3308:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:qd >= 0 |==> qd <= 0
3309:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:qd >= 0 |==> qd == 0
3310:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:qd >= 0 |==> qd > 0
3311:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:qd >= 0 |==> false
3312:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1667:qd >= 0 |==> true
3313:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX |==> dividend[mant.length] % RADIX
3314:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX |==> dividend[mant.length] + RADIX
3315:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX |==> dividend[mant.length] - RADIX
3316:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX |==> dividend[mant.length] / RADIX
3317:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:1 |==> 0
3318:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:1 |==> -1
3319:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:mant.length - 1 |==> mant.length % 1
3320:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:mant.length - 1 |==> mant.length * 1
3321:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:mant.length - 1 |==> mant.length + 1
3322:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:mant.length - 1 |==> mant.length / 1
3323:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX + dividend[mant.length - 1] |==> dividend[mant.length] * RADIX % dividend[mant.length - 1]
3324:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX + dividend[mant.length - 1] |==> dividend[mant.length] * RADIX * dividend[mant.length - 1]
3325:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX + dividend[mant.length - 1] |==> dividend[mant.length] * RADIX - dividend[mant.length - 1]
3326:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1671:dividend[mant.length] * RADIX + dividend[mant.length - 1] |==> dividend[mant.length] * RADIX / dividend[mant.length - 1]
3327:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:1 |==> 0
3328:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:1 |==> -1
3329:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:mant.length - 1 |==> mant.length % 1
3330:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:mant.length - 1 |==> mant.length * 1
3331:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:mant.length - 1 |==> mant.length + 1
3332:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:mant.length - 1 |==> mant.length / 1
3333:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:1 |==> 0
3334:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:1 |==> -1
3335:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] % 1
3336:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] * 1
3337:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] - 1
3338:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] / 1
3339:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divMsb / (divisor.mant[mant.length - 1] + 1) |==> divMsb % (divisor.mant[mant.length - 1] + 1)
3340:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divMsb / (divisor.mant[mant.length - 1] + 1) |==> divMsb * (divisor.mant[mant.length - 1] + 1)
3341:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divMsb / (divisor.mant[mant.length - 1] + 1) |==> divMsb + (divisor.mant[mant.length - 1] + 1)
3342:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1672:divMsb / (divisor.mant[mant.length - 1] + 1) |==> divMsb - (divisor.mant[mant.length - 1] + 1)
3343:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:1 |==> 0
3344:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:1 |==> -1
3345:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:divMsb + 1 |==> divMsb % 1
3346:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:divMsb + 1 |==> divMsb * 1
3347:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:divMsb + 1 |==> divMsb - 1
3348:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:divMsb + 1 |==> divMsb / 1
3349:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:1 |==> 0
3350:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:1 |==> -1
3351:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:mant.length - 1 |==> mant.length % 1
3352:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:mant.length - 1 |==> mant.length * 1
3353:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:mant.length - 1 |==> mant.length + 1
3354:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:mant.length - 1 |==> mant.length / 1
3355:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:(divMsb + 1) / divisor.mant[mant.length - 1] |==> (divMsb + 1) % divisor.mant[mant.length - 1]
3356:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:(divMsb + 1) / divisor.mant[mant.length - 1] |==> (divMsb + 1) * divisor.mant[mant.length - 1]
3357:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:(divMsb + 1) / divisor.mant[mant.length - 1] |==> (divMsb + 1) + divisor.mant[mant.length - 1]
3358:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1673:(divMsb + 1) / divisor.mant[mant.length - 1] |==> (divMsb + 1) - divisor.mant[mant.length - 1]
3359:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1675:false |==> true
3360:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:min + max |==> min % max
3361:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:min + max |==> min * max
3362:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:min + max |==> min - max
3363:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:min + max |==> min / max
3364:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:2 |==> 0
3365:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:2 |==> -2
3366:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:(min + max) / 2 |==> (min + max) % 2
3367:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:(min + max) / 2 |==> (min + max) * 2
3368:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:(min + max) / 2 |==> (min + max) + 2
3369:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:(min + max) / 2 |==> (min + max) - 2
3370:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1678:trial = (min + max) / 2 |==> <NO-OP>
3371:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1681:0 |==> 1
3372:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1681:0 |==> -1
3373:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:0 |==> 1
3374:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:0 |==> -1
3375:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:1 |==> 0
3376:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:1 |==> -1
3377:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:mant.length + 1 |==> mant.length % 1
3378:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:mant.length + 1 |==> mant.length * 1
3379:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:mant.length + 1 |==> mant.length - 1
3380:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:mant.length + 1 |==> mant.length / 1
3381:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:i < mant.length + 1 |==> i != mant.length + 1
3382:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:i < mant.length + 1 |==> i <= mant.length + 1
3383:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:i < mant.length + 1 |==> i == mant.length + 1
3384:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:i < mant.length + 1 |==> i > mant.length + 1
3385:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:i < mant.length + 1 |==> i >= mant.length + 1
3386:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:i < mant.length + 1 |==> false
3387:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1682:i < mant.length + 1 |==> true
3388:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:i < mant.length |==> i != mant.length
3389:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:i < mant.length |==> i <= mant.length
3390:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:i < mant.length |==> i == mant.length
3391:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:i < mant.length |==> i > mant.length
3392:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:i < mant.length |==> i >= mant.length
3393:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:i < mant.length |==> false
3394:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:i < mant.length |==> true
3395:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:0 |==> 1
3396:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1683:0 |==> -1
3397:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:dm * trial |==> dm % trial
3398:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:dm * trial |==> dm + trial
3399:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:dm * trial |==> dm - trial
3400:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:dm * trial |==> dm / trial
3401:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:(dm * trial) + rh |==> (dm * trial) % rh
3402:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:(dm * trial) + rh |==> (dm * trial) * rh
3403:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:(dm * trial) + rh |==> (dm * trial) - rh
3404:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1684:(dm * trial) + rh |==> (dm * trial) / rh
3405:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1685:r / RADIX |==> r % RADIX
3406:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1685:r / RADIX |==> r * RADIX
3407:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1685:r / RADIX |==> r + RADIX
3408:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1685:r / RADIX |==> r - RADIX
3409:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1685:rh = r / RADIX |==> <NO-OP>
3410:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:rh * RADIX |==> rh % RADIX
3411:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:rh * RADIX |==> rh + RADIX
3412:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:rh * RADIX |==> rh - RADIX
3413:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:rh * RADIX |==> rh / RADIX
3414:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:r - rh * RADIX |==> r % (rh * RADIX)
3415:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:r - rh * RADIX |==> r * (rh * RADIX)
3416:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:r - rh * RADIX |==> r + rh * RADIX
3417:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:r - rh * RADIX |==> r / (rh * RADIX)
3418:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1686:remainder[i] = r - rh * RADIX |==> <NO-OP>
3419:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1690:1 |==> 0
3420:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1690:1 |==> -1
3421:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1690:rh = 1 |==> <NO-OP>
3422:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:0 |==> 1
3423:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:0 |==> -1
3424:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:1 |==> 0
3425:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:1 |==> -1
3426:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:mant.length + 1 |==> mant.length % 1
3427:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:mant.length + 1 |==> mant.length * 1
3428:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:mant.length + 1 |==> mant.length - 1
3429:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:mant.length + 1 |==> mant.length / 1
3430:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:i < mant.length + 1 |==> i != mant.length + 1
3431:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:i < mant.length + 1 |==> i <= mant.length + 1
3432:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:i < mant.length + 1 |==> i == mant.length + 1
3433:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:i < mant.length + 1 |==> i > mant.length + 1
3434:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:i < mant.length + 1 |==> i >= mant.length + 1
3435:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:i < mant.length + 1 |==> false
3436:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1691:i < mant.length + 1 |==> true
3437:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:1 |==> 0
3438:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:1 |==> -1
3439:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:RADIX - 1 |==> RADIX % 1
3440:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:RADIX - 1 |==> RADIX * 1
3441:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:RADIX - 1 |==> RADIX + 1
3442:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:RADIX - 1 |==> RADIX / 1
3443:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:(RADIX - 1) - remainder[i] |==> (RADIX - 1) % remainder[i]
3444:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:(RADIX - 1) - remainder[i] |==> (RADIX - 1) * remainder[i]
3445:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:(RADIX - 1) - remainder[i] |==> (RADIX - 1) + remainder[i]
3446:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:(RADIX - 1) - remainder[i] |==> (RADIX - 1) / remainder[i]
3447:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] |==> ((RADIX - 1) - remainder[i]) % dividend[i]
3448:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] |==> ((RADIX - 1) - remainder[i]) * dividend[i]
3449:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] |==> ((RADIX - 1) - remainder[i]) - dividend[i]
3450:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] |==> ((RADIX - 1) - remainder[i]) / dividend[i]
3451:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] + rh |==> (((RADIX - 1) - remainder[i]) + dividend[i]) % rh
3452:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] + rh |==> (((RADIX - 1) - remainder[i]) + dividend[i]) * rh
3453:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] + rh |==> ((RADIX - 1) - remainder[i]) + dividend[i] - rh
3454:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1692:((RADIX - 1) - remainder[i]) + dividend[i] + rh |==> (((RADIX - 1) - remainder[i]) + dividend[i]) / rh
3455:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1693:r / RADIX |==> r % RADIX
3456:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1693:r / RADIX |==> r * RADIX
3457:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1693:r / RADIX |==> r + RADIX
3458:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1693:r / RADIX |==> r - RADIX
3459:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1693:rh = r / RADIX |==> <NO-OP>
3460:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:rh * RADIX |==> rh % RADIX
3461:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:rh * RADIX |==> rh + RADIX
3462:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:rh * RADIX |==> rh - RADIX
3463:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:rh * RADIX |==> rh / RADIX
3464:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:r - rh * RADIX |==> r % (rh * RADIX)
3465:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:r - rh * RADIX |==> r * (rh * RADIX)
3466:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:r - rh * RADIX |==> r + rh * RADIX
3467:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:r - rh * RADIX |==> r / (rh * RADIX)
3468:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1694:remainder[i] = r - rh * RADIX |==> <NO-OP>
3469:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:0 |==> 1
3470:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:0 |==> -1
3471:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:rh == 0 |==> rh != 0
3472:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:rh == 0 |==> rh < 0
3473:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:rh == 0 |==> rh <= 0
3474:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:rh == 0 |==> rh > 0
3475:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:rh == 0 |==> rh >= 0
3476:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:rh == 0 |==> false
3477:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1698:rh == 0 |==> true
3478:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1700:1 |==> 0
3479:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1700:1 |==> -1
3480:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1700:trial - 1 |==> trial % 1
3481:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1700:trial - 1 |==> trial * 1
3482:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1700:trial - 1 |==> trial + 1
3483:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1700:trial - 1 |==> trial / 1
3484:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1700:max = trial - 1 |==> <NO-OP>
3485:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:remainder[mant.length] * RADIX |==> remainder[mant.length] % RADIX
3486:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:remainder[mant.length] * RADIX |==> remainder[mant.length] + RADIX
3487:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:remainder[mant.length] * RADIX |==> remainder[mant.length] - RADIX
3488:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:remainder[mant.length] * RADIX |==> remainder[mant.length] / RADIX
3489:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:1 |==> 0
3490:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:1 |==> -1
3491:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:mant.length - 1 |==> mant.length % 1
3492:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:mant.length - 1 |==> mant.length * 1
3493:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:mant.length - 1 |==> mant.length + 1
3494:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:mant.length - 1 |==> mant.length / 1
3495:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:(remainder[mant.length] * RADIX) + remainder[mant.length - 1] |==> (remainder[mant.length] * RADIX) % remainder[mant.length - 1]
3496:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:(remainder[mant.length] * RADIX) + remainder[mant.length - 1] |==> (remainder[mant.length] * RADIX) * remainder[mant.length - 1]
3497:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:(remainder[mant.length] * RADIX) + remainder[mant.length - 1] |==> (remainder[mant.length] * RADIX) - remainder[mant.length - 1]
3498:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1705:(remainder[mant.length] * RADIX) + remainder[mant.length - 1] |==> (remainder[mant.length] * RADIX) / remainder[mant.length - 1]
3499:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:1 |==> 0
3500:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:1 |==> -1
3501:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:mant.length - 1 |==> mant.length % 1
3502:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:mant.length - 1 |==> mant.length * 1
3503:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:mant.length - 1 |==> mant.length + 1
3504:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:mant.length - 1 |==> mant.length / 1
3505:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:1 |==> 0
3506:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:1 |==> -1
3507:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] % 1
3508:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] * 1
3509:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] - 1
3510:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:divisor.mant[mant.length - 1] + 1 |==> divisor.mant[mant.length - 1] / 1
3511:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:minadj / (divisor.mant[mant.length - 1] + 1) |==> minadj % (divisor.mant[mant.length - 1] + 1)
3512:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:minadj / (divisor.mant[mant.length - 1] + 1) |==> minadj * (divisor.mant[mant.length - 1] + 1)
3513:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:minadj / (divisor.mant[mant.length - 1] + 1) |==> minadj + (divisor.mant[mant.length - 1] + 1)
3514:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:minadj / (divisor.mant[mant.length - 1] + 1) |==> minadj - (divisor.mant[mant.length - 1] + 1)
3515:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1706:minadj = minadj / (divisor.mant[mant.length - 1] + 1) |==> <NO-OP>
3516:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:2 |==> 0
3517:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:2 |==> -2
3518:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:minadj >= 2 |==> minadj != 2
3519:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:minadj >= 2 |==> minadj < 2
3520:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:minadj >= 2 |==> minadj <= 2
3521:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:minadj >= 2 |==> minadj == 2
3522:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:minadj >= 2 |==> minadj > 2
3523:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:minadj >= 2 |==> false
3524:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1708:minadj >= 2 |==> true
3525:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1709:trial + minadj |==> trial % minadj
3526:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1709:trial + minadj |==> trial * minadj
3527:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1709:trial + minadj |==> trial - minadj
3528:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1709:trial + minadj |==> trial / minadj
3529:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1709:min = trial + minadj |==> <NO-OP>
3530:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1715:false |==> true
3531:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1715:trialgood = false |==> <NO-OP>
3532:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:1 |==> 0
3533:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:1 |==> -1
3534:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:mant.length - 1 |==> mant.length % 1
3535:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:mant.length - 1 |==> mant.length * 1
3536:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:mant.length - 1 |==> mant.length + 1
3537:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:mant.length - 1 |==> mant.length / 1
3538:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:0 |==> 1
3539:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:0 |==> -1
3540:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:i >= 0 |==> i != 0
3541:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:i >= 0 |==> i < 0
3542:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:i >= 0 |==> i <= 0
3543:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:i >= 0 |==> i == 0
3544:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:i >= 0 |==> i > 0
3545:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:i >= 0 |==> false
3546:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1716:i >= 0 |==> true
3547:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1717:divisor.mant[i] > remainder[i] |==> divisor.mant[i] != remainder[i]
3548:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1717:divisor.mant[i] > remainder[i] |==> divisor.mant[i] < remainder[i]
3549:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1717:divisor.mant[i] > remainder[i] |==> divisor.mant[i] <= remainder[i]
3550:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1717:divisor.mant[i] > remainder[i] |==> divisor.mant[i] == remainder[i]
3551:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1717:divisor.mant[i] > remainder[i] |==> divisor.mant[i] >= remainder[i]
3552:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1717:divisor.mant[i] > remainder[i] |==> false
3553:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1717:divisor.mant[i] > remainder[i] |==> true
3554:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1718:true |==> false
3555:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1718:trialgood = true |==> <NO-OP>
3556:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1720:divisor.mant[i] < remainder[i] |==> divisor.mant[i] != remainder[i]
3557:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1720:divisor.mant[i] < remainder[i] |==> divisor.mant[i] <= remainder[i]
3558:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1720:divisor.mant[i] < remainder[i] |==> divisor.mant[i] == remainder[i]
3559:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1720:divisor.mant[i] < remainder[i] |==> divisor.mant[i] > remainder[i]
3560:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1720:divisor.mant[i] < remainder[i] |==> divisor.mant[i] >= remainder[i]
3561:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1720:divisor.mant[i] < remainder[i] |==> false
3562:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1720:divisor.mant[i] < remainder[i] |==> true
3563:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:0 |==> 1
3564:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:0 |==> -1
3565:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:remainder[mant.length] != 0 |==> remainder[mant.length] < 0
3566:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:remainder[mant.length] != 0 |==> remainder[mant.length] <= 0
3567:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:remainder[mant.length] != 0 |==> remainder[mant.length] == 0
3568:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:remainder[mant.length] != 0 |==> remainder[mant.length] > 0
3569:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:remainder[mant.length] != 0 |==> remainder[mant.length] >= 0
3570:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:remainder[mant.length] != 0 |==> false
3571:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1725:remainder[mant.length] != 0 |==> true
3572:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1726:false |==> true
3573:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1726:trialgood = false |==> <NO-OP>
3574:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1729:false |==> true
3575:ROR:==(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1729:trialgood == false |==> trialgood != false
3576:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1729:trialgood == false |==> false
3577:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1729:trialgood == false |==> trialgood
3578:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1729:trialgood == false |==> false
3579:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1729:trialgood == false |==> true
3580:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1730:1 |==> 0
3581:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1730:1 |==> -1
3582:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1730:trial + 1 |==> trial % 1
3583:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1730:trial + 1 |==> trial * 1
3584:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1730:trial + 1 |==> trial - 1
3585:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1730:trial + 1 |==> trial / 1
3586:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1730:min = trial + 1 |==> <NO-OP>
3587:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1735:quotient[qd] = trial |==> <NO-OP>
3588:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:0 |==> 1
3589:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:0 |==> -1
3590:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 |==> trial < 0
3591:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 |==> trial <= 0
3592:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 |==> trial == 0
3593:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 |==> trial > 0
3594:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 |==> trial >= 0
3595:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 |==> false
3596:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 |==> true
3597:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:0 |==> 1
3598:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:0 |==> -1
3599:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:nsqd != 0 |==> nsqd < 0
3600:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:nsqd != 0 |==> nsqd <= 0
3601:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:nsqd != 0 |==> nsqd == 0
3602:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:nsqd != 0 |==> nsqd > 0
3603:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:nsqd != 0 |==> nsqd >= 0
3604:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:nsqd != 0 |==> false
3605:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:nsqd != 0 |==> true
3606:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 || nsqd != 0 |==> trial != 0 != (nsqd != 0)
3607:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 || nsqd != 0 |==> trial != 0 && nsqd != 0
3608:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 || nsqd != 0 |==> trial != 0 == (nsqd != 0)
3609:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 || nsqd != 0 |==> false
3610:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 || nsqd != 0 |==> trial != 0
3611:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 || nsqd != 0 |==> nsqd != 0
3612:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1736:trial != 0 || nsqd != 0 |==> true
3613:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1737:nsqd++ |==> <NO-OP>
3614:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN |==> field.getRoundingMode() != DfpField.RoundingMode.ROUND_DOWN
3615:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN |==> false
3616:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN |==> true
3617:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:nsqd == mant.length |==> nsqd != mant.length
3618:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:nsqd == mant.length |==> nsqd < mant.length
3619:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:nsqd == mant.length |==> nsqd <= mant.length
3620:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:nsqd == mant.length |==> nsqd > mant.length
3621:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:nsqd == mant.length |==> nsqd >= mant.length
3622:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:nsqd == mant.length |==> false
3623:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:nsqd == mant.length |==> true
3624:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN && nsqd == mant.length |==> field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN != (nsqd == mant.length)
3625:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN && nsqd == mant.length |==> field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN == (nsqd == mant.length)
3626:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN && nsqd == mant.length |==> false
3627:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN && nsqd == mant.length |==> field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN
3628:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN && nsqd == mant.length |==> nsqd == mant.length
3629:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN && nsqd == mant.length |==> true
3630:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1740:field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN && nsqd == mant.length |==> field.getRoundingMode() == DfpField.RoundingMode.ROUND_DOWN || nsqd == mant.length
3631:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1745:nsqd > mant.length |==> nsqd != mant.length
3632:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1745:nsqd > mant.length |==> nsqd < mant.length
3633:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1745:nsqd > mant.length |==> nsqd <= mant.length
3634:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1745:nsqd > mant.length |==> nsqd == mant.length
3635:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1745:nsqd > mant.length |==> nsqd >= mant.length
3636:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1745:nsqd > mant.length |==> false
3637:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1745:nsqd > mant.length |==> true
3638:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1751:0 |==> 1
3639:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1751:0 |==> -1
3640:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1751:0 |==> 1
3641:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1751:0 |==> -1
3642:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1751:dividend[0] = 0 |==> <NO-OP>
3643:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:0 |==> 1
3644:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:0 |==> -1
3645:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:i < mant.length |==> i != mant.length
3646:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:i < mant.length |==> i <= mant.length
3647:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:i < mant.length |==> i == mant.length
3648:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:i < mant.length |==> i > mant.length
3649:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:i < mant.length |==> i >= mant.length
3650:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:i < mant.length |==> false
3651:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1752:i < mant.length |==> true
3652:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1753:1 |==> 0
3653:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1753:1 |==> -1
3654:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1753:i + 1 |==> i % 1
3655:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1753:i + 1 |==> i * 1
3656:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1753:i + 1 |==> i - 1
3657:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1753:i + 1 |==> i / 1
3658:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1753:dividend[i + 1] = remainder[i] |==> <NO-OP>
3659:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1758:md = mant.length |==> <NO-OP>
3660:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:1 |==> 0
3661:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:1 |==> -1
3662:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:mant.length + 1 |==> mant.length % 1
3663:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:mant.length + 1 |==> mant.length * 1
3664:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:mant.length + 1 |==> mant.length - 1
3665:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:mant.length + 1 |==> mant.length / 1
3666:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:0 |==> 1
3667:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:0 |==> -1
3668:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:i >= 0 |==> i != 0
3669:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:i >= 0 |==> i < 0
3670:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:i >= 0 |==> i <= 0
3671:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:i >= 0 |==> i == 0
3672:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:i >= 0 |==> i > 0
3673:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:i >= 0 |==> false
3674:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1759:i >= 0 |==> true
3675:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:0 |==> 1
3676:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:0 |==> -1
3677:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:quotient[i] != 0 |==> quotient[i] < 0
3678:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:quotient[i] != 0 |==> quotient[i] <= 0
3679:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:quotient[i] != 0 |==> quotient[i] == 0
3680:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:quotient[i] != 0 |==> quotient[i] > 0
3681:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:quotient[i] != 0 |==> quotient[i] >= 0
3682:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:quotient[i] != 0 |==> false
3683:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1760:quotient[i] != 0 |==> true
3684:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1761:md = i |==> <NO-OP>
3685:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:0 |==> 1
3686:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:0 |==> -1
3687:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:i < mant.length |==> i != mant.length
3688:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:i < mant.length |==> i <= mant.length
3689:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:i < mant.length |==> i == mant.length
3690:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:i < mant.length |==> i > mant.length
3691:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:i < mant.length |==> i >= mant.length
3692:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:i < mant.length |==> false
3693:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1767:i < mant.length |==> true
3694:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i |==> mant.length % i
3695:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i |==> mant.length * i
3696:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i |==> mant.length + i
3697:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i |==> mant.length / i
3698:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:1 |==> 0
3699:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:1 |==> -1
3700:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i - 1 |==> (mant.length - i) % 1
3701:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i - 1 |==> (mant.length - i) * 1
3702:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i - 1 |==> mant.length - i + 1
3703:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:mant.length - i - 1 |==> (mant.length - i) / 1
3704:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:md - i |==> md % i
3705:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:md - i |==> md * i
3706:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:md - i |==> md + i
3707:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:md - i |==> md / i
3708:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1768:result.mant[mant.length - i - 1] = quotient[md - i] |==> <NO-OP>
3709:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp |==> exp % divisor.exp
3710:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp |==> exp * divisor.exp
3711:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp |==> exp + divisor.exp
3712:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp |==> exp / divisor.exp
3713:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md |==> (exp - divisor.exp) % md
3714:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md |==> (exp - divisor.exp) * md
3715:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md |==> exp - divisor.exp - md
3716:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md |==> (exp - divisor.exp) / md
3717:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md - mant.length |==> (exp - divisor.exp + md) % mant.length
3718:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md - mant.length |==> (exp - divisor.exp + md) * mant.length
3719:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md - mant.length |==> exp - divisor.exp + md + mant.length
3720:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:exp - divisor.exp + md - mant.length |==> (exp - divisor.exp + md) / mant.length
3721:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1772:result.exp = exp - divisor.exp + md - mant.length |==> <NO-OP>
3722:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:sign == divisor.sign |==> sign != divisor.sign
3723:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:sign == divisor.sign |==> sign < divisor.sign
3724:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:sign == divisor.sign |==> sign <= divisor.sign
3725:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:sign == divisor.sign |==> sign > divisor.sign
3726:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:sign == divisor.sign |==> sign >= divisor.sign
3727:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:sign == divisor.sign |==> false
3728:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:sign == divisor.sign |==> true
3729:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:1 |==> 0
3730:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:1 |==> -1
3731:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:-1 |==> 0
3732:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:-1 |==> 1
3733:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1773:result.sign = (byte)((sign == divisor.sign) ? 1 : -1) |==> <NO-OP>
3734:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:1 |==> 0
3735:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:1 |==> -1
3736:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:mant.length - 1 |==> mant.length % 1
3737:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:mant.length - 1 |==> mant.length * 1
3738:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:mant.length - 1 |==> mant.length + 1
3739:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:mant.length - 1 |==> mant.length / 1
3740:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:0 |==> 1
3741:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:0 |==> -1
3742:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] != 0
3743:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] < 0
3744:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] <= 0
3745:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] > 0
3746:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] >= 0
3747:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:result.mant[mant.length - 1] == 0 |==> false
3748:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1775:result.mant[mant.length - 1] == 0 |==> true
3749:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1776:0 |==> 1
3750:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1776:0 |==> -1
3751:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1776:result.exp = 0 |==> <NO-OP>
3752:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:1 |==> 0
3753:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:1 |==> -1
3754:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:mant.length - 1 |==> mant.length % 1
3755:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:mant.length - 1 |==> mant.length * 1
3756:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:mant.length - 1 |==> mant.length + 1
3757:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:mant.length - 1 |==> mant.length / 1
3758:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:md > (mant.length - 1) |==> md != (mant.length - 1)
3759:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:md > (mant.length - 1) |==> md < (mant.length - 1)
3760:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:md > (mant.length - 1) |==> md <= (mant.length - 1)
3761:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:md > (mant.length - 1) |==> md == (mant.length - 1)
3762:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:md > (mant.length - 1) |==> md >= (mant.length - 1)
3763:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:md > (mant.length - 1) |==> false
3764:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1779:md > (mant.length - 1) |==> true
3765:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1780:md - mant.length |==> md % mant.length
3766:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1780:md - mant.length |==> md * mant.length
3767:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1780:md - mant.length |==> md + mant.length
3768:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1780:md - mant.length |==> md / mant.length
3769:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1782:0 |==> 1
3770:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1782:0 |==> -1
3771:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:0 |==> 1
3772:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:0 |==> -1
3773:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:excp != 0 |==> excp < 0
3774:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:excp != 0 |==> excp <= 0
3775:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:excp != 0 |==> excp == 0
3776:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:excp != 0 |==> excp > 0
3777:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:excp != 0 |==> excp >= 0
3778:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:excp != 0 |==> false
3779:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1785:excp != 0 |==> true
3780:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(org.apache.commons.math.dfp.Dfp):1786:result = dotrap(excp, DIVIDE_TRAP, divisor, result) |==> <NO-OP>
3781:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1800:nans != FINITE |==> nans < FINITE
3782:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1800:nans != FINITE |==> nans <= FINITE
3783:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1800:nans != FINITE |==> nans == FINITE
3784:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1800:nans != FINITE |==> nans > FINITE
3785:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1800:nans != FINITE |==> nans >= FINITE
3786:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1800:nans != FINITE |==> false
3787:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1800:nans != FINITE |==> true
3788:COR:isNaN():TRUE:org.apache.commons.math.dfp.Dfp@divide(int):1801:isNaN() |==> false
3789:COR:isNaN():FALSE:org.apache.commons.math.dfp.Dfp@divide(int):1801:isNaN() |==> true
3790:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1805:nans == INFINITE |==> nans != INFINITE
3791:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1805:nans == INFINITE |==> nans < INFINITE
3792:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1805:nans == INFINITE |==> nans <= INFINITE
3793:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1805:nans == INFINITE |==> nans > INFINITE
3794:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1805:nans == INFINITE |==> nans >= INFINITE
3795:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1805:nans == INFINITE |==> false
3796:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1805:nans == INFINITE |==> true
3797:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(int):1811:0 |==> 1
3798:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1811:0 |==> -1
3799:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1811:divisor == 0 |==> divisor != 0
3800:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1811:divisor == 0 |==> divisor < 0
3801:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1811:divisor == 0 |==> divisor <= 0
3802:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1811:divisor == 0 |==> divisor > 0
3803:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1811:divisor == 0 |==> divisor >= 0
3804:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1811:divisor == 0 |==> false
3805:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1811:divisor == 0 |==> true
3806:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1812:field.setIEEEFlagsBits(DfpField.FLAG_DIV_ZERO) |==> <NO-OP>
3807:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1814:result.sign = sign |==> <NO-OP>
3808:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1815:result.nans = INFINITE |==> <NO-OP>
3809:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1816:result = dotrap(DfpField.FLAG_DIV_ZERO, DIVIDE_TRAP, getZero(), result) |==> <NO-OP>
3810:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(int):1821:0 |==> 1
3811:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1821:0 |==> -1
3812:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 |==> divisor != 0
3813:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 |==> divisor <= 0
3814:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 |==> divisor == 0
3815:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 |==> divisor > 0
3816:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 |==> divisor >= 0
3817:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 |==> false
3818:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 |==> true
3819:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor >= RADIX |==> divisor != RADIX
3820:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor >= RADIX |==> divisor < RADIX
3821:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor >= RADIX |==> divisor <= RADIX
3822:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor >= RADIX |==> divisor == RADIX
3823:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor >= RADIX |==> divisor > RADIX
3824:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor >= RADIX |==> false
3825:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor >= RADIX |==> true
3826:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 || divisor >= RADIX |==> divisor < 0 != divisor >= RADIX
3827:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 || divisor >= RADIX |==> divisor < 0 && divisor >= RADIX
3828:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 || divisor >= RADIX |==> divisor < 0 == divisor >= RADIX
3829:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 || divisor >= RADIX |==> false
3830:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 || divisor >= RADIX |==> divisor < 0
3831:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 || divisor >= RADIX |==> divisor >= RADIX
3832:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@divide(int):1821:divisor < 0 || divisor >= RADIX |==> true
3833:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1822:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
3834:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1824:result.nans = QNAN |==> <NO-OP>
3835:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1825:result = dotrap(DfpField.FLAG_INVALID, DIVIDE_TRAP, result, result) |==> <NO-OP>
3836:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(int):1831:0 |==> 1
3837:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1831:0 |==> -1
3838:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(int):1832:1 |==> 0
3839:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1832:1 |==> -1
3840:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:mant.length - 1 |==> mant.length % 1
3841:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:mant.length - 1 |==> mant.length * 1
3842:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:mant.length - 1 |==> mant.length + 1
3843:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:mant.length - 1 |==> mant.length / 1
3844:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(int):1832:0 |==> 1
3845:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1832:0 |==> -1
3846:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:i >= 0 |==> i != 0
3847:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:i >= 0 |==> i < 0
3848:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:i >= 0 |==> i <= 0
3849:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:i >= 0 |==> i == 0
3850:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:i >= 0 |==> i > 0
3851:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:i >= 0 |==> false
3852:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1832:i >= 0 |==> true
3853:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX |==> rl % RADIX
3854:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX |==> rl + RADIX
3855:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX |==> rl - RADIX
3856:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX |==> rl / RADIX
3857:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX + result.mant[i] |==> rl * RADIX % result.mant[i]
3858:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX + result.mant[i] |==> rl * RADIX * result.mant[i]
3859:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX + result.mant[i] |==> rl * RADIX - result.mant[i]
3860:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1833:rl * RADIX + result.mant[i] |==> rl * RADIX / result.mant[i]
3861:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1834:r / divisor |==> r % divisor
3862:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1834:r / divisor |==> r * divisor
3863:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1834:r / divisor |==> r + divisor
3864:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1834:r / divisor |==> r - divisor
3865:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:rh * divisor |==> rh % divisor
3866:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:rh * divisor |==> rh + divisor
3867:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:rh * divisor |==> rh - divisor
3868:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:rh * divisor |==> rh / divisor
3869:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:r - rh * divisor |==> r % (rh * divisor)
3870:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:r - rh * divisor |==> r * (rh * divisor)
3871:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:r - rh * divisor |==> r + rh * divisor
3872:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1835:r - rh * divisor |==> r / (rh * divisor)
3873:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1835:rl = r - rh * divisor |==> <NO-OP>
3874:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1836:result.mant[i] = rh |==> <NO-OP>
3875:LVR:POS:0:org.apache.commons.math.dfp.Dfp@divide(int):1839:1 |==> 0
3876:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1839:1 |==> -1
3877:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:mant.length - 1 |==> mant.length % 1
3878:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:mant.length - 1 |==> mant.length * 1
3879:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:mant.length - 1 |==> mant.length + 1
3880:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:mant.length - 1 |==> mant.length / 1
3881:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(int):1839:0 |==> 1
3882:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1839:0 |==> -1
3883:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] != 0
3884:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] < 0
3885:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] <= 0
3886:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] > 0
3887:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:result.mant[mant.length - 1] == 0 |==> result.mant[mant.length - 1] >= 0
3888:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:result.mant[mant.length - 1] == 0 |==> false
3889:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1839:result.mant[mant.length - 1] == 0 |==> true
3890:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1841:result.shiftLeft() |==> <NO-OP>
3891:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1842:rl * RADIX |==> rl % RADIX
3892:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1842:rl * RADIX |==> rl + RADIX
3893:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1842:rl * RADIX |==> rl - RADIX
3894:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1842:rl * RADIX |==> rl / RADIX
3895:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1843:r / divisor |==> r % divisor
3896:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1843:r / divisor |==> r * divisor
3897:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1843:r / divisor |==> r + divisor
3898:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1843:r / divisor |==> r - divisor
3899:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:rh * divisor |==> rh % divisor
3900:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:rh * divisor |==> rh + divisor
3901:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:rh * divisor |==> rh - divisor
3902:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:rh * divisor |==> rh / divisor
3903:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:r - rh * divisor |==> r % (rh * divisor)
3904:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:r - rh * divisor |==> r * (rh * divisor)
3905:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:r - rh * divisor |==> r + rh * divisor
3906:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1844:r - rh * divisor |==> r / (rh * divisor)
3907:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1844:rl = r - rh * divisor |==> <NO-OP>
3908:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(int):1845:0 |==> 1
3909:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1845:0 |==> -1
3910:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1845:result.mant[0] = rh |==> <NO-OP>
3911:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX |==> rl % RADIX
3912:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX |==> rl + RADIX
3913:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX |==> rl - RADIX
3914:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX |==> rl / RADIX
3915:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX / divisor |==> rl * RADIX % divisor
3916:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX / divisor |==> rl * RADIX * divisor
3917:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX / divisor |==> rl * RADIX + divisor
3918:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1848:rl * RADIX / divisor |==> rl * RADIX - divisor
3919:LVR:0:POS:org.apache.commons.math.dfp.Dfp@divide(int):1849:0 |==> 1
3920:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@divide(int):1849:0 |==> -1
3921:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1849:excp != 0 |==> excp < 0
3922:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1849:excp != 0 |==> excp <= 0
3923:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1849:excp != 0 |==> excp == 0
3924:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1849:excp != 0 |==> excp > 0
3925:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1849:excp != 0 |==> excp >= 0
3926:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1849:excp != 0 |==> false
3927:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@divide(int):1849:excp != 0 |==> true
3928:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@divide(int):1850:result = dotrap(excp, DIVIDE_TRAP, result, result) |==> <NO-OP>
3929:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE |==> nans != FINITE
3930:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE |==> nans < FINITE
3931:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE |==> nans <= FINITE
3932:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE |==> nans > FINITE
3933:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE |==> nans >= FINITE
3934:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE |==> false
3935:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE |==> true
3936:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1863:1 |==> 0
3937:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1863:1 |==> -1
3938:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant.length - 1 |==> mant.length % 1
3939:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant.length - 1 |==> mant.length * 1
3940:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant.length - 1 |==> mant.length + 1
3941:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant.length - 1 |==> mant.length / 1
3942:LVR:0:POS:org.apache.commons.math.dfp.Dfp@sqrt():1863:0 |==> 1
3943:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1863:0 |==> -1
3944:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] != 0
3945:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] < 0
3946:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] <= 0
3947:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] > 0
3948:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] >= 0
3949:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant[mant.length - 1] == 0 |==> false
3950:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1863:mant[mant.length - 1] == 0 |==> true
3951:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE != (mant[mant.length - 1] == 0)
3952:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE == (mant[mant.length - 1] == 0)
3953:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE && mant[mant.length - 1] == 0 |==> false
3954:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE
3955:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE && mant[mant.length - 1] == 0 |==> mant[mant.length - 1] == 0
3956:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE && mant[mant.length - 1] == 0 |==> true
3957:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1863:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE || mant[mant.length - 1] == 0
3958:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1868:nans != FINITE |==> nans < FINITE
3959:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1868:nans != FINITE |==> nans <= FINITE
3960:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1868:nans != FINITE |==> nans == FINITE
3961:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1868:nans != FINITE |==> nans > FINITE
3962:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1868:nans != FINITE |==> nans >= FINITE
3963:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1868:nans != FINITE |==> false
3964:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1868:nans != FINITE |==> true
3965:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE |==> nans != INFINITE
3966:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE |==> nans < INFINITE
3967:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE |==> nans <= INFINITE
3968:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE |==> nans > INFINITE
3969:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE |==> nans >= INFINITE
3970:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE |==> false
3971:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE |==> true
3972:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1869:1 |==> 0
3973:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1869:1 |==> -1
3974:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:sign == 1 |==> sign != 1
3975:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:sign == 1 |==> sign < 1
3976:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:sign == 1 |==> sign <= 1
3977:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:sign == 1 |==> sign > 1
3978:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:sign == 1 |==> sign >= 1
3979:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:sign == 1 |==> false
3980:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1869:sign == 1 |==> true
3981:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE && sign == 1 |==> nans == INFINITE != (sign == 1)
3982:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE && sign == 1 |==> nans == INFINITE == (sign == 1)
3983:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE && sign == 1 |==> false
3984:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE && sign == 1 |==> nans == INFINITE
3985:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE && sign == 1 |==> sign == 1
3986:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE && sign == 1 |==> true
3987:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1869:nans == INFINITE && sign == 1 |==> nans == INFINITE || sign == 1
3988:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1874:nans == QNAN |==> nans != QNAN
3989:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1874:nans == QNAN |==> nans < QNAN
3990:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1874:nans == QNAN |==> nans <= QNAN
3991:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1874:nans == QNAN |==> nans > QNAN
3992:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1874:nans == QNAN |==> nans >= QNAN
3993:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1874:nans == QNAN |==> false
3994:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1874:nans == QNAN |==> true
3995:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1878:nans == SNAN |==> nans != SNAN
3996:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1878:nans == SNAN |==> nans < SNAN
3997:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1878:nans == SNAN |==> nans <= SNAN
3998:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1878:nans == SNAN |==> nans > SNAN
3999:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1878:nans == SNAN |==> nans >= SNAN
4000:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1878:nans == SNAN |==> false
4001:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1878:nans == SNAN |==> true
4002:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1881:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
4003:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1883:result = dotrap(DfpField.FLAG_INVALID, SQRT_TRAP, null, result) |==> <NO-OP>
4004:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@sqrt():1888:-1 |==> 0
4005:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@sqrt():1888:-1 |==> 1
4006:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1888:sign == -1 |==> sign != -1
4007:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1888:sign == -1 |==> sign < -1
4008:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1888:sign == -1 |==> sign <= -1
4009:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1888:sign == -1 |==> sign > -1
4010:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1888:sign == -1 |==> sign >= -1
4011:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1888:sign == -1 |==> false
4012:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1888:sign == -1 |==> true
4013:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1892:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
4014:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1894:result.nans = QNAN |==> <NO-OP>
4015:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1895:result = dotrap(DfpField.FLAG_INVALID, SQRT_TRAP, null, result) |==> <NO-OP>
4016:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@sqrt():1902:-1 |==> 0
4017:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@sqrt():1902:-1 |==> 1
4018:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 |==> x.exp != -1
4019:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 |==> x.exp <= -1
4020:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 |==> x.exp == -1
4021:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 |==> x.exp > -1
4022:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 |==> x.exp >= -1
4023:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 |==> false
4024:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 |==> true
4025:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1902:1 |==> 0
4026:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1902:1 |==> -1
4027:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp > 1 |==> x.exp != 1
4028:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp > 1 |==> x.exp < 1
4029:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp > 1 |==> x.exp <= 1
4030:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp > 1 |==> x.exp == 1
4031:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp > 1 |==> x.exp >= 1
4032:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp > 1 |==> false
4033:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp > 1 |==> true
4034:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 || x.exp > 1 |==> x.exp < -1 != x.exp > 1
4035:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 || x.exp > 1 |==> x.exp < -1 && x.exp > 1
4036:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 || x.exp > 1 |==> x.exp < -1 == x.exp > 1
4037:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 || x.exp > 1 |==> false
4038:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 || x.exp > 1 |==> x.exp < -1
4039:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 || x.exp > 1 |==> x.exp > 1
4040:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@sqrt():1902:x.exp < -1 || x.exp > 1 |==> true
4041:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1903:2 |==> 0
4042:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1903:2 |==> -2
4043:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1903:this.exp / 2 |==> this.exp % 2
4044:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1903:this.exp / 2 |==> this.exp * 2
4045:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1903:this.exp / 2 |==> this.exp + 2
4046:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1903:this.exp / 2 |==> this.exp - 2
4047:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1903:x.exp = this.exp / 2 |==> <NO-OP>
4048:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1907:1 |==> 0
4049:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1907:1 |==> -1
4050:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:mant.length - 1 |==> mant.length % 1
4051:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:mant.length - 1 |==> mant.length * 1
4052:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:mant.length - 1 |==> mant.length + 1
4053:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:mant.length - 1 |==> mant.length / 1
4054:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1907:2000 |==> 0
4055:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1907:2000 |==> -2000
4056:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:x.mant[mant.length - 1] / 2000 |==> x.mant[mant.length - 1] % 2000
4057:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:x.mant[mant.length - 1] / 2000 |==> x.mant[mant.length - 1] * 2000
4058:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:x.mant[mant.length - 1] / 2000 |==> x.mant[mant.length - 1] + 2000
4059:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1907:x.mant[mant.length - 1] / 2000 |==> x.mant[mant.length - 1] - 2000
4060:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1909:1 |==> 0
4061:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1909:1 |==> -1
4062:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length % 1
4063:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length * 1
4064:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length + 1
4065:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length / 1
4066:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1909:1 |==> 0
4067:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1909:1 |==> -1
4068:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length % 1
4069:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length * 1
4070:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length + 1
4071:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:mant.length - 1 |==> mant.length / 1
4072:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1909:2 |==> 0
4073:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1909:2 |==> -2
4074:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 |==> x.mant[mant.length - 1] % 2
4075:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 |==> x.mant[mant.length - 1] * 2
4076:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 |==> x.mant[mant.length - 1] + 2
4077:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 |==> x.mant[mant.length - 1] - 2
4078:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1909:1 |==> 0
4079:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1909:1 |==> -1
4080:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 + 1 |==> x.mant[mant.length - 1] / 2 % 1
4081:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 + 1 |==> x.mant[mant.length - 1] / 2 * 1
4082:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 + 1 |==> x.mant[mant.length - 1] / 2 - 1
4083:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] / 2 + 1 |==> x.mant[mant.length - 1] / 2 / 1
4084:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1909:x.mant[mant.length - 1] = x.mant[mant.length - 1] / 2 + 1 |==> <NO-OP>
4085:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1912:1 |==> 0
4086:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1912:1 |==> -1
4087:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1912:mant.length - 1 |==> mant.length % 1
4088:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1912:mant.length - 1 |==> mant.length * 1
4089:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1912:mant.length - 1 |==> mant.length + 1
4090:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1912:mant.length - 1 |==> mant.length / 1
4091:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1912:1500 |==> 0
4092:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1912:1500 |==> -1500
4093:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1912:x.mant[mant.length - 1] = 1500 |==> <NO-OP>
4094:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1915:1 |==> 0
4095:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1915:1 |==> -1
4096:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1915:mant.length - 1 |==> mant.length % 1
4097:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1915:mant.length - 1 |==> mant.length * 1
4098:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1915:mant.length - 1 |==> mant.length + 1
4099:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1915:mant.length - 1 |==> mant.length / 1
4100:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1915:2200 |==> 0
4101:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1915:2200 |==> -2200
4102:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1915:x.mant[mant.length - 1] = 2200 |==> <NO-OP>
4103:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1918:1 |==> 0
4104:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1918:1 |==> -1
4105:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1918:mant.length - 1 |==> mant.length % 1
4106:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1918:mant.length - 1 |==> mant.length * 1
4107:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1918:mant.length - 1 |==> mant.length + 1
4108:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1918:mant.length - 1 |==> mant.length / 1
4109:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1918:3000 |==> 0
4110:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1918:3000 |==> -3000
4111:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1918:x.mant[mant.length - 1] = 3000 |==> <NO-OP>
4112:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1929:dx = newInstance(x) |==> <NO-OP>
4113:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@sqrt():1930:-1 |==> 0
4114:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@sqrt():1930:-1 |==> 1
4115:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1930:dx.sign = -1 |==> <NO-OP>
4116:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1931:dx = dx.add(this.divide(x)) |==> <NO-OP>
4117:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1932:2 |==> 0
4118:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1932:2 |==> -2
4119:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1932:dx = dx.divide(2) |==> <NO-OP>
4120:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1933:ppx = px |==> <NO-OP>
4121:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1934:px = x |==> <NO-OP>
4122:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@sqrt():1935:x = x.add(dx) |==> <NO-OP>
4123:COR:x.equals(ppx):TRUE:org.apache.commons.math.dfp.Dfp@sqrt():1937:x.equals(ppx) |==> false
4124:COR:x.equals(ppx):FALSE:org.apache.commons.math.dfp.Dfp@sqrt():1937:x.equals(ppx) |==> true
4125:LVR:POS:0:org.apache.commons.math.dfp.Dfp@sqrt():1944:1 |==> 0
4126:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1944:1 |==> -1
4127:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:mant.length - 1 |==> mant.length % 1
4128:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:mant.length - 1 |==> mant.length * 1
4129:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:mant.length - 1 |==> mant.length + 1
4130:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:mant.length - 1 |==> mant.length / 1
4131:LVR:0:POS:org.apache.commons.math.dfp.Dfp@sqrt():1944:0 |==> 1
4132:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@sqrt():1944:0 |==> -1
4133:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:dx.mant[mant.length - 1] == 0 |==> dx.mant[mant.length - 1] != 0
4134:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:dx.mant[mant.length - 1] == 0 |==> dx.mant[mant.length - 1] < 0
4135:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:dx.mant[mant.length - 1] == 0 |==> dx.mant[mant.length - 1] <= 0
4136:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:dx.mant[mant.length - 1] == 0 |==> dx.mant[mant.length - 1] > 0
4137:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:dx.mant[mant.length - 1] == 0 |==> dx.mant[mant.length - 1] >= 0
4138:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:dx.mant[mant.length - 1] == 0 |==> false
4139:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@sqrt():1944:dx.mant[mant.length - 1] == 0 |==> true
4140:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@toString():1958:nans != FINITE |==> nans < FINITE
4141:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toString():1958:nans != FINITE |==> nans <= FINITE
4142:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toString():1958:nans != FINITE |==> nans == FINITE
4143:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toString():1958:nans != FINITE |==> nans > FINITE
4144:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toString():1958:nans != FINITE |==> nans >= FINITE
4145:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toString():1958:nans != FINITE |==> false
4146:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toString():1958:nans != FINITE |==> true
4147:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toString():1960:nans == INFINITE |==> nans != INFINITE
4148:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@toString():1960:nans == INFINITE |==> nans < INFINITE
4149:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toString():1960:nans == INFINITE |==> nans <= INFINITE
4150:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toString():1960:nans == INFINITE |==> nans > INFINITE
4151:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toString():1960:nans == INFINITE |==> nans >= INFINITE
4152:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toString():1960:nans == INFINITE |==> false
4153:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toString():1960:nans == INFINITE |==> true
4154:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toString():1961:0 |==> 1
4155:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toString():1961:0 |==> -1
4156:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toString():1961:sign < 0 |==> sign != 0
4157:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toString():1961:sign < 0 |==> sign <= 0
4158:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toString():1961:sign < 0 |==> sign == 0
4159:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toString():1961:sign < 0 |==> sign > 0
4160:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toString():1961:sign < 0 |==> sign >= 0
4161:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toString():1961:sign < 0 |==> false
4162:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toString():1961:sign < 0 |==> true
4163:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length |==> exp != mant.length
4164:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length |==> exp < mant.length
4165:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length |==> exp <= mant.length
4166:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length |==> exp == mant.length
4167:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length |==> exp >= mant.length
4168:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length |==> false
4169:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length |==> true
4170:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@toString():1967:-1 |==> 0
4171:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@toString():1967:-1 |==> 1
4172:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp < -1 |==> exp != -1
4173:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp < -1 |==> exp <= -1
4174:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp < -1 |==> exp == -1
4175:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp < -1 |==> exp > -1
4176:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp < -1 |==> exp >= -1
4177:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp < -1 |==> false
4178:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toString():1967:exp < -1 |==> true
4179:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length || exp < -1 |==> exp > mant.length != exp < -1
4180:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length || exp < -1 |==> exp > mant.length && exp < -1
4181:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length || exp < -1 |==> exp > mant.length == exp < -1
4182:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length || exp < -1 |==> false
4183:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length || exp < -1 |==> exp > mant.length
4184:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length || exp < -1 |==> exp < -1
4185:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@toString():1967:exp > mant.length || exp < -1 |==> true
4186:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1979:4 |==> 0
4187:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1979:4 |==> -4
4188:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1979:mant.length * 4 |==> mant.length % 4
4189:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1979:mant.length * 4 |==> mant.length + 4
4190:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1979:mant.length * 4 |==> mant.length - 4
4191:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1979:mant.length * 4 |==> mant.length / 4
4192:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1980:4 |==> 0
4193:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1980:4 |==> -4
4194:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 |==> mant.length % 4
4195:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 |==> mant.length + 4
4196:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 |==> mant.length - 4
4197:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 |==> mant.length / 4
4198:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1980:20 |==> 0
4199:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1980:20 |==> -20
4200:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 + 20 |==> mant.length * 4 % 20
4201:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 + 20 |==> mant.length * 4 * 20
4202:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 + 20 |==> mant.length * 4 - 20
4203:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1980:mant.length * 4 + 20 |==> mant.length * 4 / 20
4204:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():1988:0 |==> 1
4205:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1988:0 |==> -1
4206:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1989:1 |==> 0
4207:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1989:1 |==> -1
4208:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:mant.length - 1 |==> mant.length % 1
4209:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:mant.length - 1 |==> mant.length * 1
4210:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:mant.length - 1 |==> mant.length + 1
4211:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:mant.length - 1 |==> mant.length / 1
4212:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():1989:0 |==> 1
4213:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1989:0 |==> -1
4214:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:i >= 0 |==> i != 0
4215:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:i >= 0 |==> i < 0
4216:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:i >= 0 |==> i <= 0
4217:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:i >= 0 |==> i == 0
4218:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:i >= 0 |==> i > 0
4219:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:i >= 0 |==> false
4220:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1989:i >= 0 |==> true
4221:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1990:1000 |==> 0
4222:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1990:1000 |==> -1000
4223:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:mant[i] / 1000 |==> mant[i] % 1000
4224:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:mant[i] / 1000 |==> mant[i] * 1000
4225:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:mant[i] / 1000 |==> mant[i] + 1000
4226:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:mant[i] / 1000 |==> mant[i] - 1000
4227:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) % '0'
4228:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) * '0'
4229:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) - '0'
4230:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1990:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) / '0'
4231:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():1990:rawdigits[p++] = (char)((mant[i] / 1000) + '0') |==> <NO-OP>
4232:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1991:100 |==> 0
4233:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1991:100 |==> -100
4234:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:mant[i] / 100 |==> mant[i] % 100
4235:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:mant[i] / 100 |==> mant[i] * 100
4236:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:mant[i] / 100 |==> mant[i] + 100
4237:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:mant[i] / 100 |==> mant[i] - 100
4238:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1991:10 |==> 0
4239:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1991:10 |==> -10
4240:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:(mant[i] / 100) % 10 |==> (mant[i] / 100) * 10
4241:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:(mant[i] / 100) % 10 |==> (mant[i] / 100) + 10
4242:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:(mant[i] / 100) % 10 |==> (mant[i] / 100) - 10
4243:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:(mant[i] / 100) % 10 |==> (mant[i] / 100) / 10
4244:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) % '0'
4245:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) * '0'
4246:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) - '0'
4247:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1991:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) / '0'
4248:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():1991:rawdigits[p++] = (char)(((mant[i] / 100) % 10) + '0') |==> <NO-OP>
4249:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1992:10 |==> 0
4250:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1992:10 |==> -10
4251:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:mant[i] / 10 |==> mant[i] % 10
4252:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:mant[i] / 10 |==> mant[i] * 10
4253:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:mant[i] / 10 |==> mant[i] + 10
4254:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:mant[i] / 10 |==> mant[i] - 10
4255:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1992:10 |==> 0
4256:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1992:10 |==> -10
4257:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:(mant[i] / 10) % 10 |==> (mant[i] / 10) * 10
4258:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:(mant[i] / 10) % 10 |==> (mant[i] / 10) + 10
4259:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:(mant[i] / 10) % 10 |==> (mant[i] / 10) - 10
4260:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:(mant[i] / 10) % 10 |==> (mant[i] / 10) / 10
4261:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) % '0'
4262:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) * '0'
4263:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) - '0'
4264:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1992:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) / '0'
4265:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():1992:rawdigits[p++] = (char)(((mant[i] / 10) % 10) + '0') |==> <NO-OP>
4266:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():1993:10 |==> 0
4267:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1993:10 |==> -10
4268:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:(mant[i]) % 10 |==> (mant[i]) * 10
4269:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:(mant[i]) % 10 |==> (mant[i]) + 10
4270:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:(mant[i]) % 10 |==> (mant[i]) - 10
4271:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:(mant[i]) % 10 |==> (mant[i]) / 10
4272:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) % '0'
4273:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) * '0'
4274:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) - '0'
4275:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1993:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) / '0'
4276:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():1993:rawdigits[p++] = (char)(((mant[i]) % 10) + '0') |==> <NO-OP>
4277:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():1997:0 |==> 1
4278:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():1997:0 |==> -1
4279:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p = 0 |==> <NO-OP>
4280:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p < rawdigits.length |==> p != rawdigits.length
4281:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p < rawdigits.length |==> p <= rawdigits.length
4282:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p < rawdigits.length |==> p == rawdigits.length
4283:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p < rawdigits.length |==> p > rawdigits.length
4284:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p < rawdigits.length |==> p >= rawdigits.length
4285:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p < rawdigits.length |==> false
4286:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1997:p < rawdigits.length |==> true
4287:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1998:rawdigits[p] != '0' |==> rawdigits[p] < '0'
4288:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1998:rawdigits[p] != '0' |==> rawdigits[p] <= '0'
4289:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1998:rawdigits[p] != '0' |==> rawdigits[p] == '0'
4290:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1998:rawdigits[p] != '0' |==> rawdigits[p] > '0'
4291:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1998:rawdigits[p] != '0' |==> rawdigits[p] >= '0'
4292:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1998:rawdigits[p] != '0' |==> false
4293:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():1998:rawdigits[p] != '0' |==> true
4294:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():2005:0 |==> 1
4295:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2005:0 |==> -1
4296:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@dfp2sci():2006:-1 |==> 0
4297:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():2006:-1 |==> 1
4298:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2006:sign == -1 |==> sign != -1
4299:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2006:sign == -1 |==> sign < -1
4300:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2006:sign == -1 |==> sign <= -1
4301:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2006:sign == -1 |==> sign > -1
4302:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2006:sign == -1 |==> sign >= -1
4303:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2006:sign == -1 |==> false
4304:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2006:sign == -1 |==> true
4305:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2007:outputbuffer[q++] = '-' |==> <NO-OP>
4306:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2010:p != rawdigits.length |==> p < rawdigits.length
4307:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2010:p != rawdigits.length |==> p <= rawdigits.length
4308:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2010:p != rawdigits.length |==> p == rawdigits.length
4309:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2010:p != rawdigits.length |==> p > rawdigits.length
4310:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2010:p != rawdigits.length |==> p >= rawdigits.length
4311:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2010:p != rawdigits.length |==> false
4312:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2010:p != rawdigits.length |==> true
4313:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2012:outputbuffer[q++] = rawdigits[p++] |==> <NO-OP>
4314:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2013:outputbuffer[q++] = '.' |==> <NO-OP>
4315:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2015:p < rawdigits.length |==> p != rawdigits.length
4316:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2015:p < rawdigits.length |==> p <= rawdigits.length
4317:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2015:p < rawdigits.length |==> p == rawdigits.length
4318:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2015:p < rawdigits.length |==> p > rawdigits.length
4319:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2015:p < rawdigits.length |==> p >= rawdigits.length
4320:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2015:p < rawdigits.length |==> false
4321:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2015:p < rawdigits.length |==> true
4322:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2016:outputbuffer[q++] = rawdigits[p++] |==> <NO-OP>
4323:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2019:outputbuffer[q++] = '0' |==> <NO-OP>
4324:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2020:outputbuffer[q++] = '.' |==> <NO-OP>
4325:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2021:outputbuffer[q++] = '0' |==> <NO-OP>
4326:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2022:outputbuffer[q++] = 'e' |==> <NO-OP>
4327:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2023:outputbuffer[q++] = '0' |==> <NO-OP>
4328:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():2024:0 |==> 1
4329:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2024:0 |==> -1
4330:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():2024:5 |==> 0
4331:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2024:5 |==> -5
4332:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2027:outputbuffer[q++] = 'e' |==> <NO-OP>
4333:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():2031:4 |==> 0
4334:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2031:4 |==> -4
4335:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 |==> exp % 4
4336:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 |==> exp + 4
4337:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 |==> exp - 4
4338:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 |==> exp / 4
4339:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf |==> exp * 4 % shf
4340:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf |==> exp * 4 * shf
4341:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf |==> exp * 4 + shf
4342:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf |==> exp * 4 / shf
4343:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():2031:1 |==> 0
4344:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2031:1 |==> -1
4345:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf - 1 |==> (exp * 4 - shf) % 1
4346:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf - 1 |==> (exp * 4 - shf) * 1
4347:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf - 1 |==> exp * 4 - shf + 1
4348:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2031:exp * 4 - shf - 1 |==> (exp * 4 - shf) / 1
4349:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():2033:0 |==> 1
4350:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2033:0 |==> -1
4351:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2033:e < 0 |==> e != 0
4352:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2033:e < 0 |==> e <= 0
4353:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2033:e < 0 |==> e == 0
4354:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2033:e < 0 |==> e > 0
4355:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2033:e < 0 |==> e >= 0
4356:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2033:e < 0 |==> false
4357:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2033:e < 0 |==> true
4358:ORU:-(int):+(int):org.apache.commons.math.dfp.Dfp@dfp2sci():2034:-e |==> +e
4359:ORU:-(int):~(int):org.apache.commons.math.dfp.Dfp@dfp2sci():2034:-e |==> ~e
4360:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2034:ae = -e |==> <NO-OP>
4361:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():2038:1000000000 |==> 0
4362:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2038:1000000000 |==> -1000000000
4363:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p = 1000000000 |==> <NO-OP>
4364:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p > ae |==> p != ae
4365:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p > ae |==> p < ae
4366:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p > ae |==> p <= ae
4367:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p > ae |==> p == ae
4368:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p > ae |==> p >= ae
4369:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p > ae |==> false
4370:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2038:p > ae |==> true
4371:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():2038:10 |==> 0
4372:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2038:10 |==> -10
4373:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():2042:0 |==> 1
4374:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2042:0 |==> -1
4375:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2042:e < 0 |==> e != 0
4376:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2042:e < 0 |==> e <= 0
4377:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2042:e < 0 |==> e == 0
4378:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2042:e < 0 |==> e > 0
4379:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2042:e < 0 |==> e >= 0
4380:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2042:e < 0 |==> false
4381:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2042:e < 0 |==> true
4382:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2043:outputbuffer[q++] = '-' |==> <NO-OP>
4383:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():2046:0 |==> 1
4384:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2046:0 |==> -1
4385:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2046:p > 0 |==> p != 0
4386:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2046:p > 0 |==> p < 0
4387:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2046:p > 0 |==> p <= 0
4388:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2046:p > 0 |==> p == 0
4389:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2046:p > 0 |==> p >= 0
4390:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2046:p > 0 |==> false
4391:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2046:p > 0 |==> true
4392:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p |==> ae % p
4393:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p |==> ae * p
4394:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p |==> ae + p
4395:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p |==> ae - p
4396:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p + '0' |==> ae / p % '0'
4397:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p + '0' |==> ae / p * '0'
4398:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p + '0' |==> ae / p - '0'
4399:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2047:ae / p + '0' |==> ae / p / '0'
4400:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2047:outputbuffer[q++] = (char)(ae / p + '0') |==> <NO-OP>
4401:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2048:ae % p |==> ae * p
4402:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2048:ae % p |==> ae + p
4403:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2048:ae % p |==> ae - p
4404:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2048:ae % p |==> ae / p
4405:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2048:ae = ae % p |==> <NO-OP>
4406:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2sci():2049:10 |==> 0
4407:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2049:10 |==> -10
4408:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2049:p / 10 |==> p % 10
4409:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2049:p / 10 |==> p * 10
4410:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2049:p / 10 |==> p + 10
4411:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2sci():2049:p / 10 |==> p - 10
4412:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2sci():2049:p = p / 10 |==> <NO-OP>
4413:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2sci():2052:0 |==> 1
4414:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2sci():2052:0 |==> -1
4415:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2060:4 |==> 0
4416:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2060:4 |==> -4
4417:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 |==> mant.length % 4
4418:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 |==> mant.length + 4
4419:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 |==> mant.length - 4
4420:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 |==> mant.length / 4
4421:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2060:20 |==> 0
4422:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2060:20 |==> -20
4423:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 + 20 |==> mant.length * 4 % 20
4424:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 + 20 |==> mant.length * 4 * 20
4425:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 + 20 |==> mant.length * 4 - 20
4426:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2060:mant.length * 4 + 20 |==> mant.length * 4 / 20
4427:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2061:1 |==> 0
4428:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2061:1 |==> -1
4429:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@dfp2string():2064:false |==> true
4430:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2string():2066:0 |==> 1
4431:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2066:0 |==> -1
4432:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2066:buffer[0] = ' ' |==> <NO-OP>
4433:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2string():2068:0 |==> 1
4434:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2068:0 |==> -1
4435:ROR:<=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2068:e <= 0 |==> e != 0
4436:ROR:<=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2068:e <= 0 |==> e < 0
4437:ROR:<=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2068:e <= 0 |==> e == 0
4438:ROR:<=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2068:e <= 0 |==> e > 0
4439:ROR:<=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2068:e <= 0 |==> e >= 0
4440:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2068:e <= 0 |==> false
4441:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2068:e <= 0 |==> true
4442:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2069:buffer[p++] = '0' |==> <NO-OP>
4443:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2070:buffer[p++] = '.' |==> <NO-OP>
4444:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@dfp2string():2071:true |==> false
4445:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2071:pointInserted = true |==> <NO-OP>
4446:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2string():2074:0 |==> 1
4447:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2074:0 |==> -1
4448:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2074:e < 0 |==> e != 0
4449:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2074:e < 0 |==> e <= 0
4450:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2074:e < 0 |==> e == 0
4451:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2074:e < 0 |==> e > 0
4452:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2074:e < 0 |==> e >= 0
4453:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2074:e < 0 |==> false
4454:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2074:e < 0 |==> true
4455:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2075:buffer[p++] = '0' |==> <NO-OP>
4456:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2076:buffer[p++] = '0' |==> <NO-OP>
4457:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2077:buffer[p++] = '0' |==> <NO-OP>
4458:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2078:buffer[p++] = '0' |==> <NO-OP>
4459:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2079:e++ |==> <NO-OP>
4460:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2082:1 |==> 0
4461:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2082:1 |==> -1
4462:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:mant.length - 1 |==> mant.length % 1
4463:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:mant.length - 1 |==> mant.length * 1
4464:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:mant.length - 1 |==> mant.length + 1
4465:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:mant.length - 1 |==> mant.length / 1
4466:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2string():2082:0 |==> 1
4467:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2082:0 |==> -1
4468:ROR:>=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:i >= 0 |==> i != 0
4469:ROR:>=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:i >= 0 |==> i < 0
4470:ROR:>=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:i >= 0 |==> i <= 0
4471:ROR:>=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:i >= 0 |==> i == 0
4472:ROR:>=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:i >= 0 |==> i > 0
4473:ROR:>=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:i >= 0 |==> false
4474:ROR:>=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2082:i >= 0 |==> true
4475:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2083:1000 |==> 0
4476:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2083:1000 |==> -1000
4477:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:mant[i] / 1000 |==> mant[i] % 1000
4478:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:mant[i] / 1000 |==> mant[i] * 1000
4479:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:mant[i] / 1000 |==> mant[i] + 1000
4480:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:mant[i] / 1000 |==> mant[i] - 1000
4481:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) % '0'
4482:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) * '0'
4483:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) - '0'
4484:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2083:(mant[i] / 1000) + '0' |==> (mant[i] / 1000) / '0'
4485:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2083:buffer[p++] = (char)((mant[i] / 1000) + '0') |==> <NO-OP>
4486:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2084:100 |==> 0
4487:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2084:100 |==> -100
4488:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:mant[i] / 100 |==> mant[i] % 100
4489:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:mant[i] / 100 |==> mant[i] * 100
4490:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:mant[i] / 100 |==> mant[i] + 100
4491:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:mant[i] / 100 |==> mant[i] - 100
4492:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2084:10 |==> 0
4493:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2084:10 |==> -10
4494:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:(mant[i] / 100) % 10 |==> (mant[i] / 100) * 10
4495:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:(mant[i] / 100) % 10 |==> (mant[i] / 100) + 10
4496:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:(mant[i] / 100) % 10 |==> (mant[i] / 100) - 10
4497:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:(mant[i] / 100) % 10 |==> (mant[i] / 100) / 10
4498:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) % '0'
4499:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) * '0'
4500:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) - '0'
4501:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2084:((mant[i] / 100) % 10) + '0' |==> ((mant[i] / 100) % 10) / '0'
4502:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2084:buffer[p++] = (char)(((mant[i] / 100) % 10) + '0') |==> <NO-OP>
4503:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2085:10 |==> 0
4504:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2085:10 |==> -10
4505:AOR:/(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:mant[i] / 10 |==> mant[i] % 10
4506:AOR:/(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:mant[i] / 10 |==> mant[i] * 10
4507:AOR:/(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:mant[i] / 10 |==> mant[i] + 10
4508:AOR:/(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:mant[i] / 10 |==> mant[i] - 10
4509:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2085:10 |==> 0
4510:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2085:10 |==> -10
4511:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:(mant[i] / 10) % 10 |==> (mant[i] / 10) * 10
4512:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:(mant[i] / 10) % 10 |==> (mant[i] / 10) + 10
4513:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:(mant[i] / 10) % 10 |==> (mant[i] / 10) - 10
4514:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:(mant[i] / 10) % 10 |==> (mant[i] / 10) / 10
4515:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) % '0'
4516:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) * '0'
4517:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) - '0'
4518:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2085:((mant[i] / 10) % 10) + '0' |==> ((mant[i] / 10) % 10) / '0'
4519:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2085:buffer[p++] = (char)(((mant[i] / 10) % 10) + '0') |==> <NO-OP>
4520:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2086:10 |==> 0
4521:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2086:10 |==> -10
4522:AOR:%(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:(mant[i]) % 10 |==> (mant[i]) * 10
4523:AOR:%(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:(mant[i]) % 10 |==> (mant[i]) + 10
4524:AOR:%(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:(mant[i]) % 10 |==> (mant[i]) - 10
4525:AOR:%(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:(mant[i]) % 10 |==> (mant[i]) / 10
4526:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) % '0'
4527:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) * '0'
4528:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) - '0'
4529:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2086:((mant[i]) % 10) + '0' |==> ((mant[i]) % 10) / '0'
4530:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2086:buffer[p++] = (char)(((mant[i]) % 10) + '0') |==> <NO-OP>
4531:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2string():2087:0 |==> 1
4532:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2087:0 |==> -1
4533:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2087:--e == 0 |==> --e != 0
4534:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2087:--e == 0 |==> --e < 0
4535:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2087:--e == 0 |==> --e <= 0
4536:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2087:--e == 0 |==> --e > 0
4537:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2087:--e == 0 |==> --e >= 0
4538:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2087:--e == 0 |==> false
4539:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2087:--e == 0 |==> true
4540:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2088:buffer[p++] = '.' |==> <NO-OP>
4541:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@dfp2string():2089:true |==> false
4542:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2089:pointInserted = true |==> <NO-OP>
4543:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2string():2093:0 |==> 1
4544:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2093:0 |==> -1
4545:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2093:e > 0 |==> e != 0
4546:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2093:e > 0 |==> e < 0
4547:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2093:e > 0 |==> e <= 0
4548:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2093:e > 0 |==> e == 0
4549:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2093:e > 0 |==> e >= 0
4550:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2093:e > 0 |==> false
4551:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2093:e > 0 |==> true
4552:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2094:buffer[p++] = '0' |==> <NO-OP>
4553:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2095:buffer[p++] = '0' |==> <NO-OP>
4554:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2096:buffer[p++] = '0' |==> <NO-OP>
4555:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2097:buffer[p++] = '0' |==> <NO-OP>
4556:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2098:e-- |==> <NO-OP>
4557:COR:pointInserted:TRUE:org.apache.commons.math.dfp.Dfp@dfp2string():2101:pointInserted |==> false
4558:COR:pointInserted:FALSE:org.apache.commons.math.dfp.Dfp@dfp2string():2101:pointInserted |==> true
4559:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2103:buffer[p++] = '.' |==> <NO-OP>
4560:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2107:1 |==> 0
4561:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2107:1 |==> -1
4562:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2108:buffer[q] == '0' |==> buffer[q] != '0'
4563:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2108:buffer[q] == '0' |==> buffer[q] < '0'
4564:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2108:buffer[q] == '0' |==> buffer[q] <= '0'
4565:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2108:buffer[q] == '0' |==> buffer[q] > '0'
4566:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2108:buffer[q] == '0' |==> buffer[q] >= '0'
4567:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2108:buffer[q] == '0' |==> false
4568:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2108:buffer[q] == '0' |==> true
4569:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2109:q++ |==> <NO-OP>
4570:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2111:buffer[q] == '.' |==> buffer[q] != '.'
4571:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2111:buffer[q] == '.' |==> buffer[q] < '.'
4572:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2111:buffer[q] == '.' |==> buffer[q] <= '.'
4573:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2111:buffer[q] == '.' |==> buffer[q] > '.'
4574:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2111:buffer[q] == '.' |==> buffer[q] >= '.'
4575:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2111:buffer[q] == '.' |==> false
4576:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2111:buffer[q] == '.' |==> true
4577:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2112:q-- |==> <NO-OP>
4578:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dfp2string():2116:1 |==> 0
4579:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2116:1 |==> -1
4580:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:p - 1 |==> p % 1
4581:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:p - 1 |==> p * 1
4582:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:p - 1 |==> p + 1
4583:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:p - 1 |==> p / 1
4584:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:buffer[p - 1] == '0' |==> buffer[p - 1] != '0'
4585:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:buffer[p - 1] == '0' |==> buffer[p - 1] < '0'
4586:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:buffer[p - 1] == '0' |==> buffer[p - 1] <= '0'
4587:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:buffer[p - 1] == '0' |==> buffer[p - 1] > '0'
4588:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:buffer[p - 1] == '0' |==> buffer[p - 1] >= '0'
4589:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:buffer[p - 1] == '0' |==> false
4590:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2116:buffer[p - 1] == '0' |==> true
4591:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2117:p-- |==> <NO-OP>
4592:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dfp2string():2121:0 |==> 1
4593:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dfp2string():2121:0 |==> -1
4594:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2121:sign < 0 |==> sign != 0
4595:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2121:sign < 0 |==> sign <= 0
4596:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2121:sign < 0 |==> sign == 0
4597:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2121:sign < 0 |==> sign > 0
4598:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2121:sign < 0 |==> sign >= 0
4599:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2121:sign < 0 |==> false
4600:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2121:sign < 0 |==> true
4601:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dfp2string():2122:buffer[--q] = '-' |==> <NO-OP>
4602:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2125:p - q |==> p % q
4603:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2125:p - q |==> p * q
4604:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2125:p - q |==> p + q
4605:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dfp2string():2125:p - q |==> p / q
4606:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2141:def = newInstance(getZero()) |==> <NO-OP>
4607:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2142:def.sign = result.sign |==> <NO-OP>
4608:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2143:def.nans = QNAN |==> <NO-OP>
4609:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE |==> nans != FINITE
4610:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE |==> nans < FINITE
4611:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE |==> nans <= FINITE
4612:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE |==> nans > FINITE
4613:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE |==> nans >= FINITE
4614:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE |==> false
4615:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE |==> true
4616:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:1 |==> 0
4617:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:1 |==> -1
4618:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant.length - 1 |==> mant.length % 1
4619:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant.length - 1 |==> mant.length * 1
4620:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant.length - 1 |==> mant.length + 1
4621:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant.length - 1 |==> mant.length / 1
4622:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:0 |==> 1
4623:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:0 |==> -1
4624:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] < 0
4625:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] <= 0
4626:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] == 0
4627:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] > 0
4628:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant[mant.length - 1] != 0 |==> mant[mant.length - 1] >= 0
4629:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant[mant.length - 1] != 0 |==> false
4630:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:mant[mant.length - 1] != 0 |==> true
4631:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE && mant[mant.length - 1] != 0 |==> nans == FINITE != (mant[mant.length - 1] != 0)
4632:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE && mant[mant.length - 1] != 0 |==> nans == FINITE == (mant[mant.length - 1] != 0)
4633:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE && mant[mant.length - 1] != 0 |==> false
4634:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE && mant[mant.length - 1] != 0 |==> nans == FINITE
4635:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE && mant[mant.length - 1] != 0 |==> mant[mant.length - 1] != 0
4636:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE && mant[mant.length - 1] != 0 |==> true
4637:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2147:nans == FINITE && mant[mant.length - 1] != 0 |==> nans == FINITE || mant[mant.length - 1] != 0
4638:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2149:def = newInstance(getZero()) |==> <NO-OP>
4639:AOR:*(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2150:sign * oper.sign |==> sign % oper.sign
4640:AOR:*(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2150:sign * oper.sign |==> sign + oper.sign
4641:AOR:*(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2150:sign * oper.sign |==> sign - oper.sign
4642:AOR:*(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2150:sign * oper.sign |==> sign / oper.sign
4643:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2150:def.sign = (byte)(sign * oper.sign) |==> <NO-OP>
4644:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2151:def.nans = INFINITE |==> <NO-OP>
4645:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE |==> nans != FINITE
4646:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE |==> nans < FINITE
4647:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE |==> nans <= FINITE
4648:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE |==> nans > FINITE
4649:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE |==> nans >= FINITE
4650:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE |==> false
4651:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE |==> true
4652:LVR:POS:0:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:1 |==> 0
4653:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:1 |==> -1
4654:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant.length - 1 |==> mant.length % 1
4655:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant.length - 1 |==> mant.length * 1
4656:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant.length - 1 |==> mant.length + 1
4657:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant.length - 1 |==> mant.length / 1
4658:LVR:0:POS:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:0 |==> 1
4659:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:0 |==> -1
4660:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] != 0
4661:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] < 0
4662:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] <= 0
4663:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] > 0
4664:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant[mant.length - 1] == 0 |==> mant[mant.length - 1] >= 0
4665:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant[mant.length - 1] == 0 |==> false
4666:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:mant[mant.length - 1] == 0 |==> true
4667:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE != (mant[mant.length - 1] == 0)
4668:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE == (mant[mant.length - 1] == 0)
4669:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE && mant[mant.length - 1] == 0 |==> false
4670:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE
4671:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE && mant[mant.length - 1] == 0 |==> mant[mant.length - 1] == 0
4672:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE && mant[mant.length - 1] == 0 |==> true
4673:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2154:nans == FINITE && mant[mant.length - 1] == 0 |==> nans == FINITE || mant[mant.length - 1] == 0
4674:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2156:def = newInstance(getZero()) |==> <NO-OP>
4675:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2157:def.nans = QNAN |==> <NO-OP>
4676:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE |==> nans != INFINITE
4677:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE |==> nans < INFINITE
4678:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE |==> nans <= INFINITE
4679:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE |==> nans > INFINITE
4680:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE |==> nans >= INFINITE
4681:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE |==> false
4682:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE |==> true
4683:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == QNAN |==> nans != QNAN
4684:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == QNAN |==> nans < QNAN
4685:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == QNAN |==> nans <= QNAN
4686:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == QNAN |==> nans > QNAN
4687:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == QNAN |==> nans >= QNAN
4688:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == QNAN |==> false
4689:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == QNAN |==> true
4690:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE || nans == QNAN |==> nans == INFINITE != (nans == QNAN)
4691:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE || nans == QNAN |==> nans == INFINITE && nans == QNAN
4692:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE || nans == QNAN |==> nans == INFINITE == (nans == QNAN)
4693:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE || nans == QNAN |==> false
4694:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE || nans == QNAN |==> nans == INFINITE
4695:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE || nans == QNAN |==> nans == QNAN
4696:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2160:nans == INFINITE || nans == QNAN |==> true
4697:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2161:def = newInstance(getZero()) |==> <NO-OP>
4698:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2162:def.nans = QNAN |==> <NO-OP>
4699:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE |==> nans != INFINITE
4700:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE |==> nans < INFINITE
4701:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE |==> nans <= INFINITE
4702:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE |==> nans > INFINITE
4703:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE |==> nans >= INFINITE
4704:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE |==> false
4705:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE |==> true
4706:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == SNAN |==> nans != SNAN
4707:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == SNAN |==> nans < SNAN
4708:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == SNAN |==> nans <= SNAN
4709:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == SNAN |==> nans > SNAN
4710:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == SNAN |==> nans >= SNAN
4711:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == SNAN |==> false
4712:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == SNAN |==> true
4713:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE || nans == SNAN |==> nans == INFINITE != (nans == SNAN)
4714:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE || nans == SNAN |==> nans == INFINITE && nans == SNAN
4715:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE || nans == SNAN |==> nans == INFINITE == (nans == SNAN)
4716:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE || nans == SNAN |==> false
4717:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE || nans == SNAN |==> nans == INFINITE
4718:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE || nans == SNAN |==> nans == SNAN
4719:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2165:nans == INFINITE || nans == SNAN |==> true
4720:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2166:def = newInstance(getZero()) |==> <NO-OP>
4721:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2167:def.nans = QNAN |==> <NO-OP>
4722:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:result.exp + mant.length |==> result.exp % mant.length
4723:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:result.exp + mant.length |==> result.exp * mant.length
4724:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:result.exp + mant.length |==> result.exp - mant.length
4725:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:result.exp + mant.length |==> result.exp / mant.length
4726:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:(result.exp + mant.length) < MIN_EXP |==> (result.exp + mant.length) != MIN_EXP
4727:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:(result.exp + mant.length) < MIN_EXP |==> (result.exp + mant.length) <= MIN_EXP
4728:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:(result.exp + mant.length) < MIN_EXP |==> (result.exp + mant.length) == MIN_EXP
4729:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:(result.exp + mant.length) < MIN_EXP |==> (result.exp + mant.length) > MIN_EXP
4730:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:(result.exp + mant.length) < MIN_EXP |==> (result.exp + mant.length) >= MIN_EXP
4731:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:(result.exp + mant.length) < MIN_EXP |==> false
4732:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2172:(result.exp + mant.length) < MIN_EXP |==> true
4733:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2173:def = newInstance(getZero()) |==> <NO-OP>
4734:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2174:def.sign = result.sign |==> <NO-OP>
4735:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2176:def = newInstance(result) |==> <NO-OP>
4736:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2178:result.exp + ERR_SCALE |==> result.exp % ERR_SCALE
4737:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2178:result.exp + ERR_SCALE |==> result.exp * ERR_SCALE
4738:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2178:result.exp + ERR_SCALE |==> result.exp - ERR_SCALE
4739:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2178:result.exp + ERR_SCALE |==> result.exp / ERR_SCALE
4740:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2178:result.exp = result.exp + ERR_SCALE |==> <NO-OP>
4741:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2182:result.exp - ERR_SCALE |==> result.exp % ERR_SCALE
4742:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2182:result.exp - ERR_SCALE |==> result.exp * ERR_SCALE
4743:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2182:result.exp - ERR_SCALE |==> result.exp + ERR_SCALE
4744:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2182:result.exp - ERR_SCALE |==> result.exp / ERR_SCALE
4745:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2182:result.exp = result.exp - ERR_SCALE |==> <NO-OP>
4746:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2183:def = newInstance(getZero()) |==> <NO-OP>
4747:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2184:def.sign = result.sign |==> <NO-OP>
4748:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2185:def.nans = INFINITE |==> <NO-OP>
4749:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@dotrap(int,java.lang.String,org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2188:def = result |==> <NO-OP>
4750:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@copysign(org.apache.commons.math.dfp.Dfp,org.apache.commons.math.dfp.Dfp):2225:result.sign = y.sign |==> <NO-OP>
4751:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2237:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() < x.field.getRadixDigits()
4752:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2237:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() <= x.field.getRadixDigits()
4753:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2237:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() == x.field.getRadixDigits()
4754:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2237:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() > x.field.getRadixDigits()
4755:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2237:field.getRadixDigits() != x.field.getRadixDigits() |==> field.getRadixDigits() >= x.field.getRadixDigits()
4756:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2237:field.getRadixDigits() != x.field.getRadixDigits() |==> false
4757:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2237:field.getRadixDigits() != x.field.getRadixDigits() |==> true
4758:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2238:field.setIEEEFlagsBits(DfpField.FLAG_INVALID) |==> <NO-OP>
4759:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2240:result.nans = QNAN |==> <NO-OP>
4760:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2245:false |==> true
4761:COR:this.lessThan(x):TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2246:this.lessThan(x) |==> false
4762:COR:this.lessThan(x):FALSE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2246:this.lessThan(x) |==> true
4763:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2247:true |==> false
4764:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2247:up = true |==> <NO-OP>
4765:LVR:0:POS:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:0 |==> 1
4766:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:0 |==> -1
4767:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:compare(this, x) == 0 |==> compare(this, x) != 0
4768:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:compare(this, x) == 0 |==> compare(this, x) < 0
4769:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:compare(this, x) == 0 |==> compare(this, x) <= 0
4770:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:compare(this, x) == 0 |==> compare(this, x) > 0
4771:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:compare(this, x) == 0 |==> compare(this, x) >= 0
4772:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:compare(this, x) == 0 |==> false
4773:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2250:compare(this, x) == 0 |==> true
4774:COR:lessThan(getZero()):TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2254:lessThan(getZero()) |==> false
4775:COR:lessThan(getZero()):FALSE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2254:lessThan(getZero()) |==> true
4776:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2255:up = !up |==> <NO-OP>
4777:COR:up:TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2260:up |==> false
4778:COR:up:FALSE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2260:up |==> true
4779:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length |==> this.exp % mant.length
4780:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length |==> this.exp * mant.length
4781:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length |==> this.exp + mant.length
4782:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length |==> this.exp / mant.length
4783:LVR:POS:0:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:1 |==> 0
4784:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:1 |==> -1
4785:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length + 1 |==> (this.exp - mant.length) % 1
4786:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length + 1 |==> (this.exp - mant.length) * 1
4787:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length + 1 |==> this.exp - mant.length - 1
4788:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:this.exp - mant.length + 1 |==> (this.exp - mant.length) / 1
4789:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2262:inc.exp = this.exp - mant.length + 1 |==> <NO-OP>
4790:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2263:inc.sign = this.sign |==> <NO-OP>
4791:COR:this.equals(getZero()):TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2265:this.equals(getZero()) |==> false
4792:COR:this.equals(getZero()):FALSE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2265:this.equals(getZero()) |==> true
4793:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2266:MIN_EXP - mant.length |==> MIN_EXP % mant.length
4794:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2266:MIN_EXP - mant.length |==> MIN_EXP * mant.length
4795:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2266:MIN_EXP - mant.length |==> MIN_EXP + mant.length
4796:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2266:MIN_EXP - mant.length |==> MIN_EXP / mant.length
4797:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2266:inc.exp = MIN_EXP - mant.length |==> <NO-OP>
4798:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2272:inc.exp = this.exp |==> <NO-OP>
4799:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2273:inc.sign = this.sign |==> <NO-OP>
4800:COR:this.equals(inc):TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2275:this.equals(inc) |==> false
4801:COR:this.equals(inc):FALSE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2275:this.equals(inc) |==> true
4802:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2276:this.exp - mant.length |==> this.exp % mant.length
4803:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2276:this.exp - mant.length |==> this.exp * mant.length
4804:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2276:this.exp - mant.length |==> this.exp + mant.length
4805:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2276:this.exp - mant.length |==> this.exp / mant.length
4806:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2276:inc.exp = this.exp - mant.length |==> <NO-OP>
4807:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length |==> this.exp % mant.length
4808:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length |==> this.exp * mant.length
4809:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length |==> this.exp + mant.length
4810:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length |==> this.exp / mant.length
4811:LVR:POS:0:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:1 |==> 0
4812:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:1 |==> -1
4813:AOR:+(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length + 1 |==> (this.exp - mant.length) % 1
4814:AOR:+(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length + 1 |==> (this.exp - mant.length) * 1
4815:AOR:+(int,int):-(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length + 1 |==> this.exp - mant.length - 1
4816:AOR:+(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:this.exp - mant.length + 1 |==> (this.exp - mant.length) / 1
4817:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2278:inc.exp = this.exp - mant.length + 1 |==> <NO-OP>
4818:COR:this.equals(getZero()):TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2281:this.equals(getZero()) |==> false
4819:COR:this.equals(getZero()):FALSE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2281:this.equals(getZero()) |==> true
4820:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2282:MIN_EXP - mant.length |==> MIN_EXP % mant.length
4821:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2282:MIN_EXP - mant.length |==> MIN_EXP * mant.length
4822:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2282:MIN_EXP - mant.length |==> MIN_EXP + mant.length
4823:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2282:MIN_EXP - mant.length |==> MIN_EXP / mant.length
4824:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2282:inc.exp = MIN_EXP - mant.length |==> <NO-OP>
4825:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE |==> result.classify() != INFINITE
4826:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE |==> result.classify() < INFINITE
4827:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE |==> result.classify() <= INFINITE
4828:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE |==> result.classify() > INFINITE
4829:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE |==> result.classify() >= INFINITE
4830:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE |==> false
4831:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE |==> true
4832:ROR:!=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:this.classify() != INFINITE |==> this.classify() < INFINITE
4833:ROR:!=(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:this.classify() != INFINITE |==> this.classify() <= INFINITE
4834:ROR:!=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:this.classify() != INFINITE |==> this.classify() == INFINITE
4835:ROR:!=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:this.classify() != INFINITE |==> this.classify() > INFINITE
4836:ROR:!=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:this.classify() != INFINITE |==> this.classify() >= INFINITE
4837:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:this.classify() != INFINITE |==> false
4838:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:this.classify() != INFINITE |==> true
4839:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE && this.classify() != INFINITE |==> result.classify() == INFINITE != (this.classify() != INFINITE)
4840:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE && this.classify() != INFINITE |==> result.classify() == INFINITE == (this.classify() != INFINITE)
4841:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE && this.classify() != INFINITE |==> false
4842:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE && this.classify() != INFINITE |==> result.classify() == INFINITE
4843:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE && this.classify() != INFINITE |==> this.classify() != INFINITE
4844:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE && this.classify() != INFINITE |==> true
4845:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2288:result.classify() == INFINITE && this.classify() != INFINITE |==> result.classify() == INFINITE || this.classify() != INFINITE
4846:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2289:field.setIEEEFlagsBits(DfpField.FLAG_INEXACT) |==> <NO-OP>
4847:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2290:result = dotrap(DfpField.FLAG_INEXACT, NEXT_AFTER_TRAP, x, result) |==> <NO-OP>
4848:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:false |==> true
4849:ROR:==(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:this.equals(getZero()) == false |==> this.equals(getZero()) != false
4850:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:this.equals(getZero()) == false |==> false
4851:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:this.equals(getZero()) == false |==> this.equals(getZero())
4852:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:this.equals(getZero()) == false |==> false
4853:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:this.equals(getZero()) == false |==> true
4854:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:result.equals(getZero()) && this.equals(getZero()) == false |==> result.equals(getZero()) != (this.equals(getZero()) == false)
4855:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:result.equals(getZero()) && this.equals(getZero()) == false |==> result.equals(getZero()) == (this.equals(getZero()) == false)
4856:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:result.equals(getZero()) && this.equals(getZero()) == false |==> false
4857:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:result.equals(getZero()) && this.equals(getZero()) == false |==> result.equals(getZero())
4858:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:result.equals(getZero()) && this.equals(getZero()) == false |==> this.equals(getZero()) == false
4859:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:result.equals(getZero()) && this.equals(getZero()) == false |==> true
4860:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2293:result.equals(getZero()) && this.equals(getZero()) == false |==> result.equals(getZero()) || this.equals(getZero()) == false
4861:STD:<CALL>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2294:field.setIEEEFlagsBits(DfpField.FLAG_INEXACT) |==> <NO-OP>
4862:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@nextAfter(org.apache.commons.math.dfp.Dfp):2295:result = dotrap(DfpField.FLAG_INEXACT, NEXT_AFTER_TRAP, x, result) |==> <NO-OP>
4863:COR:isInfinite():TRUE:org.apache.commons.math.dfp.Dfp@toDouble():2308:isInfinite() |==> false
4864:COR:isInfinite():FALSE:org.apache.commons.math.dfp.Dfp@toDouble():2308:isInfinite() |==> true
4865:COR:lessThan(getZero()):TRUE:org.apache.commons.math.dfp.Dfp@toDouble():2309:lessThan(getZero()) |==> false
4866:COR:lessThan(getZero()):FALSE:org.apache.commons.math.dfp.Dfp@toDouble():2309:lessThan(getZero()) |==> true
4867:COR:isNaN():TRUE:org.apache.commons.math.dfp.Dfp@toDouble():2316:isNaN() |==> false
4868:COR:isNaN():FALSE:org.apache.commons.math.dfp.Dfp@toDouble():2316:isNaN() |==> true
4869:LVR:FALSE:TRUE:org.apache.commons.math.dfp.Dfp@toDouble():2321:false |==> true
4870:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2323:0 |==> 1
4871:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2323:0 |==> -1
4872:ROR:==(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2323:cmp0 == 0 |==> cmp0 != 0
4873:ROR:==(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2323:cmp0 == 0 |==> cmp0 < 0
4874:ROR:==(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2323:cmp0 == 0 |==> cmp0 <= 0
4875:ROR:==(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2323:cmp0 == 0 |==> cmp0 > 0
4876:ROR:==(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2323:cmp0 == 0 |==> cmp0 >= 0
4877:ROR:==(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2323:cmp0 == 0 |==> false
4878:ROR:==(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2323:cmp0 == 0 |==> true
4879:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2324:0 |==> 1
4880:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2324:0 |==> -1
4881:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2324:sign < 0 |==> sign != 0
4882:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2324:sign < 0 |==> sign <= 0
4883:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2324:sign < 0 |==> sign == 0
4884:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2324:sign < 0 |==> sign > 0
4885:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2324:sign < 0 |==> sign >= 0
4886:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2324:sign < 0 |==> false
4887:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2324:sign < 0 |==> true
4888:ORU:-(double):+(double):org.apache.commons.math.dfp.Dfp@toDouble():2324:-0.0 |==> +0.0
4889:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2324:0.0 |==> 1.0
4890:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2324:0.0 |==> -1.0
4891:ORU:+(double):-(double):org.apache.commons.math.dfp.Dfp@toDouble():2324:+0.0 |==> -0.0
4892:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2324:0.0 |==> 1.0
4893:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2324:0.0 |==> -1.0
4894:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2325:0 |==> 1
4895:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2325:0 |==> -1
4896:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2325:cmp0 < 0 |==> cmp0 != 0
4897:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2325:cmp0 < 0 |==> cmp0 <= 0
4898:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2325:cmp0 < 0 |==> cmp0 == 0
4899:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2325:cmp0 < 0 |==> cmp0 > 0
4900:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2325:cmp0 < 0 |==> cmp0 >= 0
4901:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2325:cmp0 < 0 |==> false
4902:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2325:cmp0 < 0 |==> true
4903:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2326:y = negate() |==> <NO-OP>
4904:LVR:TRUE:FALSE:org.apache.commons.math.dfp.Dfp@toDouble():2327:true |==> false
4905:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2327:negate = true |==> <NO-OP>
4906:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2332:3.32 |==> 0.0
4907:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2332:3.32 |==> -3.32
4908:AOR:*(double,double):%(double,double):org.apache.commons.math.dfp.Dfp@toDouble():2332:y.log10() * 3.32 |==> y.log10() % 3.32
4909:AOR:*(double,double):+(double,double):org.apache.commons.math.dfp.Dfp@toDouble():2332:y.log10() * 3.32 |==> y.log10() + 3.32
4910:AOR:*(double,double):-(double,double):org.apache.commons.math.dfp.Dfp@toDouble():2332:y.log10() * 3.32 |==> y.log10() - 3.32
4911:AOR:*(double,double):/(double,double):org.apache.commons.math.dfp.Dfp@toDouble():2332:y.log10() * 3.32 |==> y.log10() / 3.32
4912:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2333:0 |==> 1
4913:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2333:0 |==> -1
4914:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2333:exponent < 0 |==> exponent != 0
4915:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2333:exponent < 0 |==> exponent <= 0
4916:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2333:exponent < 0 |==> exponent == 0
4917:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2333:exponent < 0 |==> exponent > 0
4918:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2333:exponent < 0 |==> exponent >= 0
4919:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2333:exponent < 0 |==> false
4920:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2333:exponent < 0 |==> true
4921:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2334:exponent-- |==> <NO-OP>
4922:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.dfp.Dfp@toDouble():2338:tempDfp.lessThan(y) || tempDfp.equals(y) |==> tempDfp.lessThan(y) != tempDfp.equals(y)
4923:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.dfp.Dfp@toDouble():2338:tempDfp.lessThan(y) || tempDfp.equals(y) |==> tempDfp.lessThan(y) && tempDfp.equals(y)
4924:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.dfp.Dfp@toDouble():2338:tempDfp.lessThan(y) || tempDfp.equals(y) |==> tempDfp.lessThan(y) == tempDfp.equals(y)
4925:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.dfp.Dfp@toDouble():2338:tempDfp.lessThan(y) || tempDfp.equals(y) |==> false
4926:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@toDouble():2338:tempDfp.lessThan(y) || tempDfp.equals(y) |==> tempDfp.lessThan(y)
4927:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.dfp.Dfp@toDouble():2338:tempDfp.lessThan(y) || tempDfp.equals(y) |==> tempDfp.equals(y)
4928:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.dfp.Dfp@toDouble():2338:tempDfp.lessThan(y) || tempDfp.equals(y) |==> true
4929:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2339:2 |==> 0
4930:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2339:2 |==> -2
4931:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2339:tempDfp = tempDfp.multiply(2) |==> <NO-OP>
4932:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2340:exponent++ |==> <NO-OP>
4933:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2342:exponent-- |==> <NO-OP>
4934:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2346:y = y.divide(DfpMath.pow(getTwo(), exponent)) |==> <NO-OP>
4935:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@toDouble():2347:-1023 |==> 0
4936:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@toDouble():2347:-1023 |==> 1023
4937:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2347:exponent > -1023 |==> exponent != -1023
4938:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2347:exponent > -1023 |==> exponent < -1023
4939:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2347:exponent > -1023 |==> exponent <= -1023
4940:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2347:exponent > -1023 |==> exponent == -1023
4941:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2347:exponent > -1023 |==> exponent >= -1023
4942:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2347:exponent > -1023 |==> false
4943:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2347:exponent > -1023 |==> true
4944:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2348:y = y.subtract(getOne()) |==> <NO-OP>
4945:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@toDouble():2351:-1074 |==> 0
4946:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@toDouble():2351:-1074 |==> 1074
4947:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2351:exponent < -1074 |==> exponent != -1074
4948:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2351:exponent < -1074 |==> exponent <= -1074
4949:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2351:exponent < -1074 |==> exponent == -1074
4950:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2351:exponent < -1074 |==> exponent > -1074
4951:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2351:exponent < -1074 |==> exponent >= -1074
4952:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2351:exponent < -1074 |==> false
4953:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2351:exponent < -1074 |==> true
4954:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2352:0 |==> 1
4955:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2352:0 |==> -1
4956:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2355:1023 |==> 0
4957:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2355:1023 |==> -1023
4958:ROR:>(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2355:exponent > 1023 |==> exponent != 1023
4959:ROR:>(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2355:exponent > 1023 |==> exponent < 1023
4960:ROR:>(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2355:exponent > 1023 |==> exponent <= 1023
4961:ROR:>(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2355:exponent > 1023 |==> exponent == 1023
4962:ROR:>(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2355:exponent > 1023 |==> exponent >= 1023
4963:ROR:>(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2355:exponent > 1023 |==> false
4964:ROR:>(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2355:exponent > 1023 |==> true
4965:COR:negate:TRUE:org.apache.commons.math.dfp.Dfp@toDouble():2356:negate |==> false
4966:COR:negate:FALSE:org.apache.commons.math.dfp.Dfp@toDouble():2356:negate |==> true
4967:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2360:4503599627370496L |==> 0L
4968:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2360:4503599627370496L |==> -4503599627370496L
4969:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2360:y = y.multiply(newInstance(4503599627370496L)).rint() |==> <NO-OP>
4970:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2362:0 |==> 1
4971:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2362:0 |==> -1
4972:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2362:1 |==> 0
4973:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2362:1 |==> -1
4974:AOR:-(int,int):%(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2362:str.length() - 1 |==> str.length() % 1
4975:AOR:-(int,int):*(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2362:str.length() - 1 |==> str.length() * 1
4976:AOR:-(int,int):+(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2362:str.length() - 1 |==> str.length() + 1
4977:AOR:-(int,int):/(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2362:str.length() - 1 |==> str.length() / 1
4978:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2362:str = str.substring(0, str.length() - 1) |==> <NO-OP>
4979:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2365:4503599627370496L |==> 0L
4980:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2365:4503599627370496L |==> -4503599627370496L
4981:ROR:==(long,long):!=(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2365:mantissa == 4503599627370496L |==> mantissa != 4503599627370496L
4982:ROR:==(long,long):<(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2365:mantissa == 4503599627370496L |==> mantissa < 4503599627370496L
4983:ROR:==(long,long):<=(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2365:mantissa == 4503599627370496L |==> mantissa <= 4503599627370496L
4984:ROR:==(long,long):>(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2365:mantissa == 4503599627370496L |==> mantissa > 4503599627370496L
4985:ROR:==(long,long):>=(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2365:mantissa == 4503599627370496L |==> mantissa >= 4503599627370496L
4986:ROR:==(long,long):FALSE(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2365:mantissa == 4503599627370496L |==> false
4987:ROR:==(long,long):TRUE(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2365:mantissa == 4503599627370496L |==> true
4988:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toDouble():2367:0 |==> 1
4989:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2367:0 |==> -1
4990:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2367:mantissa = 0 |==> <NO-OP>
4991:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2368:exponent++ |==> <NO-OP>
4992:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@toDouble():2372:-1023 |==> 0
4993:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@toDouble():2372:-1023 |==> 1023
4994:ROR:<=(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2372:exponent <= -1023 |==> exponent != -1023
4995:ROR:<=(int,int):<(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2372:exponent <= -1023 |==> exponent < -1023
4996:ROR:<=(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2372:exponent <= -1023 |==> exponent == -1023
4997:ROR:<=(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2372:exponent <= -1023 |==> exponent > -1023
4998:ROR:<=(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2372:exponent <= -1023 |==> exponent >= -1023
4999:ROR:<=(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2372:exponent <= -1023 |==> false
5000:ROR:<=(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2372:exponent <= -1023 |==> true
5001:STD:<DEC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2373:exponent-- |==> <NO-OP>
5002:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@toDouble():2376:-1023 |==> 0
5003:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@toDouble():2376:-1023 |==> 1023
5004:ROR:<(int,int):!=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2376:exponent < -1023 |==> exponent != -1023
5005:ROR:<(int,int):<=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2376:exponent < -1023 |==> exponent <= -1023
5006:ROR:<(int,int):==(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2376:exponent < -1023 |==> exponent == -1023
5007:ROR:<(int,int):>(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2376:exponent < -1023 |==> exponent > -1023
5008:ROR:<(int,int):>=(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2376:exponent < -1023 |==> exponent >= -1023
5009:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2376:exponent < -1023 |==> false
5010:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.dfp.Dfp@toDouble():2376:exponent < -1023 |==> true
5011:STD:<INC>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2377:exponent++ |==> <NO-OP>
5012:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2378:1 |==> 0
5013:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2378:1 |==> -1
5014:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2378:mantissa >>>= 1 |==> <NO-OP>
5015:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2381:1023L |==> 0L
5016:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2381:1023L |==> -1023L
5017:AOR:+(long,long):%(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2381:exponent + 1023L |==> exponent % 1023L
5018:AOR:+(long,long):*(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2381:exponent + 1023L |==> exponent * 1023L
5019:AOR:+(long,long):-(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2381:exponent + 1023L |==> exponent - 1023L
5020:AOR:+(long,long):/(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2381:exponent + 1023L |==> exponent / 1023L
5021:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toDouble():2381:52 |==> 0
5022:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toDouble():2381:52 |==> -52
5023:SOR:<<(long,int):>>(long,int):org.apache.commons.math.dfp.Dfp@toDouble():2381:(exponent + 1023L) << 52 |==> (exponent + 1023L) >> 52
5024:SOR:<<(long,int):>>>(long,int):org.apache.commons.math.dfp.Dfp@toDouble():2381:(exponent + 1023L) << 52 |==> (exponent + 1023L) >>> 52
5025:LOR:|(long,long):&(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2381:mantissa | ((exponent + 1023L) << 52) |==> mantissa & ((exponent + 1023L) << 52)
5026:LOR:|(long,long):^(long,long):org.apache.commons.math.dfp.Dfp@toDouble():2381:mantissa | ((exponent + 1023L) << 52) |==> mantissa ^ ((exponent + 1023L) << 52)
5027:COR:negate:TRUE:org.apache.commons.math.dfp.Dfp@toDouble():2384:negate |==> false
5028:COR:negate:FALSE:org.apache.commons.math.dfp.Dfp@toDouble():2384:negate |==> true
5029:ORU:-(double):+(double):org.apache.commons.math.dfp.Dfp@toDouble():2385:-x |==> +x
5030:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toDouble():2385:x = -x |==> <NO-OP>
5031:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toSplitDouble():2397:2 |==> 0
5032:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toSplitDouble():2397:2 |==> -2
5033:LVR:NEG:0:org.apache.commons.math.dfp.Dfp@toSplitDouble():2398:-1073741824L |==> 0L
5034:LVR:NEG:POS:org.apache.commons.math.dfp.Dfp@toSplitDouble():2398:-1073741824L |==> 1073741824L
5035:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toSplitDouble():2400:0 |==> 1
5036:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toSplitDouble():2400:0 |==> -1
5037:LOR:&(long,long):^(long,long):org.apache.commons.math.dfp.Dfp@toSplitDouble():2400:Double.doubleToLongBits(toDouble()) & mask |==> Double.doubleToLongBits(toDouble()) ^ mask
5038:LOR:&(long,long):|(long,long):org.apache.commons.math.dfp.Dfp@toSplitDouble():2400:Double.doubleToLongBits(toDouble()) & mask |==> Double.doubleToLongBits(toDouble()) | mask
5039:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toSplitDouble():2400:split[0] = Double.longBitsToDouble(Double.doubleToLongBits(toDouble()) & mask) |==> <NO-OP>
5040:LVR:POS:0:org.apache.commons.math.dfp.Dfp@toSplitDouble():2401:1 |==> 0
5041:LVR:POS:NEG:org.apache.commons.math.dfp.Dfp@toSplitDouble():2401:1 |==> -1
5042:LVR:0:POS:org.apache.commons.math.dfp.Dfp@toSplitDouble():2401:0 |==> 1
5043:LVR:0:NEG:org.apache.commons.math.dfp.Dfp@toSplitDouble():2401:0 |==> -1
5044:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.dfp.Dfp@toSplitDouble():2401:split[1] = subtract(newInstance(split[0])).toDouble() |==> <NO-OP>
