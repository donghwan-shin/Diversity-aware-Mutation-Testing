1:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):87:stepHandlers = new ArrayList<StepHandler>() |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):88:stepStart = Double.NaN |==> <NO-OP>
3:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):89:stepSize = Double.NaN |==> <NO-OP>
4:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):90:eventsStates = new ArrayList<EventState>() |==> <NO-OP>
5:LVR:FALSE:TRUE:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):91:false |==> true
6:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):91:statesInitialized = false |==> <NO-OP>
7:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):92:evaluations = new Incrementor() |==> <NO-OP>
8:LVR:NEG:0:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):93:-1 |==> 0
9:LVR:NEG:POS:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):93:-1 |==> 1
10:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):93:setMaxEvaluations(-1) |==> <NO-OP>
11:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@<init>(java.lang.String):94:resetEvaluations() |==> <NO-OP>
12:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@addStepHandler(org.apache.commons.math.ode.sampling.StepHandler):110:stepHandlers.add(handler) |==> <NO-OP>
13:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@clearStepHandlers():120:stepHandlers.clear() |==> <NO-OP>
14:LVR:POS:0:org.apache.commons.math.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math.ode.events.EventHandler,double,double,int):130:5 |==> 0
15:LVR:POS:NEG:org.apache.commons.math.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math.ode.events.EventHandler,double,double,int):130:5 |==> -5
16:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math.ode.events.EventHandler,double,double,int):128:addEventHandler(handler, maxCheckInterval, convergence, maxIterationCount, new BracketingNthOrderBrentSolver(convergence, 5)) |==> <NO-OP>
17:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@addEventHandler(org.apache.commons.math.ode.events.EventHandler,double,double,int,org.apache.commons.math.analysis.solvers.UnivariateRealSolver):139:eventsStates.add(new EventState(handler, maxCheckInterval, convergence, maxIterationCount, solver)) |==> <NO-OP>
18:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@getEventHandlers():147:list.add(state.getEventHandler()) |==> <NO-OP>
19:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@clearEventHandlers():154:eventsStates.clear() |==> <NO-OP>
20:LVR:0:POS:org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:0 |==> 1
21:LVR:0:NEG:org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:0 |==> -1
22:ROR:<(int,int):!=(int,int):org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:maxEvaluations < 0 |==> maxEvaluations != 0
23:ROR:<(int,int):<=(int,int):org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:maxEvaluations < 0 |==> maxEvaluations <= 0
24:ROR:<(int,int):==(int,int):org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:maxEvaluations < 0 |==> maxEvaluations == 0
25:ROR:<(int,int):>(int,int):org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:maxEvaluations < 0 |==> maxEvaluations > 0
26:ROR:<(int,int):>=(int,int):org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:maxEvaluations < 0 |==> maxEvaluations >= 0
27:ROR:<(int,int):FALSE(int,int):org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:maxEvaluations < 0 |==> false
28:ROR:<(int,int):TRUE(int,int):org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:maxEvaluations < 0 |==> true
29:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@setMaxEvaluations(int):169:evaluations.setMaximalCount((maxEvaluations < 0) ? Integer.MAX_VALUE : maxEvaluations) |==> <NO-OP>
30:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@resetEvaluations():185:evaluations.resetCount() |==> <NO-OP>
31:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@setEquations(org.apache.commons.math.ode.ExpandableStatefulODE):192:this.expandable = equations |==> <NO-OP>
32:ROR:!=(int,int):<(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):200:y0.length != equations.getDimension() |==> y0.length < equations.getDimension()
33:ROR:!=(int,int):<=(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):200:y0.length != equations.getDimension() |==> y0.length <= equations.getDimension()
34:ROR:!=(int,int):==(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):200:y0.length != equations.getDimension() |==> y0.length == equations.getDimension()
35:ROR:!=(int,int):>(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):200:y0.length != equations.getDimension() |==> y0.length > equations.getDimension()
36:ROR:!=(int,int):>=(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):200:y0.length != equations.getDimension() |==> y0.length >= equations.getDimension()
37:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):200:y0.length != equations.getDimension() |==> false
38:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):200:y0.length != equations.getDimension() |==> true
39:ROR:!=(int,int):<(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):203:y.length != equations.getDimension() |==> y.length < equations.getDimension()
40:ROR:!=(int,int):<=(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):203:y.length != equations.getDimension() |==> y.length <= equations.getDimension()
41:ROR:!=(int,int):==(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):203:y.length != equations.getDimension() |==> y.length == equations.getDimension()
42:ROR:!=(int,int):>(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):203:y.length != equations.getDimension() |==> y.length > equations.getDimension()
43:ROR:!=(int,int):>=(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):203:y.length != equations.getDimension() |==> y.length >= equations.getDimension()
44:ROR:!=(int,int):FALSE(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):203:y.length != equations.getDimension() |==> false
45:ROR:!=(int,int):TRUE(int,int):org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):203:y.length != equations.getDimension() |==> true
46:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):209:expandableODE.setTime(t0) |==> <NO-OP>
47:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):210:expandableODE.setPrimaryState(y0) |==> <NO-OP>
48:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):213:integrate(expandableODE, t) |==> <NO-OP>
49:LVR:0:POS:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):216:0 |==> 1
50:LVR:0:NEG:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):216:0 |==> -1
51:LVR:0:POS:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):216:0 |==> 1
52:LVR:0:NEG:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):216:0 |==> -1
53:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@integrate(org.apache.commons.math.ode.FirstOrderDifferentialEquations,double,double[],double,double[]):216:System.arraycopy(expandableODE.getPrimaryState(), 0, y, 0, y.length) |==> <NO-OP>
54:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@computeDerivatives(double,double[],double[]):249:evaluations.incrementCount() |==> <NO-OP>
55:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@computeDerivatives(double,double[],double[]):250:expandable.computeDerivatives(t, y, yDot) |==> <NO-OP>
56:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@setStateInitialized(boolean):261:this.statesInitialized = stateInitialized |==> <NO-OP>
57:COR:statesInitialized:TRUE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):282:statesInitialized |==> false
58:COR:statesInitialized:FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):282:statesInitialized |==> true
59:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):284:state.reinitializeBegin(interpolator) |==> <NO-OP>
60:LVR:TRUE:FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):286:true |==> false
61:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):286:statesInitialized = true |==> <NO-OP>
62:COR:interpolator.isForward():TRUE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:interpolator.isForward() |==> false
63:COR:interpolator.isForward():FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:interpolator.isForward() |==> true
64:ORU:+(int):-(int):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:+1 |==> -1
65:ORU:+(int):~(int):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:+1 |==> ~1
66:LVR:POS:0:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:1 |==> 0
67:LVR:POS:NEG:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:1 |==> -1
68:LVR:NEG:0:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:-1 |==> 0
69:LVR:NEG:POS:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):290:-1 |==> 1
70:AOR:*(int,int):%(int,int):org.apache.commons.math.ode.AbstractIntegrator$1@compare(org.apache.commons.math.ode.events.EventState,org.apache.commons.math.ode.events.EventState):295:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign % Double.compare(es0.getEventTime(), es1.getEventTime())
71:AOR:*(int,int):+(int,int):org.apache.commons.math.ode.AbstractIntegrator$1@compare(org.apache.commons.math.ode.events.EventState,org.apache.commons.math.ode.events.EventState):295:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign + Double.compare(es0.getEventTime(), es1.getEventTime())
72:AOR:*(int,int):-(int,int):org.apache.commons.math.ode.AbstractIntegrator$1@compare(org.apache.commons.math.ode.events.EventState,org.apache.commons.math.ode.events.EventState):295:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign - Double.compare(es0.getEventTime(), es1.getEventTime())
73:AOR:*(int,int):/(int,int):org.apache.commons.math.ode.AbstractIntegrator$1@compare(org.apache.commons.math.ode.events.EventState,org.apache.commons.math.ode.events.EventState):295:orderingSign * Double.compare(es0.getEventTime(), es1.getEventTime()) |==> orderingSign / Double.compare(es0.getEventTime(), es1.getEventTime())
74:COR:state.evaluateStep(interpolator):TRUE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):301:state.evaluateStep(interpolator) |==> false
75:COR:state.evaluateStep(interpolator):FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):301:state.evaluateStep(interpolator) |==> true
76:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):303:occuringEvents.add(state) |==> <NO-OP>
77:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):312:iterator.remove() |==> <NO-OP>
78:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):316:interpolator.setSoftPreviousTime(previousT) |==> <NO-OP>
79:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):317:interpolator.setSoftCurrentTime(eventT) |==> <NO-OP>
80:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):320:interpolator.setInterpolatedTime(eventT) |==> <NO-OP>
81:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):322:currentEvent.stepAccepted(eventT, eventY) |==> <NO-OP>
82:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):323:isLastStep = currentEvent.stop() |==> <NO-OP>
83:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):327:handler.handleStep(interpolator, isLastStep) |==> <NO-OP>
84:COR:isLastStep:TRUE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):330:isLastStep |==> false
85:COR:isLastStep:FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):330:isLastStep |==> true
86:LVR:0:POS:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):332:0 |==> 1
87:LVR:0:NEG:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):332:0 |==> -1
88:LVR:0:POS:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):332:0 |==> 1
89:LVR:0:NEG:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):332:0 |==> -1
90:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):332:System.arraycopy(eventY, 0, y, 0, y.length) |==> <NO-OP>
91:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):334:remaining.stepAccepted(eventT, eventY) |==> <NO-OP>
92:COR:currentEvent.reset(eventT, eventY):TRUE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):339:currentEvent.reset(eventT, eventY) |==> false
93:COR:currentEvent.reset(eventT, eventY):FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):339:currentEvent.reset(eventT, eventY) |==> true
94:LVR:0:POS:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):342:0 |==> 1
95:LVR:0:NEG:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):342:0 |==> -1
96:LVR:0:POS:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):342:0 |==> 1
97:LVR:0:NEG:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):342:0 |==> -1
98:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):342:System.arraycopy(eventY, 0, y, 0, y.length) |==> <NO-OP>
99:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):343:computeDerivatives(eventT, y, yDot) |==> <NO-OP>
100:LVR:TRUE:FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):344:true |==> false
101:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):344:resetOccurred = true |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):346:remaining.stepAccepted(eventT, eventY) |==> <NO-OP>
103:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):352:previousT = eventT |==> <NO-OP>
104:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):353:interpolator.setSoftPreviousTime(eventT) |==> <NO-OP>
105:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):354:interpolator.setSoftCurrentTime(currentT) |==> <NO-OP>
106:COR:currentEvent.evaluateStep(interpolator):TRUE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):357:currentEvent.evaluateStep(interpolator) |==> false
107:COR:currentEvent.evaluateStep(interpolator):FALSE:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):357:currentEvent.evaluateStep(interpolator) |==> true
108:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):359:occuringEvents.add(currentEvent) |==> <NO-OP>
109:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):364:interpolator.setInterpolatedTime(currentT) |==> <NO-OP>
110:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):367:state.stepAccepted(currentT, currentY) |==> <NO-OP>
111:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep || state.stop() |==> isLastStep != state.stop()
112:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep || state.stop() |==> isLastStep && state.stop()
113:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep || state.stop() |==> isLastStep == state.stop()
114:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep || state.stop() |==> false
115:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep || state.stop() |==> isLastStep
116:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep || state.stop() |==> state.stop()
117:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep || state.stop() |==> true
118:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):368:isLastStep = isLastStep || state.stop() |==> <NO-OP>
119:LVR:POS:0:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:1 |==> 0
120:LVR:POS:NEG:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:1 |==> -1
121:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep != Precision.equals(currentT, tEnd, 1)
122:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep && Precision.equals(currentT, tEnd, 1)
123:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep == Precision.equals(currentT, tEnd, 1)
124:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep || Precision.equals(currentT, tEnd, 1) |==> false
125:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep || Precision.equals(currentT, tEnd, 1) |==> isLastStep
126:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep || Precision.equals(currentT, tEnd, 1) |==> Precision.equals(currentT, tEnd, 1)
127:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep || Precision.equals(currentT, tEnd, 1) |==> true
128:STD:<ASSIGN>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):370:isLastStep = isLastStep || Precision.equals(currentT, tEnd, 1) |==> <NO-OP>
129:STD:<CALL>:<NO-OP>:org.apache.commons.math.ode.AbstractIntegrator@acceptStep(org.apache.commons.math.ode.sampling.AbstractStepInterpolator,double[],double[],double):374:handler.handleStep(interpolator, isLastStep) |==> <NO-OP>
130:LVR:POS:0:org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):389:1000 |==> 0
131:LVR:POS:NEG:org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):389:1000 |==> -1000
132:AOR:*(double,double):%(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):389:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 % FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
133:AOR:*(double,double):+(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):389:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 + FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
134:AOR:*(double,double):-(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):389:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 - FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
135:AOR:*(double,double):/(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):389:1000 * FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t))) |==> 1000 / FastMath.ulp(FastMath.max(FastMath.abs(equations.getTime()), FastMath.abs(t)))
136:AOR:-(double,double):%(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):391:equations.getTime() - t |==> equations.getTime() % t
137:AOR:-(double,double):*(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):391:equations.getTime() - t |==> equations.getTime() * t
138:AOR:-(double,double):+(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):391:equations.getTime() - t |==> equations.getTime() + t
139:AOR:-(double,double):/(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):391:equations.getTime() - t |==> equations.getTime() / t
140:ROR:<=(double,double):!=(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):392:dt <= threshold |==> dt != threshold
141:ROR:<=(double,double):<(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):392:dt <= threshold |==> dt < threshold
142:ROR:<=(double,double):==(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):392:dt <= threshold |==> dt == threshold
143:ROR:<=(double,double):>(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):392:dt <= threshold |==> dt > threshold
144:ROR:<=(double,double):>=(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):392:dt <= threshold |==> dt >= threshold
145:ROR:<=(double,double):FALSE(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):392:dt <= threshold |==> false
146:ROR:<=(double,double):TRUE(double,double):org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):392:dt <= threshold |==> true
147:LVR:FALSE:TRUE:org.apache.commons.math.ode.AbstractIntegrator@sanityChecks(org.apache.commons.math.ode.ExpandableStatefulODE,double):394:false |==> true
