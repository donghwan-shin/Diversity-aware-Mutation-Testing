1:LVR:0:POS:org.joda.time.DateTimeZone:94:0 |==> 1
2:LVR:0:NEG:org.joda.time.DateTimeZone:94:0 |==> -1
3:LVR:0:POS:org.joda.time.DateTimeZone:94:0 |==> 1
4:LVR:0:NEG:org.joda.time.DateTimeZone:94:0 |==> -1
5:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:116:setProvider0(null) |==> <NO-OP>
6:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:117:setNameProvider0(null) |==> <NO-OP>
7:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():135:zone == null |==> zone != null
8:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():135:zone == null |==> false
9:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():135:zone == null |==> true
10:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():137:zone = cDefault |==> <NO-OP>
11:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():138:zone == null |==> zone != null
12:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():138:zone == null |==> false
13:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():138:zone == null |==> true
14:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():143:id != null |==> id == null
15:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():143:id != null |==> false
16:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():143:id != null |==> true
17:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():144:temp = forID(id) |==> <NO-OP>
18:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():149:temp == null |==> temp != null
19:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():149:temp == null |==> false
20:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():149:temp == null |==> true
21:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():150:temp = forTimeZone(TimeZone.getDefault()) |==> <NO-OP>
22:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():155:temp == null |==> temp != null
23:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():155:temp == null |==> false
24:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():155:temp == null |==> true
25:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():156:temp = UTC |==> <NO-OP>
26:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():158:cDefault = zone = temp |==> <NO-OP>
27:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm != null |==> sm == null
28:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm != null |==> false
29:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm != null |==> true
30:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):177:sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault")) |==> <NO-OP>
31:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):179:zone == null |==> zone != null
32:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):179:zone == null |==> false
33:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):179:zone == null |==> true
34:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):183:cDefault = zone |==> <NO-OP>
35:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):205:id == null |==> id != null
36:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):205:id == null |==> false
37:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):205:id == null |==> true
38:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forID(java.lang.String):208:id.equals("UTC") |==> false
39:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forID(java.lang.String):208:id.equals("UTC") |==> true
40:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):212:zone != null |==> zone == null
41:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):212:zone != null |==> false
42:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):212:zone != null |==> true
43:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") != id.startsWith("-")
44:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") && id.startsWith("-")
45:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") == id.startsWith("-")
46:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> false
47:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+")
48:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("-")
49:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> true
50:LVR:0:POS:org.joda.time.DateTimeZone@forID(java.lang.String):217:0L |==> 1L
51:LVR:0:NEG:org.joda.time.DateTimeZone@forID(java.lang.String):217:0L |==> -1L
52:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset != 0L
53:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset < 0L
54:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset <= 0L
55:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset > 0L
56:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset >= 0L
57:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> false
58:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> true
59:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forID(java.lang.String):220:id = printOffset(offset) |==> <NO-OP>
60:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHours(int):238:0 |==> 1
61:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHours(int):238:0 |==> -1
62:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> 1
63:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> -1
64:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> hoursOffset != 0
65:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> hoursOffset < 0
66:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> hoursOffset <= 0
67:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> hoursOffset > 0
68:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> hoursOffset >= 0
69:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> false
70:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 |==> true
71:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> 1
72:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:0 |==> -1
73:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> minutesOffset != 0
74:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> minutesOffset < 0
75:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> minutesOffset <= 0
76:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> minutesOffset > 0
77:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> minutesOffset >= 0
78:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> false
79:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:minutesOffset == 0 |==> true
80:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 != (minutesOffset == 0)
81:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 == (minutesOffset == 0)
82:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> false
83:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0
84:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> minutesOffset == 0
85:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> true
86:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):273:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 || minutesOffset == 0
87:LVR:NEG:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:-23 |==> 0
88:LVR:NEG:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:-23 |==> 23
89:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> hoursOffset != -23
90:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> hoursOffset <= -23
91:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> hoursOffset == -23
92:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> hoursOffset > -23
93:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> hoursOffset >= -23
94:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> false
95:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 |==> true
96:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:23 |==> 0
97:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:23 |==> -23
98:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> hoursOffset != 23
99:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> hoursOffset < 23
100:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> hoursOffset <= 23
101:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> hoursOffset == 23
102:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> hoursOffset >= 23
103:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> false
104:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset > 23 |==> true
105:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23 != hoursOffset > 23
106:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23 && hoursOffset > 23
107:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23 == hoursOffset > 23
108:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> false
109:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23
110:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset > 23
111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):276:hoursOffset < -23 || hoursOffset > 23 |==> true
112:LVR:NEG:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:-59 |==> 0
113:LVR:NEG:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:-59 |==> 59
114:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> minutesOffset != -59
115:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> minutesOffset <= -59
116:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> minutesOffset == -59
117:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> minutesOffset > -59
118:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> minutesOffset >= -59
119:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> false
120:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 |==> true
121:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:59 |==> 0
122:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:59 |==> -59
123:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> minutesOffset != 59
124:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> minutesOffset < 59
125:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> minutesOffset <= 59
126:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> minutesOffset == 59
127:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> minutesOffset >= 59
128:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> false
129:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset > 59 |==> true
130:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset < -59 != minutesOffset > 59
131:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset < -59 && minutesOffset > 59
132:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset < -59 == minutesOffset > 59
133:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> false
134:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset < -59
135:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> minutesOffset > 59
136:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):279:minutesOffset < -59 || minutesOffset > 59 |==> true
137:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> 1
138:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> -1
139:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> hoursOffset != 0
140:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> hoursOffset < 0
141:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> hoursOffset <= 0
142:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> hoursOffset == 0
143:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> hoursOffset >= 0
144:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> false
145:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 |==> true
146:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> 1
147:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:0 |==> -1
148:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> minutesOffset != 0
149:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> minutesOffset <= 0
150:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> minutesOffset == 0
151:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> minutesOffset > 0
152:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> minutesOffset >= 0
153:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> false
154:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:minutesOffset < 0 |==> true
155:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> hoursOffset > 0 != minutesOffset < 0
156:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> hoursOffset > 0 == minutesOffset < 0
157:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> false
158:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> hoursOffset > 0
159:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> minutesOffset < 0
160:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> true
161:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):282:hoursOffset > 0 && minutesOffset < 0 |==> hoursOffset > 0 || minutesOffset < 0
162:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):285:0 |==> 1
163:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):285:0 |==> -1
164:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:60 |==> 0
165:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:60 |==> -60
166:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset % 60
167:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset + 60
168:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset - 60
169:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):287:hoursOffset * 60 |==> hoursOffset / 60
170:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:0 |==> 1
171:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:0 |==> -1
172:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> hoursInMinutes != 0
173:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> hoursInMinutes <= 0
174:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> hoursInMinutes == 0
175:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> hoursInMinutes > 0
176:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> hoursInMinutes >= 0
177:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> false
178:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):288:hoursInMinutes < 0 |==> true
179:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes % Math.abs(minutesOffset)
180:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes * Math.abs(minutesOffset)
181:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes + Math.abs(minutesOffset)
182:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:hoursInMinutes - Math.abs(minutesOffset) |==> hoursInMinutes / Math.abs(minutesOffset)
183:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):289:minutesOffset = hoursInMinutes - Math.abs(minutesOffset) |==> <NO-OP>
184:AOR:+(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes % minutesOffset
185:AOR:+(int,int):*(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes * minutesOffset
186:AOR:+(int,int):-(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes - minutesOffset
187:AOR:+(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:hoursInMinutes + minutesOffset |==> hoursInMinutes / minutesOffset
188:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):291:minutesOffset = hoursInMinutes + minutesOffset |==> <NO-OP>
189:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):293:offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE) |==> <NO-OP>
190:ORU:-(int):+(int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:-MAX_MILLIS |==> +MAX_MILLIS
191:ORU:-(int):~(int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:-MAX_MILLIS |==> ~MAX_MILLIS
192:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> millisOffset != -MAX_MILLIS
193:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> millisOffset <= -MAX_MILLIS
194:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> millisOffset == -MAX_MILLIS
195:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> millisOffset > -MAX_MILLIS
196:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> millisOffset >= -MAX_MILLIS
197:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> false
198:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS |==> true
199:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> millisOffset != MAX_MILLIS
200:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> millisOffset < MAX_MILLIS
201:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> millisOffset <= MAX_MILLIS
202:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> millisOffset == MAX_MILLIS
203:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> millisOffset >= MAX_MILLIS
204:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> false
205:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset > MAX_MILLIS |==> true
206:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS != millisOffset > MAX_MILLIS
207:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS && millisOffset > MAX_MILLIS
208:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS == millisOffset > MAX_MILLIS
209:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> false
210:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS
211:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset > MAX_MILLIS
212:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):307:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> true
213:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):330:zone == null |==> zone != null
214:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):330:zone == null |==> false
215:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):330:zone == null |==> true
216:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):334:id.equals("UTC") |==> false
217:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):334:id.equals("UTC") |==> true
218:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):341:convId != null |==> convId == null
219:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):341:convId != null |==> false
220:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):341:convId != null |==> true
221:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):342:dtz = cProvider.getZone(convId) |==> <NO-OP>
222:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):344:dtz == null |==> dtz != null
223:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):344:dtz == null |==> false
224:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):344:dtz == null |==> true
225:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):345:dtz = cProvider.getZone(id) |==> <NO-OP>
226:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):347:dtz != null |==> dtz == null
227:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):347:dtz != null |==> false
228:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):347:dtz != null |==> true
229:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):352:convId == null |==> convId != null
230:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):352:convId == null |==> false
231:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):352:convId == null |==> true
232:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):353:convId = zone.getID() |==> <NO-OP>
233:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") != convId.startsWith("GMT-")
234:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") && convId.startsWith("GMT-")
235:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") == convId.startsWith("GMT-")
236:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> false
237:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+")
238:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT-")
239:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):354:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> true
240:LVR:POS:0:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):355:3 |==> 0
241:LVR:POS:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):355:3 |==> -3
242:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):355:convId = convId.substring(3) |==> <NO-OP>
243:LVR:0:POS:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:0L |==> 1L
244:LVR:0:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:0L |==> -1L
245:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> offset != 0L
246:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> offset < 0L
247:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> offset <= 0L
248:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> offset > 0L
249:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> offset >= 0L
250:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> false
251:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):357:offset == 0L |==> true
252:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):360:convId = printOffset(offset) |==> <NO-OP>
253:LVR:0:POS:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:0 |==> 1
254:LVR:0:NEG:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:0 |==> -1
255:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> offset != 0
256:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> offset < 0
257:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> offset <= 0
258:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> offset > 0
259:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> offset >= 0
260:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> false
261:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):377:offset == 0 |==> true
262:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):380:iFixedOffsetCache == null |==> iFixedOffsetCache != null
263:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):380:iFixedOffsetCache == null |==> false
264:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):380:iFixedOffsetCache == null |==> true
265:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):381:iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>() |==> <NO-OP>
266:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):385:ref != null |==> ref == null
267:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):385:ref != null |==> false
268:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):385:ref != null |==> true
269:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):387:zone != null |==> zone == null
270:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):387:zone != null |==> false
271:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):387:zone != null |==> true
272:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):392:iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone)) |==> <NO-OP>
273:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):430:sm != null |==> sm == null
274:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):430:sm != null |==> false
275:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):430:sm != null |==> true
276:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):431:sm.checkPermission(new JodaTimePermission("DateTimeZone.setProvider")) |==> <NO-OP>
277:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):433:setProvider0(provider) |==> <NO-OP>
278:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):443:provider == null |==> provider != null
279:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):443:provider == null |==> false
280:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):443:provider == null |==> true
281:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):444:provider = getDefaultProvider() |==> <NO-OP>
282:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null |==> ids != null
283:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null |==> false
284:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null |==> true
285:LVR:0:POS:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:0 |==> 1
286:LVR:0:NEG:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:0 |==> -1
287:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> ids.size() != 0
288:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> ids.size() < 0
289:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> ids.size() <= 0
290:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> ids.size() > 0
291:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> ids.size() >= 0
292:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> false
293:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids.size() == 0 |==> true
294:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids == null != (ids.size() == 0)
295:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids == null && ids.size() == 0
296:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids == null == (ids.size() == 0)
297:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> false
298:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids == null
299:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> ids.size() == 0
300:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):447:ids == null || ids.size() == 0 |==> true
301:COR:ids.contains("UTC"):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):451:ids.contains("UTC") |==> false
302:COR:ids.contains("UTC"):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):451:ids.contains("UTC") |==> true
303:COR:UTC.equals(provider.getZone("UTC")):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):454:UTC.equals(provider.getZone("UTC")) |==> false
304:COR:UTC.equals(provider.getZone("UTC")):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):454:UTC.equals(provider.getZone("UTC")) |==> true
305:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):457:cProvider = provider |==> <NO-OP>
306:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):458:cAvailableIDs = ids |==> <NO-OP>
307:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():476:providerClass != null |==> providerClass == null
308:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():476:providerClass != null |==> false
309:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():476:providerClass != null |==> true
310:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():478:provider = (Provider)Class.forName(providerClass).newInstance() |==> <NO-OP>
311:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():481:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
312:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():488:provider == null |==> provider != null
313:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():488:provider == null |==> false
314:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():488:provider == null |==> true
315:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():490:provider = new ZoneInfoProvider("org/joda/time/tz/data") |==> <NO-OP>
316:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():493:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
317:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():497:provider == null |==> provider != null
318:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():497:provider == null |==> false
319:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():497:provider == null |==> true
320:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():498:provider = new UTCProvider() |==> <NO-OP>
321:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):529:sm != null |==> sm == null
322:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):529:sm != null |==> false
323:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):529:sm != null |==> true
324:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):530:sm.checkPermission(new JodaTimePermission("DateTimeZone.setNameProvider")) |==> <NO-OP>
325:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):532:setNameProvider0(nameProvider) |==> <NO-OP>
326:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):542:nameProvider == null |==> nameProvider != null
327:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):542:nameProvider == null |==> false
328:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):542:nameProvider == null |==> true
329:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):543:nameProvider = getDefaultNameProvider() |==> <NO-OP>
330:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):545:cNameProvider = nameProvider |==> <NO-OP>
331:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():560:providerClass != null |==> providerClass == null
332:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():560:providerClass != null |==> false
333:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():560:providerClass != null |==> true
334:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():562:nameProvider = (NameProvider)Class.forName(providerClass).newInstance() |==> <NO-OP>
335:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():565:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
336:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():572:nameProvider == null |==> nameProvider != null
337:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():572:nameProvider == null |==> false
338:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():572:nameProvider == null |==> true
339:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():573:nameProvider = new DefaultNameProvider() |==> <NO-OP>
340:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):588:map == null |==> map != null
341:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):588:map == null |==> false
342:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):588:map == null |==> true
343:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):590:map = new HashMap<String, String>() |==> <NO-OP>
344:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):591:map.put("GMT", "UTC") |==> <NO-OP>
345:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):592:map.put("WET", "WET") |==> <NO-OP>
346:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):593:map.put("CET", "CET") |==> <NO-OP>
347:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):594:map.put("MET", "CET") |==> <NO-OP>
348:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):595:map.put("ECT", "CET") |==> <NO-OP>
349:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):596:map.put("EET", "EET") |==> <NO-OP>
350:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):597:map.put("MIT", "Pacific/Apia") |==> <NO-OP>
351:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):598:map.put("HST", "Pacific/Honolulu") |==> <NO-OP>
352:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):599:map.put("AST", "America/Anchorage") |==> <NO-OP>
353:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):600:map.put("PST", "America/Los_Angeles") |==> <NO-OP>
354:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):601:map.put("MST", "America/Denver") |==> <NO-OP>
355:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):602:map.put("PNT", "America/Phoenix") |==> <NO-OP>
356:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):603:map.put("CST", "America/Chicago") |==> <NO-OP>
357:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):604:map.put("EST", "America/New_York") |==> <NO-OP>
358:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):605:map.put("IET", "America/Indiana/Indianapolis") |==> <NO-OP>
359:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):606:map.put("PRT", "America/Puerto_Rico") |==> <NO-OP>
360:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):607:map.put("CNT", "America/St_Johns") |==> <NO-OP>
361:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):608:map.put("AGT", "America/Argentina/Buenos_Aires") |==> <NO-OP>
362:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):609:map.put("BET", "America/Sao_Paulo") |==> <NO-OP>
363:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):610:map.put("ART", "Africa/Cairo") |==> <NO-OP>
364:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):611:map.put("CAT", "Africa/Harare") |==> <NO-OP>
365:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):612:map.put("EAT", "Africa/Addis_Ababa") |==> <NO-OP>
366:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):613:map.put("NET", "Asia/Yerevan") |==> <NO-OP>
367:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):614:map.put("PLT", "Asia/Karachi") |==> <NO-OP>
368:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):615:map.put("IST", "Asia/Kolkata") |==> <NO-OP>
369:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):616:map.put("BST", "Asia/Dhaka") |==> <NO-OP>
370:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):617:map.put("VST", "Asia/Ho_Chi_Minh") |==> <NO-OP>
371:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):618:map.put("CTT", "Asia/Shanghai") |==> <NO-OP>
372:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):619:map.put("JST", "Asia/Tokyo") |==> <NO-OP>
373:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):620:map.put("ACT", "Australia/Darwin") |==> <NO-OP>
374:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):621:map.put("AET", "Australia/Sydney") |==> <NO-OP>
375:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):622:map.put("SST", "Pacific/Guadalcanal") |==> <NO-OP>
376:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):623:map.put("NST", "Pacific/Auckland") |==> <NO-OP>
377:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):624:cZoneIdConversion = map |==> <NO-OP>
378:ORU:-(int):+(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):646:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> +(int)offsetFormatter().withChronology(chrono).parseMillis(str)
379:ORU:-(int):~(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):646:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> ~(int)offsetFormatter().withChronology(chrono).parseMillis(str)
380:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):660:0 |==> 1
381:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):660:0 |==> -1
382:ROR:>=(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):660:offset >= 0 |==> offset != 0
383:ROR:>=(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):660:offset >= 0 |==> offset < 0
384:ROR:>=(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):660:offset >= 0 |==> offset <= 0
385:ROR:>=(int,int):==(int,int):org.joda.time.DateTimeZone@printOffset(int):660:offset >= 0 |==> offset == 0
386:ROR:>=(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):660:offset >= 0 |==> offset > 0
387:ROR:>=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):660:offset >= 0 |==> false
388:ROR:>=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):660:offset >= 0 |==> true
389:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):661:buf.append('+') |==> <NO-OP>
390:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):663:buf.append('-') |==> <NO-OP>
391:ORU:-(int):+(int):org.joda.time.DateTimeZone@printOffset(int):664:-offset |==> +offset
392:ORU:-(int):~(int):org.joda.time.DateTimeZone@printOffset(int):664:-offset |==> ~offset
393:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):664:offset = -offset |==> <NO-OP>
394:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):667:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset % DateTimeConstants.MILLIS_PER_HOUR
395:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):667:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset * DateTimeConstants.MILLIS_PER_HOUR
396:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):667:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset + DateTimeConstants.MILLIS_PER_HOUR
397:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):667:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset - DateTimeConstants.MILLIS_PER_HOUR
398:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):668:2 |==> 0
399:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):668:2 |==> -2
400:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):668:FormatUtils.appendPaddedInteger(buf, hours, 2) |==> <NO-OP>
401:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):669:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
402:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):669:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
403:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):669:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
404:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):669:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
405:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):669:offset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
406:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):671:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset % DateTimeConstants.MILLIS_PER_MINUTE
407:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):671:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset * DateTimeConstants.MILLIS_PER_MINUTE
408:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):671:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset + DateTimeConstants.MILLIS_PER_MINUTE
409:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):671:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset - DateTimeConstants.MILLIS_PER_MINUTE
410:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):672:buf.append(':') |==> <NO-OP>
411:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):673:2 |==> 0
412:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):673:2 |==> -2
413:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):673:FormatUtils.appendPaddedInteger(buf, minutes, 2) |==> <NO-OP>
414:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):674:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
415:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):674:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
416:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):674:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
417:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):674:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
418:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):674:offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
419:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):675:0 |==> 1
420:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):675:0 |==> -1
421:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):675:offset == 0 |==> offset != 0
422:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):675:offset == 0 |==> offset < 0
423:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):675:offset == 0 |==> offset <= 0
424:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):675:offset == 0 |==> offset > 0
425:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):675:offset == 0 |==> offset >= 0
426:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):675:offset == 0 |==> false
427:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):675:offset == 0 |==> true
428:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):679:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset % DateTimeConstants.MILLIS_PER_SECOND
429:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):679:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset * DateTimeConstants.MILLIS_PER_SECOND
430:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):679:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset + DateTimeConstants.MILLIS_PER_SECOND
431:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):679:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset - DateTimeConstants.MILLIS_PER_SECOND
432:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):680:buf.append(':') |==> <NO-OP>
433:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):681:2 |==> 0
434:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):681:2 |==> -2
435:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):681:FormatUtils.appendPaddedInteger(buf, seconds, 2) |==> <NO-OP>
436:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):682:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
437:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):682:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
438:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):682:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
439:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):682:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
440:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):682:offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
441:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):683:0 |==> 1
442:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):683:0 |==> -1
443:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):683:offset == 0 |==> offset != 0
444:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):683:offset == 0 |==> offset < 0
445:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):683:offset == 0 |==> offset <= 0
446:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):683:offset == 0 |==> offset > 0
447:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):683:offset == 0 |==> offset >= 0
448:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):683:offset == 0 |==> false
449:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):683:offset == 0 |==> true
450:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):687:buf.append('.') |==> <NO-OP>
451:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):688:3 |==> 0
452:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):688:3 |==> -3
453:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):688:FormatUtils.appendPaddedInteger(buf, offset, 3) |==> <NO-OP>
454:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():698:cOffsetFormatter == null |==> cOffsetFormatter != null
455:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():698:cOffsetFormatter == null |==> false
456:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():698:cOffsetFormatter == null |==> true
457:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@offsetFormatter():700:true |==> false
458:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():700:2 |==> 0
459:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():700:2 |==> -2
460:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():700:4 |==> 0
461:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():700:4 |==> -4
462:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@offsetFormatter():699:cOffsetFormatter = new DateTimeFormatterBuilder().appendTimeZoneOffset(null, true, 2, 4).toFormatter() |==> <NO-OP>
463:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):718:id == null |==> id != null
464:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):718:id == null |==> false
465:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):718:id == null |==> true
466:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):772:locale == null |==> locale != null
467:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):772:locale == null |==> false
468:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):772:locale == null |==> true
469:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):773:locale = Locale.getDefault() |==> <NO-OP>
470:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):776:nameKey == null |==> nameKey != null
471:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):776:nameKey == null |==> false
472:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):776:nameKey == null |==> true
473:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):780:name != null |==> name == null
474:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):780:name != null |==> false
475:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):780:name != null |==> true
476:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):812:locale == null |==> locale != null
477:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):812:locale == null |==> false
478:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):812:locale == null |==> true
479:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getName(long,java.util.Locale):813:locale = Locale.getDefault() |==> <NO-OP>
480:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):816:nameKey == null |==> nameKey != null
481:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):816:nameKey == null |==> false
482:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):816:nameKey == null |==> true
483:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):820:name != null |==> name == null
484:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):820:name != null |==> false
485:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):820:name != null |==> true
486:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):841:instant == null |==> instant != null
487:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):841:instant == null |==> false
488:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):841:instant == null |==> true
489:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):872:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) != getStandardOffset(instant)
490:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):872:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) < getStandardOffset(instant)
491:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):872:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) <= getStandardOffset(instant)
492:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):872:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) > getStandardOffset(instant)
493:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):872:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) >= getStandardOffset(instant)
494:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):872:getOffset(instant) == getStandardOffset(instant) |==> false
495:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):872:getOffset(instant) == getStandardOffset(instant) |==> true
496:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantLocal - offsetLocal |==> instantLocal % offsetLocal
497:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantLocal - offsetLocal |==> instantLocal * offsetLocal
498:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantLocal - offsetLocal |==> instantLocal + offsetLocal
499:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantLocal - offsetLocal |==> instantLocal / offsetLocal
500:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal != offsetAdjusted |==> offsetLocal < offsetAdjusted
501:ROR:!=(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal != offsetAdjusted |==> offsetLocal <= offsetAdjusted
502:ROR:!=(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal != offsetAdjusted |==> offsetLocal == offsetAdjusted
503:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal != offsetAdjusted |==> offsetLocal > offsetAdjusted
504:ROR:!=(int,int):>=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal != offsetAdjusted |==> offsetLocal >= offsetAdjusted
505:ROR:!=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal != offsetAdjusted |==> false
506:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):915:offsetLocal != offsetAdjusted |==> true
507:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:offsetLocal - offsetAdjusted |==> offsetLocal % offsetAdjusted
508:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:offsetLocal - offsetAdjusted |==> offsetLocal * offsetAdjusted
509:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:offsetLocal - offsetAdjusted |==> offsetLocal + offsetAdjusted
510:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:offsetLocal - offsetAdjusted |==> offsetLocal / offsetAdjusted
511:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:0 |==> 1
512:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:0 |==> -1
513:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) != 0
514:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) <= 0
515:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) == 0
516:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) > 0
517:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) >= 0
518:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:(offsetLocal - offsetAdjusted) < 0 |==> false
519:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):918:(offsetLocal - offsetAdjusted) < 0 |==> true
520:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):923:instantLocal - offsetAdjusted |==> instantLocal % offsetAdjusted
521:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):923:instantLocal - offsetAdjusted |==> instantLocal * offsetAdjusted
522:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):923:instantLocal - offsetAdjusted |==> instantLocal + offsetAdjusted
523:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):923:instantLocal - offsetAdjusted |==> instantLocal / offsetAdjusted
524:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):924:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
525:ROR:!=(long,long):<=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):924:nextLocal != nextAdjusted |==> nextLocal <= nextAdjusted
526:ROR:!=(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):924:nextLocal != nextAdjusted |==> nextLocal == nextAdjusted
527:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):924:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
528:ROR:!=(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):924:nextLocal != nextAdjusted |==> nextLocal >= nextAdjusted
529:ROR:!=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):924:nextLocal != nextAdjusted |==> false
530:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):924:nextLocal != nextAdjusted |==> true
531:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:0 |==> 1
532:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:0 |==> -1
533:ROR:>=(int,int):!=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:offsetLocal >= 0 |==> offsetLocal != 0
534:ROR:>=(int,int):<(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:offsetLocal >= 0 |==> offsetLocal < 0
535:ROR:>=(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:offsetLocal >= 0 |==> offsetLocal <= 0
536:ROR:>=(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:offsetLocal >= 0 |==> offsetLocal == 0
537:ROR:>=(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:offsetLocal >= 0 |==> offsetLocal > 0
538:ROR:>=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:offsetLocal >= 0 |==> false
539:ROR:>=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):928:offsetLocal >= 0 |==> true
540:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:prev < instantAdjusted |==> prev != instantAdjusted
541:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:prev < instantAdjusted |==> prev <= instantAdjusted
542:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:prev < instantAdjusted |==> prev == instantAdjusted
543:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:prev < instantAdjusted |==> prev > instantAdjusted
544:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:prev < instantAdjusted |==> prev >= instantAdjusted
545:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:prev < instantAdjusted |==> false
546:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):930:prev < instantAdjusted |==> true
547:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):932:offsetPrev - offsetLocal |==> offsetPrev % offsetLocal
548:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):932:offsetPrev - offsetLocal |==> offsetPrev * offsetLocal
549:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):932:offsetPrev - offsetLocal |==> offsetPrev + offsetLocal
550:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):932:offsetPrev - offsetLocal |==> offsetPrev / offsetLocal
551:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev |==> instantAdjusted % prev
552:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev |==> instantAdjusted * prev
553:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev |==> instantAdjusted + prev
554:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev |==> instantAdjusted / prev
555:ROR:<=(long,long):!=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev <= diff |==> instantAdjusted - prev != diff
556:ROR:<=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev <= diff |==> instantAdjusted - prev < diff
557:ROR:<=(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev <= diff |==> instantAdjusted - prev == diff
558:ROR:<=(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev <= diff |==> instantAdjusted - prev > diff
559:ROR:<=(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev <= diff |==> instantAdjusted - prev >= diff
560:ROR:<=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev <= diff |==> false
561:ROR:<=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):933:instantAdjusted - prev <= diff |==> true
562:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):953:instantUTC + offset |==> instantUTC % offset
563:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):953:instantUTC + offset |==> instantUTC * offset
564:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):953:instantUTC + offset |==> instantUTC - offset
565:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):953:instantUTC + offset |==> instantUTC / offset
566:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:instantUTC ^ instantLocal |==> instantUTC & instantLocal
567:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:instantUTC ^ instantLocal |==> instantUTC | instantLocal
568:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):955:0 |==> 1
569:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):955:0 |==> -1
570:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) != 0
571:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) <= 0
572:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) == 0
573:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) > 0
574:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) >= 0
575:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 |==> false
576:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 |==> true
577:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:instantUTC ^ offset |==> instantUTC & offset
578:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:instantUTC ^ offset |==> instantUTC | offset
579:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):955:0 |==> 1
580:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):955:0 |==> -1
581:ROR:>=(long,long):!=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) != 0
582:ROR:>=(long,long):<(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) < 0
583:ROR:>=(long,long):<=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) <= 0
584:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) == 0
585:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) > 0
586:ROR:>=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ offset) >= 0 |==> false
587:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ offset) >= 0 |==> true
588:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 != (instantUTC ^ offset) >= 0
589:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 == (instantUTC ^ offset) >= 0
590:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> false
591:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0
592:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) >= 0
593:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> true
594:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):955:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 || (instantUTC ^ offset) >= 0
595:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):980:instantLocal - offsetOriginal |==> instantLocal % offsetOriginal
596:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):980:instantLocal - offsetOriginal |==> instantLocal * offsetOriginal
597:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):980:instantLocal - offsetOriginal |==> instantLocal + offsetOriginal
598:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):980:instantLocal - offsetOriginal |==> instantLocal / offsetOriginal
599:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):982:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal != offsetOriginal
600:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):982:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal < offsetOriginal
601:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):982:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal <= offsetOriginal
602:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):982:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal > offsetOriginal
603:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):982:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal >= offsetOriginal
604:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):982:offsetLocalFromOriginal == offsetOriginal |==> false
605:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):982:offsetLocalFromOriginal == offsetOriginal |==> true
606:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1004:instantLocal - offsetLocal |==> instantLocal % offsetLocal
607:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1004:instantLocal - offsetLocal |==> instantLocal * offsetLocal
608:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1004:instantLocal - offsetLocal |==> instantLocal + offsetLocal
609:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1004:instantLocal - offsetLocal |==> instantLocal / offsetLocal
610:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1006:offsetLocal != offset |==> offsetLocal < offset
611:ROR:!=(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1006:offsetLocal != offset |==> offsetLocal <= offset
612:ROR:!=(int,int):==(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1006:offsetLocal != offset |==> offsetLocal == offset
613:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1006:offsetLocal != offset |==> offsetLocal > offset
614:ROR:!=(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1006:offsetLocal != offset |==> offsetLocal >= offset
615:ROR:!=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1006:offsetLocal != offset |==> false
616:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1006:offsetLocal != offset |==> true
617:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:0 |==> 1
618:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:0 |==> -1
619:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:offsetLocal < 0 |==> offsetLocal != 0
620:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:offsetLocal < 0 |==> offsetLocal <= 0
621:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:offsetLocal < 0 |==> offsetLocal == 0
622:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:offsetLocal < 0 |==> offsetLocal > 0
623:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:offsetLocal < 0 |==> offsetLocal >= 0
624:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:offsetLocal < 0 |==> false
625:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:offsetLocal < 0 |==> true
626:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:strict || offsetLocal < 0 |==> strict != offsetLocal < 0
627:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:strict || offsetLocal < 0 |==> strict && offsetLocal < 0
628:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:strict || offsetLocal < 0 |==> strict == offsetLocal < 0
629:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:strict || offsetLocal < 0 |==> false
630:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:strict || offsetLocal < 0 |==> strict
631:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:strict || offsetLocal < 0 |==> offsetLocal < 0
632:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1010:strict || offsetLocal < 0 |==> true
633:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1012:instantLocal - offsetLocal |==> instantLocal % offsetLocal
634:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1012:instantLocal - offsetLocal |==> instantLocal * offsetLocal
635:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1012:instantLocal - offsetLocal |==> instantLocal + offsetLocal
636:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1012:instantLocal - offsetLocal |==> instantLocal / offsetLocal
637:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offsetLocal |==> instantLocal % offsetLocal
638:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offsetLocal |==> instantLocal * offsetLocal
639:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offsetLocal |==> instantLocal + offsetLocal
640:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:instantLocal - offsetLocal |==> instantLocal / offsetLocal
641:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:nextLocal == (instantLocal - offsetLocal) |==> nextLocal != (instantLocal - offsetLocal)
642:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:nextLocal == (instantLocal - offsetLocal) |==> nextLocal < (instantLocal - offsetLocal)
643:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:nextLocal == (instantLocal - offsetLocal) |==> nextLocal <= (instantLocal - offsetLocal)
644:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:nextLocal == (instantLocal - offsetLocal) |==> nextLocal > (instantLocal - offsetLocal)
645:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:nextLocal == (instantLocal - offsetLocal) |==> nextLocal >= (instantLocal - offsetLocal)
646:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:nextLocal == (instantLocal - offsetLocal) |==> false
647:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1013:nextLocal == (instantLocal - offsetLocal) |==> true
648:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:nextLocal = Long.MAX_VALUE |==> <NO-OP>
649:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal - offset |==> instantLocal % offset
650:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal - offset |==> instantLocal * offset
651:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal - offset |==> instantLocal + offset
652:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal - offset |==> instantLocal / offset
653:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:instantLocal - offset |==> instantLocal % offset
654:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:instantLocal - offset |==> instantLocal * offset
655:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:instantLocal - offset |==> instantLocal + offset
656:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:instantLocal - offset |==> instantLocal / offset
657:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextAdjusted == (instantLocal - offset) |==> nextAdjusted != (instantLocal - offset)
658:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextAdjusted == (instantLocal - offset) |==> nextAdjusted < (instantLocal - offset)
659:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextAdjusted == (instantLocal - offset) |==> nextAdjusted <= (instantLocal - offset)
660:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextAdjusted == (instantLocal - offset) |==> nextAdjusted > (instantLocal - offset)
661:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextAdjusted == (instantLocal - offset) |==> nextAdjusted >= (instantLocal - offset)
662:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextAdjusted == (instantLocal - offset) |==> false
663:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1017:nextAdjusted == (instantLocal - offset) |==> true
664:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1018:nextAdjusted = Long.MAX_VALUE |==> <NO-OP>
665:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1020:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
666:ROR:!=(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1020:nextLocal != nextAdjusted |==> nextLocal <= nextAdjusted
667:ROR:!=(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1020:nextLocal != nextAdjusted |==> nextLocal == nextAdjusted
668:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1020:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
669:ROR:!=(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1020:nextLocal != nextAdjusted |==> nextLocal >= nextAdjusted
670:ROR:!=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1020:nextLocal != nextAdjusted |==> false
671:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1020:nextLocal != nextAdjusted |==> true
672:COR:strict:TRUE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1022:strict |==> false
673:COR:strict:FALSE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1022:strict |==> true
674:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1029:offset = offsetLocal |==> <NO-OP>
675:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1035:instantLocal - offset |==> instantLocal % offset
676:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1035:instantLocal - offset |==> instantLocal * offset
677:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1035:instantLocal - offset |==> instantLocal + offset
678:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1035:instantLocal - offset |==> instantLocal / offset
679:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:instantLocal ^ instantUTC |==> instantLocal & instantUTC
680:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:instantLocal ^ instantUTC |==> instantLocal | instantUTC
681:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:0 |==> 1
682:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:0 |==> -1
683:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) != 0
684:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) <= 0
685:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) == 0
686:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) > 0
687:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) >= 0
688:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 |==> false
689:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 |==> true
690:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:instantLocal ^ offset |==> instantLocal & offset
691:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:instantLocal ^ offset |==> instantLocal | offset
692:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:0 |==> 1
693:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:0 |==> -1
694:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) != 0
695:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) <= 0
696:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) == 0
697:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) > 0
698:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) >= 0
699:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ offset) < 0 |==> false
700:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ offset) < 0 |==> true
701:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 != (instantLocal ^ offset) < 0
702:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 == (instantLocal ^ offset) < 0
703:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> false
704:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0
705:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) < 0
706:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> true
707:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1037:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 || (instantLocal ^ offset) < 0
708:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1054:newZone == null |==> newZone != null
709:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1054:newZone == null |==> false
710:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1054:newZone == null |==> true
711:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1055:newZone = DateTimeZone.getDefault() |==> <NO-OP>
712:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1057:newZone == this |==> newZone != this
713:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1057:newZone == this |==> false
714:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1057:newZone == this |==> true
715:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1061:false |==> true
716:COR:isFixed():TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1171:isFixed() |==> false
717:COR:isFixed():FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1171:isFixed() |==> true
718:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1172:false |==> true
719:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1175:localDateTime.toDateTime(this) |==> <NO-OP>
720:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1176:false |==> true
721:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1178:true |==> false
722:LVR:POS:0:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:3 |==> 0
723:LVR:POS:NEG:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:3 |==> -3
724:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 % DateTimeConstants.MILLIS_PER_HOUR
725:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 + DateTimeConstants.MILLIS_PER_HOUR
726:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 - DateTimeConstants.MILLIS_PER_HOUR
727:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 / DateTimeConstants.MILLIS_PER_HOUR
728:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant % (3 * DateTimeConstants.MILLIS_PER_HOUR)
729:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant * (3 * DateTimeConstants.MILLIS_PER_HOUR)
730:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant + 3 * DateTimeConstants.MILLIS_PER_HOUR
731:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant / (3 * DateTimeConstants.MILLIS_PER_HOUR)
732:LVR:POS:0:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:3 |==> 0
733:LVR:POS:NEG:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:3 |==> -3
734:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 % DateTimeConstants.MILLIS_PER_HOUR
735:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 + DateTimeConstants.MILLIS_PER_HOUR
736:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 - DateTimeConstants.MILLIS_PER_HOUR
737:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 / DateTimeConstants.MILLIS_PER_HOUR
738:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant % (3 * DateTimeConstants.MILLIS_PER_HOUR)
739:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant * (3 * DateTimeConstants.MILLIS_PER_HOUR)
740:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant - 3 * DateTimeConstants.MILLIS_PER_HOUR
741:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1194:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant / (3 * DateTimeConstants.MILLIS_PER_HOUR)
742:ROR:<=(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1197:offsetBefore <= offsetAfter |==> offsetBefore != offsetAfter
743:ROR:<=(long,long):<(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1197:offsetBefore <= offsetAfter |==> offsetBefore < offsetAfter
744:ROR:<=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1197:offsetBefore <= offsetAfter |==> offsetBefore == offsetAfter
745:ROR:<=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1197:offsetBefore <= offsetAfter |==> offsetBefore > offsetAfter
746:ROR:<=(long,long):>=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1197:offsetBefore <= offsetAfter |==> offsetBefore >= offsetAfter
747:ROR:<=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1197:offsetBefore <= offsetAfter |==> false
748:ROR:<=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1197:offsetBefore <= offsetAfter |==> true
749:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:offsetBefore - offsetAfter |==> offsetBefore % offsetAfter
750:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:offsetBefore - offsetAfter |==> offsetBefore * offsetAfter
751:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:offsetBefore - offsetAfter |==> offsetBefore + offsetAfter
752:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1202:offsetBefore - offsetAfter |==> offsetBefore / offsetAfter
753:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1204:transition - diff |==> transition % diff
754:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1204:transition - diff |==> transition * diff
755:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1204:transition - diff |==> transition + diff
756:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1204:transition - diff |==> transition / diff
757:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1205:transition + diff |==> transition % diff
758:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1205:transition + diff |==> transition * diff
759:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1205:transition + diff |==> transition - diff
760:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1205:transition + diff |==> transition / diff
761:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart |==> instant != overlapStart
762:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart |==> instant <= overlapStart
763:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart |==> instant == overlapStart
764:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart |==> instant > overlapStart
765:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart |==> instant >= overlapStart
766:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart |==> false
767:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart |==> true
768:ROR:>=(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant >= overlapEnd |==> instant != overlapEnd
769:ROR:>=(long,long):<(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant >= overlapEnd |==> instant < overlapEnd
770:ROR:>=(long,long):<=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant >= overlapEnd |==> instant <= overlapEnd
771:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant >= overlapEnd |==> instant == overlapEnd
772:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant >= overlapEnd |==> instant > overlapEnd
773:ROR:>=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant >= overlapEnd |==> false
774:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant >= overlapEnd |==> true
775:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart != instant >= overlapEnd
776:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart && instant >= overlapEnd
777:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart == instant >= overlapEnd
778:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart || instant >= overlapEnd |==> false
779:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart
780:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart || instant >= overlapEnd |==> instant >= overlapEnd
781:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1206:instant < overlapStart || instant >= overlapEnd |==> true
782:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - overlapStart |==> instant % overlapStart
783:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - overlapStart |==> instant * overlapStart
784:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - overlapStart |==> instant + overlapStart
785:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1211:instant - overlapStart |==> instant / overlapStart
786:ROR:>=(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1212:afterStart >= diff |==> afterStart != diff
787:ROR:>=(long,long):<(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1212:afterStart >= diff |==> afterStart < diff
788:ROR:>=(long,long):<=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1212:afterStart >= diff |==> afterStart <= diff
789:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1212:afterStart >= diff |==> afterStart == diff
790:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1212:afterStart >= diff |==> afterStart > diff
791:ROR:>=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1212:afterStart >= diff |==> false
792:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1212:afterStart >= diff |==> true
793:COR:earlierOrLater:TRUE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:earlierOrLater |==> false
794:COR:earlierOrLater:FALSE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:earlierOrLater |==> true
795:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant - diff |==> instant % diff
796:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant - diff |==> instant * diff
797:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant - diff |==> instant + diff
798:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1214:instant - diff |==> instant / diff
799:COR:earlierOrLater:TRUE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1217:earlierOrLater |==> false
800:COR:earlierOrLater:FALSE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1217:earlierOrLater |==> true
801:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1217:instant + diff |==> instant % diff
802:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1217:instant + diff |==> instant * diff
803:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1217:instant + diff |==> instant - diff
804:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1217:instant + diff |==> instant / diff
805:LVR:POS:0:org.joda.time.DateTimeZone@hashCode():1276:57 |==> 0
806:LVR:POS:NEG:org.joda.time.DateTimeZone@hashCode():1276:57 |==> -57
807:AOR:+(int,int):%(int,int):org.joda.time.DateTimeZone@hashCode():1276:57 + getID().hashCode() |==> 57 % getID().hashCode()
808:AOR:+(int,int):*(int,int):org.joda.time.DateTimeZone@hashCode():1276:57 + getID().hashCode() |==> 57 * getID().hashCode()
809:AOR:+(int,int):-(int,int):org.joda.time.DateTimeZone@hashCode():1276:57 + getID().hashCode() |==> 57 - getID().hashCode()
810:AOR:+(int,int):/(int,int):org.joda.time.DateTimeZone@hashCode():1276:57 + getID().hashCode() |==> 57 / getID().hashCode()
811:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@<init>(java.lang.String):1311:iID = id |==> <NO-OP>
812:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone$Stub@writeObject(java.io.ObjectOutputStream):1315:out.writeUTF(iID) |==> <NO-OP>
813:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@readObject(java.io.ObjectInputStream):1319:iID = in.readUTF() |==> <NO-OP>
