1:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@<init>():102:clear() |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@toFormatter():124:iFieldFormatters = (FieldFormatter[])iFieldFormatters.clone() |==> <NO-OP>
3:COR:iNotPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> false
4:COR:iNotPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> true
5:COR:iNotParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> false
6:COR:iNotParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> true
7:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():171:1 |==> 0
8:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():171:1 |==> -1
9:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():171:iMinPrintedDigits = 1 |==> <NO-OP>
10:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():172:iPrintZeroSetting = PRINT_ZERO_RARELY_LAST |==> <NO-OP>
11:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():173:10 |==> 0
12:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():173:10 |==> -10
13:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():173:iMaxParsedDigits = 10 |==> <NO-OP>
14:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():174:false |==> true
15:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():174:iRejectSignedValues = false |==> <NO-OP>
16:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():175:iPrefix = null |==> <NO-OP>
17:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> iElementPairs != null
18:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> false
19:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> true
20:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():177:iElementPairs = new ArrayList<Object>() |==> <NO-OP>
21:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():179:iElementPairs.clear() |==> <NO-OP>
22:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():181:false |==> true
23:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():181:iNotPrinter = false |==> <NO-OP>
24:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():182:false |==> true
25:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():182:iNotParser = false |==> <NO-OP>
26:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():183:10 |==> 0
27:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():183:10 |==> -10
28:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():183:iFieldFormatters = new FieldFormatter[10] |==> <NO-OP>
29:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> formatter != null
30:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> false
31:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> true
32:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):195:clearPrefix() |==> <NO-OP>
33:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):196:append0(formatter.getPrinter(), formatter.getParser()) |==> <NO-OP>
34:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> printer != null
35:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> false
36:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> true
37:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> parser != null
38:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> false
39:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> true
40:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null != (parser == null)
41:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null == (parser == null)
42:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> false
43:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null
44:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> parser == null
45:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> true
46:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null || parser == null
47:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):215:clearPrefix() |==> <NO-OP>
48:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):216:append0(printer, parser) |==> <NO-OP>
49:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> text != null
50:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> false
51:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> true
52:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):231:clearPrefix() |==> <NO-OP>
53:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):233:append0(literal, literal) |==> <NO-OP>
54:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@minimumPrintedDigits(int):245:iMinPrintedDigits = minDigits |==> <NO-OP>
55:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@maximumParsedDigits(int):256:iMaxParsedDigits = maxDigits |==> <NO-OP>
56:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@rejectSignedValues(boolean):266:iRejectSignedValues = v |==> <NO-OP>
57:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroRarelyLast():280:iPrintZeroSetting = PRINT_ZERO_RARELY_LAST |==> <NO-OP>
58:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroRarelyFirst():292:iPrintZeroSetting = PRINT_ZERO_RARELY_FIRST |==> <NO-OP>
59:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroIfSupported():303:iPrintZeroSetting = PRINT_ZERO_IF_SUPPORTED |==> <NO-OP>
60:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroAlways():315:iPrintZeroSetting = PRINT_ZERO_ALWAYS |==> <NO-OP>
61:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroNever():329:iPrintZeroSetting = PRINT_ZERO_NEVER |==> <NO-OP>
62:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> text != null
63:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> false
64:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> true
65:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> singularText != null
66:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> false
67:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> true
68:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> pluralText != null
69:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> false
70:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> true
71:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
72:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null && pluralText == null
73:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null == (pluralText == null)
74:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> false
75:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null
76:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> pluralText == null
77:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> true
78:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> prefix != null
79:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> false
80:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> true
81:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> iPrefix == null
82:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> false
83:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> true
84:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):382:prefix = new CompositeAffix(iPrefix, prefix) |==> <NO-OP>
85:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):384:iPrefix = prefix |==> <NO-OP>
86:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendYears():398:appendField(YEARS) |==> <NO-OP>
87:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMonths():411:appendField(MONTHS) |==> <NO-OP>
88:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendWeeks():424:appendField(WEEKS) |==> <NO-OP>
89:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendDays():437:appendField(DAYS) |==> <NO-OP>
90:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendHours():450:appendField(HOURS) |==> <NO-OP>
91:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMinutes():463:appendField(MINUTES) |==> <NO-OP>
92:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeconds():476:appendField(SECONDS) |==> <NO-OP>
93:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSecondsWithMillis():488:appendField(SECONDS_MILLIS) |==> <NO-OP>
94:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSecondsWithOptionalMillis():500:appendField(SECONDS_OPTIONAL_MILLIS) |==> <NO-OP>
95:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMillis():513:appendField(MILLIS) |==> <NO-OP>
96:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:7 |==> 0
97:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:7 |==> -7
98:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:3 |==> 0
99:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:3 |==> -3
100:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:appendField(7, 3) |==> <NO-OP>
101:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int):530:appendField(type, iMinPrintedDigits) |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):536:append0(field, field) |==> <NO-OP>
103:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):537:iFieldFormatters[type] = field |==> <NO-OP>
104:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):538:iPrefix = null |==> <NO-OP>
105:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> text != null
106:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> false
107:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> true
108:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> singularText != null
109:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> false
110:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> true
111:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> pluralText != null
112:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> false
113:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> true
114:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
115:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null && pluralText == null
116:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null == (pluralText == null)
117:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> false
118:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null
119:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> pluralText == null
120:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> true
121:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:0 |==> 1
122:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:0 |==> -1
123:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() != 0
124:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() < 0
125:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() <= 0
126:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() == 0
127:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() >= 0
128:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> false
129:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> true
130:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:2 |==> 0
131:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:2 |==> -2
132:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
133:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
134:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
135:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
136:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:1 |==> 0
137:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:1 |==> -1
138:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
139:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
140:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
141:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
142:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> originalPrinter != null
143:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> false
144:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> true
145:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> originalParser != null
146:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> false
147:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> true
148:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null != (originalParser == null)
149:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null && originalParser == null
150:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null == (originalParser == null)
151:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> false
152:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null
153:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalParser == null
154:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> true
155:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> originalPrinter == originalParser
156:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> false
157:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> true
158:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) != (originalPrinter != originalParser)
159:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) && originalPrinter != originalParser
160:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) == (originalPrinter != originalParser)
161:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> false
162:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter == null || originalParser == null
163:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter != originalParser
164:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> true
165:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) != !(originalPrinter instanceof FieldFormatter)
166:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) && !(originalPrinter instanceof FieldFormatter)
167:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) == !(originalPrinter instanceof FieldFormatter)
168:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> false
169:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> originalPrinter == null || originalParser == null || originalPrinter != originalParser
170:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):601:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> !(originalPrinter instanceof FieldFormatter)
171:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> true
172:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):605:clearPrefix() |==> <NO-OP>
173:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:2 |==> 0
174:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:2 |==> -2
175:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
176:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
177:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
178:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
179:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.set(iElementPairs.size() - 2, newField) |==> <NO-OP>
180:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:1 |==> 0
181:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:1 |==> -1
182:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
183:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
184:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
185:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
186:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.set(iElementPairs.size() - 1, newField) |==> <NO-OP>
187:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):609:iFieldFormatters[newField.getFieldType()] = newField |==> <NO-OP>
188:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String):632:true |==> false
189:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String):632:true |==> false
190:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsAfter(java.lang.String):652:false |==> true
191:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsAfter(java.lang.String):652:true |==> false
192:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsBefore(java.lang.String):672:true |==> false
193:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsBefore(java.lang.String):672:false |==> true
194:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String):697:true |==> false
195:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String):697:true |==> false
196:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[]):724:true |==> false
197:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[]):724:true |==> false
198:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> text != null
199:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> false
200:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> true
201:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> finalText != null
202:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> false
203:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> true
204:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null != (finalText == null)
205:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null && finalText == null
206:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null == (finalText == null)
207:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> false
208:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null
209:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> finalText == null
210:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> true
211:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):734:clearPrefix() |==> <NO-OP>
212:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:0 |==> 1
213:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:0 |==> -1
214:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() != 0
215:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() < 0
216:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() <= 0
217:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() > 0
218:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() >= 0
219:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> false
220:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> true
221:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:false |==> true
222:ROR:==(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> useBefore != false
223:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
224:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> useBefore
225:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
226:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> true
227:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter != (useBefore == false)
228:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter == (useBefore == false)
229:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> false
230:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter
231:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useBefore == false
232:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> true
233:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter || useBefore == false
234:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):743:append0(separator, separator) |==> <NO-OP>
235:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:0 |==> 1
236:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:0 |==> -1
237:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i != 0
238:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i < 0
239:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i <= 0
240:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i == 0
241:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i > 0
242:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> false
243:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> true
244:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):753:lastSeparator = (Separator)pairs.get(i) |==> <NO-OP>
245:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:1 |==> 0
246:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:1 |==> -1
247:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i % 1
248:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i * 1
249:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i - 1
250:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i / 1
251:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:pairs = pairs.subList(i + 1, pairs.size()) |==> <NO-OP>
252:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):757:i-- |==> <NO-OP>
253:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> lastSeparator == null
254:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> false
255:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> true
256:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:0 |==> 1
257:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:0 |==> -1
258:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() != 0
259:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() < 0
260:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() <= 0
261:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() > 0
262:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() >= 0
263:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> false
264:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> true
265:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null != (pairs.size() == 0)
266:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null == (pairs.size() == 0)
267:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> false
268:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null
269:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> pairs.size() == 0
270:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> true
271:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null || pairs.size() == 0
272:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):765:pairs.clear() |==> <NO-OP>
273:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:0 |==> 1
274:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:0 |==> -1
275:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:1 |==> 0
276:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:1 |==> -1
277:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):770:pairs.add(separator) |==> <NO-OP>
278:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):771:pairs.add(separator) |==> <NO-OP>
279:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> iPrefix == null
280:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> false
281:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> true
282:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clearPrefix():782:iPrefix = null |==> <NO-OP>
283:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):786:iElementPairs.add(printer) |==> <NO-OP>
284:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):787:iElementPairs.add(parser) |==> <NO-OP>
285:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> printer != null
286:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> false
287:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> true
288:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:iNotPrinter |= (printer == null) |==> <NO-OP>
289:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> parser != null
290:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> false
291:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> true
292:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:iNotParser |= (parser == null) |==> <NO-OP>
293:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter != notParser
294:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter == notParser
295:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> false
296:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter
297:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notParser
298:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> true
299:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter || notParser
300:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:2 |==> 0
301:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:2 |==> -2
302:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size != 2
303:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size < 2
304:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size <= 2
305:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size == 2
306:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size > 2
307:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> false
308:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> true
309:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:0 |==> 1
310:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:0 |==> -1
311:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 != elementPairs.get(0) instanceof Separator
312:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 == elementPairs.get(0) instanceof Separator
313:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> false
314:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2
315:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> elementPairs.get(0) instanceof Separator
316:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> true
317:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 || elementPairs.get(0) instanceof Separator
318:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):800:0 |==> 1
319:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):800:0 |==> -1
320:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null |==> sep.iAfterParser != null
321:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null |==> false
322:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null |==> true
323:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterPrinter == null |==> sep.iAfterPrinter != null
324:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterPrinter == null |==> false
325:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterPrinter == null |==> true
326:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null != (sep.iAfterPrinter == null)
327:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null == (sep.iAfterPrinter == null)
328:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> false
329:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null
330:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterPrinter == null
331:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> true
332:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null || sep.iAfterPrinter == null
333:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):802:2 |==> 0
334:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):802:2 |==> -2
335:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):803:sep = sep.finish(f.getPrinter(), f.getParser()) |==> <NO-OP>
336:COR:notPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notPrinter |==> false
337:COR:notPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notPrinter |==> true
338:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):809:1 |==> 0
339:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):809:1 |==> -1
340:COR:notParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):810:notParser |==> false
341:COR:notParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):810:notParser |==> true
342:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):811:0 |==> 1
343:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):811:0 |==> -1
344:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:0 |==> 1
345:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:0 |==> -1
346:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:1 |==> 0
347:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:1 |==> -1
348:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:0 |==> 1
349:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:0 |==> -1
350:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:1 |==> 0
351:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:1 |==> -1
352:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@printTo(java.lang.StringBuffer,int):868:buf.append(iText) |==> <NO-OP>
353:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@printTo(java.io.Writer,int):872:out.write(iText) |==> <NO-OP>
354:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:true |==> false
355:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:0 |==> 1
356:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:0 |==> -1
357:COR:periodStr.regionMatches(true, position, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:periodStr.regionMatches(true, position, text, 0, textLength) |==> false
358:COR:periodStr.regionMatches(true, position, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:periodStr.regionMatches(true, position, text, 0, textLength) |==> true
359:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position % textLength
360:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position * textLength
361:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position - textLength
362:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position / textLength
363:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):881:~position |==> +position
364:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):881:~position |==> -position
365:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos != sourceLength
366:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos <= sourceLength
367:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos == sourceLength
368:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos > sourceLength
369:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos >= sourceLength
370:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> false
371:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> true
372:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:true |==> false
373:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:0 |==> 1
374:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:0 |==> -1
375:COR:periodStr.regionMatches(true, pos, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:periodStr.regionMatches(true, pos, text, 0, textLength) |==> false
376:COR:periodStr.regionMatches(true, pos, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:periodStr.regionMatches(true, pos, text, 0, textLength) |==> true
377:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):903:~position |==> +position
378:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):903:~position |==> -position
379:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:1 |==> 0
380:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:1 |==> -1
381:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value != 1
382:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value < 1
383:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value <= 1
384:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value > 1
385:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value >= 1
386:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> false
387:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> true
388:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:1 |==> 0
389:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:1 |==> -1
390:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value != 1
391:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value < 1
392:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value <= 1
393:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value > 1
394:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value >= 1
395:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> false
396:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> true
397:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:buf.append(value == 1 ? iSingularText : iPluralText) |==> <NO-OP>
398:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:1 |==> 0
399:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:1 |==> -1
400:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value != 1
401:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value < 1
402:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value <= 1
403:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value > 1
404:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value >= 1
405:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> false
406:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> true
407:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:out.write(value == 1 ? iSingularText : iPluralText) |==> <NO-OP>
408:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() != text2.length()
409:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() <= text2.length()
410:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() == text2.length()
411:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() > text2.length()
412:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() >= text2.length()
413:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> false
414:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> true
415:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):940:text1 = text2 |==> <NO-OP>
416:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):941:text2 = temp |==> <NO-OP>
417:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:true |==> false
418:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:0 |==> 1
419:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:0 |==> -1
420:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> false
421:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> true
422:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position % text1.length()
423:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position * text1.length()
424:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position - text1.length()
425:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position / text1.length()
426:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:true |==> false
427:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:0 |==> 1
428:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:0 |==> -1
429:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> false
430:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> true
431:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position % text2.length()
432:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position * text2.length()
433:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position - text2.length()
434:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position / text2.length()
435:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):953:~position |==> +position
436:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):953:~position |==> -position
437:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() != text2.length()
438:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() <= text2.length()
439:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() == text2.length()
440:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() > text2.length()
441:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() >= text2.length()
442:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> false
443:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> true
444:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):963:text1 = text2 |==> <NO-OP>
445:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):964:text2 = temp |==> <NO-OP>
446:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos != sourceLength
447:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos <= sourceLength
448:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos == sourceLength
449:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos > sourceLength
450:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos >= sourceLength
451:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> false
452:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> true
453:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:true |==> false
454:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:0 |==> 1
455:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:0 |==> -1
456:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> false
457:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> true
458:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:true |==> false
459:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:0 |==> 1
460:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:0 |==> -1
461:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> false
462:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> true
463:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):979:~position |==> +position
464:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):979:~position |==> -position
465:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) % iRight.calculatePrintedLength(value)
466:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) * iRight.calculatePrintedLength(value)
467:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) - iRight.calculatePrintedLength(value)
468:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) / iRight.calculatePrintedLength(value)
469:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.lang.StringBuffer,int):1002:iLeft.printTo(buf, value) |==> <NO-OP>
470:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.lang.StringBuffer,int):1003:iRight.printTo(buf, value) |==> <NO-OP>
471:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.io.Writer,int):1007:iLeft.printTo(out, value) |==> <NO-OP>
472:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.io.Writer,int):1008:iRight.printTo(out, value) |==> <NO-OP>
473:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1012:position = iLeft.parse(periodStr, position) |==> <NO-OP>
474:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:0 |==> 1
475:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:0 |==> -1
476:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position != 0
477:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position < 0
478:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position <= 0
479:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position == 0
480:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position > 0
481:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> false
482:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> true
483:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1014:position = iRight.parse(periodStr, position) |==> <NO-OP>
484:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:0 |==> 1
485:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:0 |==> -1
486:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos != 0
487:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos < 0
488:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos <= 0
489:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos == 0
490:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos > 0
491:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> false
492:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> true
493:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1024:~position |==> +position
494:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1024:~position |==> -position
495:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1072:field.iSuffix != null |==> field.iSuffix == null
496:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1072:field.iSuffix != null |==> false
497:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1072:field.iSuffix != null |==> true
498:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1073:suffix = new CompositeAffix(field.iSuffix, suffix) |==> <NO-OP>
499:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:0 |==> 1
500:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:0 |==> -1
501:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt != 0
502:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt < 0
503:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt == 0
504:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt > 0
505:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt >= 0
506:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> false
507:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> true
508:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:0 |==> 1
509:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:0 |==> -1
510:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting != PRINT_ZERO_ALWAYS
511:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting < PRINT_ZERO_ALWAYS
512:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
513:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting > PRINT_ZERO_ALWAYS
514:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
515:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
516:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> true
517:ROR:!=(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) < Long.MAX_VALUE
518:ROR:!=(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) <= Long.MAX_VALUE
519:ROR:!=(long,long):==(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) == Long.MAX_VALUE
520:ROR:!=(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) > Long.MAX_VALUE
521:ROR:!=(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) >= Long.MAX_VALUE
522:ROR:!=(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> false
523:ROR:!=(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> true
524:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS != (getFieldValue(period) != Long.MAX_VALUE)
525:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS && getFieldValue(period) != Long.MAX_VALUE
526:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS == (getFieldValue(period) != Long.MAX_VALUE)
527:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> false
528:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS
529:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) != Long.MAX_VALUE
530:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> true
531:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1083:1 |==> 0
532:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1083:1 |==> -1
533:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1085:0 |==> 1
534:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1085:0 |==> -1
535:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong != Long.MAX_VALUE
536:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong < Long.MAX_VALUE
537:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
538:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong > Long.MAX_VALUE
539:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
540:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> false
541:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> true
542:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1091:0 |==> 1
543:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1091:0 |==> -1
544:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
545:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
546:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
547:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
548:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
549:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> false
550:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> true
551:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:0 |==> 1
552:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:0 |==> -1
553:ROR:<(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> valueLong != 0
554:ROR:<(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> valueLong <= 0
555:ROR:<(long,long):==(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> valueLong == 0
556:ROR:<(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> valueLong > 0
557:ROR:<(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> valueLong >= 0
558:ROR:<(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> false
559:ROR:<(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:valueLong < 0 |==> true
560:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:5 |==> 0
561:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:5 |==> -5
562:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:4 |==> 0
563:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:4 |==> -4
564:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:sum = (valueLong < 0 ? Math.max(sum, 5) : Math.max(sum, 4)) |==> <NO-OP>
565:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:sum++ |==> <NO-OP>
566:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
567:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
568:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
569:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
570:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
571:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
572:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
573:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
574:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
575:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
576:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
577:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:0 |==> 1
578:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:0 |==> -1
579:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) != 0
580:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) < 0
581:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) <= 0
582:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) > 0
583:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) >= 0
584:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
585:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> true
586:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS != ((Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)
587:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS == ((Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)
588:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
589:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS
590:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0
591:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> true
592:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS || (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0
593:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:4 |==> 0
594:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:4 |==> -4
595:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:sum -= 4 |==> <NO-OP>
596:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
597:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
598:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
599:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
600:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
601:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1110:iPrefix != null |==> iPrefix == null
602:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1110:iPrefix != null |==> false
603:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1110:iPrefix != null |==> true
604:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1111:sum += iPrefix.calculatePrintedLength(value) |==> <NO-OP>
605:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1113:iSuffix != null |==> iSuffix == null
606:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1113:iSuffix != null |==> false
607:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1113:iSuffix != null |==> true
608:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1114:sum += iSuffix.calculatePrintedLength(value) |==> <NO-OP>
609:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong != Long.MAX_VALUE
610:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong < Long.MAX_VALUE
611:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
612:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong > Long.MAX_VALUE
613:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
614:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> false
615:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> true
616:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
617:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
618:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
619:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
620:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
621:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> false
622:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> true
623:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
624:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
625:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
626:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
627:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:value = (int)(valueLong / DateTimeConstants.MILLIS_PER_SECOND) |==> <NO-OP>
628:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1130:iPrefix != null |==> iPrefix == null
629:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1130:iPrefix != null |==> false
630:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1130:iPrefix != null |==> true
631:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1131:iPrefix.printTo(buf, value) |==> <NO-OP>
632:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:1 |==> 0
633:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:1 |==> -1
634:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> minDigits != 1
635:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> minDigits < 1
636:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> minDigits == 1
637:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> minDigits > 1
638:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> minDigits >= 1
639:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> false
640:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:minDigits <= 1 |==> true
641:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1136:FormatUtils.appendUnpaddedInteger(buf, value) |==> <NO-OP>
642:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1138:FormatUtils.appendPaddedInteger(buf, value, minDigits) |==> <NO-OP>
643:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
644:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
645:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
646:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
647:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
648:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> false
649:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:iFieldType >= SECONDS_MILLIS |==> true
650:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
651:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
652:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
653:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
654:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
655:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
656:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
657:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
658:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
659:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> false
660:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS |==> true
661:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:0 |==> 1
662:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:0 |==> -1
663:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> dp != 0
664:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> dp < 0
665:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> dp <= 0
666:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> dp == 0
667:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> dp >= 0
668:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> false
669:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:dp > 0 |==> true
670:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
671:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS && dp > 0
672:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS == dp > 0
673:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> false
674:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
675:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
676:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
677:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:0 |==> 1
678:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:0 |==> -1
679:ROR:<(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> valueLong != 0
680:ROR:<(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> valueLong <= 0
681:ROR:<(long,long):==(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> valueLong == 0
682:ROR:<(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> valueLong > 0
683:ROR:<(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> valueLong >= 0
684:ROR:<(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> false
685:ROR:<(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 |==> true
686:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:-DateTimeConstants.MILLIS_PER_SECOND |==> +DateTimeConstants.MILLIS_PER_SECOND
687:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:-DateTimeConstants.MILLIS_PER_SECOND |==> ~DateTimeConstants.MILLIS_PER_SECOND
688:ROR:>(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong != -DateTimeConstants.MILLIS_PER_SECOND
689:ROR:>(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong < -DateTimeConstants.MILLIS_PER_SECOND
690:ROR:>(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong <= -DateTimeConstants.MILLIS_PER_SECOND
691:ROR:>(long,long):==(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong == -DateTimeConstants.MILLIS_PER_SECOND
692:ROR:>(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong >= -DateTimeConstants.MILLIS_PER_SECOND
693:ROR:>(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> false
694:ROR:>(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> true
695:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong < 0 != valueLong > -DateTimeConstants.MILLIS_PER_SECOND
696:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong < 0 == valueLong > -DateTimeConstants.MILLIS_PER_SECOND
697:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> false
698:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong < 0
699:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong > -DateTimeConstants.MILLIS_PER_SECOND
700:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> true
701:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:valueLong < 0 && valueLong > -DateTimeConstants.MILLIS_PER_SECOND |==> valueLong < 0 || valueLong > -DateTimeConstants.MILLIS_PER_SECOND
702:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1144:buf.insert(bufLen, '-') |==> <NO-OP>
703:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1146:buf.append('.') |==> <NO-OP>
704:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1147:3 |==> 0
705:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1147:3 |==> -3
706:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1147:FormatUtils.appendPaddedInteger(buf, dp, 3) |==> <NO-OP>
707:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1150:iSuffix != null |==> iSuffix == null
708:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1150:iSuffix != null |==> false
709:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1150:iSuffix != null |==> true
710:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1151:iSuffix.printTo(buf, value) |==> <NO-OP>
711:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> valueLong != Long.MAX_VALUE
712:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> valueLong < Long.MAX_VALUE
713:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
714:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> valueLong > Long.MAX_VALUE
715:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
716:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> false
717:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:valueLong == Long.MAX_VALUE |==> true
718:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
719:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
720:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
721:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
722:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
723:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> false
724:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iFieldType >= SECONDS_MILLIS |==> true
725:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
726:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
727:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
728:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
729:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:value = (int)(valueLong / DateTimeConstants.MILLIS_PER_SECOND) |==> <NO-OP>
730:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:iPrefix != null |==> iPrefix == null
731:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:iPrefix != null |==> false
732:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:iPrefix != null |==> true
733:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1166:iPrefix.printTo(out, value) |==> <NO-OP>
734:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:1 |==> 0
735:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:1 |==> -1
736:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> minDigits != 1
737:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> minDigits < 1
738:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> minDigits == 1
739:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> minDigits > 1
740:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> minDigits >= 1
741:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> false
742:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1169:minDigits <= 1 |==> true
743:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:FormatUtils.writeUnpaddedInteger(out, value) |==> <NO-OP>
744:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:FormatUtils.writePaddedInteger(out, value, minDigits) |==> <NO-OP>
745:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
746:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
747:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
748:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
749:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
750:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> false
751:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:iFieldType >= SECONDS_MILLIS |==> true
752:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
753:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
754:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
755:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1175:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
756:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
757:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
758:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
759:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
760:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
761:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> false
762:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS |==> true
763:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:0 |==> 1
764:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:0 |==> -1
765:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> dp != 0
766:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> dp < 0
767:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> dp <= 0
768:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> dp == 0
769:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> dp >= 0
770:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> false
771:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:dp > 0 |==> true
772:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
773:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS && dp > 0
774:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS == dp > 0
775:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> false
776:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
777:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
778:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1176:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
779:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1177:out.write('.') |==> <NO-OP>
780:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1178:3 |==> 0
781:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1178:3 |==> -3
782:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1178:FormatUtils.writePaddedInteger(out, dp, 3) |==> <NO-OP>
783:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1181:iSuffix != null |==> iSuffix == null
784:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1181:iSuffix != null |==> false
785:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1181:iSuffix != null |==> true
786:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1182:iSuffix.printTo(out, value) |==> <NO-OP>
787:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting != PRINT_ZERO_ALWAYS
788:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting < PRINT_ZERO_ALWAYS
789:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
790:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting > PRINT_ZERO_ALWAYS
791:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
792:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
793:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> true
794:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> position != text.length()
795:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> position < text.length()
796:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> position <= text.length()
797:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> position == text.length()
798:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> position > text.length()
799:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> false
800:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:position >= text.length() |==> true
801:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:mustParse |==> false
802:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:mustParse |==> true
803:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:~position |==> +position
804:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:~position |==> -position
805:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1197:iPrefix != null |==> iPrefix == null
806:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1197:iPrefix != null |==> false
807:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1197:iPrefix != null |==> true
808:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1198:position = iPrefix.parse(text, position) |==> <NO-OP>
809:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:0 |==> 1
810:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:0 |==> -1
811:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> position != 0
812:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> position < 0
813:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> position <= 0
814:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> position == 0
815:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> position > 0
816:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> false
817:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1199:position >= 0 |==> true
818:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1201:true |==> false
819:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1201:mustParse = true |==> <NO-OP>
820:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1204:mustParse |==> false
821:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1204:mustParse |==> true
822:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1208:~position |==> +position
823:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1208:~position |==> -position
824:LVR:NEG:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1214:-1 |==> 0
825:LVR:NEG:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1214:-1 |==> 1
826:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null |==> iSuffix == null
827:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null |==> false
828:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null |==> true
829:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> iSuffix != null != !mustParse
830:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> iSuffix != null == !mustParse
831:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> false
832:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> iSuffix != null
833:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> !mustParse
834:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> true
835:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:iSuffix != null && !mustParse |==> iSuffix != null || !mustParse
836:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1218:suffixPos = iSuffix.scan(text, position) |==> <NO-OP>
837:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:0 |==> 1
838:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:0 |==> -1
839:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> suffixPos != 0
840:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> suffixPos < 0
841:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> suffixPos <= 0
842:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> suffixPos == 0
843:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> suffixPos > 0
844:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> false
845:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1219:suffixPos >= 0 |==> true
846:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1221:true |==> false
847:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1221:mustParse = true |==> <NO-OP>
848:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1224:mustParse |==> false
849:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1224:mustParse |==> true
850:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:~suffixPos |==> +suffixPos
851:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1228:~suffixPos |==> -suffixPos
852:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse != !isSupported(period.getPeriodType(), iFieldType)
853:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse == !isSupported(period.getPeriodType(), iFieldType)
854:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> false
855:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse
856:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !isSupported(period.getPeriodType(), iFieldType)
857:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> true
858:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1234:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse || !isSupported(period.getPeriodType(), iFieldType)
859:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:0 |==> 1
860:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:0 |==> -1
861:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> suffixPos != 0
862:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> suffixPos < 0
863:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> suffixPos <= 0
864:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> suffixPos == 0
865:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> suffixPos >= 0
866:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> false
867:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1241:suffixPos > 0 |==> true
868:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos % position
869:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos * position
870:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos + position
871:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1242:suffixPos - position |==> suffixPos / position
872:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() % position
873:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() * position
874:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() + position
875:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:text.length() - position |==> text.length() / position
876:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:0 |==> 1
877:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:0 |==> -1
878:LVR:NEG:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1249:-1 |==> 0
879:LVR:NEG:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1249:-1 |==> 1
880:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:false |==> true
881:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> length != limit
882:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> length <= limit
883:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> length == limit
884:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> length > limit
885:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> length >= limit
886:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> false
887:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:length < limit |==> true
888:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position % length
889:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position * length
890:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position - length
891:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1252:position + length |==> position / length
892:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:0 |==> 1
893:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:0 |==> -1
894:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> length != 0
895:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> length < 0
896:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> length <= 0
897:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> length > 0
898:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> length >= 0
899:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> false
900:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 |==> true
901:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> c != '-'
902:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> c < '-'
903:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> c <= '-'
904:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> c > '-'
905:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> c >= '-'
906:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> false
907:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' |==> true
908:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> c != '+'
909:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> c < '+'
910:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> c <= '+'
911:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> c > '+'
912:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> c >= '+'
913:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> false
914:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '+' |==> true
915:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '-' != (c == '+')
916:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '-' && c == '+'
917:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '-' == (c == '+')
918:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> false
919:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '-'
920:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> c == '+'
921:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:c == '-' || c == '+' |==> true
922:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> length == 0 != (c == '-' || c == '+')
923:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
924:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> false
925:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> length == 0
926:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
927:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> true
928:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') |==> length == 0 || (c == '-' || c == '+')
929:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> (length == 0 && (c == '-' || c == '+')) != !iRejectSignedValues
930:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> (length == 0 && (c == '-' || c == '+')) == !iRejectSignedValues
931:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> false
932:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> length == 0 && (c == '-' || c == '+')
933:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> !iRejectSignedValues
934:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> true
935:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> length == 0 && (c == '-' || c == '+') || !iRejectSignedValues
936:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> c != '-'
937:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> c < '-'
938:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> c <= '-'
939:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> c > '-'
940:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> c >= '-'
941:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> false
942:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c == '-' |==> true
943:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:1 |==> 0
944:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:1 |==> -1
945:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length % 1
946:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length * 1
947:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length - 1
948:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 |==> length / 1
949:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> length + 1 != limit
950:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> length + 1 < limit
951:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> length + 1 <= limit
952:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> length + 1 == limit
953:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> length + 1 > limit
954:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> false
955:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit |==> true
956:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position % length
957:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position * length
958:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position - length
959:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length |==> position / length
960:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:1 |==> 0
961:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:1 |==> -1
962:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> (position + length) % 1
963:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> (position + length) * 1
964:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> position + length - 1
965:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:position + length + 1 |==> (position + length) / 1
966:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) != '0'
967:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) <= '0'
968:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) == '0'
969:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) > '0'
970:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) >= '0'
971:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> false
972:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:(c = text.charAt(position + length + 1)) < '0' |==> true
973:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit != (c = text.charAt(position + length + 1)) < '0'
974:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit && (c = text.charAt(position + length + 1)) < '0'
975:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit == (c = text.charAt(position + length + 1)) < '0'
976:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> false
977:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit
978:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) < '0'
979:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> true
980:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> c != '9'
981:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> c < '9'
982:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> c <= '9'
983:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> c == '9'
984:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> c >= '9'
985:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> false
986:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:c > '9' |==> true
987:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') != c > '9'
988:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') && c > '9'
989:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') == c > '9'
990:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> false
991:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1258:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0'
992:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> c > '9'
993:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1259:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> true
994:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1264:negative |==> false
995:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1264:negative |==> true
996:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1265:length++ |==> <NO-OP>
997:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1268:position++ |==> <NO-OP>
998:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:1 |==> 0
999:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:1 |==> -1
1000:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit % 1
1001:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit * 1
1002:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit - 1
1003:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit + 1 |==> limit / 1
1004:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() % position
1005:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() * position
1006:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() + position
1007:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:text.length() - position |==> text.length() / position
1008:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
1009:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> c != '0'
1010:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> c < '0'
1011:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> c <= '0'
1012:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> c == '0'
1013:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> c > '0'
1014:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> false
1015:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' |==> true
1016:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> c != '9'
1017:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> c < '9'
1018:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> c == '9'
1019:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> c > '9'
1020:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> c >= '9'
1021:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> false
1022:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c <= '9' |==> true
1023:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c >= '0' != c <= '9'
1024:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c >= '0' == c <= '9'
1025:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> false
1026:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c >= '0'
1027:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c <= '9'
1028:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> true
1029:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:c >= '0' && c <= '9' |==> c >= '0' || c <= '9'
1030:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:true |==> false
1031:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:hasDigits = true |==> <NO-OP>
1032:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> c != '.'
1033:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> c < '.'
1034:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> c <= '.'
1035:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> c > '.'
1036:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> c >= '.'
1037:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> false
1038:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' |==> true
1039:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> c != ','
1040:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> c < ','
1041:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> c <= ','
1042:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> c > ','
1043:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> c >= ','
1044:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> false
1045:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == ',' |==> true
1046:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == '.' != (c == ',')
1047:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == '.' && c == ','
1048:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == '.' == (c == ',')
1049:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> false
1050:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == '.'
1051:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> c == ','
1052:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:c == '.' || c == ',' |==> true
1053:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
1054:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
1055:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
1056:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
1057:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
1058:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> false
1059:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS |==> true
1060:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
1061:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
1062:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
1063:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
1064:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
1065:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
1066:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
1067:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS != (iFieldType == SECONDS_OPTIONAL_MILLIS)
1068:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS && iFieldType == SECONDS_OPTIONAL_MILLIS
1069:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS == (iFieldType == SECONDS_OPTIONAL_MILLIS)
1070:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
1071:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS
1072:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_OPTIONAL_MILLIS
1073:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
1074:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') != (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1075:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') == (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1076:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> false
1077:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',')
1078:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1079:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1279:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> true
1080:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1278:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') || (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1081:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:0 |==> 1
1082:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:0 |==> -1
1083:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> fractPos != 0
1084:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> fractPos < 0
1085:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> fractPos <= 0
1086:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> fractPos == 0
1087:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> fractPos > 0
1088:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> false
1089:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos >= 0 |==> true
1090:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position % length
1091:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position * length
1092:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position - length
1093:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length |==> position / length
1094:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:1 |==> 0
1095:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:1 |==> -1
1096:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> (position + length) % 1
1097:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> (position + length) * 1
1098:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> position + length - 1
1099:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:position + length + 1 |==> (position + length) / 1
1100:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1284:fractPos = position + length + 1 |==> <NO-OP>
1101:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:1 |==> 0
1102:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:1 |==> -1
1103:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit % 1
1104:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit * 1
1105:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit - 1
1106:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit + 1 |==> limit / 1
1107:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() % position
1108:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() * position
1109:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() + position
1110:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:text.length() - position |==> text.length() / position
1111:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1286:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
1112:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1291:length++ |==> <NO-OP>
1113:COR:hasDigits:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:hasDigits |==> false
1114:COR:hasDigits:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:hasDigits |==> true
1115:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1295:~position |==> +position
1116:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1295:~position |==> -position
1117:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:0 |==> 1
1118:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:0 |==> -1
1119:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> suffixPos != 0
1120:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> suffixPos < 0
1121:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> suffixPos <= 0
1122:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> suffixPos == 0
1123:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> suffixPos > 0
1124:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> false
1125:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 |==> true
1126:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position % length
1127:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position * length
1128:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position - length
1129:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length |==> position / length
1130:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> position + length < suffixPos
1131:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> position + length <= suffixPos
1132:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> position + length == suffixPos
1133:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> position + length > suffixPos
1134:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> position + length >= suffixPos
1135:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> false
1136:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:position + length != suffixPos |==> true
1137:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 != (position + length != suffixPos)
1138:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 == (position + length != suffixPos)
1139:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> false
1140:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0
1141:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> position + length != suffixPos
1142:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> true
1143:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1298:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 || position + length != suffixPos
1144:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
1145:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
1146:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
1147:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
1148:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
1149:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> false
1150:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS |==> true
1151:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
1152:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
1153:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_OPTIONAL_MILLIS
1154:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
1155:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
1156:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> false
1157:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_OPTIONAL_MILLIS |==> true
1158:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS != (iFieldType != SECONDS_OPTIONAL_MILLIS)
1159:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS == (iFieldType != SECONDS_OPTIONAL_MILLIS)
1160:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> false
1161:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS
1162:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
1163:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> true
1164:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS || iFieldType != SECONDS_OPTIONAL_MILLIS
1165:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1308:setFieldValue(period, iFieldType, parseInt(text, position, length)) |==> <NO-OP>
1166:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:0 |==> 1
1167:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:0 |==> -1
1168:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> fractPos != 0
1169:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> fractPos <= 0
1170:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> fractPos == 0
1171:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> fractPos > 0
1172:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> fractPos >= 0
1173:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> false
1174:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos < 0 |==> true
1175:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:setFieldValue(period, SECONDS, parseInt(text, position, length)) |==> <NO-OP>
1176:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1311:0 |==> 1
1177:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1311:0 |==> -1
1178:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1311:setFieldValue(period, MILLIS, 0) |==> <NO-OP>
1179:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos % position
1180:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos * position
1181:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos + position
1182:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position |==> fractPos / position
1183:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:1 |==> 0
1184:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:1 |==> -1
1185:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> (fractPos - position) % 1
1186:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> (fractPos - position) * 1
1187:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> fractPos - position + 1
1188:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1313:fractPos - position - 1 |==> (fractPos - position) / 1
1189:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:setFieldValue(period, SECONDS, wholeValue) |==> <NO-OP>
1190:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position % length
1191:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position * length
1192:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position - length
1193:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length |==> position / length
1194:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> (position + length) % fractPos
1195:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> (position + length) * fractPos
1196:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> position + length + fractPos
1197:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1316:position + length - fractPos |==> (position + length) / fractPos
1198:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:0 |==> 1
1199:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:0 |==> -1
1200:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> fractLen != 0
1201:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> fractLen < 0
1202:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> fractLen == 0
1203:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> fractLen > 0
1204:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> fractLen >= 0
1205:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> false
1206:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:fractLen <= 0 |==> true
1207:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1319:0 |==> 1
1208:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1319:0 |==> -1
1209:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:3 |==> 0
1210:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:3 |==> -3
1211:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> fractLen != 3
1212:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> fractLen < 3
1213:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> fractLen <= 3
1214:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> fractLen == 3
1215:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> fractLen > 3
1216:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> false
1217:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen >= 3 |==> true
1218:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1322:3 |==> 0
1219:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1322:3 |==> -3
1220:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:1 |==> 0
1221:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:1 |==> -1
1222:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> fractLen != 1
1223:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> fractLen < 1
1224:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> fractLen <= 1
1225:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> fractLen > 1
1226:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> fractLen >= 1
1227:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> false
1228:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1325:fractLen == 1 |==> true
1229:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1326:100 |==> 0
1230:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1326:100 |==> -100
1231:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1326:fractValue *= 100 |==> <NO-OP>
1232:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:10 |==> 0
1233:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:10 |==> -10
1234:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:fractValue *= 10 |==> <NO-OP>
1235:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:0 |==> 1
1236:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:0 |==> -1
1237:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> wholeValue != 0
1238:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> wholeValue <= 0
1239:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> wholeValue == 0
1240:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> wholeValue > 0
1241:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> wholeValue >= 0
1242:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> false
1243:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1331:wholeValue < 0 |==> true
1244:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1332:-fractValue |==> +fractValue
1245:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1332:-fractValue |==> ~fractValue
1246:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1332:fractValue = -fractValue |==> <NO-OP>
1247:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1336:setFieldValue(period, MILLIS, fractValue) |==> <NO-OP>
1248:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1339:position += length |==> <NO-OP>
1249:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:0 |==> 1
1250:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:0 |==> -1
1251:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> position != 0
1252:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> position < 0
1253:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> position <= 0
1254:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> position == 0
1255:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> position > 0
1256:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> false
1257:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 |==> true
1258:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:iSuffix != null |==> iSuffix == null
1259:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:iSuffix != null |==> false
1260:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:iSuffix != null |==> true
1261:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> position >= 0 != (iSuffix != null)
1262:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> position >= 0 == (iSuffix != null)
1263:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> false
1264:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> position >= 0
1265:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> iSuffix != null
1266:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> true
1267:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1341:position >= 0 && iSuffix != null |==> position >= 0 || iSuffix != null
1268:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1342:position = iSuffix.parse(text, position) |==> <NO-OP>
1269:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:10 |==> 0
1270:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:10 |==> -10
1271:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> length != 10
1272:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> length < 10
1273:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> length <= 10
1274:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> length == 10
1275:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> length > 10
1276:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> false
1277:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length >= 10 |==> true
1278:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position % length
1279:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position * length
1280:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position - length
1281:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1357:position + length |==> position / length
1282:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:0 |==> 1
1283:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:0 |==> -1
1284:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> length != 0
1285:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> length < 0
1286:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> length == 0
1287:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> length > 0
1288:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> length >= 0
1289:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> false
1290:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length <= 0 |==> true
1291:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1360:0 |==> 1
1292:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1360:0 |==> -1
1293:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1363:length-- |==> <NO-OP>
1294:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> value != '-'
1295:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> value < '-'
1296:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> value <= '-'
1297:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> value > '-'
1298:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> value >= '-'
1299:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> false
1300:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:value == '-' |==> true
1301:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:0 |==> 1
1302:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:0 |==> -1
1303:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> --length != 0
1304:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> --length <= 0
1305:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> --length == 0
1306:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> --length > 0
1307:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> --length >= 0
1308:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> false
1309:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:--length < 0 |==> true
1310:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1367:0 |==> 1
1311:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1367:0 |==> -1
1312:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1369:true |==> false
1313:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:value = text.charAt(position++) |==> <NO-OP>
1314:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:false |==> true
1315:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1374:value -= '0' |==> <NO-OP>
1316:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:0 |==> 1
1317:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:0 |==> -1
1318:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> length-- != 0
1319:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> length-- < 0
1320:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> length-- <= 0
1321:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> length-- == 0
1322:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> length-- >= 0
1323:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> false
1324:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1375:length-- > 0 |==> true
1325:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:3 |==> 0
1326:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:3 |==> -3
1327:SOR:<<(int,int):>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 3 |==> value >> 3
1328:SOR:<<(int,int):>>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 3 |==> value >>> 3
1329:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:1 |==> 0
1330:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:1 |==> -1
1331:SOR:<<(int,int):>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 1 |==> value >> 1
1332:SOR:<<(int,int):>>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value << 1 |==> value >>> 1
1333:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
1334:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
1335:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
1336:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
1337:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) % text.charAt(position++)
1338:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) * text.charAt(position++)
1339:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) - text.charAt(position++)
1340:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) / text.charAt(position++)
1341:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) % '0'
1342:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) * '0'
1343:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(position++) + '0'
1344:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) / '0'
1345:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1376:value = ((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> <NO-OP>
1346:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:negative |==> false
1347:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:negative |==> true
1348:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:-value |==> +value
1349:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1378:-value |==> ~value
1350:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting != PRINT_ZERO_ALWAYS
1351:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting < PRINT_ZERO_ALWAYS
1352:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
1353:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting > PRINT_ZERO_ALWAYS
1354:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
1355:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
1356:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1386:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> true
1357:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null |==> type == null
1358:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null |==> false
1359:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null |==> true
1360:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:false |==> true
1361:ROR:==(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType) != false
1362:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> false
1363:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType)
1364:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> false
1365:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:isSupported(type, iFieldType) == false |==> true
1366:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> type != null != (isSupported(type, iFieldType) == false)
1367:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> type != null == (isSupported(type, iFieldType) == false)
1368:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> false
1369:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> type != null
1370:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType) == false
1371:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> true
1372:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1391:type != null && isSupported(type, iFieldType) == false |==> type != null || isSupported(type, iFieldType) == false
1373:AOR:*(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds % (long)DateTimeConstants.MILLIS_PER_SECOND
1374:AOR:*(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds + (long)DateTimeConstants.MILLIS_PER_SECOND
1375:AOR:*(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds - (long)DateTimeConstants.MILLIS_PER_SECOND
1376:AOR:*(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds / (long)DateTimeConstants.MILLIS_PER_SECOND
1377:AOR:+(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) % millis
1378:AOR:+(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) * millis
1379:AOR:+(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) - millis
1380:AOR:+(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1428:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) / millis
1381:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:0 |==> 1
1382:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:0 |==> -1
1383:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> value != 0
1384:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> value < 0
1385:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> value <= 0
1386:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> value > 0
1387:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> value >= 0
1388:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> false
1389:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1433:value == 0 |==> true
1390:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] != this
1391:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:iFieldFormatters[iFieldType] == this |==> false
1392:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:iFieldFormatters[iFieldType] == this |==> true
1393:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) != (iFieldFormatters[iFieldType] == this)
1394:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
1395:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
1396:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
1397:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
1398:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> true
1399:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1438:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) || iFieldFormatters[iFieldType] == this
1400:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:1 |==> 0
1401:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:1 |==> -1
1402:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType % 1
1403:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType * 1
1404:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType - 1
1405:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:iFieldType + 1 |==> iFieldType / 1
1406:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> i != MAX_FIELD
1407:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> i < MAX_FIELD
1408:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> i == MAX_FIELD
1409:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> i > MAX_FIELD
1410:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> i >= MAX_FIELD
1411:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> false
1412:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1439:i <= MAX_FIELD |==> true
1413:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:iFieldFormatters[i] != null |==> iFieldFormatters[i] == null
1414:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:iFieldFormatters[i] != null |==> false
1415:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:iFieldFormatters[i] != null |==> true
1416:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) != (iFieldFormatters[i] != null)
1417:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
1418:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> false
1419:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
1420:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
1421:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> true
1422:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1440:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) || iFieldFormatters[i] != null
1423:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] != this
1424:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:iFieldFormatters[iFieldType] == this |==> false
1425:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:iFieldFormatters[iFieldType] == this |==> true
1426:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) != (iFieldFormatters[iFieldType] == this)
1427:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
1428:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
1429:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
1430:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
1431:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> true
1432:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) || iFieldFormatters[iFieldType] == this
1433:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1450:8 |==> 0
1434:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1450:8 |==> -8
1435:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1451:i-- |==> <NO-OP>
1436:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:0 |==> 1
1437:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:0 |==> -1
1438:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> i != 0
1439:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> i < 0
1440:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> i <= 0
1441:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> i == 0
1442:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> i > 0
1443:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> false
1444:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 |==> true
1445:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> i != MAX_FIELD
1446:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> i < MAX_FIELD
1447:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> i == MAX_FIELD
1448:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> i > MAX_FIELD
1449:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> i >= MAX_FIELD
1450:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> false
1451:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i <= MAX_FIELD |==> true
1452:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i >= 0 != i <= MAX_FIELD
1453:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i >= 0 == i <= MAX_FIELD
1454:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> false
1455:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i >= 0
1456:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i <= MAX_FIELD
1457:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> true
1458:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1452:i >= 0 && i <= MAX_FIELD |==> i >= 0 || i <= MAX_FIELD
1459:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:iFieldFormatters[i] != null |==> iFieldFormatters[i] == null
1460:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:iFieldFormatters[i] != null |==> false
1461:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:iFieldFormatters[i] != null |==> true
1462:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) != (iFieldFormatters[i] != null)
1463:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
1464:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> false
1465:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
1466:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
1467:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> true
1468:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1453:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) || iFieldFormatters[i] != null
1469:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:0 |==> 1
1470:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:0 |==> -1
1471:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> i != isize
1472:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> i <= isize
1473:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> i == isize
1474:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> i > isize
1475:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> i >= isize
1476:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> false
1477:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1468:i < isize |==> true
1478:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:0 |==> 1
1479:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:0 |==> -1
1480:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> period.getValue(i) < 0
1481:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> period.getValue(i) <= 0
1482:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> period.getValue(i) == 0
1483:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> period.getValue(i) > 0
1484:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> period.getValue(i) >= 0
1485:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> false
1486:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:period.getValue(i) != 0 |==> true
1487:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1470:false |==> true
1488:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1473:true |==> false
1489:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1479:false |==> true
1490:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) != type.isSupported(DurationFieldType.millis())
1491:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) && type.isSupported(DurationFieldType.millis())
1492:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) == type.isSupported(DurationFieldType.millis())
1493:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> false
1494:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds())
1495:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1499:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.millis())
1496:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1498:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> true
1497:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1508:period.setYears(value) |==> <NO-OP>
1498:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1511:period.setMonths(value) |==> <NO-OP>
1499:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1514:period.setWeeks(value) |==> <NO-OP>
1500:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1517:period.setDays(value) |==> <NO-OP>
1501:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1520:period.setHours(value) |==> <NO-OP>
1502:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1523:period.setMinutes(value) |==> <NO-OP>
1503:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1526:period.setSeconds(value) |==> <NO-OP>
1504:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1529:period.setMillis(value) |==> <NO-OP>
1505:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Literal@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1553:0 |==> 1
1506:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Literal@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1553:0 |==> -1
1507:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Literal@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1561:buf.append(iText) |==> <NO-OP>
1508:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Literal@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1565:out.write(iText) |==> <NO-OP>
1509:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:true |==> false
1510:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:0 |==> 1
1511:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:0 |==> -1
1512:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> false
1513:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1571:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> true
1514:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position % iText.length()
1515:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position * iText.length()
1516:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position - iText.length()
1517:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1572:position + iText.length() |==> position / iText.length()
1518:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1574:~position |==> +position
1519:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1574:~position |==> -position
1520:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null |==> finalText != null
1521:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null |==> false
1522:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null |==> true
1523:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> finalText == null != text.equals(finalText)
1524:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> finalText == null && text.equals(finalText)
1525:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> finalText == null == text.equals(finalText)
1526:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> false
1527:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> finalText == null
1528:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> text.equals(finalText)
1529:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:finalText == null || text.equals(finalText) |==> true
1530:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null |==> variants != null
1531:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null |==> false
1532:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null |==> true
1533:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:0 |==> 1
1534:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:0 |==> -1
1535:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> variants.length != 0
1536:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> variants.length < 0
1537:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> variants.length <= 0
1538:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> variants.length > 0
1539:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> variants.length >= 0
1540:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> false
1541:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants.length == 0 |==> true
1542:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants == null != (variants.length == 0)
1543:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants == null && variants.length == 0
1544:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants == null == (variants.length == 0)
1545:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> false
1546:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants == null
1547:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> variants.length == 0
1548:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:variants == null || variants.length == 0 |==> true
1549:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) != (variants == null || variants.length == 0)
1550:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) == (variants == null || variants.length == 0)
1551:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> false
1552:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText))
1553:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1604:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (variants == null || variants.length == 0)
1554:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> true
1555:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1603:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) || (variants == null || variants.length == 0)
1556:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1610:parsedSet.add(text) |==> <NO-OP>
1557:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1611:parsedSet.add(finalText) |==> <NO-OP>
1558:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1612:variants != null |==> variants == null
1559:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1612:variants != null |==> false
1560:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1612:variants != null |==> true
1561:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:0 |==> 1
1562:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:0 |==> -1
1563:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> --i != 0
1564:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> --i < 0
1565:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> --i <= 0
1566:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> --i == 0
1567:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> --i > 0
1568:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> false
1569:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1613:--i >= 0 |==> true
1570:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1614:parsedSet.add(variants[i]) |==> <NO-OP>
1571:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1618:Collections.reverse(parsedList) |==> <NO-OP>
1572:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> sum != stopAt
1573:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> sum <= stopAt
1574:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> sum == stopAt
1575:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> sum > stopAt
1576:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> sum >= stopAt
1577:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> false
1578:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1630:sum < stopAt |==> true
1579:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1631:sum += iAfterPrinter.countFieldsToPrint(period, stopAt, locale) |==> <NO-OP>
1580:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) % after.calculatePrintedLength(period, locale)
1581:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) * after.calculatePrintedLength(period, locale)
1582:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) - after.calculatePrintedLength(period, locale)
1583:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) / after.calculatePrintedLength(period, locale)
1584:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:iUseBefore |==> false
1585:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:iUseBefore |==> true
1586:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:1 |==> 0
1587:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:1 |==> -1
1588:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:0 |==> 1
1589:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:0 |==> -1
1590:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
1591:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) < 0
1592:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) <= 0
1593:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) == 0
1594:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
1595:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
1596:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:before.countFieldsToPrint(period, 1, locale) > 0 |==> true
1597:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1645:iUseAfter |==> false
1598:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1645:iUseAfter |==> true
1599:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1646:2 |==> 0
1600:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1646:2 |==> -2
1601:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:0 |==> 1
1602:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:0 |==> -1
1603:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> afterCount != 0
1604:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> afterCount < 0
1605:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> afterCount <= 0
1606:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> afterCount == 0
1607:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> afterCount >= 0
1608:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> false
1609:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:afterCount > 0 |==> true
1610:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:1 |==> 0
1611:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:1 |==> -1
1612:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> afterCount != 1
1613:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> afterCount < 1
1614:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> afterCount <= 1
1615:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> afterCount == 1
1616:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> afterCount >= 1
1617:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> false
1618:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:afterCount > 1 |==> true
1619:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1648:sum += (afterCount > 1 ? iText : iFinalText).length() |==> <NO-OP>
1620:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1651:sum += iText.length() |==> <NO-OP>
1621:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:1 |==> 0
1622:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:1 |==> -1
1623:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:0 |==> 1
1624:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:0 |==> -1
1625:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
1626:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) < 0
1627:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) <= 0
1628:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) == 0
1629:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
1630:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1631:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1632:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter != after.countFieldsToPrint(period, 1, locale) > 0
1633:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
1634:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1635:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
1636:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
1637:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1638:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1654:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter || after.countFieldsToPrint(period, 1, locale) > 0
1639:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1655:sum += iText.length() |==> <NO-OP>
1640:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1665:before.printTo(buf, period, locale) |==> <NO-OP>
1641:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:iUseBefore |==> false
1642:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:iUseBefore |==> true
1643:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:1 |==> 0
1644:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:1 |==> -1
1645:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:0 |==> 1
1646:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:0 |==> -1
1647:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
1648:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) < 0
1649:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) <= 0
1650:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) == 0
1651:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
1652:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
1653:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:before.countFieldsToPrint(period, 1, locale) > 0 |==> true
1654:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1668:iUseAfter |==> false
1655:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1668:iUseAfter |==> true
1656:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1669:2 |==> 0
1657:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1669:2 |==> -2
1658:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:0 |==> 1
1659:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:0 |==> -1
1660:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> afterCount != 0
1661:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> afterCount < 0
1662:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> afterCount <= 0
1663:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> afterCount == 0
1664:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> afterCount >= 0
1665:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> false
1666:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:afterCount > 0 |==> true
1667:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:1 |==> 0
1668:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:1 |==> -1
1669:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> afterCount != 1
1670:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> afterCount < 1
1671:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> afterCount <= 1
1672:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> afterCount == 1
1673:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> afterCount >= 1
1674:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> false
1675:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:afterCount > 1 |==> true
1676:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1671:buf.append(afterCount > 1 ? iText : iFinalText) |==> <NO-OP>
1677:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1674:buf.append(iText) |==> <NO-OP>
1678:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:1 |==> 0
1679:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:1 |==> -1
1680:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:0 |==> 1
1681:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:0 |==> -1
1682:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
1683:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) < 0
1684:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) <= 0
1685:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) == 0
1686:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
1687:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1688:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1689:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter != after.countFieldsToPrint(period, 1, locale) > 0
1690:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
1691:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1692:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
1693:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
1694:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1695:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1677:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter || after.countFieldsToPrint(period, 1, locale) > 0
1696:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1678:buf.append(iText) |==> <NO-OP>
1697:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1680:after.printTo(buf, period, locale) |==> <NO-OP>
1698:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1687:before.printTo(out, period, locale) |==> <NO-OP>
1699:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:iUseBefore |==> false
1700:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:iUseBefore |==> true
1701:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:1 |==> 0
1702:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:1 |==> -1
1703:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:0 |==> 1
1704:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:0 |==> -1
1705:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
1706:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) < 0
1707:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) <= 0
1708:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) == 0
1709:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
1710:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
1711:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:before.countFieldsToPrint(period, 1, locale) > 0 |==> true
1712:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1690:iUseAfter |==> false
1713:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1690:iUseAfter |==> true
1714:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1691:2 |==> 0
1715:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1691:2 |==> -2
1716:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:0 |==> 1
1717:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:0 |==> -1
1718:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> afterCount != 0
1719:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> afterCount < 0
1720:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> afterCount <= 0
1721:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> afterCount == 0
1722:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> afterCount >= 0
1723:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> false
1724:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:afterCount > 0 |==> true
1725:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:1 |==> 0
1726:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:1 |==> -1
1727:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> afterCount != 1
1728:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> afterCount < 1
1729:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> afterCount <= 1
1730:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> afterCount == 1
1731:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> afterCount >= 1
1732:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> false
1733:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:afterCount > 1 |==> true
1734:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1693:out.write(afterCount > 1 ? iText : iFinalText) |==> <NO-OP>
1735:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1696:out.write(iText) |==> <NO-OP>
1736:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:1 |==> 0
1737:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:1 |==> -1
1738:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:0 |==> 1
1739:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:0 |==> -1
1740:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
1741:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) < 0
1742:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) <= 0
1743:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) == 0
1744:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
1745:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1746:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1747:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter != after.countFieldsToPrint(period, 1, locale) > 0
1748:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
1749:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1750:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
1751:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
1752:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1753:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1699:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter || after.countFieldsToPrint(period, 1, locale) > 0
1754:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1700:out.write(iText) |==> <NO-OP>
1755:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1702:after.printTo(out, period, locale) |==> <NO-OP>
1756:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1709:position = iBeforeParser.parseInto(period, periodStr, position, locale) |==> <NO-OP>
1757:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:0 |==> 1
1758:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:0 |==> -1
1759:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> position != 0
1760:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> position <= 0
1761:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> position == 0
1762:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> position > 0
1763:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> position >= 0
1764:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> false
1765:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:position < 0 |==> true
1766:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1715:false |==> true
1767:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:position > oldPos |==> position != oldPos
1768:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:position > oldPos |==> position < oldPos
1769:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:position > oldPos |==> position <= oldPos
1770:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:position > oldPos |==> position == oldPos
1771:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:position > oldPos |==> position >= oldPos
1772:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:position > oldPos |==> false
1773:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:position > oldPos |==> true
1774:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:0 |==> 1
1775:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:0 |==> -1
1776:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:i < length |==> i != length
1777:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:i < length |==> i <= length
1778:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:i < length |==> i == length
1779:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:i < length |==> i > length
1780:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:i < length |==> i >= length
1781:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:i < length |==> false
1782:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:i < length |==> true
1783:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null |==> parsedForm != null
1784:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null |==> false
1785:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null |==> true
1786:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:0 |==> 1
1787:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:0 |==> -1
1788:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm.length() == 0 |==> parsedForm.length() != 0
1789:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm.length() == 0 |==> parsedForm.length() < 0
1790:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm.length() == 0 |==> parsedForm.length() <= 0
1791:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm.length() == 0 |==> parsedForm.length() > 0
1792:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm.length() == 0 |==> parsedForm.length() >= 0
1793:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm.length() == 0 |==> false
1794:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm.length() == 0 |==> true
1795:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null != (parsedForm.length() == 0)
1796:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null && parsedForm.length() == 0
1797:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null == (parsedForm.length() == 0)
1798:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null || parsedForm.length() == 0 |==> false
1799:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null
1800:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null || parsedForm.length() == 0 |==> parsedForm.length() == 0
1801:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:parsedForm == null || parsedForm.length() == 0 |==> true
1802:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1724:true |==> false
1803:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1724:0 |==> 1
1804:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1724:0 |==> -1
1805:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) != periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1806:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) && periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1807:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) == periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1808:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> false
1809:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0)
1810:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1811:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> true
1812:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1726:parsedForm == null |==> parsedForm != null
1813:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1726:parsedForm == null |==> false
1814:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1726:parsedForm == null |==> true
1815:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1726:0 |==> 1
1816:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1726:0 |==> -1
1817:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1726:position += (parsedForm == null ? 0 : parsedForm.length()) |==> <NO-OP>
1818:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1727:true |==> false
1819:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1727:found = true |==> <NO-OP>
1820:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1733:oldPos = position |==> <NO-OP>
1821:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1734:position = iAfterParser.parseInto(period, periodStr, position, locale) |==> <NO-OP>
1822:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:0 |==> 1
1823:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:0 |==> -1
1824:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position < 0 |==> position != 0
1825:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position < 0 |==> position <= 0
1826:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position < 0 |==> position == 0
1827:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position < 0 |==> position > 0
1828:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position < 0 |==> position >= 0
1829:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position < 0 |==> false
1830:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position < 0 |==> true
1831:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:position == oldPos |==> position != oldPos
1832:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:position == oldPos |==> position < oldPos
1833:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:position == oldPos |==> position <= oldPos
1834:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:position == oldPos |==> position > oldPos
1835:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:position == oldPos |==> position >= oldPos
1836:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:position == oldPos |==> false
1837:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:position == oldPos |==> true
1838:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:found && position == oldPos |==> found != (position == oldPos)
1839:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:found && position == oldPos |==> found == (position == oldPos)
1840:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:found && position == oldPos |==> false
1841:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:found && position == oldPos |==> found
1842:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:found && position == oldPos |==> position == oldPos
1843:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:found && position == oldPos |==> true
1844:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1740:found && position == oldPos |==> found || position == oldPos
1845:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:~oldPos |==> +oldPos
1846:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1742:~oldPos |==> -oldPos
1847:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos |==> position != oldPos
1848:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos |==> position < oldPos
1849:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos |==> position <= oldPos
1850:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos |==> position == oldPos
1851:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos |==> position >= oldPos
1852:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos |==> false
1853:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos |==> true
1854:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found |==> position > oldPos != !found
1855:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found |==> position > oldPos == !found
1856:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found |==> false
1857:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found |==> position > oldPos
1858:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found |==> !found
1859:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found |==> true
1860:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found |==> position > oldPos || !found
1861:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found && !iUseBefore |==> (position > oldPos && !found) != !iUseBefore
1862:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found && !iUseBefore |==> (position > oldPos && !found) == !iUseBefore
1863:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found && !iUseBefore |==> false
1864:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found && !iUseBefore |==> position > oldPos && !found
1865:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found && !iUseBefore |==> !iUseBefore
1866:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found && !iUseBefore |==> true
1867:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1745:position > oldPos && !found && !iUseBefore |==> position > oldPos && !found || !iUseBefore
1868:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:~oldPos |==> +oldPos
1869:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1747:~oldPos |==> -oldPos
1870:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):1754:iAfterPrinter = afterPrinter |==> <NO-OP>
1871:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):1755:iAfterParser = afterParser |==> <NO-OP>
1872:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1774:decompose(elementPairs, printerList, parserList) |==> <NO-OP>
1873:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:0 |==> 1
1874:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:0 |==> -1
1875:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:printerList.size() <= 0 |==> printerList.size() != 0
1876:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:printerList.size() <= 0 |==> printerList.size() < 0
1877:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:printerList.size() <= 0 |==> printerList.size() == 0
1878:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:printerList.size() <= 0 |==> printerList.size() > 0
1879:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:printerList.size() <= 0 |==> printerList.size() >= 0
1880:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:printerList.size() <= 0 |==> false
1881:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1776:printerList.size() <= 0 |==> true
1882:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:0 |==> 1
1883:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:0 |==> -1
1884:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:parserList.size() <= 0 |==> parserList.size() != 0
1885:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:parserList.size() <= 0 |==> parserList.size() < 0
1886:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:parserList.size() <= 0 |==> parserList.size() == 0
1887:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:parserList.size() <= 0 |==> parserList.size() > 0
1888:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:parserList.size() <= 0 |==> parserList.size() >= 0
1889:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:parserList.size() <= 0 |==> false
1890:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1783:parserList.size() <= 0 |==> true
1891:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1792:0 |==> 1
1892:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1792:0 |==> -1
1893:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt |==> sum != stopAt
1894:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt |==> sum <= stopAt
1895:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt |==> sum == stopAt
1896:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt |==> sum > stopAt
1897:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt |==> sum >= stopAt
1898:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt |==> false
1899:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt |==> true
1900:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:0 |==> 1
1901:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:0 |==> -1
1902:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:--i >= 0 |==> --i != 0
1903:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:--i >= 0 |==> --i < 0
1904:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:--i >= 0 |==> --i <= 0
1905:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:--i >= 0 |==> --i == 0
1906:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:--i >= 0 |==> --i > 0
1907:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:--i >= 0 |==> false
1908:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:--i >= 0 |==> true
1909:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt && --i >= 0 |==> sum < stopAt != --i >= 0
1910:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt && --i >= 0 |==> sum < stopAt == --i >= 0
1911:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt && --i >= 0 |==> false
1912:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt && --i >= 0 |==> sum < stopAt
1913:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt && --i >= 0 |==> --i >= 0
1914:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt && --i >= 0 |==> true
1915:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1794:sum < stopAt && --i >= 0 |==> sum < stopAt || --i >= 0
1916:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1795:sum += printers[i].countFieldsToPrint(period, Integer.MAX_VALUE, locale) |==> <NO-OP>
1917:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1801:0 |==> 1
1918:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1801:0 |==> -1
1919:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:0 |==> 1
1920:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:0 |==> -1
1921:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:--i >= 0 |==> --i != 0
1922:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:--i >= 0 |==> --i < 0
1923:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:--i >= 0 |==> --i <= 0
1924:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:--i >= 0 |==> --i == 0
1925:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:--i >= 0 |==> --i > 0
1926:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:--i >= 0 |==> false
1927:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1803:--i >= 0 |==> true
1928:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1804:sum += printers[i].calculatePrintedLength(period, locale) |==> <NO-OP>
1929:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:0 |==> 1
1930:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:0 |==> -1
1931:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:i < len |==> i != len
1932:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:i < len |==> i <= len
1933:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:i < len |==> i == len
1934:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:i < len |==> i > len
1935:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:i < len |==> i >= len
1936:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:i < len |==> false
1937:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1812:i < len |==> true
1938:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1813:printers[i].printTo(buf, period, locale) |==> <NO-OP>
1939:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:0 |==> 1
1940:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:0 |==> -1
1941:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:i < len |==> i != len
1942:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:i < len |==> i <= len
1943:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:i < len |==> i == len
1944:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:i < len |==> i > len
1945:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:i < len |==> i >= len
1946:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:i < len |==> false
1947:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1820:i < len |==> true
1948:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1821:printers[i].printTo(out, period, locale) |==> <NO-OP>
1949:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1829:parsers == null |==> parsers != null
1950:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1829:parsers == null |==> false
1951:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1829:parsers == null |==> true
1952:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:0 |==> 1
1953:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:0 |==> -1
1954:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len |==> i != len
1955:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len |==> i <= len
1956:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len |==> i == len
1957:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len |==> i > len
1958:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len |==> i >= len
1959:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len |==> false
1960:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len |==> true
1961:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:0 |==> 1
1962:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:0 |==> -1
1963:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:position >= 0 |==> position != 0
1964:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:position >= 0 |==> position < 0
1965:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:position >= 0 |==> position <= 0
1966:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:position >= 0 |==> position == 0
1967:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:position >= 0 |==> position > 0
1968:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:position >= 0 |==> false
1969:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:position >= 0 |==> true
1970:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len && position >= 0 |==> i < len != position >= 0
1971:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len && position >= 0 |==> i < len == position >= 0
1972:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len && position >= 0 |==> false
1973:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len && position >= 0 |==> i < len
1974:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len && position >= 0 |==> position >= 0
1975:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len && position >= 0 |==> true
1976:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1834:i < len && position >= 0 |==> i < len || position >= 0
1977:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1835:position = parsers[i].parseInto(period, periodStr, position, locale) |==> <NO-OP>
1978:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:0 |==> 1
1979:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:0 |==> -1
1980:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:i < size |==> i != size
1981:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:i < size |==> i <= size
1982:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:i < size |==> i == size
1983:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:i < size |==> i > size
1984:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:i < size |==> i >= size
1985:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:i < size |==> false
1986:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:i < size |==> true
1987:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:2 |==> 0
1988:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:2 |==> -2
1989:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1846:addArrayToList(printerList, ((Composite)element).iPrinters) |==> <NO-OP>
1990:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:printerList.add(element) |==> <NO-OP>
1991:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1852:1 |==> 0
1992:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1852:1 |==> -1
1993:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1852:i + 1 |==> i % 1
1994:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1852:i + 1 |==> i * 1
1995:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1852:i + 1 |==> i - 1
1996:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1852:i + 1 |==> i / 1
1997:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1852:element = elementPairs.get(i + 1) |==> <NO-OP>
1998:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1855:addArrayToList(parserList, ((Composite)element).iParsers) |==> <NO-OP>
1999:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1857:parserList.add(element) |==> <NO-OP>
2000:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1864:array != null |==> array == null
2001:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1864:array != null |==> false
2002:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1864:array != null |==> true
2003:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:0 |==> 1
2004:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:0 |==> -1
2005:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:i < array.length |==> i != array.length
2006:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:i < array.length |==> i <= array.length
2007:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:i < array.length |==> i == array.length
2008:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:i < array.length |==> i > array.length
2009:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:i < array.length |==> i >= array.length
2010:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:i < array.length |==> false
2011:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1865:i < array.length |==> true
2012:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1866:list.add(array[i]) |==> <NO-OP>