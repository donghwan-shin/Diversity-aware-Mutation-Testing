1:LVR:0:POS:org.joda.time.DateTimeZone:94:0 |==> 1
2:LVR:0:NEG:org.joda.time.DateTimeZone:94:0 |==> -1
3:LVR:0:POS:org.joda.time.DateTimeZone:94:0 |==> 1
4:LVR:0:NEG:org.joda.time.DateTimeZone:94:0 |==> -1
5:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:116:setProvider0(null) |==> <NO-OP>
6:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone:117:setNameProvider0(null) |==> <NO-OP>
7:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():135:zone == null |==> zone != null
8:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():135:zone == null |==> false
9:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():135:zone == null |==> true
10:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():137:zone = cDefault |==> <NO-OP>
11:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():138:zone == null |==> zone != null
12:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():138:zone == null |==> false
13:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():138:zone == null |==> true
14:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():143:id != null |==> id == null
15:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():143:id != null |==> false
16:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():143:id != null |==> true
17:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():144:temp = forID(id) |==> <NO-OP>
18:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():149:temp == null |==> temp != null
19:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():149:temp == null |==> false
20:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():149:temp == null |==> true
21:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():150:temp = forTimeZone(TimeZone.getDefault()) |==> <NO-OP>
22:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():155:temp == null |==> temp != null
23:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():155:temp == null |==> false
24:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefault():155:temp == null |==> true
25:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():156:temp = UTC |==> <NO-OP>
26:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefault():158:cDefault = zone = temp |==> <NO-OP>
27:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm != null |==> sm == null
28:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm != null |==> false
29:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):176:sm != null |==> true
30:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):177:sm.checkPermission(new JodaTimePermission("DateTimeZone.setDefault")) |==> <NO-OP>
31:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):179:zone == null |==> zone != null
32:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):179:zone == null |==> false
33:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):179:zone == null |==> true
34:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setDefault(org.joda.time.DateTimeZone):183:cDefault = zone |==> <NO-OP>
35:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):205:id == null |==> id != null
36:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):205:id == null |==> false
37:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):205:id == null |==> true
38:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forID(java.lang.String):208:id.equals("UTC") |==> false
39:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forID(java.lang.String):208:id.equals("UTC") |==> true
40:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):212:zone != null |==> zone == null
41:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):212:zone != null |==> false
42:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forID(java.lang.String):212:zone != null |==> true
43:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") != id.startsWith("-")
44:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") && id.startsWith("-")
45:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+") == id.startsWith("-")
46:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> false
47:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("+")
48:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> id.startsWith("-")
49:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forID(java.lang.String):215:id.startsWith("+") || id.startsWith("-") |==> true
50:LVR:0:POS:org.joda.time.DateTimeZone@forID(java.lang.String):217:0L |==> 1L
51:LVR:0:NEG:org.joda.time.DateTimeZone@forID(java.lang.String):217:0L |==> -1L
52:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset != 0L
53:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset < 0L
54:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset <= 0L
55:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset > 0L
56:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> offset >= 0L
57:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> false
58:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@forID(java.lang.String):217:offset == 0L |==> true
59:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forID(java.lang.String):220:id = printOffset(offset) |==> <NO-OP>
60:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHours(int):238:0 |==> 1
61:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHours(int):238:0 |==> -1
62:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:0 |==> 1
63:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:0 |==> -1
64:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 |==> hoursOffset != 0
65:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 |==> hoursOffset < 0
66:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 |==> hoursOffset <= 0
67:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 |==> hoursOffset > 0
68:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 |==> hoursOffset >= 0
69:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 |==> false
70:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 |==> true
71:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:0 |==> 1
72:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:0 |==> -1
73:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:minutesOffset == 0 |==> minutesOffset != 0
74:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:minutesOffset == 0 |==> minutesOffset < 0
75:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:minutesOffset == 0 |==> minutesOffset <= 0
76:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:minutesOffset == 0 |==> minutesOffset > 0
77:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:minutesOffset == 0 |==> minutesOffset >= 0
78:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:minutesOffset == 0 |==> false
79:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:minutesOffset == 0 |==> true
80:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 != (minutesOffset == 0)
81:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 == (minutesOffset == 0)
82:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 && minutesOffset == 0 |==> false
83:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0
84:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 && minutesOffset == 0 |==> minutesOffset == 0
85:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 && minutesOffset == 0 |==> true
86:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):255:hoursOffset == 0 && minutesOffset == 0 |==> hoursOffset == 0 || minutesOffset == 0
87:LVR:NEG:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:-23 |==> 0
88:LVR:NEG:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:-23 |==> 23
89:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 |==> hoursOffset != -23
90:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 |==> hoursOffset <= -23
91:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 |==> hoursOffset == -23
92:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 |==> hoursOffset > -23
93:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 |==> hoursOffset >= -23
94:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 |==> false
95:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 |==> true
96:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:23 |==> 0
97:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:23 |==> -23
98:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset > 23 |==> hoursOffset != 23
99:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset > 23 |==> hoursOffset < 23
100:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset > 23 |==> hoursOffset <= 23
101:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset > 23 |==> hoursOffset == 23
102:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset > 23 |==> hoursOffset >= 23
103:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset > 23 |==> false
104:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset > 23 |==> true
105:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23 != hoursOffset > 23
106:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23 && hoursOffset > 23
107:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23 == hoursOffset > 23
108:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 || hoursOffset > 23 |==> false
109:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset < -23
110:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 || hoursOffset > 23 |==> hoursOffset > 23
111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):258:hoursOffset < -23 || hoursOffset > 23 |==> true
112:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:0 |==> 1
113:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:0 |==> -1
114:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 |==> minutesOffset != 0
115:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 |==> minutesOffset <= 0
116:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 |==> minutesOffset == 0
117:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 |==> minutesOffset > 0
118:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 |==> minutesOffset >= 0
119:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 |==> false
120:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 |==> true
121:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:59 |==> 0
122:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:59 |==> -59
123:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset > 59 |==> minutesOffset != 59
124:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset > 59 |==> minutesOffset < 59
125:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset > 59 |==> minutesOffset <= 59
126:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset > 59 |==> minutesOffset == 59
127:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset > 59 |==> minutesOffset >= 59
128:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset > 59 |==> false
129:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset > 59 |==> true
130:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0 != minutesOffset > 59
131:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0 && minutesOffset > 59
132:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0 == minutesOffset > 59
133:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 || minutesOffset > 59 |==> false
134:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset < 0
135:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 || minutesOffset > 59 |==> minutesOffset > 59
136:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):261:minutesOffset < 0 || minutesOffset > 59 |==> true
137:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):264:0 |==> 1
138:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):264:0 |==> -1
139:LVR:POS:0:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):266:60 |==> 0
140:LVR:POS:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):266:60 |==> -60
141:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):266:hoursOffset * 60 |==> hoursOffset % 60
142:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):266:hoursOffset * 60 |==> hoursOffset + 60
143:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):266:hoursOffset * 60 |==> hoursOffset - 60
144:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):266:hoursOffset * 60 |==> hoursOffset / 60
145:LVR:0:POS:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:0 |==> 1
146:LVR:0:NEG:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:0 |==> -1
147:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:hoursInMinutes < 0 |==> hoursInMinutes != 0
148:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:hoursInMinutes < 0 |==> hoursInMinutes <= 0
149:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:hoursInMinutes < 0 |==> hoursInMinutes == 0
150:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:hoursInMinutes < 0 |==> hoursInMinutes > 0
151:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:hoursInMinutes < 0 |==> hoursInMinutes >= 0
152:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:hoursInMinutes < 0 |==> false
153:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):267:hoursInMinutes < 0 |==> true
154:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):268:hoursInMinutes - minutesOffset |==> hoursInMinutes % minutesOffset
155:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):268:hoursInMinutes - minutesOffset |==> hoursInMinutes * minutesOffset
156:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):268:hoursInMinutes - minutesOffset |==> hoursInMinutes + minutesOffset
157:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):268:hoursInMinutes - minutesOffset |==> hoursInMinutes / minutesOffset
158:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):268:minutesOffset = hoursInMinutes - minutesOffset |==> <NO-OP>
159:AOR:+(int,int):%(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):270:hoursInMinutes + minutesOffset |==> hoursInMinutes % minutesOffset
160:AOR:+(int,int):*(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):270:hoursInMinutes + minutesOffset |==> hoursInMinutes * minutesOffset
161:AOR:+(int,int):-(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):270:hoursInMinutes + minutesOffset |==> hoursInMinutes - minutesOffset
162:AOR:+(int,int):/(int,int):org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):270:hoursInMinutes + minutesOffset |==> hoursInMinutes / minutesOffset
163:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):270:minutesOffset = hoursInMinutes + minutesOffset |==> <NO-OP>
164:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forOffsetHoursMinutes(int,int):272:offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE) |==> <NO-OP>
165:ORU:-(int):+(int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:-MAX_MILLIS |==> +MAX_MILLIS
166:ORU:-(int):~(int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:-MAX_MILLIS |==> ~MAX_MILLIS
167:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS |==> millisOffset != -MAX_MILLIS
168:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS |==> millisOffset <= -MAX_MILLIS
169:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS |==> millisOffset == -MAX_MILLIS
170:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS |==> millisOffset > -MAX_MILLIS
171:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS |==> millisOffset >= -MAX_MILLIS
172:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS |==> false
173:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS |==> true
174:ROR:>(int,int):!=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset > MAX_MILLIS |==> millisOffset != MAX_MILLIS
175:ROR:>(int,int):<(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset > MAX_MILLIS |==> millisOffset < MAX_MILLIS
176:ROR:>(int,int):<=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset > MAX_MILLIS |==> millisOffset <= MAX_MILLIS
177:ROR:>(int,int):==(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset > MAX_MILLIS |==> millisOffset == MAX_MILLIS
178:ROR:>(int,int):>=(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset > MAX_MILLIS |==> millisOffset >= MAX_MILLIS
179:ROR:>(int,int):FALSE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset > MAX_MILLIS |==> false
180:ROR:>(int,int):TRUE(int,int):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset > MAX_MILLIS |==> true
181:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS != millisOffset > MAX_MILLIS
182:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS && millisOffset > MAX_MILLIS
183:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS == millisOffset > MAX_MILLIS
184:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> false
185:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset < -MAX_MILLIS
186:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> millisOffset > MAX_MILLIS
187:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forOffsetMillis(int):286:millisOffset < -MAX_MILLIS || millisOffset > MAX_MILLIS |==> true
188:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):309:zone == null |==> zone != null
189:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):309:zone == null |==> false
190:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):309:zone == null |==> true
191:COR:id.equals("UTC"):TRUE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):313:id.equals("UTC") |==> false
192:COR:id.equals("UTC"):FALSE:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):313:id.equals("UTC") |==> true
193:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):320:convId != null |==> convId == null
194:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):320:convId != null |==> false
195:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):320:convId != null |==> true
196:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):321:dtz = cProvider.getZone(convId) |==> <NO-OP>
197:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):323:dtz == null |==> dtz != null
198:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):323:dtz == null |==> false
199:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):323:dtz == null |==> true
200:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):324:dtz = cProvider.getZone(id) |==> <NO-OP>
201:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:dtz != null |==> dtz == null
202:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:dtz != null |==> false
203:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):326:dtz != null |==> true
204:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):331:convId == null |==> convId != null
205:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):331:convId == null |==> false
206:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):331:convId == null |==> true
207:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):332:convId = zone.getID() |==> <NO-OP>
208:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):333:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") != convId.startsWith("GMT-")
209:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):333:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") && convId.startsWith("GMT-")
210:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):333:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+") == convId.startsWith("GMT-")
211:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):333:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> false
212:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):333:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT+")
213:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):333:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> convId.startsWith("GMT-")
214:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):333:convId.startsWith("GMT+") || convId.startsWith("GMT-") |==> true
215:LVR:POS:0:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):334:3 |==> 0
216:LVR:POS:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):334:3 |==> -3
217:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):334:convId = convId.substring(3) |==> <NO-OP>
218:LVR:0:POS:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:0L |==> 1L
219:LVR:0:NEG:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:0L |==> -1L
220:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:offset == 0L |==> offset != 0L
221:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:offset == 0L |==> offset < 0L
222:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:offset == 0L |==> offset <= 0L
223:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:offset == 0L |==> offset > 0L
224:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:offset == 0L |==> offset >= 0L
225:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:offset == 0L |==> false
226:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):336:offset == 0L |==> true
227:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@forTimeZone(java.util.TimeZone):339:convId = printOffset(offset) |==> <NO-OP>
228:LVR:0:POS:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:0 |==> 1
229:LVR:0:NEG:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:0 |==> -1
230:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:offset == 0 |==> offset != 0
231:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:offset == 0 |==> offset < 0
232:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:offset == 0 |==> offset <= 0
233:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:offset == 0 |==> offset > 0
234:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:offset == 0 |==> offset >= 0
235:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:offset == 0 |==> false
236:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):356:offset == 0 |==> true
237:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):359:iFixedOffsetCache == null |==> iFixedOffsetCache != null
238:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):359:iFixedOffsetCache == null |==> false
239:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):359:iFixedOffsetCache == null |==> true
240:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):360:iFixedOffsetCache = new HashMap<String, SoftReference<DateTimeZone>>() |==> <NO-OP>
241:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):364:ref != null |==> ref == null
242:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):364:ref != null |==> false
243:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):364:ref != null |==> true
244:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):366:zone != null |==> zone == null
245:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):366:zone != null |==> false
246:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):366:zone != null |==> true
247:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@fixedOffsetZone(java.lang.String,int):371:iFixedOffsetCache.put(id, new SoftReference<DateTimeZone>(zone)) |==> <NO-OP>
248:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):409:sm != null |==> sm == null
249:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):409:sm != null |==> false
250:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):409:sm != null |==> true
251:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):410:sm.checkPermission(new JodaTimePermission("DateTimeZone.setProvider")) |==> <NO-OP>
252:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setProvider(org.joda.time.tz.Provider):412:setProvider0(provider) |==> <NO-OP>
253:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):422:provider == null |==> provider != null
254:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):422:provider == null |==> false
255:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):422:provider == null |==> true
256:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):423:provider = getDefaultProvider() |==> <NO-OP>
257:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null |==> ids != null
258:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null |==> false
259:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null |==> true
260:LVR:0:POS:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:0 |==> 1
261:LVR:0:NEG:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:0 |==> -1
262:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids.size() == 0 |==> ids.size() != 0
263:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids.size() == 0 |==> ids.size() < 0
264:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids.size() == 0 |==> ids.size() <= 0
265:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids.size() == 0 |==> ids.size() > 0
266:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids.size() == 0 |==> ids.size() >= 0
267:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids.size() == 0 |==> false
268:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids.size() == 0 |==> true
269:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null || ids.size() == 0 |==> ids == null != (ids.size() == 0)
270:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null || ids.size() == 0 |==> ids == null && ids.size() == 0
271:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null || ids.size() == 0 |==> ids == null == (ids.size() == 0)
272:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null || ids.size() == 0 |==> false
273:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null || ids.size() == 0 |==> ids == null
274:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null || ids.size() == 0 |==> ids.size() == 0
275:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):426:ids == null || ids.size() == 0 |==> true
276:COR:ids.contains("UTC"):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):430:ids.contains("UTC") |==> false
277:COR:ids.contains("UTC"):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):430:ids.contains("UTC") |==> true
278:COR:UTC.equals(provider.getZone("UTC")):TRUE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):433:UTC.equals(provider.getZone("UTC")) |==> false
279:COR:UTC.equals(provider.getZone("UTC")):FALSE:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):433:UTC.equals(provider.getZone("UTC")) |==> true
280:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):436:cProvider = provider |==> <NO-OP>
281:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setProvider0(org.joda.time.tz.Provider):437:cAvailableIDs = ids |==> <NO-OP>
282:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():455:providerClass != null |==> providerClass == null
283:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():455:providerClass != null |==> false
284:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():455:providerClass != null |==> true
285:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():457:provider = (Provider)Class.forName(providerClass).newInstance() |==> <NO-OP>
286:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():460:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
287:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():467:provider == null |==> provider != null
288:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():467:provider == null |==> false
289:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():467:provider == null |==> true
290:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():469:provider = new ZoneInfoProvider("org/joda/time/tz/data") |==> <NO-OP>
291:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():472:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
292:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():476:provider == null |==> provider != null
293:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():476:provider == null |==> false
294:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultProvider():476:provider == null |==> true
295:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultProvider():477:provider = new UTCProvider() |==> <NO-OP>
296:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):508:sm != null |==> sm == null
297:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):508:sm != null |==> false
298:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):508:sm != null |==> true
299:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):509:sm.checkPermission(new JodaTimePermission("DateTimeZone.setNameProvider")) |==> <NO-OP>
300:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider(org.joda.time.tz.NameProvider):511:setNameProvider0(nameProvider) |==> <NO-OP>
301:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):521:nameProvider == null |==> nameProvider != null
302:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):521:nameProvider == null |==> false
303:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):521:nameProvider == null |==> true
304:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):522:nameProvider = getDefaultNameProvider() |==> <NO-OP>
305:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@setNameProvider0(org.joda.time.tz.NameProvider):524:cNameProvider = nameProvider |==> <NO-OP>
306:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():539:providerClass != null |==> providerClass == null
307:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():539:providerClass != null |==> false
308:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():539:providerClass != null |==> true
309:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():541:nameProvider = (NameProvider)Class.forName(providerClass).newInstance() |==> <NO-OP>
310:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():544:thread.getThreadGroup().uncaughtException(thread, ex) |==> <NO-OP>
311:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():551:nameProvider == null |==> nameProvider != null
312:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():551:nameProvider == null |==> false
313:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getDefaultNameProvider():551:nameProvider == null |==> true
314:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getDefaultNameProvider():552:nameProvider = new DefaultNameProvider() |==> <NO-OP>
315:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):567:map == null |==> map != null
316:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):567:map == null |==> false
317:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getConvertedId(java.lang.String):567:map == null |==> true
318:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):569:map = new HashMap<String, String>() |==> <NO-OP>
319:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):570:map.put("GMT", "UTC") |==> <NO-OP>
320:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):571:map.put("WET", "WET") |==> <NO-OP>
321:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):572:map.put("CET", "CET") |==> <NO-OP>
322:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):573:map.put("MET", "CET") |==> <NO-OP>
323:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):574:map.put("ECT", "CET") |==> <NO-OP>
324:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):575:map.put("EET", "EET") |==> <NO-OP>
325:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):576:map.put("MIT", "Pacific/Apia") |==> <NO-OP>
326:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):577:map.put("HST", "Pacific/Honolulu") |==> <NO-OP>
327:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):578:map.put("AST", "America/Anchorage") |==> <NO-OP>
328:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):579:map.put("PST", "America/Los_Angeles") |==> <NO-OP>
329:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):580:map.put("MST", "America/Denver") |==> <NO-OP>
330:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):581:map.put("PNT", "America/Phoenix") |==> <NO-OP>
331:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):582:map.put("CST", "America/Chicago") |==> <NO-OP>
332:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):583:map.put("EST", "America/New_York") |==> <NO-OP>
333:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):584:map.put("IET", "America/Indiana/Indianapolis") |==> <NO-OP>
334:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):585:map.put("PRT", "America/Puerto_Rico") |==> <NO-OP>
335:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):586:map.put("CNT", "America/St_Johns") |==> <NO-OP>
336:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):587:map.put("AGT", "America/Argentina/Buenos_Aires") |==> <NO-OP>
337:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):588:map.put("BET", "America/Sao_Paulo") |==> <NO-OP>
338:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):589:map.put("ART", "Africa/Cairo") |==> <NO-OP>
339:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):590:map.put("CAT", "Africa/Harare") |==> <NO-OP>
340:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):591:map.put("EAT", "Africa/Addis_Ababa") |==> <NO-OP>
341:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):592:map.put("NET", "Asia/Yerevan") |==> <NO-OP>
342:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):593:map.put("PLT", "Asia/Karachi") |==> <NO-OP>
343:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):594:map.put("IST", "Asia/Kolkata") |==> <NO-OP>
344:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):595:map.put("BST", "Asia/Dhaka") |==> <NO-OP>
345:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):596:map.put("VST", "Asia/Ho_Chi_Minh") |==> <NO-OP>
346:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):597:map.put("CTT", "Asia/Shanghai") |==> <NO-OP>
347:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):598:map.put("JST", "Asia/Tokyo") |==> <NO-OP>
348:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):599:map.put("ACT", "Australia/Darwin") |==> <NO-OP>
349:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):600:map.put("AET", "Australia/Sydney") |==> <NO-OP>
350:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):601:map.put("SST", "Pacific/Guadalcanal") |==> <NO-OP>
351:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):602:map.put("NST", "Pacific/Auckland") |==> <NO-OP>
352:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getConvertedId(java.lang.String):603:cZoneIdConversion = map |==> <NO-OP>
353:ORU:-(int):+(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):625:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> +(int)offsetFormatter().withChronology(chrono).parseMillis(str)
354:ORU:-(int):~(int):org.joda.time.DateTimeZone@parseOffset(java.lang.String):625:-(int)offsetFormatter().withChronology(chrono).parseMillis(str) |==> ~(int)offsetFormatter().withChronology(chrono).parseMillis(str)
355:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):639:0 |==> 1
356:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):639:0 |==> -1
357:ROR:>=(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):639:offset >= 0 |==> offset != 0
358:ROR:>=(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):639:offset >= 0 |==> offset < 0
359:ROR:>=(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):639:offset >= 0 |==> offset <= 0
360:ROR:>=(int,int):==(int,int):org.joda.time.DateTimeZone@printOffset(int):639:offset >= 0 |==> offset == 0
361:ROR:>=(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):639:offset >= 0 |==> offset > 0
362:ROR:>=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):639:offset >= 0 |==> false
363:ROR:>=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):639:offset >= 0 |==> true
364:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):640:buf.append('+') |==> <NO-OP>
365:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):642:buf.append('-') |==> <NO-OP>
366:ORU:-(int):+(int):org.joda.time.DateTimeZone@printOffset(int):643:-offset |==> +offset
367:ORU:-(int):~(int):org.joda.time.DateTimeZone@printOffset(int):643:-offset |==> ~offset
368:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):643:offset = -offset |==> <NO-OP>
369:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset % DateTimeConstants.MILLIS_PER_HOUR
370:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset * DateTimeConstants.MILLIS_PER_HOUR
371:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset + DateTimeConstants.MILLIS_PER_HOUR
372:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):646:offset / DateTimeConstants.MILLIS_PER_HOUR |==> offset - DateTimeConstants.MILLIS_PER_HOUR
373:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):647:2 |==> 0
374:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):647:2 |==> -2
375:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):647:FormatUtils.appendPaddedInteger(buf, hours, 2) |==> <NO-OP>
376:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):648:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours % (int)DateTimeConstants.MILLIS_PER_HOUR
377:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):648:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours + (int)DateTimeConstants.MILLIS_PER_HOUR
378:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):648:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours - (int)DateTimeConstants.MILLIS_PER_HOUR
379:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):648:hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> hours / (int)DateTimeConstants.MILLIS_PER_HOUR
380:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):648:offset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR |==> <NO-OP>
381:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset % DateTimeConstants.MILLIS_PER_MINUTE
382:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset * DateTimeConstants.MILLIS_PER_MINUTE
383:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset + DateTimeConstants.MILLIS_PER_MINUTE
384:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):650:offset / DateTimeConstants.MILLIS_PER_MINUTE |==> offset - DateTimeConstants.MILLIS_PER_MINUTE
385:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):651:buf.append(':') |==> <NO-OP>
386:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):652:2 |==> 0
387:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):652:2 |==> -2
388:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):652:FormatUtils.appendPaddedInteger(buf, minutes, 2) |==> <NO-OP>
389:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):653:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes % DateTimeConstants.MILLIS_PER_MINUTE
390:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):653:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes + DateTimeConstants.MILLIS_PER_MINUTE
391:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):653:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes - DateTimeConstants.MILLIS_PER_MINUTE
392:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):653:minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> minutes / DateTimeConstants.MILLIS_PER_MINUTE
393:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):653:offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE |==> <NO-OP>
394:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):654:0 |==> 1
395:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):654:0 |==> -1
396:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset != 0
397:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset < 0
398:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset <= 0
399:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset > 0
400:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> offset >= 0
401:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> false
402:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):654:offset == 0 |==> true
403:AOR:/(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):658:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset % DateTimeConstants.MILLIS_PER_SECOND
404:AOR:/(int,int):*(int,int):org.joda.time.DateTimeZone@printOffset(int):658:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset * DateTimeConstants.MILLIS_PER_SECOND
405:AOR:/(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):658:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset + DateTimeConstants.MILLIS_PER_SECOND
406:AOR:/(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):658:offset / DateTimeConstants.MILLIS_PER_SECOND |==> offset - DateTimeConstants.MILLIS_PER_SECOND
407:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):659:buf.append(':') |==> <NO-OP>
408:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):660:2 |==> 0
409:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):660:2 |==> -2
410:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):660:FormatUtils.appendPaddedInteger(buf, seconds, 2) |==> <NO-OP>
411:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@printOffset(int):661:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds % DateTimeConstants.MILLIS_PER_SECOND
412:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@printOffset(int):661:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds + DateTimeConstants.MILLIS_PER_SECOND
413:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@printOffset(int):661:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds - DateTimeConstants.MILLIS_PER_SECOND
414:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@printOffset(int):661:seconds * DateTimeConstants.MILLIS_PER_SECOND |==> seconds / DateTimeConstants.MILLIS_PER_SECOND
415:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):661:offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
416:LVR:0:POS:org.joda.time.DateTimeZone@printOffset(int):662:0 |==> 1
417:LVR:0:NEG:org.joda.time.DateTimeZone@printOffset(int):662:0 |==> -1
418:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@printOffset(int):662:offset == 0 |==> offset != 0
419:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@printOffset(int):662:offset == 0 |==> offset < 0
420:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@printOffset(int):662:offset == 0 |==> offset <= 0
421:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@printOffset(int):662:offset == 0 |==> offset > 0
422:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@printOffset(int):662:offset == 0 |==> offset >= 0
423:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@printOffset(int):662:offset == 0 |==> false
424:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@printOffset(int):662:offset == 0 |==> true
425:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):666:buf.append('.') |==> <NO-OP>
426:LVR:POS:0:org.joda.time.DateTimeZone@printOffset(int):667:3 |==> 0
427:LVR:POS:NEG:org.joda.time.DateTimeZone@printOffset(int):667:3 |==> -3
428:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@printOffset(int):667:FormatUtils.appendPaddedInteger(buf, offset, 3) |==> <NO-OP>
429:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():677:cOffsetFormatter == null |==> cOffsetFormatter != null
430:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():677:cOffsetFormatter == null |==> false
431:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@offsetFormatter():677:cOffsetFormatter == null |==> true
432:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@offsetFormatter():679:true |==> false
433:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():679:2 |==> 0
434:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():679:2 |==> -2
435:LVR:POS:0:org.joda.time.DateTimeZone@offsetFormatter():679:4 |==> 0
436:LVR:POS:NEG:org.joda.time.DateTimeZone@offsetFormatter():679:4 |==> -4
437:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@offsetFormatter():678:cOffsetFormatter = new DateTimeFormatterBuilder().appendTimeZoneOffset(null, true, 2, 4).toFormatter() |==> <NO-OP>
438:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):697:id == null |==> id != null
439:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):697:id == null |==> false
440:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@<init>(java.lang.String):697:id == null |==> true
441:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):751:locale == null |==> locale != null
442:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):751:locale == null |==> false
443:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):751:locale == null |==> true
444:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):752:locale = Locale.getDefault() |==> <NO-OP>
445:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):755:nameKey == null |==> nameKey != null
446:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):755:nameKey == null |==> false
447:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):755:nameKey == null |==> true
448:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):759:name != null |==> name == null
449:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):759:name != null |==> false
450:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getShortName(long,java.util.Locale):759:name != null |==> true
451:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):791:locale == null |==> locale != null
452:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):791:locale == null |==> false
453:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):791:locale == null |==> true
454:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getName(long,java.util.Locale):792:locale = Locale.getDefault() |==> <NO-OP>
455:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):795:nameKey == null |==> nameKey != null
456:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):795:nameKey == null |==> false
457:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):795:nameKey == null |==> true
458:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):799:name != null |==> name == null
459:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):799:name != null |==> false
460:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getName(long,java.util.Locale):799:name != null |==> true
461:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):820:instant == null |==> instant != null
462:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):820:instant == null |==> false
463:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getOffset(org.joda.time.ReadableInstant):820:instant == null |==> true
464:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):851:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) != getStandardOffset(instant)
465:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):851:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) < getStandardOffset(instant)
466:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):851:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) <= getStandardOffset(instant)
467:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):851:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) > getStandardOffset(instant)
468:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):851:getOffset(instant) == getStandardOffset(instant) |==> getOffset(instant) >= getStandardOffset(instant)
469:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):851:getOffset(instant) == getStandardOffset(instant) |==> false
470:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@isStandardOffset(long):851:getOffset(instant) == getStandardOffset(instant) |==> true
471:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):891:instantLocal - offsetLocal |==> instantLocal % offsetLocal
472:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):891:instantLocal - offsetLocal |==> instantLocal * offsetLocal
473:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):891:instantLocal - offsetLocal |==> instantLocal + offsetLocal
474:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):891:instantLocal - offsetLocal |==> instantLocal / offsetLocal
475:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:offsetLocal != offsetAdjusted |==> offsetLocal < offsetAdjusted
476:ROR:!=(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:offsetLocal != offsetAdjusted |==> offsetLocal <= offsetAdjusted
477:ROR:!=(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:offsetLocal != offsetAdjusted |==> offsetLocal == offsetAdjusted
478:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:offsetLocal != offsetAdjusted |==> offsetLocal > offsetAdjusted
479:ROR:!=(int,int):>=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:offsetLocal != offsetAdjusted |==> offsetLocal >= offsetAdjusted
480:ROR:!=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:offsetLocal != offsetAdjusted |==> false
481:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):894:offsetLocal != offsetAdjusted |==> true
482:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:offsetLocal - offsetAdjusted |==> offsetLocal % offsetAdjusted
483:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:offsetLocal - offsetAdjusted |==> offsetLocal * offsetAdjusted
484:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:offsetLocal - offsetAdjusted |==> offsetLocal + offsetAdjusted
485:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:offsetLocal - offsetAdjusted |==> offsetLocal / offsetAdjusted
486:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:0 |==> 1
487:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:0 |==> -1
488:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) != 0
489:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) <= 0
490:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) == 0
491:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) > 0
492:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:(offsetLocal - offsetAdjusted) < 0 |==> (offsetLocal - offsetAdjusted) >= 0
493:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:(offsetLocal - offsetAdjusted) < 0 |==> false
494:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):897:(offsetLocal - offsetAdjusted) < 0 |==> true
495:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):902:instantLocal - offsetAdjusted |==> instantLocal % offsetAdjusted
496:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):902:instantLocal - offsetAdjusted |==> instantLocal * offsetAdjusted
497:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):902:instantLocal - offsetAdjusted |==> instantLocal + offsetAdjusted
498:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):902:instantLocal - offsetAdjusted |==> instantLocal / offsetAdjusted
499:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
500:ROR:!=(long,long):<=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:nextLocal != nextAdjusted |==> nextLocal <= nextAdjusted
501:ROR:!=(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:nextLocal != nextAdjusted |==> nextLocal == nextAdjusted
502:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
503:ROR:!=(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:nextLocal != nextAdjusted |==> nextLocal >= nextAdjusted
504:ROR:!=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:nextLocal != nextAdjusted |==> false
505:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):903:nextLocal != nextAdjusted |==> true
506:LVR:0:POS:org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:0 |==> 1
507:LVR:0:NEG:org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:0 |==> -1
508:ROR:>=(int,int):!=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:offsetLocal >= 0 |==> offsetLocal != 0
509:ROR:>=(int,int):<(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:offsetLocal >= 0 |==> offsetLocal < 0
510:ROR:>=(int,int):<=(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:offsetLocal >= 0 |==> offsetLocal <= 0
511:ROR:>=(int,int):==(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:offsetLocal >= 0 |==> offsetLocal == 0
512:ROR:>=(int,int):>(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:offsetLocal >= 0 |==> offsetLocal > 0
513:ROR:>=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:offsetLocal >= 0 |==> false
514:ROR:>=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):907:offsetLocal >= 0 |==> true
515:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:prev < instantAdjusted |==> prev != instantAdjusted
516:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:prev < instantAdjusted |==> prev <= instantAdjusted
517:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:prev < instantAdjusted |==> prev == instantAdjusted
518:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:prev < instantAdjusted |==> prev > instantAdjusted
519:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:prev < instantAdjusted |==> prev >= instantAdjusted
520:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:prev < instantAdjusted |==> false
521:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):909:prev < instantAdjusted |==> true
522:AOR:-(int,int):%(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):911:offsetPrev - offsetLocal |==> offsetPrev % offsetLocal
523:AOR:-(int,int):*(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):911:offsetPrev - offsetLocal |==> offsetPrev * offsetLocal
524:AOR:-(int,int):+(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):911:offsetPrev - offsetLocal |==> offsetPrev + offsetLocal
525:AOR:-(int,int):/(int,int):org.joda.time.DateTimeZone@getOffsetFromLocal(long):911:offsetPrev - offsetLocal |==> offsetPrev / offsetLocal
526:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev |==> instantAdjusted % prev
527:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev |==> instantAdjusted * prev
528:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev |==> instantAdjusted + prev
529:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev |==> instantAdjusted / prev
530:ROR:<=(long,long):!=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev <= diff |==> instantAdjusted - prev != diff
531:ROR:<=(long,long):<(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev <= diff |==> instantAdjusted - prev < diff
532:ROR:<=(long,long):==(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev <= diff |==> instantAdjusted - prev == diff
533:ROR:<=(long,long):>(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev <= diff |==> instantAdjusted - prev > diff
534:ROR:<=(long,long):>=(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev <= diff |==> instantAdjusted - prev >= diff
535:ROR:<=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev <= diff |==> false
536:ROR:<=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@getOffsetFromLocal(long):912:instantAdjusted - prev <= diff |==> true
537:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):932:instantUTC + offset |==> instantUTC % offset
538:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):932:instantUTC + offset |==> instantUTC * offset
539:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):932:instantUTC + offset |==> instantUTC - offset
540:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):932:instantUTC + offset |==> instantUTC / offset
541:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:instantUTC ^ instantLocal |==> instantUTC & instantLocal
542:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:instantUTC ^ instantLocal |==> instantUTC | instantLocal
543:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):934:0 |==> 1
544:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):934:0 |==> -1
545:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) != 0
546:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) <= 0
547:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) == 0
548:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) > 0
549:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 |==> (instantUTC ^ instantLocal) >= 0
550:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 |==> false
551:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 |==> true
552:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:instantUTC ^ offset |==> instantUTC & offset
553:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:instantUTC ^ offset |==> instantUTC | offset
554:LVR:0:POS:org.joda.time.DateTimeZone@convertUTCToLocal(long):934:0 |==> 1
555:LVR:0:NEG:org.joda.time.DateTimeZone@convertUTCToLocal(long):934:0 |==> -1
556:ROR:>=(long,long):!=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) != 0
557:ROR:>=(long,long):<(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) < 0
558:ROR:>=(long,long):<=(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) <= 0
559:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) == 0
560:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) > 0
561:ROR:>=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ offset) >= 0 |==> false
562:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ offset) >= 0 |==> true
563:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 != (instantUTC ^ offset) >= 0
564:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 == (instantUTC ^ offset) >= 0
565:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> false
566:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0
567:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ offset) >= 0
568:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> true
569:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@convertUTCToLocal(long):934:(instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0 |==> (instantUTC ^ instantLocal) < 0 || (instantUTC ^ offset) >= 0
570:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):959:instantLocal - offsetOriginal |==> instantLocal % offsetOriginal
571:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):959:instantLocal - offsetOriginal |==> instantLocal * offsetOriginal
572:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):959:instantLocal - offsetOriginal |==> instantLocal + offsetOriginal
573:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):959:instantLocal - offsetOriginal |==> instantLocal / offsetOriginal
574:ROR:==(int,int):!=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):961:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal != offsetOriginal
575:ROR:==(int,int):<(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):961:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal < offsetOriginal
576:ROR:==(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):961:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal <= offsetOriginal
577:ROR:==(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):961:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal > offsetOriginal
578:ROR:==(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):961:offsetLocalFromOriginal == offsetOriginal |==> offsetLocalFromOriginal >= offsetOriginal
579:ROR:==(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):961:offsetLocalFromOriginal == offsetOriginal |==> false
580:ROR:==(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean,long):961:offsetLocalFromOriginal == offsetOriginal |==> true
581:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal % offsetLocal
582:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal * offsetLocal
583:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal + offsetLocal
584:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):983:instantLocal - offsetLocal |==> instantLocal / offsetLocal
585:ROR:!=(int,int):<(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:offsetLocal != offset |==> offsetLocal < offset
586:ROR:!=(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:offsetLocal != offset |==> offsetLocal <= offset
587:ROR:!=(int,int):==(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:offsetLocal != offset |==> offsetLocal == offset
588:ROR:!=(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:offsetLocal != offset |==> offsetLocal > offset
589:ROR:!=(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:offsetLocal != offset |==> offsetLocal >= offset
590:ROR:!=(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:offsetLocal != offset |==> false
591:ROR:!=(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):985:offsetLocal != offset |==> true
592:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:0 |==> 1
593:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:0 |==> -1
594:ROR:<(int,int):!=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:offsetLocal < 0 |==> offsetLocal != 0
595:ROR:<(int,int):<=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:offsetLocal < 0 |==> offsetLocal <= 0
596:ROR:<(int,int):==(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:offsetLocal < 0 |==> offsetLocal == 0
597:ROR:<(int,int):>(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:offsetLocal < 0 |==> offsetLocal > 0
598:ROR:<(int,int):>=(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:offsetLocal < 0 |==> offsetLocal >= 0
599:ROR:<(int,int):FALSE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:offsetLocal < 0 |==> false
600:ROR:<(int,int):TRUE(int,int):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:offsetLocal < 0 |==> true
601:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:strict || offsetLocal < 0 |==> strict != offsetLocal < 0
602:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:strict || offsetLocal < 0 |==> strict && offsetLocal < 0
603:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:strict || offsetLocal < 0 |==> strict == offsetLocal < 0
604:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:strict || offsetLocal < 0 |==> false
605:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:strict || offsetLocal < 0 |==> strict
606:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:strict || offsetLocal < 0 |==> offsetLocal < 0
607:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):989:strict || offsetLocal < 0 |==> true
608:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:instantLocal - offsetLocal |==> instantLocal % offsetLocal
609:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:instantLocal - offsetLocal |==> instantLocal * offsetLocal
610:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:instantLocal - offsetLocal |==> instantLocal + offsetLocal
611:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):991:instantLocal - offsetLocal |==> instantLocal / offsetLocal
612:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:instantLocal - offsetLocal |==> instantLocal % offsetLocal
613:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:instantLocal - offsetLocal |==> instantLocal * offsetLocal
614:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:instantLocal - offsetLocal |==> instantLocal + offsetLocal
615:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:instantLocal - offsetLocal |==> instantLocal / offsetLocal
616:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:nextLocal == (instantLocal - offsetLocal) |==> nextLocal != (instantLocal - offsetLocal)
617:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:nextLocal == (instantLocal - offsetLocal) |==> nextLocal < (instantLocal - offsetLocal)
618:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:nextLocal == (instantLocal - offsetLocal) |==> nextLocal <= (instantLocal - offsetLocal)
619:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:nextLocal == (instantLocal - offsetLocal) |==> nextLocal > (instantLocal - offsetLocal)
620:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:nextLocal == (instantLocal - offsetLocal) |==> nextLocal >= (instantLocal - offsetLocal)
621:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:nextLocal == (instantLocal - offsetLocal) |==> false
622:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):992:nextLocal == (instantLocal - offsetLocal) |==> true
623:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):993:nextLocal = Long.MAX_VALUE |==> <NO-OP>
624:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):995:instantLocal - offset |==> instantLocal % offset
625:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):995:instantLocal - offset |==> instantLocal * offset
626:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):995:instantLocal - offset |==> instantLocal + offset
627:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):995:instantLocal - offset |==> instantLocal / offset
628:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:instantLocal - offset |==> instantLocal % offset
629:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:instantLocal - offset |==> instantLocal * offset
630:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:instantLocal - offset |==> instantLocal + offset
631:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:instantLocal - offset |==> instantLocal / offset
632:ROR:==(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:nextAdjusted == (instantLocal - offset) |==> nextAdjusted != (instantLocal - offset)
633:ROR:==(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:nextAdjusted == (instantLocal - offset) |==> nextAdjusted < (instantLocal - offset)
634:ROR:==(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:nextAdjusted == (instantLocal - offset) |==> nextAdjusted <= (instantLocal - offset)
635:ROR:==(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:nextAdjusted == (instantLocal - offset) |==> nextAdjusted > (instantLocal - offset)
636:ROR:==(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:nextAdjusted == (instantLocal - offset) |==> nextAdjusted >= (instantLocal - offset)
637:ROR:==(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:nextAdjusted == (instantLocal - offset) |==> false
638:ROR:==(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):996:nextAdjusted == (instantLocal - offset) |==> true
639:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):997:nextAdjusted = Long.MAX_VALUE |==> <NO-OP>
640:ROR:!=(long,long):<(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):999:nextLocal != nextAdjusted |==> nextLocal < nextAdjusted
641:ROR:!=(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):999:nextLocal != nextAdjusted |==> nextLocal <= nextAdjusted
642:ROR:!=(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):999:nextLocal != nextAdjusted |==> nextLocal == nextAdjusted
643:ROR:!=(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):999:nextLocal != nextAdjusted |==> nextLocal > nextAdjusted
644:ROR:!=(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):999:nextLocal != nextAdjusted |==> nextLocal >= nextAdjusted
645:ROR:!=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):999:nextLocal != nextAdjusted |==> false
646:ROR:!=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):999:nextLocal != nextAdjusted |==> true
647:COR:strict:TRUE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1001:strict |==> false
648:COR:strict:FALSE:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1001:strict |==> true
649:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1008:offset = offsetLocal |==> <NO-OP>
650:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal % offset
651:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal * offset
652:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal + offset
653:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1014:instantLocal - offset |==> instantLocal / offset
654:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal ^ instantUTC |==> instantLocal & instantUTC
655:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal ^ instantUTC |==> instantLocal | instantUTC
656:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:0 |==> 1
657:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:0 |==> -1
658:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) != 0
659:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) <= 0
660:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) == 0
661:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) > 0
662:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 |==> (instantLocal ^ instantUTC) >= 0
663:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 |==> false
664:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 |==> true
665:LOR:^(long,long):&(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal ^ offset |==> instantLocal & offset
666:LOR:^(long,long):|(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:instantLocal ^ offset |==> instantLocal | offset
667:LVR:0:POS:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:0 |==> 1
668:LVR:0:NEG:org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:0 |==> -1
669:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) != 0
670:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) <= 0
671:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) == 0
672:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) > 0
673:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) >= 0
674:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ offset) < 0 |==> false
675:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ offset) < 0 |==> true
676:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 != (instantLocal ^ offset) < 0
677:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 == (instantLocal ^ offset) < 0
678:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> false
679:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0
680:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ offset) < 0
681:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> true
682:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.DateTimeZone@convertLocalToUTC(long,boolean):1016:(instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0 |==> (instantLocal ^ instantUTC) < 0 || (instantLocal ^ offset) < 0
683:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1033:newZone == null |==> newZone != null
684:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1033:newZone == null |==> false
685:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1033:newZone == null |==> true
686:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1034:newZone = DateTimeZone.getDefault() |==> <NO-OP>
687:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1036:newZone == this |==> newZone != this
688:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1036:newZone == this |==> false
689:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1036:newZone == this |==> true
690:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@getMillisKeepLocal(org.joda.time.DateTimeZone,long):1040:false |==> true
691:COR:isFixed():TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1150:isFixed() |==> false
692:COR:isFixed():FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1150:isFixed() |==> true
693:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1151:false |==> true
694:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1154:localDateTime.toDateTime(this) |==> <NO-OP>
695:LVR:FALSE:TRUE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1155:false |==> true
696:LVR:TRUE:FALSE:org.joda.time.DateTimeZone@isLocalDateTimeGap(org.joda.time.LocalDateTime):1157:true |==> false
697:LVR:POS:0:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:3 |==> 0
698:LVR:POS:NEG:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:3 |==> -3
699:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 % DateTimeConstants.MILLIS_PER_HOUR
700:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 + DateTimeConstants.MILLIS_PER_HOUR
701:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 - DateTimeConstants.MILLIS_PER_HOUR
702:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 / DateTimeConstants.MILLIS_PER_HOUR
703:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant % (3 * DateTimeConstants.MILLIS_PER_HOUR)
704:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant * (3 * DateTimeConstants.MILLIS_PER_HOUR)
705:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant + 3 * DateTimeConstants.MILLIS_PER_HOUR
706:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1172:instant - 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant / (3 * DateTimeConstants.MILLIS_PER_HOUR)
707:LVR:POS:0:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:3 |==> 0
708:LVR:POS:NEG:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:3 |==> -3
709:AOR:*(int,int):%(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 % DateTimeConstants.MILLIS_PER_HOUR
710:AOR:*(int,int):+(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 + DateTimeConstants.MILLIS_PER_HOUR
711:AOR:*(int,int):-(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 - DateTimeConstants.MILLIS_PER_HOUR
712:AOR:*(int,int):/(int,int):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:3 * DateTimeConstants.MILLIS_PER_HOUR |==> 3 / DateTimeConstants.MILLIS_PER_HOUR
713:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant % (3 * DateTimeConstants.MILLIS_PER_HOUR)
714:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant * (3 * DateTimeConstants.MILLIS_PER_HOUR)
715:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant - 3 * DateTimeConstants.MILLIS_PER_HOUR
716:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1173:instant + 3 * DateTimeConstants.MILLIS_PER_HOUR |==> instant / (3 * DateTimeConstants.MILLIS_PER_HOUR)
717:ROR:<=(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1176:offsetBefore <= offsetAfter |==> offsetBefore != offsetAfter
718:ROR:<=(long,long):<(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1176:offsetBefore <= offsetAfter |==> offsetBefore < offsetAfter
719:ROR:<=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1176:offsetBefore <= offsetAfter |==> offsetBefore == offsetAfter
720:ROR:<=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1176:offsetBefore <= offsetAfter |==> offsetBefore > offsetAfter
721:ROR:<=(long,long):>=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1176:offsetBefore <= offsetAfter |==> offsetBefore >= offsetAfter
722:ROR:<=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1176:offsetBefore <= offsetAfter |==> false
723:ROR:<=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1176:offsetBefore <= offsetAfter |==> true
724:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1181:offsetBefore - offsetAfter |==> offsetBefore % offsetAfter
725:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1181:offsetBefore - offsetAfter |==> offsetBefore * offsetAfter
726:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1181:offsetBefore - offsetAfter |==> offsetBefore + offsetAfter
727:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1181:offsetBefore - offsetAfter |==> offsetBefore / offsetAfter
728:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1183:transition - diff |==> transition % diff
729:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1183:transition - diff |==> transition * diff
730:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1183:transition - diff |==> transition + diff
731:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1183:transition - diff |==> transition / diff
732:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1184:transition + diff |==> transition % diff
733:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1184:transition + diff |==> transition * diff
734:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1184:transition + diff |==> transition - diff
735:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1184:transition + diff |==> transition / diff
736:ROR:<(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart |==> instant != overlapStart
737:ROR:<(long,long):<=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart |==> instant <= overlapStart
738:ROR:<(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart |==> instant == overlapStart
739:ROR:<(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart |==> instant > overlapStart
740:ROR:<(long,long):>=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart |==> instant >= overlapStart
741:ROR:<(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart |==> false
742:ROR:<(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart |==> true
743:ROR:>=(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant >= overlapEnd |==> instant != overlapEnd
744:ROR:>=(long,long):<(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant >= overlapEnd |==> instant < overlapEnd
745:ROR:>=(long,long):<=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant >= overlapEnd |==> instant <= overlapEnd
746:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant >= overlapEnd |==> instant == overlapEnd
747:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant >= overlapEnd |==> instant > overlapEnd
748:ROR:>=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant >= overlapEnd |==> false
749:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant >= overlapEnd |==> true
750:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart != instant >= overlapEnd
751:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart && instant >= overlapEnd
752:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart == instant >= overlapEnd
753:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart || instant >= overlapEnd |==> false
754:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart || instant >= overlapEnd |==> instant < overlapStart
755:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart || instant >= overlapEnd |==> instant >= overlapEnd
756:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1185:instant < overlapStart || instant >= overlapEnd |==> true
757:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - overlapStart |==> instant % overlapStart
758:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - overlapStart |==> instant * overlapStart
759:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - overlapStart |==> instant + overlapStart
760:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1190:instant - overlapStart |==> instant / overlapStart
761:ROR:>=(long,long):!=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:afterStart >= diff |==> afterStart != diff
762:ROR:>=(long,long):<(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:afterStart >= diff |==> afterStart < diff
763:ROR:>=(long,long):<=(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:afterStart >= diff |==> afterStart <= diff
764:ROR:>=(long,long):==(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:afterStart >= diff |==> afterStart == diff
765:ROR:>=(long,long):>(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:afterStart >= diff |==> afterStart > diff
766:ROR:>=(long,long):FALSE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:afterStart >= diff |==> false
767:ROR:>=(long,long):TRUE(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1191:afterStart >= diff |==> true
768:COR:earlierOrLater:TRUE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:earlierOrLater |==> false
769:COR:earlierOrLater:FALSE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:earlierOrLater |==> true
770:AOR:-(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - diff |==> instant % diff
771:AOR:-(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - diff |==> instant * diff
772:AOR:-(long,long):+(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - diff |==> instant + diff
773:AOR:-(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1193:instant - diff |==> instant / diff
774:COR:earlierOrLater:TRUE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1196:earlierOrLater |==> false
775:COR:earlierOrLater:FALSE:org.joda.time.DateTimeZone@adjustOffset(long,boolean):1196:earlierOrLater |==> true
776:AOR:+(long,long):%(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1196:instant + diff |==> instant % diff
777:AOR:+(long,long):*(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1196:instant + diff |==> instant * diff
778:AOR:+(long,long):-(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1196:instant + diff |==> instant - diff
779:AOR:+(long,long):/(long,long):org.joda.time.DateTimeZone@adjustOffset(long,boolean):1196:instant + diff |==> instant / diff
780:LVR:POS:0:org.joda.time.DateTimeZone@hashCode():1255:57 |==> 0
781:LVR:POS:NEG:org.joda.time.DateTimeZone@hashCode():1255:57 |==> -57
782:AOR:+(int,int):%(int,int):org.joda.time.DateTimeZone@hashCode():1255:57 + getID().hashCode() |==> 57 % getID().hashCode()
783:AOR:+(int,int):*(int,int):org.joda.time.DateTimeZone@hashCode():1255:57 + getID().hashCode() |==> 57 * getID().hashCode()
784:AOR:+(int,int):-(int,int):org.joda.time.DateTimeZone@hashCode():1255:57 + getID().hashCode() |==> 57 - getID().hashCode()
785:AOR:+(int,int):/(int,int):org.joda.time.DateTimeZone@hashCode():1255:57 + getID().hashCode() |==> 57 / getID().hashCode()
786:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@<init>(java.lang.String):1290:iID = id |==> <NO-OP>
787:STD:<CALL>:<NO-OP>:org.joda.time.DateTimeZone$Stub@writeObject(java.io.ObjectOutputStream):1294:out.writeUTF(iID) |==> <NO-OP>
788:STD:<ASSIGN>:<NO-OP>:org.joda.time.DateTimeZone$Stub@readObject(java.io.ObjectInputStream):1298:iID = in.readUTF() |==> <NO-OP>
