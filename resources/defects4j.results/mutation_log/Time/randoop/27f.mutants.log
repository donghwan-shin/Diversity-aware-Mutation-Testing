1:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@<init>():102:clear() |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@toFormatter():124:iFieldFormatters = (FieldFormatter[])iFieldFormatters.clone() |==> <NO-OP>
3:COR:iNotPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> false
4:COR:iNotPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toPrinter():141:iNotPrinter |==> true
5:COR:iNotParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> false
6:COR:iNotParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toParser():160:iNotParser |==> true
7:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():171:1 |==> 0
8:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():171:1 |==> -1
9:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():171:iMinPrintedDigits = 1 |==> <NO-OP>
10:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():172:iPrintZeroSetting = PRINT_ZERO_RARELY_LAST |==> <NO-OP>
11:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():173:10 |==> 0
12:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():173:10 |==> -10
13:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():173:iMaxParsedDigits = 10 |==> <NO-OP>
14:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():174:false |==> true
15:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():174:iRejectSignedValues = false |==> <NO-OP>
16:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():175:iPrefix = null |==> <NO-OP>
17:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> iElementPairs != null
18:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> false
19:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clear():176:iElementPairs == null |==> true
20:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():177:iElementPairs = new ArrayList<Object>() |==> <NO-OP>
21:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():179:iElementPairs.clear() |==> <NO-OP>
22:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():181:false |==> true
23:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():181:iNotPrinter = false |==> <NO-OP>
24:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@clear():182:false |==> true
25:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():182:iNotParser = false |==> <NO-OP>
26:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@clear():183:10 |==> 0
27:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@clear():183:10 |==> -10
28:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clear():183:iFieldFormatters = new FieldFormatter[10] |==> <NO-OP>
29:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> formatter != null
30:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> false
31:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):192:formatter == null |==> true
32:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):195:clearPrefix() |==> <NO-OP>
33:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodFormatter):196:append0(formatter.getPrinter(), formatter.getParser()) |==> <NO-OP>
34:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> printer != null
35:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> false
36:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null |==> true
37:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> parser != null
38:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> false
39:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:parser == null |==> true
40:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null != (parser == null)
41:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null == (parser == null)
42:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> false
43:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null
44:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> parser == null
45:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> true
46:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):212:printer == null && parser == null |==> printer == null || parser == null
47:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):215:clearPrefix() |==> <NO-OP>
48:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):216:append0(printer, parser) |==> <NO-OP>
49:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> text != null
50:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> false
51:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):228:text == null |==> true
52:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):231:clearPrefix() |==> <NO-OP>
53:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendLiteral(java.lang.String):233:append0(literal, literal) |==> <NO-OP>
54:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@minimumPrintedDigits(int):245:iMinPrintedDigits = minDigits |==> <NO-OP>
55:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@maximumParsedDigits(int):256:iMaxParsedDigits = maxDigits |==> <NO-OP>
56:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@rejectSignedValues(boolean):266:iRejectSignedValues = v |==> <NO-OP>
57:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroRarelyLast():280:iPrintZeroSetting = PRINT_ZERO_RARELY_LAST |==> <NO-OP>
58:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroRarelyFirst():292:iPrintZeroSetting = PRINT_ZERO_RARELY_FIRST |==> <NO-OP>
59:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroIfSupported():303:iPrintZeroSetting = PRINT_ZERO_IF_SUPPORTED |==> <NO-OP>
60:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroAlways():315:iPrintZeroSetting = PRINT_ZERO_ALWAYS |==> <NO-OP>
61:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@printZeroNever():329:iPrintZeroSetting = PRINT_ZERO_NEVER |==> <NO-OP>
62:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> text != null
63:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> false
64:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String):343:text == null |==> true
65:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> singularText != null
66:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> false
67:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null |==> true
68:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> pluralText != null
69:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> false
70:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:pluralText == null |==> true
71:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
72:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null && pluralText == null
73:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null == (pluralText == null)
74:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> false
75:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> singularText == null
76:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> pluralText == null
77:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(java.lang.String,java.lang.String):363:singularText == null || pluralText == null |==> true
78:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> prefix != null
79:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> false
80:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):378:prefix == null |==> true
81:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> iPrefix == null
82:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> false
83:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):381:iPrefix != null |==> true
84:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):382:prefix = new CompositeAffix(iPrefix, prefix) |==> <NO-OP>
85:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendPrefix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):384:iPrefix = prefix |==> <NO-OP>
86:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendYears():398:appendField(YEARS) |==> <NO-OP>
87:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMonths():411:appendField(MONTHS) |==> <NO-OP>
88:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendWeeks():424:appendField(WEEKS) |==> <NO-OP>
89:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendDays():437:appendField(DAYS) |==> <NO-OP>
90:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendHours():450:appendField(HOURS) |==> <NO-OP>
91:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMinutes():463:appendField(MINUTES) |==> <NO-OP>
92:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeconds():476:appendField(SECONDS) |==> <NO-OP>
93:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSecondsWithMillis():488:appendField(SECONDS_MILLIS) |==> <NO-OP>
94:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSecondsWithOptionalMillis():500:appendField(SECONDS_OPTIONAL_MILLIS) |==> <NO-OP>
95:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMillis():513:appendField(MILLIS) |==> <NO-OP>
96:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:7 |==> 0
97:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:7 |==> -7
98:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:3 |==> 0
99:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:3 |==> -3
100:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendMillis3Digit():525:appendField(7, 3) |==> <NO-OP>
101:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int):530:appendField(type, iMinPrintedDigits) |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):536:append0(field, field) |==> <NO-OP>
103:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):537:iFieldFormatters[type] = field |==> <NO-OP>
104:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendField(int,int):538:iPrefix = null |==> <NO-OP>
105:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> text != null
106:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> false
107:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String):552:text == null |==> true
108:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> singularText != null
109:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> false
110:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null |==> true
111:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> pluralText != null
112:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> false
113:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:pluralText == null |==> true
114:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null != (pluralText == null)
115:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null && pluralText == null
116:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null == (pluralText == null)
117:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> false
118:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> singularText == null
119:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> pluralText == null
120:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(java.lang.String,java.lang.String):573:singularText == null || pluralText == null |==> true
121:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:0 |==> 1
122:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:0 |==> -1
123:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() != 0
124:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() < 0
125:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() <= 0
126:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() == 0
127:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> iElementPairs.size() >= 0
128:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> false
129:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):591:iElementPairs.size() > 0 |==> true
130:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:2 |==> 0
131:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:2 |==> -2
132:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
133:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
134:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
135:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):592:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
136:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:1 |==> 0
137:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:1 |==> -1
138:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
139:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
140:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
141:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):593:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
142:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> originalPrinter != null
143:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> false
144:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null |==> true
145:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> originalParser != null
146:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> false
147:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalParser == null |==> true
148:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null != (originalParser == null)
149:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null && originalParser == null
150:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null == (originalParser == null)
151:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> false
152:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalPrinter == null
153:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> originalParser == null
154:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null |==> true
155:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> originalPrinter == originalParser
156:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> false
157:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter != originalParser |==> true
158:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) != (originalPrinter != originalParser)
159:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) && originalPrinter != originalParser
160:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> (originalPrinter == null || originalParser == null) == (originalPrinter != originalParser)
161:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> false
162:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter == null || originalParser == null
163:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> originalPrinter != originalParser
164:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser |==> true
165:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) != !(originalPrinter instanceof FieldFormatter)
166:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) && !(originalPrinter instanceof FieldFormatter)
167:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> (originalPrinter == null || originalParser == null || originalPrinter != originalParser) == !(originalPrinter instanceof FieldFormatter)
168:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> false
169:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):599:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> originalPrinter == null || originalParser == null || originalPrinter != originalParser
170:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):601:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> !(originalPrinter instanceof FieldFormatter)
171:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):600:originalPrinter == null || originalParser == null || originalPrinter != originalParser || !(originalPrinter instanceof FieldFormatter) |==> true
172:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):605:clearPrefix() |==> <NO-OP>
173:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:2 |==> 0
174:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:2 |==> -2
175:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() % 2
176:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() * 2
177:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() + 2
178:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.size() - 2 |==> iElementPairs.size() / 2
179:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):607:iElementPairs.set(iElementPairs.size() - 2, newField) |==> <NO-OP>
180:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:1 |==> 0
181:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:1 |==> -1
182:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() % 1
183:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() * 1
184:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() + 1
185:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.size() - 1 |==> iElementPairs.size() / 1
186:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):608:iElementPairs.set(iElementPairs.size() - 1, newField) |==> <NO-OP>
187:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSuffix(org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):609:iFieldFormatters[newField.getFieldType()] = newField |==> <NO-OP>
188:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String):632:true |==> false
189:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String):632:true |==> false
190:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsAfter(java.lang.String):652:false |==> true
191:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsAfter(java.lang.String):652:true |==> false
192:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsBefore(java.lang.String):672:true |==> false
193:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparatorIfFieldsBefore(java.lang.String):672:false |==> true
194:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String):697:true |==> false
195:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String):697:true |==> false
196:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[]):724:true |==> false
197:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[]):724:true |==> false
198:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> text != null
199:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> false
200:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null |==> true
201:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> finalText != null
202:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> false
203:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:finalText == null |==> true
204:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null != (finalText == null)
205:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null && finalText == null
206:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null == (finalText == null)
207:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> false
208:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> text == null
209:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> finalText == null
210:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):730:text == null || finalText == null |==> true
211:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):734:clearPrefix() |==> <NO-OP>
212:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:0 |==> 1
213:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:0 |==> -1
214:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() != 0
215:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() < 0
216:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() <= 0
217:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() > 0
218:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> pairs.size() >= 0
219:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> false
220:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):738:pairs.size() == 0 |==> true
221:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:false |==> true
222:ROR:==(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> useBefore != false
223:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
224:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> useBefore
225:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> false
226:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useBefore == false |==> true
227:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter != (useBefore == false)
228:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter == (useBefore == false)
229:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> false
230:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter
231:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useBefore == false
232:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> true
233:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):739:useAfter && useBefore == false |==> useAfter || useBefore == false
234:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):743:append0(separator, separator) |==> <NO-OP>
235:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:0 |==> 1
236:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:0 |==> -1
237:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i != 0
238:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i < 0
239:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i <= 0
240:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i == 0
241:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> --i > 0
242:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> false
243:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):751:--i >= 0 |==> true
244:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):753:lastSeparator = (Separator)pairs.get(i) |==> <NO-OP>
245:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:1 |==> 0
246:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:1 |==> -1
247:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i % 1
248:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i * 1
249:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i - 1
250:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:i + 1 |==> i / 1
251:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):754:pairs = pairs.subList(i + 1, pairs.size()) |==> <NO-OP>
252:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):757:i-- |==> <NO-OP>
253:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> lastSeparator == null
254:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> false
255:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null |==> true
256:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:0 |==> 1
257:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:0 |==> -1
258:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() != 0
259:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() < 0
260:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() <= 0
261:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() > 0
262:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> pairs.size() >= 0
263:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> false
264:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:pairs.size() == 0 |==> true
265:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null != (pairs.size() == 0)
266:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null == (pairs.size() == 0)
267:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> false
268:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null
269:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> pairs.size() == 0
270:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> true
271:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):761:lastSeparator != null && pairs.size() == 0 |==> lastSeparator != null || pairs.size() == 0
272:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):765:pairs.clear() |==> <NO-OP>
273:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:0 |==> 1
274:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:0 |==> -1
275:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:1 |==> 0
276:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):768:1 |==> -1
277:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):770:pairs.add(separator) |==> <NO-OP>
278:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean):771:pairs.add(separator) |==> <NO-OP>
279:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> iPrefix == null
280:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> false
281:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@clearPrefix():779:iPrefix != null |==> true
282:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@clearPrefix():782:iPrefix = null |==> <NO-OP>
283:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):786:iElementPairs.add(printer) |==> <NO-OP>
284:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):787:iElementPairs.add(parser) |==> <NO-OP>
285:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> printer != null
286:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> false
287:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:printer == null |==> true
288:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):788:iNotPrinter |= (printer == null) |==> <NO-OP>
289:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> parser != null
290:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> false
291:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:parser == null |==> true
292:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@append0(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):789:iNotParser |= (parser == null) |==> <NO-OP>
293:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter != notParser
294:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter == notParser
295:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> false
296:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter
297:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notParser
298:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> true
299:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):795:notPrinter && notParser |==> notPrinter || notParser
300:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:2 |==> 0
301:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:2 |==> -2
302:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size != 2
303:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size < 2
304:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size <= 2
305:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size == 2
306:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> size > 2
307:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> false
308:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 |==> true
309:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:0 |==> 1
310:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:0 |==> -1
311:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 != elementPairs.get(0) instanceof Separator
312:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 == elementPairs.get(0) instanceof Separator
313:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> false
314:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2
315:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> elementPairs.get(0) instanceof Separator
316:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> true
317:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):799:size >= 2 && elementPairs.get(0) instanceof Separator |==> size >= 2 || elementPairs.get(0) instanceof Separator
318:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):800:0 |==> 1
319:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):800:0 |==> -1
320:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null |==> sep.iAfterParser != null
321:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null |==> false
322:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null |==> true
323:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterPrinter == null |==> sep.iAfterPrinter != null
324:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterPrinter == null |==> false
325:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterPrinter == null |==> true
326:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null != (sep.iAfterPrinter == null)
327:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null == (sep.iAfterPrinter == null)
328:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> false
329:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null
330:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterPrinter == null
331:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> true
332:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):801:sep.iAfterParser == null && sep.iAfterPrinter == null |==> sep.iAfterParser == null || sep.iAfterPrinter == null
333:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):802:2 |==> 0
334:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):802:2 |==> -2
335:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):803:sep = sep.finish(f.getPrinter(), f.getParser()) |==> <NO-OP>
336:COR:notPrinter:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notPrinter |==> false
337:COR:notPrinter:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):808:notPrinter |==> true
338:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):809:1 |==> 0
339:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):809:1 |==> -1
340:COR:notParser:TRUE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):810:notParser |==> false
341:COR:notParser:FALSE:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):810:notParser |==> true
342:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):811:0 |==> 1
343:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):811:0 |==> -1
344:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:0 |==> 1
345:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:0 |==> -1
346:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:1 |==> 0
347:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@toFormatter(java.util.List<java.lang.Object>,boolean,boolean):813:1 |==> -1
348:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:0 |==> 1
349:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:0 |==> -1
350:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:1 |==> 0
351:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder@createComposite(java.util.List<java.lang.Object>):822:1 |==> -1
352:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@printTo(java.lang.StringBuffer,int):868:buf.append(iText) |==> <NO-OP>
353:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@printTo(java.io.Writer,int):872:out.write(iText) |==> <NO-OP>
354:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:true |==> false
355:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:0 |==> 1
356:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:0 |==> -1
357:COR:periodStr.regionMatches(true, position, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:periodStr.regionMatches(true, position, text, 0, textLength) |==> false
358:COR:periodStr.regionMatches(true, position, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):878:periodStr.regionMatches(true, position, text, 0, textLength) |==> true
359:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position % textLength
360:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position * textLength
361:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position - textLength
362:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):879:position + textLength |==> position / textLength
363:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):881:~position |==> +position
364:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@parse(java.lang.String,int):881:~position |==> -position
365:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos != sourceLength
366:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos <= sourceLength
367:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos == sourceLength
368:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos > sourceLength
369:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> pos >= sourceLength
370:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> false
371:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):889:pos < sourceLength |==> true
372:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:true |==> false
373:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:0 |==> 1
374:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:0 |==> -1
375:COR:periodStr.regionMatches(true, pos, text, 0, textLength):TRUE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:periodStr.regionMatches(true, pos, text, 0, textLength) |==> false
376:COR:periodStr.regionMatches(true, pos, text, 0, textLength):FALSE:org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):890:periodStr.regionMatches(true, pos, text, 0, textLength) |==> true
377:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):903:~position |==> +position
378:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$SimpleAffix@scan(java.lang.String,int):903:~position |==> -position
379:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:1 |==> 0
380:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:1 |==> -1
381:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value != 1
382:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value < 1
383:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value <= 1
384:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value > 1
385:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> value >= 1
386:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> false
387:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@calculatePrintedLength(int):922:value == 1 |==> true
388:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:1 |==> 0
389:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:1 |==> -1
390:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value != 1
391:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value < 1
392:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value <= 1
393:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value > 1
394:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> value >= 1
395:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> false
396:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:value == 1 |==> true
397:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.lang.StringBuffer,int):926:buf.append(value == 1 ? iSingularText : iPluralText) |==> <NO-OP>
398:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:1 |==> 0
399:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:1 |==> -1
400:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value != 1
401:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value < 1
402:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value <= 1
403:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value > 1
404:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> value >= 1
405:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> false
406:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:value == 1 |==> true
407:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@printTo(java.io.Writer,int):930:out.write(value == 1 ? iSingularText : iPluralText) |==> <NO-OP>
408:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() != text2.length()
409:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() <= text2.length()
410:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() == text2.length()
411:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() > text2.length()
412:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> text1.length() >= text2.length()
413:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> false
414:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):937:text1.length() < text2.length() |==> true
415:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):940:text1 = text2 |==> <NO-OP>
416:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):941:text2 = temp |==> <NO-OP>
417:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:true |==> false
418:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:0 |==> 1
419:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:0 |==> -1
420:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> false
421:COR:periodStr.regionMatches(true, position, text1, 0, text1.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):945:periodStr.regionMatches(true, position, text1, 0, text1.length()) |==> true
422:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position % text1.length()
423:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position * text1.length()
424:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position - text1.length()
425:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):946:position + text1.length() |==> position / text1.length()
426:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:true |==> false
427:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:0 |==> 1
428:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:0 |==> -1
429:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> false
430:COR:periodStr.regionMatches(true, position, text2, 0, text2.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):949:periodStr.regionMatches(true, position, text2, 0, text2.length()) |==> true
431:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position % text2.length()
432:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position * text2.length()
433:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position - text2.length()
434:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):950:position + text2.length() |==> position / text2.length()
435:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):953:~position |==> +position
436:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@parse(java.lang.String,int):953:~position |==> -position
437:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() != text2.length()
438:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() <= text2.length()
439:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() == text2.length()
440:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() > text2.length()
441:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> text1.length() >= text2.length()
442:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> false
443:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):960:text1.length() < text2.length() |==> true
444:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):963:text1 = text2 |==> <NO-OP>
445:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):964:text2 = temp |==> <NO-OP>
446:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos != sourceLength
447:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos <= sourceLength
448:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos == sourceLength
449:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos > sourceLength
450:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> pos >= sourceLength
451:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> false
452:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):971:pos < sourceLength |==> true
453:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:true |==> false
454:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:0 |==> 1
455:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:0 |==> -1
456:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> false
457:COR:periodStr.regionMatches(true, pos, text1, 0, textLength1):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):972:periodStr.regionMatches(true, pos, text1, 0, textLength1) |==> true
458:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:true |==> false
459:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:0 |==> 1
460:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:0 |==> -1
461:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):TRUE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> false
462:COR:periodStr.regionMatches(true, pos, text2, 0, textLength2):FALSE:org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):975:periodStr.regionMatches(true, pos, text2, 0, textLength2) |==> true
463:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):979:~position |==> +position
464:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$PluralAffix@scan(java.lang.String,int):979:~position |==> -position
465:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) % iRight.calculatePrintedLength(value)
466:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) * iRight.calculatePrintedLength(value)
467:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) - iRight.calculatePrintedLength(value)
468:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@calculatePrintedLength(int):997:iLeft.calculatePrintedLength(value) + iRight.calculatePrintedLength(value) |==> iLeft.calculatePrintedLength(value) / iRight.calculatePrintedLength(value)
469:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.lang.StringBuffer,int):1002:iLeft.printTo(buf, value) |==> <NO-OP>
470:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.lang.StringBuffer,int):1003:iRight.printTo(buf, value) |==> <NO-OP>
471:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.io.Writer,int):1007:iLeft.printTo(out, value) |==> <NO-OP>
472:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@printTo(java.io.Writer,int):1008:iRight.printTo(out, value) |==> <NO-OP>
473:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1012:position = iLeft.parse(periodStr, position) |==> <NO-OP>
474:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:0 |==> 1
475:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:0 |==> -1
476:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position != 0
477:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position < 0
478:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position <= 0
479:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position == 0
480:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> position > 0
481:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> false
482:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1013:position >= 0 |==> true
483:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@parse(java.lang.String,int):1014:position = iRight.parse(periodStr, position) |==> <NO-OP>
484:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:0 |==> 1
485:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:0 |==> -1
486:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos != 0
487:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos < 0
488:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos <= 0
489:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos == 0
490:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> pos > 0
491:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> false
492:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1021:pos >= 0 |==> true
493:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1024:~position |==> +position
494:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$CompositeAffix@scan(java.lang.String,int):1024:~position |==> -position
495:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1072:field.iSuffix != null |==> field.iSuffix == null
496:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1072:field.iSuffix != null |==> false
497:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1072:field.iSuffix != null |==> true
498:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@<init>(org.joda.time.format.PeriodFormatterBuilder.FieldFormatter,org.joda.time.format.PeriodFormatterBuilder.PeriodFieldAffix):1073:suffix = new CompositeAffix(field.iSuffix, suffix) |==> <NO-OP>
499:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:0 |==> 1
500:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:0 |==> -1
501:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt != 0
502:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt < 0
503:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt == 0
504:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt > 0
505:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> stopAt >= 0
506:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> false
507:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1079:stopAt <= 0 |==> true
508:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:0 |==> 1
509:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1080:0 |==> -1
510:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting != PRINT_ZERO_ALWAYS
511:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting < PRINT_ZERO_ALWAYS
512:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
513:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting > PRINT_ZERO_ALWAYS
514:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
515:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
516:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> true
517:ROR:!=(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) < Long.MAX_VALUE
518:ROR:!=(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) <= Long.MAX_VALUE
519:ROR:!=(long,long):==(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) == Long.MAX_VALUE
520:ROR:!=(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) > Long.MAX_VALUE
521:ROR:!=(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) >= Long.MAX_VALUE
522:ROR:!=(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> false
523:ROR:!=(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:getFieldValue(period) != Long.MAX_VALUE |==> true
524:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS != (getFieldValue(period) != Long.MAX_VALUE)
525:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS && getFieldValue(period) != Long.MAX_VALUE
526:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS == (getFieldValue(period) != Long.MAX_VALUE)
527:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> false
528:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> iPrintZeroSetting == PRINT_ZERO_ALWAYS
529:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> getFieldValue(period) != Long.MAX_VALUE
530:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1082:iPrintZeroSetting == PRINT_ZERO_ALWAYS || getFieldValue(period) != Long.MAX_VALUE |==> true
531:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1083:1 |==> 0
532:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1083:1 |==> -1
533:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1085:0 |==> 1
534:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1085:0 |==> -1
535:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong != Long.MAX_VALUE
536:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong < Long.MAX_VALUE
537:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
538:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong > Long.MAX_VALUE
539:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
540:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> false
541:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1090:valueLong == Long.MAX_VALUE |==> true
542:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1091:0 |==> 1
543:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1091:0 |==> -1
544:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
545:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
546:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
547:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
548:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
549:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> false
550:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1095:iFieldType >= SECONDS_MILLIS |==> true
551:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:4 |==> 0
552:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:4 |==> -4
553:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1098:sum = Math.max(sum, 4) |==> <NO-OP>
554:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1100:sum++ |==> <NO-OP>
555:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
556:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
557:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
558:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
559:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
560:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
561:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
562:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
563:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
564:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
565:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
566:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:0 |==> 1
567:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:0 |==> -1
568:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) != 0
569:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) < 0
570:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) <= 0
571:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) > 0
572:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) >= 0
573:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
574:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:(Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> true
575:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS != ((Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)
576:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS == ((Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0)
577:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> false
578:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS
579:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1102:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0
580:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> true
581:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1101:iFieldType == SECONDS_OPTIONAL_MILLIS && (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0 |==> iFieldType == SECONDS_OPTIONAL_MILLIS || (Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND) == 0
582:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:4 |==> 0
583:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:4 |==> -4
584:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1103:sum -= 4 |==> <NO-OP>
585:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
586:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
587:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
588:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
589:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1106:valueLong = valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> <NO-OP>
590:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1110:iPrefix != null |==> iPrefix == null
591:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1110:iPrefix != null |==> false
592:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1110:iPrefix != null |==> true
593:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1111:sum += iPrefix.calculatePrintedLength(value) |==> <NO-OP>
594:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1113:iSuffix != null |==> iSuffix == null
595:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1113:iSuffix != null |==> false
596:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1113:iSuffix != null |==> true
597:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1114:sum += iSuffix.calculatePrintedLength(value) |==> <NO-OP>
598:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong != Long.MAX_VALUE
599:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong < Long.MAX_VALUE
600:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
601:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong > Long.MAX_VALUE
602:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
603:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> false
604:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1122:valueLong == Long.MAX_VALUE |==> true
605:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
606:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
607:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
608:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
609:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
610:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> false
611:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1126:iFieldType >= SECONDS_MILLIS |==> true
612:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
613:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
614:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
615:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
616:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1127:value = (int)(valueLong / DateTimeConstants.MILLIS_PER_SECOND) |==> <NO-OP>
617:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1130:iPrefix != null |==> iPrefix == null
618:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1130:iPrefix != null |==> false
619:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1130:iPrefix != null |==> true
620:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1131:iPrefix.printTo(buf, value) |==> <NO-OP>
621:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:1 |==> 0
622:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:1 |==> -1
623:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:minDigits <= 1 |==> minDigits != 1
624:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:minDigits <= 1 |==> minDigits < 1
625:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:minDigits <= 1 |==> minDigits == 1
626:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:minDigits <= 1 |==> minDigits > 1
627:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:minDigits <= 1 |==> minDigits >= 1
628:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:minDigits <= 1 |==> false
629:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1134:minDigits <= 1 |==> true
630:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1135:FormatUtils.appendUnpaddedInteger(buf, value) |==> <NO-OP>
631:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1137:FormatUtils.appendPaddedInteger(buf, value, minDigits) |==> <NO-OP>
632:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
633:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
634:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
635:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
636:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
637:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType >= SECONDS_MILLIS |==> false
638:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1139:iFieldType >= SECONDS_MILLIS |==> true
639:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
640:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
641:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
642:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1140:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
643:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
644:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
645:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
646:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
647:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
648:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS |==> false
649:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS |==> true
650:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:0 |==> 1
651:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:0 |==> -1
652:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:dp > 0 |==> dp != 0
653:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:dp > 0 |==> dp < 0
654:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:dp > 0 |==> dp <= 0
655:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:dp > 0 |==> dp == 0
656:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:dp > 0 |==> dp >= 0
657:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:dp > 0 |==> false
658:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:dp > 0 |==> true
659:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
660:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS && dp > 0
661:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS == dp > 0
662:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS || dp > 0 |==> false
663:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
664:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
665:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1141:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
666:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1142:buf.append('.') |==> <NO-OP>
667:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:3 |==> 0
668:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:3 |==> -3
669:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1143:FormatUtils.appendPaddedInteger(buf, dp, 3) |==> <NO-OP>
670:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1146:iSuffix != null |==> iSuffix == null
671:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1146:iSuffix != null |==> false
672:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1146:iSuffix != null |==> true
673:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1147:iSuffix.printTo(buf, value) |==> <NO-OP>
674:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1153:valueLong == Long.MAX_VALUE |==> valueLong != Long.MAX_VALUE
675:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1153:valueLong == Long.MAX_VALUE |==> valueLong < Long.MAX_VALUE
676:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1153:valueLong == Long.MAX_VALUE |==> valueLong <= Long.MAX_VALUE
677:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1153:valueLong == Long.MAX_VALUE |==> valueLong > Long.MAX_VALUE
678:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1153:valueLong == Long.MAX_VALUE |==> valueLong >= Long.MAX_VALUE
679:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1153:valueLong == Long.MAX_VALUE |==> false
680:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1153:valueLong == Long.MAX_VALUE |==> true
681:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
682:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
683:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
684:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
685:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
686:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:iFieldType >= SECONDS_MILLIS |==> false
687:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1157:iFieldType >= SECONDS_MILLIS |==> true
688:AOR:/(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1158:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong % DateTimeConstants.MILLIS_PER_SECOND
689:AOR:/(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1158:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong * DateTimeConstants.MILLIS_PER_SECOND
690:AOR:/(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1158:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong + DateTimeConstants.MILLIS_PER_SECOND
691:AOR:/(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1158:valueLong / DateTimeConstants.MILLIS_PER_SECOND |==> valueLong - DateTimeConstants.MILLIS_PER_SECOND
692:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1158:value = (int)(valueLong / DateTimeConstants.MILLIS_PER_SECOND) |==> <NO-OP>
693:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iPrefix != null |==> iPrefix == null
694:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iPrefix != null |==> false
695:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1161:iPrefix != null |==> true
696:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1162:iPrefix.printTo(out, value) |==> <NO-OP>
697:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:1 |==> 0
698:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:1 |==> -1
699:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:minDigits <= 1 |==> minDigits != 1
700:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:minDigits <= 1 |==> minDigits < 1
701:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:minDigits <= 1 |==> minDigits == 1
702:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:minDigits <= 1 |==> minDigits > 1
703:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:minDigits <= 1 |==> minDigits >= 1
704:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:minDigits <= 1 |==> false
705:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1165:minDigits <= 1 |==> true
706:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1166:FormatUtils.writeUnpaddedInteger(out, value) |==> <NO-OP>
707:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1168:FormatUtils.writePaddedInteger(out, value, minDigits) |==> <NO-OP>
708:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType >= SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
709:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType >= SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
710:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType >= SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
711:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType >= SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
712:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType >= SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
713:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType >= SECONDS_MILLIS |==> false
714:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1170:iFieldType >= SECONDS_MILLIS |==> true
715:AOR:%(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1171:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) * DateTimeConstants.MILLIS_PER_SECOND
716:AOR:%(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1171:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) + DateTimeConstants.MILLIS_PER_SECOND
717:AOR:%(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1171:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) - DateTimeConstants.MILLIS_PER_SECOND
718:AOR:%(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1171:Math.abs(valueLong) % DateTimeConstants.MILLIS_PER_SECOND |==> Math.abs(valueLong) / DateTimeConstants.MILLIS_PER_SECOND
719:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
720:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
721:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
722:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
723:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
724:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS |==> false
725:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS |==> true
726:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:0 |==> 1
727:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:0 |==> -1
728:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:dp > 0 |==> dp != 0
729:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:dp > 0 |==> dp < 0
730:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:dp > 0 |==> dp <= 0
731:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:dp > 0 |==> dp == 0
732:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:dp > 0 |==> dp >= 0
733:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:dp > 0 |==> false
734:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:dp > 0 |==> true
735:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS != dp > 0
736:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS && dp > 0
737:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS == dp > 0
738:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS || dp > 0 |==> false
739:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS || dp > 0 |==> iFieldType == SECONDS_MILLIS
740:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS || dp > 0 |==> dp > 0
741:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1172:iFieldType == SECONDS_MILLIS || dp > 0 |==> true
742:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1173:out.write('.') |==> <NO-OP>
743:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:3 |==> 0
744:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:3 |==> -3
745:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1174:FormatUtils.writePaddedInteger(out, dp, 3) |==> <NO-OP>
746:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1177:iSuffix != null |==> iSuffix == null
747:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1177:iSuffix != null |==> false
748:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1177:iSuffix != null |==> true
749:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1178:iSuffix.printTo(out, value) |==> <NO-OP>
750:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1186:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting != PRINT_ZERO_ALWAYS
751:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1186:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting < PRINT_ZERO_ALWAYS
752:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1186:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
753:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1186:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting > PRINT_ZERO_ALWAYS
754:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1186:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
755:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1186:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
756:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1186:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> true
757:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1189:position >= text.length() |==> position != text.length()
758:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1189:position >= text.length() |==> position < text.length()
759:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1189:position >= text.length() |==> position <= text.length()
760:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1189:position >= text.length() |==> position == text.length()
761:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1189:position >= text.length() |==> position > text.length()
762:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1189:position >= text.length() |==> false
763:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1189:position >= text.length() |==> true
764:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:mustParse |==> false
765:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:mustParse |==> true
766:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:~position |==> +position
767:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1190:~position |==> -position
768:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:iPrefix != null |==> iPrefix == null
769:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:iPrefix != null |==> false
770:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1193:iPrefix != null |==> true
771:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1194:position = iPrefix.parse(text, position) |==> <NO-OP>
772:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:0 |==> 1
773:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:0 |==> -1
774:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:position >= 0 |==> position != 0
775:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:position >= 0 |==> position < 0
776:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:position >= 0 |==> position <= 0
777:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:position >= 0 |==> position == 0
778:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:position >= 0 |==> position > 0
779:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:position >= 0 |==> false
780:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1195:position >= 0 |==> true
781:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1197:true |==> false
782:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1197:mustParse = true |==> <NO-OP>
783:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1200:mustParse |==> false
784:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1200:mustParse |==> true
785:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1204:~position |==> +position
786:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1204:~position |==> -position
787:LVR:NEG:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1210:-1 |==> 0
788:LVR:NEG:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1210:-1 |==> 1
789:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null |==> iSuffix == null
790:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null |==> false
791:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null |==> true
792:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null && !mustParse |==> iSuffix != null != !mustParse
793:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null && !mustParse |==> iSuffix != null == !mustParse
794:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null && !mustParse |==> false
795:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null && !mustParse |==> iSuffix != null
796:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null && !mustParse |==> !mustParse
797:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null && !mustParse |==> true
798:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1211:iSuffix != null && !mustParse |==> iSuffix != null || !mustParse
799:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1214:suffixPos = iSuffix.scan(text, position) |==> <NO-OP>
800:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:0 |==> 1
801:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:0 |==> -1
802:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:suffixPos >= 0 |==> suffixPos != 0
803:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:suffixPos >= 0 |==> suffixPos < 0
804:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:suffixPos >= 0 |==> suffixPos <= 0
805:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:suffixPos >= 0 |==> suffixPos == 0
806:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:suffixPos >= 0 |==> suffixPos > 0
807:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:suffixPos >= 0 |==> false
808:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1215:suffixPos >= 0 |==> true
809:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1217:true |==> false
810:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1217:mustParse = true |==> <NO-OP>
811:COR:mustParse:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1220:mustParse |==> false
812:COR:mustParse:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1220:mustParse |==> true
813:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1224:~suffixPos |==> +suffixPos
814:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1224:~suffixPos |==> -suffixPos
815:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1230:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse != !isSupported(period.getPeriodType(), iFieldType)
816:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1230:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse == !isSupported(period.getPeriodType(), iFieldType)
817:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1230:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> false
818:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1230:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse
819:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1230:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !isSupported(period.getPeriodType(), iFieldType)
820:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1230:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> true
821:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1230:!mustParse && !isSupported(period.getPeriodType(), iFieldType) |==> !mustParse || !isSupported(period.getPeriodType(), iFieldType)
822:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:0 |==> 1
823:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:0 |==> -1
824:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:suffixPos > 0 |==> suffixPos != 0
825:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:suffixPos > 0 |==> suffixPos < 0
826:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:suffixPos > 0 |==> suffixPos <= 0
827:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:suffixPos > 0 |==> suffixPos == 0
828:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:suffixPos > 0 |==> suffixPos >= 0
829:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:suffixPos > 0 |==> false
830:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1237:suffixPos > 0 |==> true
831:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:suffixPos - position |==> suffixPos % position
832:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:suffixPos - position |==> suffixPos * position
833:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:suffixPos - position |==> suffixPos + position
834:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1238:suffixPos - position |==> suffixPos / position
835:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1240:text.length() - position |==> text.length() % position
836:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1240:text.length() - position |==> text.length() * position
837:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1240:text.length() - position |==> text.length() + position
838:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1240:text.length() - position |==> text.length() / position
839:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:0 |==> 1
840:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1244:0 |==> -1
841:LVR:NEG:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1245:-1 |==> 0
842:LVR:NEG:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1245:-1 |==> 1
843:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1246:false |==> true
844:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1247:length < limit |==> length != limit
845:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1247:length < limit |==> length <= limit
846:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1247:length < limit |==> length == limit
847:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1247:length < limit |==> length > limit
848:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1247:length < limit |==> length >= limit
849:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1247:length < limit |==> false
850:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1247:length < limit |==> true
851:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:position + length |==> position % length
852:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:position + length |==> position * length
853:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:position + length |==> position - length
854:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1248:position + length |==> position / length
855:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:0 |==> 1
856:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:0 |==> -1
857:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 |==> length != 0
858:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 |==> length < 0
859:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 |==> length <= 0
860:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 |==> length > 0
861:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 |==> length >= 0
862:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 |==> false
863:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 |==> true
864:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' |==> c != '-'
865:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' |==> c < '-'
866:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' |==> c <= '-'
867:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' |==> c > '-'
868:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' |==> c >= '-'
869:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' |==> false
870:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' |==> true
871:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '+' |==> c != '+'
872:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '+' |==> c < '+'
873:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '+' |==> c <= '+'
874:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '+' |==> c > '+'
875:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '+' |==> c >= '+'
876:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '+' |==> false
877:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '+' |==> true
878:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' || c == '+' |==> c == '-' != (c == '+')
879:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' || c == '+' |==> c == '-' && c == '+'
880:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' || c == '+' |==> c == '-' == (c == '+')
881:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' || c == '+' |==> false
882:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' || c == '+' |==> c == '-'
883:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' || c == '+' |==> c == '+'
884:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:c == '-' || c == '+' |==> true
885:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') |==> length == 0 != (c == '-' || c == '+')
886:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') |==> length == 0 == (c == '-' || c == '+')
887:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') |==> false
888:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') |==> length == 0
889:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') |==> (c == '-' || c == '+')
890:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') |==> true
891:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') |==> length == 0 || (c == '-' || c == '+')
892:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> (length == 0 && (c == '-' || c == '+')) != !iRejectSignedValues
893:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> (length == 0 && (c == '-' || c == '+')) == !iRejectSignedValues
894:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> false
895:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> length == 0 && (c == '-' || c == '+')
896:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> !iRejectSignedValues
897:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> true
898:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1250:length == 0 && (c == '-' || c == '+') && !iRejectSignedValues |==> length == 0 && (c == '-' || c == '+') || !iRejectSignedValues
899:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:c == '-' |==> c != '-'
900:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:c == '-' |==> c < '-'
901:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:c == '-' |==> c <= '-'
902:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:c == '-' |==> c > '-'
903:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:c == '-' |==> c >= '-'
904:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:c == '-' |==> false
905:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1251:c == '-' |==> true
906:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:1 |==> 0
907:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:1 |==> -1
908:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 |==> length % 1
909:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 |==> length * 1
910:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 |==> length - 1
911:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 |==> length / 1
912:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit |==> length + 1 != limit
913:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit |==> length + 1 < limit
914:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit |==> length + 1 <= limit
915:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit |==> length + 1 == limit
916:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit |==> length + 1 > limit
917:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit |==> false
918:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit |==> true
919:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length |==> position % length
920:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length |==> position * length
921:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length |==> position - length
922:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length |==> position / length
923:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:1 |==> 0
924:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:1 |==> -1
925:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length + 1 |==> (position + length) % 1
926:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length + 1 |==> (position + length) * 1
927:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length + 1 |==> position + length - 1
928:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:position + length + 1 |==> (position + length) / 1
929:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) != '0'
930:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) <= '0'
931:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) == '0'
932:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) > '0'
933:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:(c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) >= '0'
934:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:(c = text.charAt(position + length + 1)) < '0' |==> false
935:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:(c = text.charAt(position + length + 1)) < '0' |==> true
936:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit != (c = text.charAt(position + length + 1)) < '0'
937:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit && (c = text.charAt(position + length + 1)) < '0'
938:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit == (c = text.charAt(position + length + 1)) < '0'
939:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> false
940:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> length + 1 >= limit
941:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> (c = text.charAt(position + length + 1)) < '0'
942:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' |==> true
943:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c > '9' |==> c != '9'
944:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c > '9' |==> c < '9'
945:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c > '9' |==> c <= '9'
946:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c > '9' |==> c == '9'
947:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c > '9' |==> c >= '9'
948:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c > '9' |==> false
949:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:c > '9' |==> true
950:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') != c > '9'
951:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') && c > '9'
952:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> (length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0') == c > '9'
953:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> false
954:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1254:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0'
955:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> c > '9'
956:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1255:length + 1 >= limit || (c = text.charAt(position + length + 1)) < '0' || c > '9' |==> true
957:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1260:negative |==> false
958:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1260:negative |==> true
959:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1261:length++ |==> <NO-OP>
960:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1264:position++ |==> <NO-OP>
961:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:1 |==> 0
962:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:1 |==> -1
963:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:limit + 1 |==> limit % 1
964:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:limit + 1 |==> limit * 1
965:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:limit + 1 |==> limit - 1
966:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:limit + 1 |==> limit / 1
967:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:text.length() - position |==> text.length() % position
968:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:text.length() - position |==> text.length() * position
969:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:text.length() - position |==> text.length() + position
970:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:text.length() - position |==> text.length() / position
971:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1267:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
972:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' |==> c != '0'
973:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' |==> c < '0'
974:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' |==> c <= '0'
975:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' |==> c == '0'
976:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' |==> c > '0'
977:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' |==> false
978:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' |==> true
979:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c <= '9' |==> c != '9'
980:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c <= '9' |==> c < '9'
981:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c <= '9' |==> c == '9'
982:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c <= '9' |==> c > '9'
983:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c <= '9' |==> c >= '9'
984:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c <= '9' |==> false
985:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c <= '9' |==> true
986:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' && c <= '9' |==> c >= '0' != c <= '9'
987:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' && c <= '9' |==> c >= '0' == c <= '9'
988:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' && c <= '9' |==> false
989:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' && c <= '9' |==> c >= '0'
990:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' && c <= '9' |==> c <= '9'
991:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' && c <= '9' |==> true
992:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1271:c >= '0' && c <= '9' |==> c >= '0' || c <= '9'
993:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:true |==> false
994:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1272:hasDigits = true |==> <NO-OP>
995:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' |==> c != '.'
996:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' |==> c < '.'
997:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' |==> c <= '.'
998:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' |==> c > '.'
999:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' |==> c >= '.'
1000:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' |==> false
1001:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' |==> true
1002:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == ',' |==> c != ','
1003:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == ',' |==> c < ','
1004:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == ',' |==> c <= ','
1005:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == ',' |==> c > ','
1006:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == ',' |==> c >= ','
1007:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == ',' |==> false
1008:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == ',' |==> true
1009:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' || c == ',' |==> c == '.' != (c == ',')
1010:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' || c == ',' |==> c == '.' && c == ','
1011:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' || c == ',' |==> c == '.' == (c == ',')
1012:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' || c == ',' |==> false
1013:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' || c == ',' |==> c == '.'
1014:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' || c == ',' |==> c == ','
1015:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:c == '.' || c == ',' |==> true
1016:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS |==> iFieldType != SECONDS_MILLIS
1017:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
1018:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
1019:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
1020:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
1021:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS |==> false
1022:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS |==> true
1023:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
1024:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
1025:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
1026:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
1027:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
1028:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
1029:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
1030:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS != (iFieldType == SECONDS_OPTIONAL_MILLIS)
1031:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS && iFieldType == SECONDS_OPTIONAL_MILLIS
1032:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS == (iFieldType == SECONDS_OPTIONAL_MILLIS)
1033:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> false
1034:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_MILLIS
1035:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_OPTIONAL_MILLIS
1036:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS |==> true
1037:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') != (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1038:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') == (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1039:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> false
1040:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',')
1041:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1042:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1275:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> true
1043:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1274:(c == '.' || c == ',') && (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS) |==> (c == '.' || c == ',') || (iFieldType == SECONDS_MILLIS || iFieldType == SECONDS_OPTIONAL_MILLIS)
1044:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:0 |==> 1
1045:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:0 |==> -1
1046:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:fractPos >= 0 |==> fractPos != 0
1047:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:fractPos >= 0 |==> fractPos < 0
1048:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:fractPos >= 0 |==> fractPos <= 0
1049:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:fractPos >= 0 |==> fractPos == 0
1050:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:fractPos >= 0 |==> fractPos > 0
1051:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:fractPos >= 0 |==> false
1052:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1276:fractPos >= 0 |==> true
1053:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length |==> position % length
1054:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length |==> position * length
1055:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length |==> position - length
1056:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length |==> position / length
1057:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:1 |==> 0
1058:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:1 |==> -1
1059:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length + 1 |==> (position + length) % 1
1060:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length + 1 |==> (position + length) * 1
1061:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length + 1 |==> position + length - 1
1062:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:position + length + 1 |==> (position + length) / 1
1063:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1280:fractPos = position + length + 1 |==> <NO-OP>
1064:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:1 |==> 0
1065:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:1 |==> -1
1066:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:limit + 1 |==> limit % 1
1067:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:limit + 1 |==> limit * 1
1068:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:limit + 1 |==> limit - 1
1069:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:limit + 1 |==> limit / 1
1070:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:text.length() - position |==> text.length() % position
1071:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:text.length() - position |==> text.length() * position
1072:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:text.length() - position |==> text.length() + position
1073:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:text.length() - position |==> text.length() / position
1074:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1282:limit = Math.min(limit + 1, text.length() - position) |==> <NO-OP>
1075:STD:<INC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1287:length++ |==> <NO-OP>
1076:COR:hasDigits:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1290:hasDigits |==> false
1077:COR:hasDigits:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1290:hasDigits |==> true
1078:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1291:~position |==> +position
1079:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1291:~position |==> -position
1080:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:0 |==> 1
1081:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:0 |==> -1
1082:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 |==> suffixPos != 0
1083:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 |==> suffixPos < 0
1084:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 |==> suffixPos <= 0
1085:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 |==> suffixPos == 0
1086:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 |==> suffixPos > 0
1087:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 |==> false
1088:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 |==> true
1089:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length |==> position % length
1090:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length |==> position * length
1091:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length |==> position - length
1092:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length |==> position / length
1093:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length != suffixPos |==> position + length < suffixPos
1094:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length != suffixPos |==> position + length <= suffixPos
1095:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length != suffixPos |==> position + length == suffixPos
1096:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length != suffixPos |==> position + length > suffixPos
1097:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length != suffixPos |==> position + length >= suffixPos
1098:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length != suffixPos |==> false
1099:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:position + length != suffixPos |==> true
1100:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 != (position + length != suffixPos)
1101:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 == (position + length != suffixPos)
1102:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 && position + length != suffixPos |==> false
1103:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0
1104:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 && position + length != suffixPos |==> position + length != suffixPos
1105:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 && position + length != suffixPos |==> true
1106:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1294:suffixPos >= 0 && position + length != suffixPos |==> suffixPos >= 0 || position + length != suffixPos
1107:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS |==> iFieldType < SECONDS_MILLIS
1108:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS |==> iFieldType <= SECONDS_MILLIS
1109:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS |==> iFieldType == SECONDS_MILLIS
1110:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS |==> iFieldType > SECONDS_MILLIS
1111:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS |==> iFieldType >= SECONDS_MILLIS
1112:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS |==> false
1113:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS |==> true
1114:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType < SECONDS_OPTIONAL_MILLIS
1115:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType <= SECONDS_OPTIONAL_MILLIS
1116:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType == SECONDS_OPTIONAL_MILLIS
1117:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType > SECONDS_OPTIONAL_MILLIS
1118:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType >= SECONDS_OPTIONAL_MILLIS
1119:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_OPTIONAL_MILLIS |==> false
1120:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_OPTIONAL_MILLIS |==> true
1121:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS != (iFieldType != SECONDS_OPTIONAL_MILLIS)
1122:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS == (iFieldType != SECONDS_OPTIONAL_MILLIS)
1123:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> false
1124:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS
1125:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_OPTIONAL_MILLIS
1126:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> true
1127:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1302:iFieldType != SECONDS_MILLIS && iFieldType != SECONDS_OPTIONAL_MILLIS |==> iFieldType != SECONDS_MILLIS || iFieldType != SECONDS_OPTIONAL_MILLIS
1128:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1304:setFieldValue(period, iFieldType, parseInt(text, position, length)) |==> <NO-OP>
1129:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:0 |==> 1
1130:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:0 |==> -1
1131:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:fractPos < 0 |==> fractPos != 0
1132:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:fractPos < 0 |==> fractPos <= 0
1133:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:fractPos < 0 |==> fractPos == 0
1134:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:fractPos < 0 |==> fractPos > 0
1135:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:fractPos < 0 |==> fractPos >= 0
1136:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:fractPos < 0 |==> false
1137:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1305:fractPos < 0 |==> true
1138:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1306:setFieldValue(period, SECONDS, parseInt(text, position, length)) |==> <NO-OP>
1139:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:0 |==> 1
1140:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:0 |==> -1
1141:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1307:setFieldValue(period, MILLIS, 0) |==> <NO-OP>
1142:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position |==> fractPos % position
1143:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position |==> fractPos * position
1144:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position |==> fractPos + position
1145:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position |==> fractPos / position
1146:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:1 |==> 0
1147:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:1 |==> -1
1148:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position - 1 |==> (fractPos - position) % 1
1149:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position - 1 |==> (fractPos - position) * 1
1150:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position - 1 |==> fractPos - position + 1
1151:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1309:fractPos - position - 1 |==> (fractPos - position) / 1
1152:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1310:setFieldValue(period, SECONDS, wholeValue) |==> <NO-OP>
1153:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length |==> position % length
1154:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length |==> position * length
1155:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length |==> position - length
1156:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length |==> position / length
1157:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length - fractPos |==> (position + length) % fractPos
1158:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length - fractPos |==> (position + length) * fractPos
1159:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length - fractPos |==> position + length + fractPos
1160:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1312:position + length - fractPos |==> (position + length) / fractPos
1161:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:0 |==> 1
1162:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:0 |==> -1
1163:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:fractLen <= 0 |==> fractLen != 0
1164:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:fractLen <= 0 |==> fractLen < 0
1165:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:fractLen <= 0 |==> fractLen == 0
1166:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:fractLen <= 0 |==> fractLen > 0
1167:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:fractLen <= 0 |==> fractLen >= 0
1168:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:fractLen <= 0 |==> false
1169:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1314:fractLen <= 0 |==> true
1170:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1315:0 |==> 1
1171:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1315:0 |==> -1
1172:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:3 |==> 0
1173:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:3 |==> -3
1174:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:fractLen >= 3 |==> fractLen != 3
1175:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:fractLen >= 3 |==> fractLen < 3
1176:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:fractLen >= 3 |==> fractLen <= 3
1177:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:fractLen >= 3 |==> fractLen == 3
1178:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:fractLen >= 3 |==> fractLen > 3
1179:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:fractLen >= 3 |==> false
1180:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1317:fractLen >= 3 |==> true
1181:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:3 |==> 0
1182:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1318:3 |==> -3
1183:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:1 |==> 0
1184:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:1 |==> -1
1185:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen == 1 |==> fractLen != 1
1186:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen == 1 |==> fractLen < 1
1187:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen == 1 |==> fractLen <= 1
1188:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen == 1 |==> fractLen > 1
1189:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen == 1 |==> fractLen >= 1
1190:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen == 1 |==> false
1191:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1321:fractLen == 1 |==> true
1192:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1322:100 |==> 0
1193:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1322:100 |==> -100
1194:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1322:fractValue *= 100 |==> <NO-OP>
1195:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1324:10 |==> 0
1196:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1324:10 |==> -10
1197:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1324:fractValue *= 10 |==> <NO-OP>
1198:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:0 |==> 1
1199:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:0 |==> -1
1200:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:wholeValue < 0 |==> wholeValue != 0
1201:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:wholeValue < 0 |==> wholeValue <= 0
1202:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:wholeValue < 0 |==> wholeValue == 0
1203:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:wholeValue < 0 |==> wholeValue > 0
1204:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:wholeValue < 0 |==> wholeValue >= 0
1205:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:wholeValue < 0 |==> false
1206:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1327:wholeValue < 0 |==> true
1207:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:-fractValue |==> +fractValue
1208:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:-fractValue |==> ~fractValue
1209:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1328:fractValue = -fractValue |==> <NO-OP>
1210:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1332:setFieldValue(period, MILLIS, fractValue) |==> <NO-OP>
1211:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1335:position += length |==> <NO-OP>
1212:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:0 |==> 1
1213:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:0 |==> -1
1214:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 |==> position != 0
1215:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 |==> position < 0
1216:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 |==> position <= 0
1217:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 |==> position == 0
1218:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 |==> position > 0
1219:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 |==> false
1220:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 |==> true
1221:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:iSuffix != null |==> iSuffix == null
1222:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:iSuffix != null |==> false
1223:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:iSuffix != null |==> true
1224:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 && iSuffix != null |==> position >= 0 != (iSuffix != null)
1225:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 && iSuffix != null |==> position >= 0 == (iSuffix != null)
1226:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 && iSuffix != null |==> false
1227:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 && iSuffix != null |==> position >= 0
1228:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 && iSuffix != null |==> iSuffix != null
1229:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 && iSuffix != null |==> true
1230:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1337:position >= 0 && iSuffix != null |==> position >= 0 || iSuffix != null
1231:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1338:position = iSuffix.parse(text, position) |==> <NO-OP>
1232:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:10 |==> 0
1233:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:10 |==> -10
1234:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:length >= 10 |==> length != 10
1235:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:length >= 10 |==> length < 10
1236:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:length >= 10 |==> length <= 10
1237:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:length >= 10 |==> length == 10
1238:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:length >= 10 |==> length > 10
1239:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:length >= 10 |==> false
1240:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1351:length >= 10 |==> true
1241:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1353:position + length |==> position % length
1242:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1353:position + length |==> position * length
1243:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1353:position + length |==> position - length
1244:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1353:position + length |==> position / length
1245:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:0 |==> 1
1246:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:0 |==> -1
1247:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length <= 0 |==> length != 0
1248:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length <= 0 |==> length < 0
1249:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length <= 0 |==> length == 0
1250:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length <= 0 |==> length > 0
1251:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length <= 0 |==> length >= 0
1252:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length <= 0 |==> false
1253:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1355:length <= 0 |==> true
1254:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1356:0 |==> 1
1255:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1356:0 |==> -1
1256:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1359:length-- |==> <NO-OP>
1257:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1361:value == '-' |==> value != '-'
1258:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1361:value == '-' |==> value < '-'
1259:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1361:value == '-' |==> value <= '-'
1260:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1361:value == '-' |==> value > '-'
1261:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1361:value == '-' |==> value >= '-'
1262:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1361:value == '-' |==> false
1263:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1361:value == '-' |==> true
1264:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:0 |==> 1
1265:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:0 |==> -1
1266:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:--length < 0 |==> --length != 0
1267:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:--length < 0 |==> --length <= 0
1268:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:--length < 0 |==> --length == 0
1269:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:--length < 0 |==> --length > 0
1270:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:--length < 0 |==> --length >= 0
1271:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:--length < 0 |==> false
1272:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1362:--length < 0 |==> true
1273:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1363:0 |==> 1
1274:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1363:0 |==> -1
1275:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1365:true |==> false
1276:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1366:value = text.charAt(position++) |==> <NO-OP>
1277:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1368:false |==> true
1278:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1370:value -= '0' |==> <NO-OP>
1279:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:0 |==> 1
1280:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:0 |==> -1
1281:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:length-- > 0 |==> length-- != 0
1282:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:length-- > 0 |==> length-- < 0
1283:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:length-- > 0 |==> length-- <= 0
1284:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:length-- > 0 |==> length-- == 0
1285:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:length-- > 0 |==> length-- >= 0
1286:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:length-- > 0 |==> false
1287:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1371:length-- > 0 |==> true
1288:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:3 |==> 0
1289:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:3 |==> -3
1290:SOR:<<(int,int):>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:value << 3 |==> value >> 3
1291:SOR:<<(int,int):>>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:value << 3 |==> value >>> 3
1292:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:1 |==> 0
1293:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:1 |==> -1
1294:SOR:<<(int,int):>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:value << 1 |==> value >> 1
1295:SOR:<<(int,int):>>>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:value << 1 |==> value >>> 1
1296:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:(value << 3) + (value << 1) |==> (value << 3) % (value << 1)
1297:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:(value << 3) + (value << 1) |==> (value << 3) * (value << 1)
1298:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:(value << 3) + (value << 1) |==> (value << 3) - (value << 1)
1299:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:(value << 3) + (value << 1) |==> (value << 3) / (value << 1)
1300:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) % text.charAt(position++)
1301:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) * text.charAt(position++)
1302:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) - text.charAt(position++)
1303:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) |==> ((value << 3) + (value << 1)) / text.charAt(position++)
1304:AOR:-(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) % '0'
1305:AOR:-(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) * '0'
1306:AOR:-(int,int):+(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> ((value << 3) + (value << 1)) + text.charAt(position++) + '0'
1307:AOR:-(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> (((value << 3) + (value << 1)) + text.charAt(position++)) / '0'
1308:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1372:value = ((value << 3) + (value << 1)) + text.charAt(position++) - '0' |==> <NO-OP>
1309:COR:negative:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1374:negative |==> false
1310:COR:negative:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1374:negative |==> true
1311:ORU:-(int):+(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1374:-value |==> +value
1312:ORU:-(int):~(int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@parseInt(java.lang.String,int,int):1374:-value |==> ~value
1313:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1382:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting != PRINT_ZERO_ALWAYS
1314:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1382:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting < PRINT_ZERO_ALWAYS
1315:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1382:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting <= PRINT_ZERO_ALWAYS
1316:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1382:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting > PRINT_ZERO_ALWAYS
1317:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1382:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> iPrintZeroSetting >= PRINT_ZERO_ALWAYS
1318:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1382:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> false
1319:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1382:iPrintZeroSetting == PRINT_ZERO_ALWAYS |==> true
1320:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null |==> type == null
1321:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null |==> false
1322:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null |==> true
1323:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:false |==> true
1324:ROR:==(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType) != false
1325:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:isSupported(type, iFieldType) == false |==> false
1326:ROR:==(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType)
1327:ROR:==(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:isSupported(type, iFieldType) == false |==> false
1328:ROR:==(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:isSupported(type, iFieldType) == false |==> true
1329:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null && isSupported(type, iFieldType) == false |==> type != null != (isSupported(type, iFieldType) == false)
1330:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null && isSupported(type, iFieldType) == false |==> type != null == (isSupported(type, iFieldType) == false)
1331:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null && isSupported(type, iFieldType) == false |==> false
1332:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null && isSupported(type, iFieldType) == false |==> type != null
1333:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null && isSupported(type, iFieldType) == false |==> isSupported(type, iFieldType) == false
1334:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null && isSupported(type, iFieldType) == false |==> true
1335:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1387:type != null && isSupported(type, iFieldType) == false |==> type != null || isSupported(type, iFieldType) == false
1336:AOR:*(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds % (long)DateTimeConstants.MILLIS_PER_SECOND
1337:AOR:*(long,long):+(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds + (long)DateTimeConstants.MILLIS_PER_SECOND
1338:AOR:*(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds - (long)DateTimeConstants.MILLIS_PER_SECOND
1339:AOR:*(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:seconds * (long)DateTimeConstants.MILLIS_PER_SECOND |==> seconds / (long)DateTimeConstants.MILLIS_PER_SECOND
1340:AOR:+(long,long):%(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) % millis
1341:AOR:+(long,long):*(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) * millis
1342:AOR:+(long,long):-(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) - millis
1343:AOR:+(long,long):/(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1424:(seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) + millis |==> (seconds * (long)DateTimeConstants.MILLIS_PER_SECOND) / millis
1344:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:0 |==> 1
1345:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:0 |==> -1
1346:ROR:==(long,long):!=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:value == 0 |==> value != 0
1347:ROR:==(long,long):<(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:value == 0 |==> value < 0
1348:ROR:==(long,long):<=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:value == 0 |==> value <= 0
1349:ROR:==(long,long):>(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:value == 0 |==> value > 0
1350:ROR:==(long,long):>=(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:value == 0 |==> value >= 0
1351:ROR:==(long,long):FALSE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:value == 0 |==> false
1352:ROR:==(long,long):TRUE(long,long):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1429:value == 0 |==> true
1353:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] != this
1354:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:iFieldFormatters[iFieldType] == this |==> false
1355:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:iFieldFormatters[iFieldType] == this |==> true
1356:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) != (iFieldFormatters[iFieldType] == this)
1357:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
1358:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
1359:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
1360:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
1361:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isZero(period) && iFieldFormatters[iFieldType] == this |==> true
1362:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1434:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) || iFieldFormatters[iFieldType] == this
1363:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:1 |==> 0
1364:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:1 |==> -1
1365:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:iFieldType + 1 |==> iFieldType % 1
1366:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:iFieldType + 1 |==> iFieldType * 1
1367:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:iFieldType + 1 |==> iFieldType - 1
1368:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:iFieldType + 1 |==> iFieldType / 1
1369:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:i <= MAX_FIELD |==> i != MAX_FIELD
1370:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:i <= MAX_FIELD |==> i < MAX_FIELD
1371:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:i <= MAX_FIELD |==> i == MAX_FIELD
1372:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:i <= MAX_FIELD |==> i > MAX_FIELD
1373:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:i <= MAX_FIELD |==> i >= MAX_FIELD
1374:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:i <= MAX_FIELD |==> false
1375:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1435:i <= MAX_FIELD |==> true
1376:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:iFieldFormatters[i] != null |==> iFieldFormatters[i] == null
1377:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:iFieldFormatters[i] != null |==> false
1378:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:iFieldFormatters[i] != null |==> true
1379:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) != (iFieldFormatters[i] != null)
1380:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
1381:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:isSupported(type, i) && iFieldFormatters[i] != null |==> false
1382:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
1383:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
1384:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:isSupported(type, i) && iFieldFormatters[i] != null |==> true
1385:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1436:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) || iFieldFormatters[i] != null
1386:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] != this
1387:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:iFieldFormatters[iFieldType] == this |==> false
1388:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:iFieldFormatters[iFieldType] == this |==> true
1389:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) != (iFieldFormatters[iFieldType] == this)
1390:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) == (iFieldFormatters[iFieldType] == this)
1391:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:isZero(period) && iFieldFormatters[iFieldType] == this |==> false
1392:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period)
1393:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:isZero(period) && iFieldFormatters[iFieldType] == this |==> iFieldFormatters[iFieldType] == this
1394:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:isZero(period) && iFieldFormatters[iFieldType] == this |==> true
1395:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1445:isZero(period) && iFieldFormatters[iFieldType] == this |==> isZero(period) || iFieldFormatters[iFieldType] == this
1396:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:8 |==> 0
1397:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1446:8 |==> -8
1398:STD:<DEC>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1447:i-- |==> <NO-OP>
1399:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:0 |==> 1
1400:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:0 |==> -1
1401:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 |==> i != 0
1402:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 |==> i < 0
1403:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 |==> i <= 0
1404:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 |==> i == 0
1405:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 |==> i > 0
1406:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 |==> false
1407:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 |==> true
1408:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i <= MAX_FIELD |==> i != MAX_FIELD
1409:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i <= MAX_FIELD |==> i < MAX_FIELD
1410:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i <= MAX_FIELD |==> i == MAX_FIELD
1411:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i <= MAX_FIELD |==> i > MAX_FIELD
1412:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i <= MAX_FIELD |==> i >= MAX_FIELD
1413:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i <= MAX_FIELD |==> false
1414:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i <= MAX_FIELD |==> true
1415:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 && i <= MAX_FIELD |==> i >= 0 != i <= MAX_FIELD
1416:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 && i <= MAX_FIELD |==> i >= 0 == i <= MAX_FIELD
1417:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 && i <= MAX_FIELD |==> false
1418:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 && i <= MAX_FIELD |==> i >= 0
1419:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 && i <= MAX_FIELD |==> i <= MAX_FIELD
1420:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 && i <= MAX_FIELD |==> true
1421:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1448:i >= 0 && i <= MAX_FIELD |==> i >= 0 || i <= MAX_FIELD
1422:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:iFieldFormatters[i] != null |==> iFieldFormatters[i] == null
1423:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:iFieldFormatters[i] != null |==> false
1424:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:iFieldFormatters[i] != null |==> true
1425:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) != (iFieldFormatters[i] != null)
1426:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) == (iFieldFormatters[i] != null)
1427:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isSupported(type, i) && iFieldFormatters[i] != null |==> false
1428:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i)
1429:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isSupported(type, i) && iFieldFormatters[i] != null |==> iFieldFormatters[i] != null
1430:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isSupported(type, i) && iFieldFormatters[i] != null |==> true
1431:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@getFieldValue(org.joda.time.ReadablePeriod):1449:isSupported(type, i) && iFieldFormatters[i] != null |==> isSupported(type, i) || iFieldFormatters[i] != null
1432:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:0 |==> 1
1433:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:0 |==> -1
1434:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:i < isize |==> i != isize
1435:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:i < isize |==> i <= isize
1436:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:i < isize |==> i == isize
1437:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:i < isize |==> i > isize
1438:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:i < isize |==> i >= isize
1439:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:i < isize |==> false
1440:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1464:i < isize |==> true
1441:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:0 |==> 1
1442:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:0 |==> -1
1443:ROR:!=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:period.getValue(i) != 0 |==> period.getValue(i) < 0
1444:ROR:!=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:period.getValue(i) != 0 |==> period.getValue(i) <= 0
1445:ROR:!=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:period.getValue(i) != 0 |==> period.getValue(i) == 0
1446:ROR:!=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:period.getValue(i) != 0 |==> period.getValue(i) > 0
1447:ROR:!=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:period.getValue(i) != 0 |==> period.getValue(i) >= 0
1448:ROR:!=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:period.getValue(i) != 0 |==> false
1449:ROR:!=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1465:period.getValue(i) != 0 |==> true
1450:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1466:false |==> true
1451:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isZero(org.joda.time.ReadablePeriod):1469:true |==> false
1452:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1475:false |==> true
1453:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1494:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) != type.isSupported(DurationFieldType.millis())
1454:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1494:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) && type.isSupported(DurationFieldType.millis())
1455:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1494:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds()) == type.isSupported(DurationFieldType.millis())
1456:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1494:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> false
1457:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1494:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.seconds())
1458:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1495:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> type.isSupported(DurationFieldType.millis())
1459:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@isSupported(org.joda.time.PeriodType,int):1494:type.isSupported(DurationFieldType.seconds()) || type.isSupported(DurationFieldType.millis()) |==> true
1460:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1504:period.setYears(value) |==> <NO-OP>
1461:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1507:period.setMonths(value) |==> <NO-OP>
1462:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1510:period.setWeeks(value) |==> <NO-OP>
1463:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1513:period.setDays(value) |==> <NO-OP>
1464:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1516:period.setHours(value) |==> <NO-OP>
1465:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1519:period.setMinutes(value) |==> <NO-OP>
1466:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1522:period.setSeconds(value) |==> <NO-OP>
1467:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$FieldFormatter@setFieldValue(org.joda.time.ReadWritablePeriod,int,int):1525:period.setMillis(value) |==> <NO-OP>
1468:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Literal@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1549:0 |==> 1
1469:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Literal@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1549:0 |==> -1
1470:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Literal@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1557:buf.append(iText) |==> <NO-OP>
1471:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Literal@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1561:out.write(iText) |==> <NO-OP>
1472:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1567:true |==> false
1473:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1567:0 |==> 1
1474:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1567:0 |==> -1
1475:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):TRUE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1567:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> false
1476:COR:periodStr.regionMatches(true, position, iText, 0, iText.length()):FALSE:org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1567:periodStr.regionMatches(true, position, iText, 0, iText.length()) |==> true
1477:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1568:position + iText.length() |==> position % iText.length()
1478:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1568:position + iText.length() |==> position * iText.length()
1479:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1568:position + iText.length() |==> position - iText.length()
1480:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1568:position + iText.length() |==> position / iText.length()
1481:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1570:~position |==> +position
1482:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Literal@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1570:~position |==> -position
1483:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null |==> finalText != null
1484:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null |==> false
1485:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null |==> true
1486:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null || text.equals(finalText) |==> finalText == null != text.equals(finalText)
1487:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null || text.equals(finalText) |==> finalText == null && text.equals(finalText)
1488:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null || text.equals(finalText) |==> finalText == null == text.equals(finalText)
1489:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null || text.equals(finalText) |==> false
1490:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null || text.equals(finalText) |==> finalText == null
1491:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null || text.equals(finalText) |==> text.equals(finalText)
1492:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:finalText == null || text.equals(finalText) |==> true
1493:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null |==> variants != null
1494:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null |==> false
1495:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null |==> true
1496:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:0 |==> 1
1497:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:0 |==> -1
1498:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants.length == 0 |==> variants.length != 0
1499:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants.length == 0 |==> variants.length < 0
1500:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants.length == 0 |==> variants.length <= 0
1501:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants.length == 0 |==> variants.length > 0
1502:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants.length == 0 |==> variants.length >= 0
1503:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants.length == 0 |==> false
1504:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants.length == 0 |==> true
1505:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null || variants.length == 0 |==> variants == null != (variants.length == 0)
1506:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null || variants.length == 0 |==> variants == null && variants.length == 0
1507:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null || variants.length == 0 |==> variants == null == (variants.length == 0)
1508:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null || variants.length == 0 |==> false
1509:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null || variants.length == 0 |==> variants == null
1510:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null || variants.length == 0 |==> variants.length == 0
1511:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:variants == null || variants.length == 0 |==> true
1512:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) != (variants == null || variants.length == 0)
1513:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) == (variants == null || variants.length == 0)
1514:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> false
1515:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText))
1516:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1600:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (variants == null || variants.length == 0)
1517:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> true
1518:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1599:(finalText == null || text.equals(finalText)) && (variants == null || variants.length == 0) |==> (finalText == null || text.equals(finalText)) || (variants == null || variants.length == 0)
1519:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1606:parsedSet.add(text) |==> <NO-OP>
1520:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1607:parsedSet.add(finalText) |==> <NO-OP>
1521:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1608:variants != null |==> variants == null
1522:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1608:variants != null |==> false
1523:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1608:variants != null |==> true
1524:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:0 |==> 1
1525:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:0 |==> -1
1526:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:--i >= 0 |==> --i != 0
1527:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:--i >= 0 |==> --i < 0
1528:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:--i >= 0 |==> --i <= 0
1529:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:--i >= 0 |==> --i == 0
1530:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:--i >= 0 |==> --i > 0
1531:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:--i >= 0 |==> false
1532:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1609:--i >= 0 |==> true
1533:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1610:parsedSet.add(variants[i]) |==> <NO-OP>
1534:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@<init>(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean):1614:Collections.reverse(parsedList) |==> <NO-OP>
1535:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1626:sum < stopAt |==> sum != stopAt
1536:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1626:sum < stopAt |==> sum <= stopAt
1537:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1626:sum < stopAt |==> sum == stopAt
1538:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1626:sum < stopAt |==> sum > stopAt
1539:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1626:sum < stopAt |==> sum >= stopAt
1540:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1626:sum < stopAt |==> false
1541:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1626:sum < stopAt |==> true
1542:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1627:sum += iAfterPrinter.countFieldsToPrint(period, stopAt, locale) |==> <NO-OP>
1543:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1636:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) % after.calculatePrintedLength(period, locale)
1544:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1636:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) * after.calculatePrintedLength(period, locale)
1545:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1636:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) - after.calculatePrintedLength(period, locale)
1546:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1636:before.calculatePrintedLength(period, locale) + after.calculatePrintedLength(period, locale) |==> before.calculatePrintedLength(period, locale) / after.calculatePrintedLength(period, locale)
1547:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1639:iUseBefore |==> false
1548:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1639:iUseBefore |==> true
1549:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:1 |==> 0
1550:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:1 |==> -1
1551:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:0 |==> 1
1552:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:0 |==> -1
1553:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
1554:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) < 0
1555:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) <= 0
1556:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) == 0
1557:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
1558:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
1559:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1640:before.countFieldsToPrint(period, 1, locale) > 0 |==> true
1560:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1641:iUseAfter |==> false
1561:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1641:iUseAfter |==> true
1562:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1642:2 |==> 0
1563:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1642:2 |==> -2
1564:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:0 |==> 1
1565:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:0 |==> -1
1566:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:afterCount > 0 |==> afterCount != 0
1567:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:afterCount > 0 |==> afterCount < 0
1568:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:afterCount > 0 |==> afterCount <= 0
1569:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:afterCount > 0 |==> afterCount == 0
1570:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:afterCount > 0 |==> afterCount >= 0
1571:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:afterCount > 0 |==> false
1572:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1643:afterCount > 0 |==> true
1573:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:1 |==> 0
1574:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:1 |==> -1
1575:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:afterCount > 1 |==> afterCount != 1
1576:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:afterCount > 1 |==> afterCount < 1
1577:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:afterCount > 1 |==> afterCount <= 1
1578:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:afterCount > 1 |==> afterCount == 1
1579:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:afterCount > 1 |==> afterCount >= 1
1580:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:afterCount > 1 |==> false
1581:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:afterCount > 1 |==> true
1582:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1644:sum += (afterCount > 1 ? iText : iFinalText).length() |==> <NO-OP>
1583:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1647:sum += iText.length() |==> <NO-OP>
1584:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:1 |==> 0
1585:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:1 |==> -1
1586:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:0 |==> 1
1587:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:0 |==> -1
1588:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
1589:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) < 0
1590:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) <= 0
1591:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) == 0
1592:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
1593:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1594:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1595:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter != after.countFieldsToPrint(period, 1, locale) > 0
1596:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
1597:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1598:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
1599:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
1600:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1601:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1650:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter || after.countFieldsToPrint(period, 1, locale) > 0
1602:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1651:sum += iText.length() |==> <NO-OP>
1603:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1661:before.printTo(buf, period, locale) |==> <NO-OP>
1604:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1662:iUseBefore |==> false
1605:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1662:iUseBefore |==> true
1606:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:1 |==> 0
1607:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:1 |==> -1
1608:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:0 |==> 1
1609:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:0 |==> -1
1610:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
1611:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) < 0
1612:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) <= 0
1613:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) == 0
1614:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
1615:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
1616:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1663:before.countFieldsToPrint(period, 1, locale) > 0 |==> true
1617:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1664:iUseAfter |==> false
1618:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1664:iUseAfter |==> true
1619:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1665:2 |==> 0
1620:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1665:2 |==> -2
1621:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:0 |==> 1
1622:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:0 |==> -1
1623:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:afterCount > 0 |==> afterCount != 0
1624:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:afterCount > 0 |==> afterCount < 0
1625:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:afterCount > 0 |==> afterCount <= 0
1626:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:afterCount > 0 |==> afterCount == 0
1627:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:afterCount > 0 |==> afterCount >= 0
1628:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:afterCount > 0 |==> false
1629:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1666:afterCount > 0 |==> true
1630:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:1 |==> 0
1631:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:1 |==> -1
1632:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:afterCount > 1 |==> afterCount != 1
1633:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:afterCount > 1 |==> afterCount < 1
1634:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:afterCount > 1 |==> afterCount <= 1
1635:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:afterCount > 1 |==> afterCount == 1
1636:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:afterCount > 1 |==> afterCount >= 1
1637:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:afterCount > 1 |==> false
1638:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:afterCount > 1 |==> true
1639:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1667:buf.append(afterCount > 1 ? iText : iFinalText) |==> <NO-OP>
1640:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1670:buf.append(iText) |==> <NO-OP>
1641:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:1 |==> 0
1642:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:1 |==> -1
1643:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:0 |==> 1
1644:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:0 |==> -1
1645:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
1646:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) < 0
1647:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) <= 0
1648:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) == 0
1649:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
1650:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1651:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1652:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter != after.countFieldsToPrint(period, 1, locale) > 0
1653:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
1654:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1655:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
1656:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
1657:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1658:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1673:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter || after.countFieldsToPrint(period, 1, locale) > 0
1659:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1674:buf.append(iText) |==> <NO-OP>
1660:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1676:after.printTo(buf, period, locale) |==> <NO-OP>
1661:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1683:before.printTo(out, period, locale) |==> <NO-OP>
1662:COR:iUseBefore:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1684:iUseBefore |==> false
1663:COR:iUseBefore:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1684:iUseBefore |==> true
1664:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:1 |==> 0
1665:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:1 |==> -1
1666:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:0 |==> 1
1667:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:0 |==> -1
1668:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) != 0
1669:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) < 0
1670:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) <= 0
1671:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) == 0
1672:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:before.countFieldsToPrint(period, 1, locale) > 0 |==> before.countFieldsToPrint(period, 1, locale) >= 0
1673:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:before.countFieldsToPrint(period, 1, locale) > 0 |==> false
1674:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1685:before.countFieldsToPrint(period, 1, locale) > 0 |==> true
1675:COR:iUseAfter:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1686:iUseAfter |==> false
1676:COR:iUseAfter:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1686:iUseAfter |==> true
1677:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1687:2 |==> 0
1678:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1687:2 |==> -2
1679:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:0 |==> 1
1680:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:0 |==> -1
1681:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:afterCount > 0 |==> afterCount != 0
1682:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:afterCount > 0 |==> afterCount < 0
1683:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:afterCount > 0 |==> afterCount <= 0
1684:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:afterCount > 0 |==> afterCount == 0
1685:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:afterCount > 0 |==> afterCount >= 0
1686:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:afterCount > 0 |==> false
1687:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1688:afterCount > 0 |==> true
1688:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:1 |==> 0
1689:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:1 |==> -1
1690:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:afterCount > 1 |==> afterCount != 1
1691:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:afterCount > 1 |==> afterCount < 1
1692:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:afterCount > 1 |==> afterCount <= 1
1693:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:afterCount > 1 |==> afterCount == 1
1694:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:afterCount > 1 |==> afterCount >= 1
1695:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:afterCount > 1 |==> false
1696:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:afterCount > 1 |==> true
1697:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1689:out.write(afterCount > 1 ? iText : iFinalText) |==> <NO-OP>
1698:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1692:out.write(iText) |==> <NO-OP>
1699:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:1 |==> 0
1700:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:1 |==> -1
1701:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:0 |==> 1
1702:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:0 |==> -1
1703:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) != 0
1704:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) < 0
1705:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) <= 0
1706:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) == 0
1707:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) >= 0
1708:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1709:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1710:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter != after.countFieldsToPrint(period, 1, locale) > 0
1711:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter == after.countFieldsToPrint(period, 1, locale) > 0
1712:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> false
1713:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter
1714:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> after.countFieldsToPrint(period, 1, locale) > 0
1715:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> true
1716:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1695:iUseAfter && after.countFieldsToPrint(period, 1, locale) > 0 |==> iUseAfter || after.countFieldsToPrint(period, 1, locale) > 0
1717:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1696:out.write(iText) |==> <NO-OP>
1718:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1698:after.printTo(out, period, locale) |==> <NO-OP>
1719:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1705:position = iBeforeParser.parseInto(period, periodStr, position, locale) |==> <NO-OP>
1720:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:0 |==> 1
1721:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:0 |==> -1
1722:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:position < 0 |==> position != 0
1723:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:position < 0 |==> position <= 0
1724:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:position < 0 |==> position == 0
1725:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:position < 0 |==> position > 0
1726:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:position < 0 |==> position >= 0
1727:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:position < 0 |==> false
1728:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1707:position < 0 |==> true
1729:LVR:FALSE:TRUE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1711:false |==> true
1730:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1712:position > oldPos |==> position != oldPos
1731:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1712:position > oldPos |==> position < oldPos
1732:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1712:position > oldPos |==> position <= oldPos
1733:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1712:position > oldPos |==> position == oldPos
1734:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1712:position > oldPos |==> position >= oldPos
1735:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1712:position > oldPos |==> false
1736:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1712:position > oldPos |==> true
1737:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:0 |==> 1
1738:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:0 |==> -1
1739:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:i < length |==> i != length
1740:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:i < length |==> i <= length
1741:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:i < length |==> i == length
1742:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:i < length |==> i > length
1743:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:i < length |==> i >= length
1744:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:i < length |==> false
1745:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1716:i < length |==> true
1746:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null |==> parsedForm != null
1747:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null |==> false
1748:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null |==> true
1749:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:0 |==> 1
1750:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:0 |==> -1
1751:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm.length() == 0 |==> parsedForm.length() != 0
1752:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm.length() == 0 |==> parsedForm.length() < 0
1753:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm.length() == 0 |==> parsedForm.length() <= 0
1754:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm.length() == 0 |==> parsedForm.length() > 0
1755:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm.length() == 0 |==> parsedForm.length() >= 0
1756:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm.length() == 0 |==> false
1757:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm.length() == 0 |==> true
1758:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null != (parsedForm.length() == 0)
1759:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null && parsedForm.length() == 0
1760:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null == (parsedForm.length() == 0)
1761:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null || parsedForm.length() == 0 |==> false
1762:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null || parsedForm.length() == 0 |==> parsedForm == null
1763:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null || parsedForm.length() == 0 |==> parsedForm.length() == 0
1764:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:parsedForm == null || parsedForm.length() == 0 |==> true
1765:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:true |==> false
1766:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:0 |==> 1
1767:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1720:0 |==> -1
1768:COR:||(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) != periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1769:COR:||(boolean,boolean):&&(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) && periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1770:COR:||(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0) == periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1771:COR:||(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> false
1772:COR:||(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> (parsedForm == null || parsedForm.length() == 0)
1773:COR:||(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1719:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())
1774:COR:||(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1718:(parsedForm == null || parsedForm.length() == 0) || periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()) |==> true
1775:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1722:position += parsedForm.length() |==> <NO-OP>
1776:LVR:TRUE:FALSE:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:true |==> false
1777:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1723:found = true |==> <NO-OP>
1778:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1729:oldPos = position |==> <NO-OP>
1779:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1730:position = iAfterParser.parseInto(period, periodStr, position, locale) |==> <NO-OP>
1780:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:0 |==> 1
1781:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:0 |==> -1
1782:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:position < 0 |==> position != 0
1783:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:position < 0 |==> position <= 0
1784:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:position < 0 |==> position == 0
1785:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:position < 0 |==> position > 0
1786:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:position < 0 |==> position >= 0
1787:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:position < 0 |==> false
1788:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1732:position < 0 |==> true
1789:ROR:==(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position == oldPos |==> position != oldPos
1790:ROR:==(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position == oldPos |==> position < oldPos
1791:ROR:==(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position == oldPos |==> position <= oldPos
1792:ROR:==(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position == oldPos |==> position > oldPos
1793:ROR:==(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position == oldPos |==> position >= oldPos
1794:ROR:==(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position == oldPos |==> false
1795:ROR:==(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:position == oldPos |==> true
1796:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:found && position == oldPos |==> found != (position == oldPos)
1797:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:found && position == oldPos |==> found == (position == oldPos)
1798:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:found && position == oldPos |==> false
1799:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:found && position == oldPos |==> found
1800:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:found && position == oldPos |==> position == oldPos
1801:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:found && position == oldPos |==> true
1802:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1736:found && position == oldPos |==> found || position == oldPos
1803:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1738:~oldPos |==> +oldPos
1804:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1738:~oldPos |==> -oldPos
1805:ROR:>(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos |==> position != oldPos
1806:ROR:>(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos |==> position < oldPos
1807:ROR:>(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos |==> position <= oldPos
1808:ROR:>(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos |==> position == oldPos
1809:ROR:>(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos |==> position >= oldPos
1810:ROR:>(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos |==> false
1811:ROR:>(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos |==> true
1812:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found |==> position > oldPos != !found
1813:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found |==> position > oldPos == !found
1814:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found |==> false
1815:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found |==> position > oldPos
1816:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found |==> !found
1817:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found |==> true
1818:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found |==> position > oldPos || !found
1819:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found && !iUseBefore |==> (position > oldPos && !found) != !iUseBefore
1820:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found && !iUseBefore |==> (position > oldPos && !found) == !iUseBefore
1821:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found && !iUseBefore |==> false
1822:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found && !iUseBefore |==> position > oldPos && !found
1823:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found && !iUseBefore |==> !iUseBefore
1824:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found && !iUseBefore |==> true
1825:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1741:position > oldPos && !found && !iUseBefore |==> position > oldPos && !found || !iUseBefore
1826:ORU:~(int):+(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1743:~oldPos |==> +oldPos
1827:ORU:~(int):-(int):org.joda.time.format.PeriodFormatterBuilder$Separator@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1743:~oldPos |==> -oldPos
1828:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):1750:iAfterPrinter = afterPrinter |==> <NO-OP>
1829:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Separator@finish(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser):1751:iAfterParser = afterParser |==> <NO-OP>
1830:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1770:decompose(elementPairs, printerList, parserList) |==> <NO-OP>
1831:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:0 |==> 1
1832:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:0 |==> -1
1833:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:printerList.size() <= 0 |==> printerList.size() != 0
1834:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:printerList.size() <= 0 |==> printerList.size() < 0
1835:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:printerList.size() <= 0 |==> printerList.size() == 0
1836:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:printerList.size() <= 0 |==> printerList.size() > 0
1837:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:printerList.size() <= 0 |==> printerList.size() >= 0
1838:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:printerList.size() <= 0 |==> false
1839:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1772:printerList.size() <= 0 |==> true
1840:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:0 |==> 1
1841:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:0 |==> -1
1842:ROR:<=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:parserList.size() <= 0 |==> parserList.size() != 0
1843:ROR:<=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:parserList.size() <= 0 |==> parserList.size() < 0
1844:ROR:<=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:parserList.size() <= 0 |==> parserList.size() == 0
1845:ROR:<=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:parserList.size() <= 0 |==> parserList.size() > 0
1846:ROR:<=(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:parserList.size() <= 0 |==> parserList.size() >= 0
1847:ROR:<=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:parserList.size() <= 0 |==> false
1848:ROR:<=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@<init>(java.util.List<java.lang.Object>):1779:parserList.size() <= 0 |==> true
1849:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:0 |==> 1
1850:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1788:0 |==> -1
1851:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt |==> sum != stopAt
1852:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt |==> sum <= stopAt
1853:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt |==> sum == stopAt
1854:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt |==> sum > stopAt
1855:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt |==> sum >= stopAt
1856:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt |==> false
1857:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt |==> true
1858:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:0 |==> 1
1859:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:0 |==> -1
1860:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:--i >= 0 |==> --i != 0
1861:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:--i >= 0 |==> --i < 0
1862:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:--i >= 0 |==> --i <= 0
1863:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:--i >= 0 |==> --i == 0
1864:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:--i >= 0 |==> --i > 0
1865:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:--i >= 0 |==> false
1866:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:--i >= 0 |==> true
1867:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt && --i >= 0 |==> sum < stopAt != --i >= 0
1868:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt && --i >= 0 |==> sum < stopAt == --i >= 0
1869:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt && --i >= 0 |==> false
1870:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt && --i >= 0 |==> sum < stopAt
1871:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt && --i >= 0 |==> --i >= 0
1872:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt && --i >= 0 |==> true
1873:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1790:sum < stopAt && --i >= 0 |==> sum < stopAt || --i >= 0
1874:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale):1791:sum += printers[i].countFieldsToPrint(period, Integer.MAX_VALUE, locale) |==> <NO-OP>
1875:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1797:0 |==> 1
1876:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1797:0 |==> -1
1877:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:0 |==> 1
1878:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:0 |==> -1
1879:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:--i >= 0 |==> --i != 0
1880:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:--i >= 0 |==> --i < 0
1881:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:--i >= 0 |==> --i <= 0
1882:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:--i >= 0 |==> --i == 0
1883:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:--i >= 0 |==> --i > 0
1884:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:--i >= 0 |==> false
1885:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1799:--i >= 0 |==> true
1886:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale):1800:sum += printers[i].calculatePrintedLength(period, locale) |==> <NO-OP>
1887:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:0 |==> 1
1888:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:0 |==> -1
1889:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:i < len |==> i != len
1890:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:i < len |==> i <= len
1891:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:i < len |==> i == len
1892:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:i < len |==> i > len
1893:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:i < len |==> i >= len
1894:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:i < len |==> false
1895:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1808:i < len |==> true
1896:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale):1809:printers[i].printTo(buf, period, locale) |==> <NO-OP>
1897:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:0 |==> 1
1898:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:0 |==> -1
1899:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:i < len |==> i != len
1900:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:i < len |==> i <= len
1901:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:i < len |==> i == len
1902:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:i < len |==> i > len
1903:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:i < len |==> i >= len
1904:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:i < len |==> false
1905:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1816:i < len |==> true
1906:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale):1817:printers[i].printTo(out, period, locale) |==> <NO-OP>
1907:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1825:parsers == null |==> parsers != null
1908:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1825:parsers == null |==> false
1909:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1825:parsers == null |==> true
1910:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:0 |==> 1
1911:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:0 |==> -1
1912:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len |==> i != len
1913:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len |==> i <= len
1914:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len |==> i == len
1915:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len |==> i > len
1916:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len |==> i >= len
1917:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len |==> false
1918:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len |==> true
1919:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:0 |==> 1
1920:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:0 |==> -1
1921:ROR:>=(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:position >= 0 |==> position != 0
1922:ROR:>=(int,int):<(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:position >= 0 |==> position < 0
1923:ROR:>=(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:position >= 0 |==> position <= 0
1924:ROR:>=(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:position >= 0 |==> position == 0
1925:ROR:>=(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:position >= 0 |==> position > 0
1926:ROR:>=(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:position >= 0 |==> false
1927:ROR:>=(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:position >= 0 |==> true
1928:COR:&&(boolean,boolean):!=(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len && position >= 0 |==> i < len != position >= 0
1929:COR:&&(boolean,boolean):==(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len && position >= 0 |==> i < len == position >= 0
1930:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len && position >= 0 |==> false
1931:COR:&&(boolean,boolean):LHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len && position >= 0 |==> i < len
1932:COR:&&(boolean,boolean):RHS(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len && position >= 0 |==> position >= 0
1933:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len && position >= 0 |==> true
1934:COR:&&(boolean,boolean):||(boolean,boolean):org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1830:i < len && position >= 0 |==> i < len || position >= 0
1935:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale):1831:position = parsers[i].parseInto(period, periodStr, position, locale) |==> <NO-OP>
1936:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:0 |==> 1
1937:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:0 |==> -1
1938:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:i < size |==> i != size
1939:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:i < size |==> i <= size
1940:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:i < size |==> i == size
1941:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:i < size |==> i > size
1942:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:i < size |==> i >= size
1943:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:i < size |==> false
1944:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:i < size |==> true
1945:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:2 |==> 0
1946:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1838:2 |==> -2
1947:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1842:addArrayToList(printerList, ((Composite)element).iPrinters) |==> <NO-OP>
1948:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1844:printerList.add(element) |==> <NO-OP>
1949:LVR:POS:0:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:1 |==> 0
1950:LVR:POS:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:1 |==> -1
1951:AOR:+(int,int):%(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:i + 1 |==> i % 1
1952:AOR:+(int,int):*(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:i + 1 |==> i * 1
1953:AOR:+(int,int):-(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:i + 1 |==> i - 1
1954:AOR:+(int,int):/(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:i + 1 |==> i / 1
1955:STD:<ASSIGN>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1848:element = elementPairs.get(i + 1) |==> <NO-OP>
1956:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1851:addArrayToList(parserList, ((Composite)element).iParsers) |==> <NO-OP>
1957:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@decompose(java.util.List<java.lang.Object>,java.util.List<java.lang.Object>,java.util.List<java.lang.Object>):1853:parserList.add(element) |==> <NO-OP>
1958:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1860:array != null |==> array == null
1959:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1860:array != null |==> false
1960:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1860:array != null |==> true
1961:LVR:0:POS:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:0 |==> 1
1962:LVR:0:NEG:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:0 |==> -1
1963:ROR:<(int,int):!=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:i < array.length |==> i != array.length
1964:ROR:<(int,int):<=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:i < array.length |==> i <= array.length
1965:ROR:<(int,int):==(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:i < array.length |==> i == array.length
1966:ROR:<(int,int):>(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:i < array.length |==> i > array.length
1967:ROR:<(int,int):>=(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:i < array.length |==> i >= array.length
1968:ROR:<(int,int):FALSE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:i < array.length |==> false
1969:ROR:<(int,int):TRUE(int,int):org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1861:i < array.length |==> true
1970:STD:<CALL>:<NO-OP>:org.joda.time.format.PeriodFormatterBuilder$Composite@addArrayToList(java.util.List<java.lang.Object>,java.lang.Object[]):1862:list.add(array[i]) |==> <NO-OP>
