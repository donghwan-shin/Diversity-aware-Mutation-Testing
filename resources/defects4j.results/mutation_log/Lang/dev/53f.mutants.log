1:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null |==> date1 != null
2:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null |==> false
3:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null |==> true
4:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date2 == null |==> date2 != null
5:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date2 == null |==> false
6:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date2 == null |==> true
7:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date1 == null != (date2 == null)
8:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date1 == null && date2 == null
9:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date1 == null == (date2 == null)
10:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> false
11:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date1 == null
12:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> date2 == null
13:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):142:date1 == null || date2 == null |==> true
14:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):146:cal1.setTime(date1) |==> <NO-OP>
15:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Date,java.util.Date):148:cal2.setTime(date2) |==> <NO-OP>
16:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null |==> cal1 != null
17:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null |==> false
18:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null |==> true
19:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal2 == null |==> cal2 != null
20:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal2 == null |==> false
21:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal2 == null |==> true
22:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal1 == null != (cal2 == null)
23:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal1 == null && cal2 == null
24:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal1 == null == (cal2 == null)
25:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> false
26:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal1 == null
27:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> cal2 == null
28:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):166:cal1 == null || cal2 == null |==> true
29:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) != cal2.get(Calendar.ERA)
30:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) < cal2.get(Calendar.ERA)
31:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) <= cal2.get(Calendar.ERA)
32:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) > cal2.get(Calendar.ERA)
33:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) >= cal2.get(Calendar.ERA)
34:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> false
35:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> true
36:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) != cal2.get(Calendar.YEAR)
37:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) < cal2.get(Calendar.YEAR)
38:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) <= cal2.get(Calendar.YEAR)
39:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) > cal2.get(Calendar.YEAR)
40:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) >= cal2.get(Calendar.YEAR)
41:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
42:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> true
43:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) != (cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR))
44:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) == (cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR))
45:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
46:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)
47:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
48:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> true
49:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) || cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
50:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) != cal2.get(Calendar.DAY_OF_YEAR)
51:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) < cal2.get(Calendar.DAY_OF_YEAR)
52:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) <= cal2.get(Calendar.DAY_OF_YEAR)
53:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) > cal2.get(Calendar.DAY_OF_YEAR)
54:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) >= cal2.get(Calendar.DAY_OF_YEAR)
55:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
56:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> true
57:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) != (cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))
58:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) == (cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))
59:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
60:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
61:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):171:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
62:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):170:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> true
63:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameDay(java.util.Calendar,java.util.Calendar):169:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) || cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
64:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null |==> date1 != null
65:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null |==> false
66:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null |==> true
67:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date2 == null |==> date2 != null
68:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date2 == null |==> false
69:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date2 == null |==> true
70:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date1 == null != (date2 == null)
71:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date1 == null && date2 == null
72:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date1 == null == (date2 == null)
73:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> false
74:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date1 == null
75:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> date2 == null
76:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):187:date1 == null || date2 == null |==> true
77:ROR:==(long,long):!=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> date1.getTime() != date2.getTime()
78:ROR:==(long,long):<(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> date1.getTime() < date2.getTime()
79:ROR:==(long,long):<=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> date1.getTime() <= date2.getTime()
80:ROR:==(long,long):>(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> date1.getTime() > date2.getTime()
81:ROR:==(long,long):>=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> date1.getTime() >= date2.getTime()
82:ROR:==(long,long):FALSE(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> false
83:ROR:==(long,long):TRUE(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Date,java.util.Date):190:date1.getTime() == date2.getTime() |==> true
84:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null |==> cal1 != null
85:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null |==> false
86:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null |==> true
87:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal2 == null |==> cal2 != null
88:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal2 == null |==> false
89:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal2 == null |==> true
90:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal1 == null != (cal2 == null)
91:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal1 == null && cal2 == null
92:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal1 == null == (cal2 == null)
93:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> false
94:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal1 == null
95:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> cal2 == null
96:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):205:cal1 == null || cal2 == null |==> true
97:ROR:==(long,long):!=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> cal1.getTime().getTime() != cal2.getTime().getTime()
98:ROR:==(long,long):<(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> cal1.getTime().getTime() < cal2.getTime().getTime()
99:ROR:==(long,long):<=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> cal1.getTime().getTime() <= cal2.getTime().getTime()
100:ROR:==(long,long):>(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> cal1.getTime().getTime() > cal2.getTime().getTime()
101:ROR:==(long,long):>=(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> cal1.getTime().getTime() >= cal2.getTime().getTime()
102:ROR:==(long,long):FALSE(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> false
103:ROR:==(long,long):TRUE(long,long):org.apache.commons.lang.time.DateUtils@isSameInstant(java.util.Calendar,java.util.Calendar):208:cal1.getTime().getTime() == cal2.getTime().getTime() |==> true
104:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null |==> cal1 != null
105:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null |==> false
106:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null |==> true
107:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal2 == null |==> cal2 != null
108:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal2 == null |==> false
109:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal2 == null |==> true
110:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal1 == null != (cal2 == null)
111:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal1 == null && cal2 == null
112:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal1 == null == (cal2 == null)
113:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> false
114:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal1 == null
115:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> cal2 == null
116:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):225:cal1 == null || cal2 == null |==> true
117:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> cal1.get(Calendar.MILLISECOND) != cal2.get(Calendar.MILLISECOND)
118:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> cal1.get(Calendar.MILLISECOND) < cal2.get(Calendar.MILLISECOND)
119:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> cal1.get(Calendar.MILLISECOND) <= cal2.get(Calendar.MILLISECOND)
120:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> cal1.get(Calendar.MILLISECOND) > cal2.get(Calendar.MILLISECOND)
121:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> cal1.get(Calendar.MILLISECOND) >= cal2.get(Calendar.MILLISECOND)
122:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> false
123:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) |==> true
124:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) != cal2.get(Calendar.SECOND)
125:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) < cal2.get(Calendar.SECOND)
126:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) <= cal2.get(Calendar.SECOND)
127:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) > cal2.get(Calendar.SECOND)
128:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) >= cal2.get(Calendar.SECOND)
129:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> false
130:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> true
131:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) != (cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND))
132:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) == (cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND))
133:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> false
134:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND)
135:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)
136:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> true
137:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) || cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)
138:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) != cal2.get(Calendar.MINUTE)
139:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) < cal2.get(Calendar.MINUTE)
140:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) <= cal2.get(Calendar.MINUTE)
141:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) > cal2.get(Calendar.MINUTE)
142:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) >= cal2.get(Calendar.MINUTE)
143:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> false
144:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> true
145:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)) != (cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE))
146:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)) == (cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE))
147:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> false
148:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND)
149:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)
150:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):229:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> true
151:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) || cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)
152:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) != cal2.get(Calendar.HOUR)
153:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) < cal2.get(Calendar.HOUR)
154:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) <= cal2.get(Calendar.HOUR)
155:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) > cal2.get(Calendar.HOUR)
156:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) >= cal2.get(Calendar.HOUR)
157:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> false
158:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> true
159:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)) != (cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR))
160:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)) == (cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR))
161:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> false
162:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE)
163:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)
164:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):230:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> true
165:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) || cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)
166:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) != cal2.get(Calendar.DAY_OF_YEAR)
167:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) < cal2.get(Calendar.DAY_OF_YEAR)
168:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) <= cal2.get(Calendar.DAY_OF_YEAR)
169:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) > cal2.get(Calendar.DAY_OF_YEAR)
170:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) >= cal2.get(Calendar.DAY_OF_YEAR)
171:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
172:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> true
173:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)) != (cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))
174:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)) == (cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR))
175:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> false
176:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)
177:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
178:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):231:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> true
179:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) || cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
180:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) != cal2.get(Calendar.YEAR)
181:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) < cal2.get(Calendar.YEAR)
182:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) <= cal2.get(Calendar.YEAR)
183:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) > cal2.get(Calendar.YEAR)
184:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) >= cal2.get(Calendar.YEAR)
185:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
186:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> true
187:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)) != (cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR))
188:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)) == (cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR))
189:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> false
190:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR)
191:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
192:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):232:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> true
193:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) || cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
194:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) != cal2.get(Calendar.ERA)
195:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) < cal2.get(Calendar.ERA)
196:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) <= cal2.get(Calendar.ERA)
197:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) > cal2.get(Calendar.ERA)
198:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) >= cal2.get(Calendar.ERA)
199:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> false
200:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> true
201:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) != (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA))
202:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)) == (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA))
203:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> false
204:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR)
205:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)
206:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):233:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> true
207:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) || cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)
208:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):235:cal1.getClass() == cal2.getClass() |==> cal1.getClass() != cal2.getClass()
209:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):235:cal1.getClass() == cal2.getClass() |==> false
210:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):235:cal1.getClass() == cal2.getClass() |==> true
211:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)) != (cal1.getClass() == cal2.getClass())
212:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)) == (cal1.getClass() == cal2.getClass())
213:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> false
214:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)
215:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):235:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> cal1.getClass() == cal2.getClass()
216:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):234:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> true
217:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@isSameLocalTime(java.util.Calendar,java.util.Calendar):228:cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) && cal1.getClass() == cal2.getClass() |==> cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) && cal1.get(Calendar.SECOND) == cal2.get(Calendar.SECOND) && cal1.get(Calendar.MINUTE) == cal2.get(Calendar.MINUTE) && cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR) && cal1.get(Calendar.DAY_OF_YEAR) == cal2.get(Calendar.DAY_OF_YEAR) && cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA) || cal1.getClass() == cal2.getClass()
218:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null |==> str != null
219:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null |==> false
220:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null |==> true
221:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:parsePatterns == null |==> parsePatterns != null
222:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:parsePatterns == null |==> false
223:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:parsePatterns == null |==> true
224:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> str == null != (parsePatterns == null)
225:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> str == null && parsePatterns == null
226:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> str == null == (parsePatterns == null)
227:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> false
228:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> str == null
229:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> parsePatterns == null
230:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):253:str == null || parsePatterns == null |==> true
231:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):258:0 |==> 1
232:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):258:0 |==> -1
233:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:0 |==> 1
234:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:0 |==> -1
235:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> i != parsePatterns.length
236:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> i <= parsePatterns.length
237:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> i == parsePatterns.length
238:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> i > parsePatterns.length
239:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> i >= parsePatterns.length
240:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> false
241:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):259:i < parsePatterns.length |==> true
242:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:0 |==> 1
243:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:0 |==> -1
244:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> i != 0
245:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> i < 0
246:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> i <= 0
247:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> i > 0
248:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> i >= 0
249:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> false
250:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):260:i == 0 |==> true
251:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):261:0 |==> 1
252:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):261:0 |==> -1
253:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):261:parser = new SimpleDateFormat(parsePatterns[0]) |==> <NO-OP>
254:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):263:parser.applyPattern(parsePatterns[i]) |==> <NO-OP>
255:LVR:0:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):265:0 |==> 1
256:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):265:0 |==> -1
257:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):265:pos.setIndex(0) |==> <NO-OP>
258:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null |==> date == null
259:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null |==> false
260:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null |==> true
261:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> pos.getIndex() != str.length()
262:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> pos.getIndex() < str.length()
263:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> pos.getIndex() <= str.length()
264:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> pos.getIndex() > str.length()
265:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> pos.getIndex() >= str.length()
266:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> false
267:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:pos.getIndex() == str.length() |==> true
268:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> date != null != (pos.getIndex() == str.length())
269:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> date != null == (pos.getIndex() == str.length())
270:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> false
271:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> date != null
272:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> pos.getIndex() == str.length()
273:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> true
274:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):267:date != null && pos.getIndex() == str.length() |==> date != null || pos.getIndex() == str.length()
275:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):271:-1 |==> 0
276:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@parseDate(java.lang.String,java.lang.String[]):271:-1 |==> 1
277:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):398:date == null |==> date != null
278:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):398:date == null |==> false
279:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):398:date == null |==> true
280:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):402:c.setTime(date) |==> <NO-OP>
281:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@add(java.util.Date,int,int):403:c.add(calendarField, amount) |==> <NO-OP>
282:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):437:date == null |==> date != null
283:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):437:date == null |==> false
284:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):437:date == null |==> true
285:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):441:gval.setTime(date) |==> <NO-OP>
286:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):442:true |==> false
287:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@round(java.util.Date,int):442:modify(gval, field, true) |==> <NO-OP>
288:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):475:date == null |==> date != null
289:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):475:date == null |==> false
290:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):475:date == null |==> true
291:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):479:true |==> false
292:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@round(java.util.Calendar,int):479:modify(rounded, field, true) |==> <NO-OP>
293:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.lang.Object,int):514:date == null |==> date != null
294:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.lang.Object,int):514:date == null |==> false
295:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@round(java.lang.Object,int):514:date == null |==> true
296:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):544:date == null |==> date != null
297:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):544:date == null |==> false
298:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):544:date == null |==> true
299:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):548:gval.setTime(date) |==> <NO-OP>
300:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):549:false |==> true
301:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@truncate(java.util.Date,int):549:modify(gval, field, false) |==> <NO-OP>
302:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):570:date == null |==> date != null
303:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):570:date == null |==> false
304:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):570:date == null |==> true
305:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):574:false |==> true
306:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@truncate(java.util.Calendar,int):574:modify(truncated, field, false) |==> <NO-OP>
307:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.lang.Object,int):599:date == null |==> date != null
308:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.lang.Object,int):599:date == null |==> false
309:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@truncate(java.lang.Object,int):599:date == null |==> true
310:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:280000000 |==> 0
311:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:280000000 |==> -280000000
312:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> val.get(Calendar.YEAR) != 280000000
313:ROR:>(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> val.get(Calendar.YEAR) < 280000000
314:ROR:>(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> val.get(Calendar.YEAR) <= 280000000
315:ROR:>(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> val.get(Calendar.YEAR) == 280000000
316:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> val.get(Calendar.YEAR) >= 280000000
317:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> false
318:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):621:val.get(Calendar.YEAR) > 280000000 |==> true
319:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> field != Calendar.MILLISECOND
320:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> field < Calendar.MILLISECOND
321:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> field <= Calendar.MILLISECOND
322:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> field > Calendar.MILLISECOND
323:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> field >= Calendar.MILLISECOND
324:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> false
325:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):625:field == Calendar.MILLISECOND |==> true
326:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):637:false |==> true
327:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:500 |==> 0
328:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:500 |==> -500
329:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> millisecs != 500
330:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> millisecs <= 500
331:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> millisecs == 500
332:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> millisecs > 500
333:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> millisecs >= 500
334:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> false
335:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:millisecs < 500 |==> true
336:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> !round != millisecs < 500
337:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> !round && millisecs < 500
338:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> !round == millisecs < 500
339:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> false
340:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> !round
341:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> millisecs < 500
342:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):641:!round || millisecs < 500 |==> true
343:AOR:-(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time % millisecs
344:AOR:-(long,long):*(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time * millisecs
345:AOR:-(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time + millisecs
346:AOR:-(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time - millisecs |==> time / millisecs
347:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):642:time = time - millisecs |==> <NO-OP>
348:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> field != Calendar.SECOND
349:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> field < Calendar.SECOND
350:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> field <= Calendar.SECOND
351:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> field > Calendar.SECOND
352:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> field >= Calendar.SECOND
353:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> false
354:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):644:field == Calendar.SECOND |==> true
355:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):645:true |==> false
356:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):645:done = true |==> <NO-OP>
357:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:30 |==> 0
358:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:30 |==> -30
359:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> seconds != 30
360:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> seconds <= 30
361:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> seconds == 30
362:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> seconds > 30
363:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> seconds >= 30
364:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> false
365:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:seconds < 30 |==> true
366:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> !round != seconds < 30
367:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> !round && seconds < 30
368:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> !round == seconds < 30
369:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> false
370:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> !round
371:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> seconds < 30
372:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!round || seconds < 30 |==> true
373:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> !done != (!round || seconds < 30)
374:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> !done == (!round || seconds < 30)
375:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> false
376:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> !done
377:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> (!round || seconds < 30)
378:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> true
379:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):650:!done && (!round || seconds < 30) |==> !done || (!round || seconds < 30)
380:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:1000L |==> 0L
381:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:1000L |==> -1000L
382:AOR:*(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds % 1000L
383:AOR:*(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds + 1000L
384:AOR:*(long,long):-(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds - 1000L
385:AOR:*(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:seconds * 1000L |==> seconds / 1000L
386:AOR:-(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time % (seconds * 1000L)
387:AOR:-(long,long):*(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time * (seconds * 1000L)
388:AOR:-(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time + (seconds * 1000L)
389:AOR:-(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time - (seconds * 1000L) |==> time / (seconds * 1000L)
390:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):651:time = time - (seconds * 1000L) |==> <NO-OP>
391:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> field != Calendar.MINUTE
392:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> field < Calendar.MINUTE
393:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> field <= Calendar.MINUTE
394:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> field > Calendar.MINUTE
395:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> field >= Calendar.MINUTE
396:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> false
397:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):653:field == Calendar.MINUTE |==> true
398:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):654:true |==> false
399:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):654:done = true |==> <NO-OP>
400:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:30 |==> 0
401:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:30 |==> -30
402:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> minutes != 30
403:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> minutes <= 30
404:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> minutes == 30
405:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> minutes > 30
406:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> minutes >= 30
407:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> false
408:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:minutes < 30 |==> true
409:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> !round != minutes < 30
410:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> !round && minutes < 30
411:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> !round == minutes < 30
412:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> false
413:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> !round
414:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> minutes < 30
415:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!round || minutes < 30 |==> true
416:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> !done != (!round || minutes < 30)
417:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> !done == (!round || minutes < 30)
418:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> false
419:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> !done
420:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> (!round || minutes < 30)
421:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> true
422:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):659:!done && (!round || minutes < 30) |==> !done || (!round || minutes < 30)
423:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:60000L |==> 0L
424:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:60000L |==> -60000L
425:AOR:*(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes % 60000L
426:AOR:*(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes + 60000L
427:AOR:*(long,long):-(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes - 60000L
428:AOR:*(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:minutes * 60000L |==> minutes / 60000L
429:AOR:-(long,long):%(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time % (minutes * 60000L)
430:AOR:-(long,long):*(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time * (minutes * 60000L)
431:AOR:-(long,long):+(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time + (minutes * 60000L)
432:AOR:-(long,long):/(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time - (minutes * 60000L) |==> time / (minutes * 60000L)
433:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):660:time = time - (minutes * 60000L) |==> <NO-OP>
434:ROR:!=(long,long):<(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> date.getTime() < time
435:ROR:!=(long,long):<=(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> date.getTime() <= time
436:ROR:!=(long,long):==(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> date.getTime() == time
437:ROR:!=(long,long):>(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> date.getTime() > time
438:ROR:!=(long,long):>=(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> date.getTime() >= time
439:ROR:!=(long,long):FALSE(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> false
440:ROR:!=(long,long):TRUE(long,long):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):664:date.getTime() != time |==> true
441:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):665:date.setTime(time) |==> <NO-OP>
442:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):666:val.setTime(date) |==> <NO-OP>
443:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):670:false |==> true
444:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:0 |==> 1
445:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:0 |==> -1
446:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> i != fields.length
447:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> i <= fields.length
448:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> i == fields.length
449:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> i > fields.length
450:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> i >= fields.length
451:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> false
452:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):671:i < fields.length |==> true
453:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:0 |==> 1
454:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:0 |==> -1
455:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> j != fields[i].length
456:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> j <= fields[i].length
457:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> j == fields[i].length
458:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> j > fields[i].length
459:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> j >= fields[i].length
460:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> false
461:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):672:j < fields[i].length |==> true
462:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> fields[i][j] != field
463:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> fields[i][j] < field
464:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> fields[i][j] <= field
465:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> fields[i][j] > field
466:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> fields[i][j] >= field
467:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> false
468:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):673:fields[i][j] == field |==> true
469:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> round != roundUp
470:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> round == roundUp
471:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> false
472:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> round
473:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> roundUp
474:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> true
475:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):675:round && roundUp |==> round || roundUp
476:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> field != DateUtils.SEMI_MONTH
477:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> field < DateUtils.SEMI_MONTH
478:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> field <= DateUtils.SEMI_MONTH
479:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> field > DateUtils.SEMI_MONTH
480:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> field >= DateUtils.SEMI_MONTH
481:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> false
482:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):676:field == DateUtils.SEMI_MONTH |==> true
483:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:1 |==> 0
484:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:1 |==> -1
485:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> val.get(Calendar.DATE) != 1
486:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> val.get(Calendar.DATE) < 1
487:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> val.get(Calendar.DATE) <= 1
488:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> val.get(Calendar.DATE) > 1
489:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> val.get(Calendar.DATE) >= 1
490:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> false
491:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):680:val.get(Calendar.DATE) == 1 |==> true
492:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):681:15 |==> 0
493:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):681:15 |==> -15
494:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):681:val.add(Calendar.DATE, 15) |==> <NO-OP>
495:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):683:-15 |==> 0
496:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):683:-15 |==> 15
497:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):683:val.add(Calendar.DATE, -15) |==> <NO-OP>
498:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):684:1 |==> 0
499:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):684:1 |==> -1
500:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):684:val.add(Calendar.MONTH, 1) |==> <NO-OP>
501:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:0 |==> 1
502:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:0 |==> -1
503:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:1 |==> 0
504:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:1 |==> -1
505:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):689:val.add(fields[i][0], 1) |==> <NO-OP>
506:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):696:0 |==> 1
507:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):696:0 |==> -1
508:LVR:FALSE:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):697:false |==> true
509:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:0 |==> 1
510:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:0 |==> -1
511:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> fields[i][0] != Calendar.DATE
512:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> fields[i][0] < Calendar.DATE
513:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> fields[i][0] <= Calendar.DATE
514:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> fields[i][0] > Calendar.DATE
515:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> fields[i][0] >= Calendar.DATE
516:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> false
517:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):701:fields[i][0] == Calendar.DATE |==> true
518:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:1 |==> 0
519:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:1 |==> -1
520:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) % 1
521:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) * 1
522:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) + 1
523:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:val.get(Calendar.DATE) - 1 |==> val.get(Calendar.DATE) / 1
524:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):705:offset = val.get(Calendar.DATE) - 1 |==> <NO-OP>
525:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:15 |==> 0
526:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:15 |==> -15
527:ROR:>=(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> offset != 15
528:ROR:>=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> offset < 15
529:ROR:>=(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> offset <= 15
530:ROR:>=(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> offset == 15
531:ROR:>=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> offset > 15
532:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> false
533:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):708:offset >= 15 |==> true
534:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):709:15 |==> 0
535:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):709:15 |==> -15
536:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):709:offset -= 15 |==> <NO-OP>
537:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:7 |==> 0
538:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:7 |==> -7
539:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> offset != 7
540:ROR:>(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> offset < 7
541:ROR:>(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> offset <= 7
542:ROR:>(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> offset == 7
543:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> offset >= 7
544:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> false
545:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:offset > 7 |==> true
546:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):712:roundUp = offset > 7 |==> <NO-OP>
547:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):713:true |==> false
548:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):713:offsetSet = true |==> <NO-OP>
549:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:0 |==> 1
550:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:0 |==> -1
551:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> fields[i][0] != Calendar.HOUR_OF_DAY
552:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> fields[i][0] < Calendar.HOUR_OF_DAY
553:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> fields[i][0] <= Calendar.HOUR_OF_DAY
554:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> fields[i][0] > Calendar.HOUR_OF_DAY
555:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> fields[i][0] >= Calendar.HOUR_OF_DAY
556:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> false
557:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):717:fields[i][0] == Calendar.HOUR_OF_DAY |==> true
558:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):720:offset = val.get(Calendar.HOUR_OF_DAY) |==> <NO-OP>
559:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:12 |==> 0
560:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:12 |==> -12
561:ROR:>=(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> offset != 12
562:ROR:>=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> offset < 12
563:ROR:>=(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> offset <= 12
564:ROR:>=(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> offset == 12
565:ROR:>=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> offset > 12
566:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> false
567:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):721:offset >= 12 |==> true
568:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):722:12 |==> 0
569:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):722:12 |==> -12
570:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):722:offset -= 12 |==> <NO-OP>
571:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:6 |==> 0
572:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:6 |==> -6
573:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> offset != 6
574:ROR:>(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> offset < 6
575:ROR:>(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> offset <= 6
576:ROR:>(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> offset == 6
577:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> offset >= 6
578:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> false
579:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:offset > 6 |==> true
580:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):724:roundUp = offset > 6 |==> <NO-OP>
581:LVR:TRUE:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):725:true |==> false
582:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):725:offsetSet = true |==> <NO-OP>
583:COR:offsetSet:TRUE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):729:offsetSet |==> false
584:COR:offsetSet:FALSE:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):729:offsetSet |==> true
585:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):730:0 |==> 1
586:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):730:0 |==> -1
587:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):731:0 |==> 1
588:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):731:0 |==> -1
589:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:0 |==> 1
590:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:0 |==> -1
591:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) % min
592:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) * min
593:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) + min
594:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:val.get(fields[i][0]) - min |==> val.get(fields[i][0]) / min
595:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):733:offset = val.get(fields[i][0]) - min |==> <NO-OP>
596:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max % min
597:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max * min
598:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max + min
599:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:max - min |==> max / min
600:LVR:POS:0:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:2 |==> 0
601:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:2 |==> -2
602:AOR:/(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) % 2
603:AOR:/(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) * 2
604:AOR:/(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) + 2
605:AOR:/(int,int):-(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:(max - min) / 2 |==> (max - min) - 2
606:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> offset != ((max - min) / 2)
607:ROR:>(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> offset < ((max - min) / 2)
608:ROR:>(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> offset <= ((max - min) / 2)
609:ROR:>(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> offset == ((max - min) / 2)
610:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> offset >= ((max - min) / 2)
611:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> false
612:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:offset > ((max - min) / 2) |==> true
613:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):735:roundUp = offset > ((max - min) / 2) |==> <NO-OP>
614:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:0 |==> 1
615:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:0 |==> -1
616:ROR:!=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> offset < 0
617:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> offset <= 0
618:ROR:!=(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> offset == 0
619:ROR:!=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> offset > 0
620:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> offset >= 0
621:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> false
622:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):738:offset != 0 |==> true
623:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> 1
624:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> -1
625:LVR:0:POS:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> 1
626:LVR:0:NEG:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:0 |==> -1
627:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) % offset
628:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) * offset
629:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) + offset
630:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.get(fields[i][0]) - offset |==> val.get(fields[i][0]) / offset
631:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@modify(java.util.Calendar,int,boolean):739:val.set(fields[i][0], val.get(fields[i][0]) - offset) |==> <NO-OP>
632:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Date,int):772:focus == null |==> focus != null
633:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Date,int):772:focus == null |==> false
634:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Date,int):772:focus == null |==> true
635:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Date,int):776:gval.setTime(focus) |==> <NO-OP>
636:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):805:focus == null |==> focus != null
637:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):805:focus == null |==> false
638:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):805:focus == null |==> true
639:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):816:start = truncate(focus, Calendar.MONTH) |==> <NO-OP>
640:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):818:end = (Calendar)start.clone() |==> <NO-OP>
641:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):819:1 |==> 0
642:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):819:1 |==> -1
643:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):819:end.add(Calendar.MONTH, 1) |==> <NO-OP>
644:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):820:-1 |==> 0
645:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):820:-1 |==> 1
646:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):820:end.add(Calendar.DATE, -1) |==> <NO-OP>
647:ROR:==(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> rangeStyle != RANGE_MONTH_MONDAY
648:ROR:==(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> rangeStyle < RANGE_MONTH_MONDAY
649:ROR:==(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> rangeStyle <= RANGE_MONTH_MONDAY
650:ROR:==(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> rangeStyle > RANGE_MONTH_MONDAY
651:ROR:==(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> rangeStyle >= RANGE_MONTH_MONDAY
652:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> false
653:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):822:rangeStyle == RANGE_MONTH_MONDAY |==> true
654:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):823:startCutoff = Calendar.MONDAY |==> <NO-OP>
655:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):824:endCutoff = Calendar.SUNDAY |==> <NO-OP>
656:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):832:start = truncate(focus, Calendar.DATE) |==> <NO-OP>
657:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):833:end = truncate(focus, Calendar.DATE) |==> <NO-OP>
658:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):839:startCutoff = Calendar.MONDAY |==> <NO-OP>
659:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):840:endCutoff = Calendar.SUNDAY |==> <NO-OP>
660:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):843:startCutoff = focus.get(Calendar.DAY_OF_WEEK) |==> <NO-OP>
661:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:1 |==> 0
662:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:1 |==> -1
663:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff % 1
664:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff * 1
665:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff + 1
666:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:startCutoff - 1 |==> startCutoff / 1
667:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):844:endCutoff = startCutoff - 1 |==> <NO-OP>
668:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:3 |==> 0
669:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:3 |==> -3
670:AOR:-(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) % 3
671:AOR:-(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) * 3
672:AOR:-(int,int):+(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) + 3
673:AOR:-(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:focus.get(Calendar.DAY_OF_WEEK) - 3 |==> focus.get(Calendar.DAY_OF_WEEK) / 3
674:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):847:startCutoff = focus.get(Calendar.DAY_OF_WEEK) - 3 |==> <NO-OP>
675:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:3 |==> 0
676:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:3 |==> -3
677:AOR:+(int,int):%(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) % 3
678:AOR:+(int,int):*(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) * 3
679:AOR:+(int,int):-(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) - 3
680:AOR:+(int,int):/(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:focus.get(Calendar.DAY_OF_WEEK) + 3 |==> focus.get(Calendar.DAY_OF_WEEK) / 3
681:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):848:endCutoff = focus.get(Calendar.DAY_OF_WEEK) + 3 |==> <NO-OP>
682:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> startCutoff != Calendar.SUNDAY
683:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> startCutoff <= Calendar.SUNDAY
684:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> startCutoff == Calendar.SUNDAY
685:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> startCutoff > Calendar.SUNDAY
686:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> startCutoff >= Calendar.SUNDAY
687:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> false
688:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):855:startCutoff < Calendar.SUNDAY |==> true
689:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):856:7 |==> 0
690:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):856:7 |==> -7
691:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):856:startCutoff += 7 |==> <NO-OP>
692:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> startCutoff != Calendar.SATURDAY
693:ROR:>(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> startCutoff < Calendar.SATURDAY
694:ROR:>(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> startCutoff <= Calendar.SATURDAY
695:ROR:>(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> startCutoff == Calendar.SATURDAY
696:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> startCutoff >= Calendar.SATURDAY
697:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> false
698:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):858:startCutoff > Calendar.SATURDAY |==> true
699:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):859:7 |==> 0
700:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):859:7 |==> -7
701:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):859:startCutoff -= 7 |==> <NO-OP>
702:ROR:<(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> endCutoff != Calendar.SUNDAY
703:ROR:<(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> endCutoff <= Calendar.SUNDAY
704:ROR:<(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> endCutoff == Calendar.SUNDAY
705:ROR:<(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> endCutoff > Calendar.SUNDAY
706:ROR:<(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> endCutoff >= Calendar.SUNDAY
707:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> false
708:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):861:endCutoff < Calendar.SUNDAY |==> true
709:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):862:7 |==> 0
710:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):862:7 |==> -7
711:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):862:endCutoff += 7 |==> <NO-OP>
712:ROR:>(int,int):!=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> endCutoff != Calendar.SATURDAY
713:ROR:>(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> endCutoff < Calendar.SATURDAY
714:ROR:>(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> endCutoff <= Calendar.SATURDAY
715:ROR:>(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> endCutoff == Calendar.SATURDAY
716:ROR:>(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> endCutoff >= Calendar.SATURDAY
717:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> false
718:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):864:endCutoff > Calendar.SATURDAY |==> true
719:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):865:7 |==> 0
720:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):865:7 |==> -7
721:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):865:endCutoff -= 7 |==> <NO-OP>
722:ROR:!=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> start.get(Calendar.DAY_OF_WEEK) < startCutoff
723:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> start.get(Calendar.DAY_OF_WEEK) <= startCutoff
724:ROR:!=(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> start.get(Calendar.DAY_OF_WEEK) == startCutoff
725:ROR:!=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> start.get(Calendar.DAY_OF_WEEK) > startCutoff
726:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> start.get(Calendar.DAY_OF_WEEK) >= startCutoff
727:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> false
728:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):867:start.get(Calendar.DAY_OF_WEEK) != startCutoff |==> true
729:LVR:NEG:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):868:-1 |==> 0
730:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):868:-1 |==> 1
731:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):868:start.add(Calendar.DATE, -1) |==> <NO-OP>
732:ROR:!=(int,int):<(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> end.get(Calendar.DAY_OF_WEEK) < endCutoff
733:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> end.get(Calendar.DAY_OF_WEEK) <= endCutoff
734:ROR:!=(int,int):==(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> end.get(Calendar.DAY_OF_WEEK) == endCutoff
735:ROR:!=(int,int):>(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> end.get(Calendar.DAY_OF_WEEK) > endCutoff
736:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> end.get(Calendar.DAY_OF_WEEK) >= endCutoff
737:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> false
738:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):870:end.get(Calendar.DAY_OF_WEEK) != endCutoff |==> true
739:LVR:POS:0:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):871:1 |==> 0
740:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):871:1 |==> -1
741:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils@iterator(java.util.Calendar,int):871:end.add(Calendar.DATE, 1) |==> <NO-OP>
742:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.lang.Object,int):896:focus == null |==> focus != null
743:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.lang.Object,int):896:focus == null |==> false
744:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.time.DateUtils@iterator(java.lang.Object,int):896:focus == null |==> true
745:LVR:NEG:0:org.apache.commons.lang.time.DateUtils$DateIterator@<init>(java.util.Calendar,java.util.Calendar):925:-1 |==> 0
746:LVR:NEG:POS:org.apache.commons.lang.time.DateUtils$DateIterator@<init>(java.util.Calendar,java.util.Calendar):925:-1 |==> 1
747:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils$DateIterator@<init>(java.util.Calendar,java.util.Calendar):925:spot.add(Calendar.DATE, -1) |==> <NO-OP>
748:COR:spot.equals(endFinal):TRUE:org.apache.commons.lang.time.DateUtils$DateIterator@next():943:spot.equals(endFinal) |==> false
749:COR:spot.equals(endFinal):FALSE:org.apache.commons.lang.time.DateUtils$DateIterator@next():943:spot.equals(endFinal) |==> true
750:LVR:POS:0:org.apache.commons.lang.time.DateUtils$DateIterator@next():946:1 |==> 0
751:LVR:POS:NEG:org.apache.commons.lang.time.DateUtils$DateIterator@next():946:1 |==> -1
752:STD:<CALL>:<NO-OP>:org.apache.commons.lang.time.DateUtils$DateIterator@next():946:spot.add(Calendar.DATE, 1) |==> <NO-OP>