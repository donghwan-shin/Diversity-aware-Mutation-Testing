1:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:41:0L |==> 1L
2:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:41:0L |==> -1L
3:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:43:1L |==> 0L
4:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:43:1L |==> -1L
5:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:45:-1L |==> 0L
6:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:45:-1L |==> 1L
7:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:47:0 |==> 1
8:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:47:0 |==> -1
9:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:49:1 |==> 0
10:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:49:1 |==> -1
11:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:51:-1 |==> 0
12:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:51:-1 |==> 1
13:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:53:0 |==> 1
14:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:53:0 |==> -1
15:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:55:1 |==> 0
16:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:55:1 |==> -1
17:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:57:-1 |==> 0
18:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:57:-1 |==> 1
19:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:59:0 |==> 1
20:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:59:0 |==> -1
21:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:61:1 |==> 0
22:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:61:1 |==> -1
23:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils:63:-1 |==> 0
24:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils:63:-1 |==> 1
25:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:65:0.0 |==> 1.0
26:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:65:0.0 |==> -1.0
27:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:67:1.0 |==> 0.0
28:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:67:1.0 |==> -1.0
29:ORU:-(double):+(double):org.apache.commons.lang.math.NumberUtils:69:-1.0 |==> +1.0
30:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:69:1.0 |==> 0.0
31:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:69:1.0 |==> -1.0
32:LVR:0:POS:org.apache.commons.lang.math.NumberUtils:71:0.0F |==> 1.0F
33:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils:71:0.0F |==> -1.0F
34:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:73:1.0F |==> 0.0F
35:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:73:1.0F |==> -1.0F
36:ORU:-(float):+(float):org.apache.commons.lang.math.NumberUtils:75:-1.0F |==> +1.0F
37:LVR:POS:0:org.apache.commons.lang.math.NumberUtils:75:1.0F |==> 0.0F
38:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils:75:1.0F |==> -1.0F
39:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String):129:0 |==> 1
40:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String):129:0 |==> -1
41:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String,int):172:str == null |==> str != null
42:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String,int):172:str == null |==> false
43:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toInt(java.lang.String,int):172:str == null |==> true
44:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String):200:0L |==> 1L
45:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String):200:0L |==> -1L
46:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String,long):221:str == null |==> str != null
47:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String,long):221:str == null |==> false
48:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toLong(java.lang.String,long):221:str == null |==> true
49:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String):250:0.0F |==> 1.0F
50:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String):250:0.0F |==> -1.0F
51:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String,float):273:str == null |==> str != null
52:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String,float):273:str == null |==> false
53:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toFloat(java.lang.String,float):273:str == null |==> true
54:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String):302:0.0 |==> 1.0
55:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String):302:0.0 |==> -1.0
56:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String,double):325:str == null |==> str != null
57:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String,double):325:str == null |==> false
58:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@toDouble(java.lang.String,double):325:str == null |==> true
59:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):398:str == null |==> str != null
60:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):398:str == null |==> false
61:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):398:str == null |==> true
62:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):401:StringUtils.isBlank(str) |==> false
63:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):401:StringUtils.isBlank(str) |==> true
64:COR:str.startsWith("--"):TRUE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):404:str.startsWith("--") |==> false
65:COR:str.startsWith("--"):FALSE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):404:str.startsWith("--") |==> true
66:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("0x") != str.startsWith("-0x")
67:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("0x") && str.startsWith("-0x")
68:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("0x") == str.startsWith("-0x")
69:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> false
70:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("0x")
71:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> str.startsWith("-0x")
72:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):411:str.startsWith("0x") || str.startsWith("-0x") |==> true
73:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:1 |==> 0
74:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:1 |==> -1
75:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() % 1
76:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() * 1
77:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() + 1
78:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):414:str.length() - 1 |==> str.length() / 1
79:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') % str.indexOf('E')
80:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') * str.indexOf('E')
81:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') - str.indexOf('E')
82:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') / str.indexOf('E')
83:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:1 |==> 0
84:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:1 |==> -1
85:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) % 1
86:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) * 1
87:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> str.indexOf('e') + str.indexOf('E') - 1
88:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):419:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) / 1
89:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:-1 |==> 0
90:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:-1 |==> 1
91:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> decPos != -1
92:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> decPos < -1
93:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> decPos <= -1
94:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> decPos == -1
95:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> decPos >= -1
96:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> false
97:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):421:decPos > -1 |==> true
98:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:-1 |==> 0
99:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:-1 |==> 1
100:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> expPos != -1
101:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> expPos < -1
102:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> expPos <= -1
103:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> expPos == -1
104:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> expPos >= -1
105:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> false
106:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):423:expPos > -1 |==> true
107:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> expPos != decPos
108:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> expPos <= decPos
109:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> expPos == decPos
110:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> expPos > decPos
111:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> expPos >= decPos
112:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> false
113:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):424:expPos < decPos |==> true
114:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:1 |==> 0
115:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:1 |==> -1
116:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos % 1
117:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos * 1
118:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos - 1
119:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):427:decPos + 1 |==> decPos / 1
120:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:1 |==> 0
121:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:1 |==> -1
122:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos % 1
123:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos * 1
124:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos - 1
125:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):429:decPos + 1 |==> decPos / 1
126:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):431:0 |==> 1
127:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):431:0 |==> -1
128:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:-1 |==> 0
129:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:-1 |==> 1
130:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> expPos != -1
131:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> expPos < -1
132:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> expPos <= -1
133:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> expPos == -1
134:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> expPos >= -1
135:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> false
136:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):433:expPos > -1 |==> true
137:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):434:0 |==> 1
138:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):434:0 |==> -1
139:COR:Character.isDigit(lastChar):TRUE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):440:Character.isDigit(lastChar) |==> false
140:COR:Character.isDigit(lastChar):FALSE:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):440:Character.isDigit(lastChar) |==> true
141:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:-1 |==> 0
142:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:-1 |==> 1
143:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> expPos != -1
144:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> expPos < -1
145:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> expPos <= -1
146:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> expPos == -1
147:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> expPos >= -1
148:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> false
149:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 |==> true
150:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:1 |==> 0
151:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:1 |==> -1
152:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() % 1
153:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() * 1
154:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() + 1
155:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:str.length() - 1 |==> str.length() / 1
156:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> expPos != str.length() - 1
157:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> expPos <= str.length() - 1
158:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> expPos == str.length() - 1
159:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> expPos > str.length() - 1
160:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> expPos >= str.length() - 1
161:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> false
162:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos < str.length() - 1 |==> true
163:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 != expPos < str.length() - 1
164:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
165:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> false
166:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
167:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
168:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> true
169:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):441:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 || expPos < str.length() - 1
170:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> 0
171:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> -1
172:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos % 1
173:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos * 1
174:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos - 1
175:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:expPos + 1 |==> expPos / 1
176:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> 0
177:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:1 |==> -1
178:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() % 1
179:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() * 1
180:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() + 1
181:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):442:str.length() - 1 |==> str.length() / 1
182:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:0 |==> 1
183:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:0 |==> -1
184:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:1 |==> 0
185:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:1 |==> -1
186:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() % 1
187:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() * 1
188:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() + 1
189:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):447:str.length() - 1 |==> str.length() / 1
190:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) != isAllZeros(exp)
191:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
192:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> false
193:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
194:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
195:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> true
196:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):448:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) || isAllZeros(exp)
197:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null |==> dec != null
198:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null |==> false
199:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null |==> true
200:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:exp == null |==> exp != null
201:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:exp == null |==> false
202:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:exp == null |==> true
203:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null |==> dec == null != (exp == null)
204:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null |==> dec == null == (exp == null)
205:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:dec == null && exp == null |==> false
206:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null |==> dec == null
207:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:dec == null && exp == null |==> exp == null
208:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):453:dec == null && exp == null |==> true
209:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null |==> dec == null || exp == null
210:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:0 |==> 1
211:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:0 |==> -1
212:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> numeric.charAt(0) != '-'
213:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> numeric.charAt(0) < '-'
214:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> numeric.charAt(0) <= '-'
215:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> numeric.charAt(0) > '-'
216:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> numeric.charAt(0) >= '-'
217:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> false
218:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' |==> true
219:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:1 |==> 0
220:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:1 |==> -1
221:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' != isDigits(numeric.substring(1))
222:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' == isDigits(numeric.substring(1))
223:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> false
224:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-'
225:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> isDigits(numeric.substring(1))
226:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> true
227:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' || isDigits(numeric.substring(1))
228:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) != isDigits(numeric)
229:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) && isDigits(numeric)
230:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) == isDigits(numeric)
231:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> false
232:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> numeric.charAt(0) == '-' && isDigits(numeric.substring(1))
233:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> isDigits(numeric)
234:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> true
235:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (dec == null && exp == null) != (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
236:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (dec == null && exp == null) == (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
237:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> false
238:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> dec == null && exp == null
239:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
240:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):454:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> true
241:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):452:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> dec == null && exp == null || (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
242:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:0.0F |==> 1.0F
243:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:0.0F |==> -1.0F
244:ROR:==(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> f.floatValue() != 0.0F
245:ROR:==(float,float):<(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> f.floatValue() < 0.0F
246:ROR:==(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
247:ROR:==(float,float):>(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> f.floatValue() > 0.0F
248:ROR:==(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
249:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> false
250:ROR:==(float,float):TRUE(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F |==> true
251:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F != !allZeros
252:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
253:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> false
254:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
255:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> !allZeros
256:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> true
257:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F || !allZeros
258:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
259:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() && (f.floatValue() == 0.0F && !allZeros)
260:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() == (f.floatValue() == 0.0F && !allZeros)
261:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> false
262:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
263:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
264:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):468:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
265:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:0.0 |==> 1.0
266:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:0.0 |==> -1.0
267:ROR:==(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> d.floatValue() != 0.0
268:ROR:==(double,double):<(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> d.floatValue() < 0.0
269:ROR:==(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> d.floatValue() <= 0.0
270:ROR:==(double,double):>(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> d.floatValue() > 0.0
271:ROR:==(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> d.floatValue() >= 0.0
272:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> false
273:ROR:==(double,double):TRUE(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 |==> true
274:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 != !allZeros
275:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 == !allZeros
276:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> false
277:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0
278:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> !allZeros
279:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> true
280:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 || !allZeros
281:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.floatValue() == 0.0 && !allZeros)
282:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() && (d.floatValue() == 0.0 && !allZeros)
283:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() == (d.floatValue() == 0.0 && !allZeros)
284:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> false
285:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite()
286:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> (d.floatValue() == 0.0 && !allZeros)
287:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):482:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> true
288:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:-1 |==> 0
289:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:-1 |==> 1
290:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> expPos != -1
291:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> expPos < -1
292:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> expPos <= -1
293:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> expPos == -1
294:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> expPos >= -1
295:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> false
296:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 |==> true
297:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:1 |==> 0
298:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:1 |==> -1
299:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() % 1
300:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() * 1
301:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() + 1
302:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:str.length() - 1 |==> str.length() / 1
303:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> expPos != str.length() - 1
304:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> expPos <= str.length() - 1
305:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> expPos == str.length() - 1
306:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> expPos > str.length() - 1
307:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> expPos >= str.length() - 1
308:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> false
309:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos < str.length() - 1 |==> true
310:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 != expPos < str.length() - 1
311:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
312:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> false
313:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
314:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
315:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> true
316:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):501:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 || expPos < str.length() - 1
317:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:1 |==> 0
318:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:1 |==> -1
319:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos % 1
320:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos * 1
321:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos - 1
322:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):502:expPos + 1 |==> expPos / 1
323:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null |==> dec != null
324:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null |==> false
325:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null |==> true
326:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:exp == null |==> exp != null
327:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:exp == null |==> false
328:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:exp == null |==> true
329:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> dec == null != (exp == null)
330:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> dec == null == (exp == null)
331:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> false
332:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> dec == null
333:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> exp == null
334:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> true
335:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):506:dec == null && exp == null |==> dec == null || exp == null
336:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) != isAllZeros(exp)
337:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
338:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> false
339:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
340:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
341:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> true
342:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):522:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) || isAllZeros(exp)
343:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:0.0F |==> 1.0F
344:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:0.0F |==> -1.0F
345:ROR:==(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> f.floatValue() != 0.0F
346:ROR:==(float,float):<(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> f.floatValue() < 0.0F
347:ROR:==(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
348:ROR:==(float,float):>(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> f.floatValue() > 0.0F
349:ROR:==(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
350:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> false
351:ROR:==(float,float):TRUE(float,float):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F |==> true
352:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F != !allZeros
353:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
354:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> false
355:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
356:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> !allZeros
357:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> true
358:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F || !allZeros
359:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
360:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() && (f.floatValue() == 0.0F && !allZeros)
361:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() == (f.floatValue() == 0.0F && !allZeros)
362:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> false
363:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
364:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
365:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):525:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
366:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:0.0 |==> 1.0
367:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:0.0 |==> -1.0
368:ROR:==(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> d.doubleValue() != 0.0
369:ROR:==(double,double):<(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> d.doubleValue() < 0.0
370:ROR:==(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> d.doubleValue() <= 0.0
371:ROR:==(double,double):>(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> d.doubleValue() > 0.0
372:ROR:==(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> d.doubleValue() >= 0.0
373:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> false
374:ROR:==(double,double):TRUE(double,double):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 |==> true
375:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 != !allZeros
376:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 == !allZeros
377:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> false
378:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0
379:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> !allZeros
380:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> true
381:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 || !allZeros
382:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.doubleValue() == 0.0 && !allZeros)
383:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() && (d.doubleValue() == 0.0 && !allZeros)
384:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() == (d.doubleValue() == 0.0 && !allZeros)
385:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> false
386:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite()
387:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> (d.doubleValue() == 0.0 && !allZeros)
388:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@createNumber(java.lang.String):533:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> true
389:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):555:str == null |==> str != null
390:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):555:str == null |==> false
391:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):555:str == null |==> true
392:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):556:true |==> false
393:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:1 |==> 0
394:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:1 |==> -1
395:AOR:-(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() % 1
396:AOR:-(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() * 1
397:AOR:-(int,int):+(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() + 1
398:AOR:-(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:str.length() - 1 |==> str.length() / 1
399:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:0 |==> 1
400:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:0 |==> -1
401:ROR:>=(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> i != 0
402:ROR:>=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> i < 0
403:ROR:>=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> i <= 0
404:ROR:>=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> i == 0
405:ROR:>=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> i > 0
406:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> false
407:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):558:i >= 0 |==> true
408:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> str.charAt(i) < '0'
409:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> str.charAt(i) <= '0'
410:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> str.charAt(i) == '0'
411:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> str.charAt(i) > '0'
412:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> str.charAt(i) >= '0'
413:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> false
414:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):559:str.charAt(i) != '0' |==> true
415:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):560:false |==> true
416:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:0 |==> 1
417:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:0 |==> -1
418:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> str.length() != 0
419:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> str.length() < 0
420:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> str.length() <= 0
421:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> str.length() == 0
422:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> str.length() >= 0
423:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> false
424:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isAllZeros(java.lang.String):563:str.length() > 0 |==> true
425:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createFloat(java.lang.String):577:str == null |==> str != null
426:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createFloat(java.lang.String):577:str == null |==> false
427:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createFloat(java.lang.String):577:str == null |==> true
428:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createDouble(java.lang.String):593:str == null |==> str != null
429:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createDouble(java.lang.String):593:str == null |==> false
430:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createDouble(java.lang.String):593:str == null |==> true
431:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createInteger(java.lang.String):610:str == null |==> str != null
432:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createInteger(java.lang.String):610:str == null |==> false
433:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createInteger(java.lang.String):610:str == null |==> true
434:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createLong(java.lang.String):627:str == null |==> str != null
435:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createLong(java.lang.String):627:str == null |==> false
436:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createLong(java.lang.String):627:str == null |==> true
437:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigInteger(java.lang.String):643:str == null |==> str != null
438:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigInteger(java.lang.String):643:str == null |==> false
439:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigInteger(java.lang.String):643:str == null |==> true
440:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):659:str == null |==> str != null
441:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):659:str == null |==> false
442:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):659:str == null |==> true
443:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):663:StringUtils.isBlank(str) |==> false
444:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang.math.NumberUtils@createBigDecimal(java.lang.String):663:StringUtils.isBlank(str) |==> true
445:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):679:array1 == array2 |==> array1 != array2
446:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):679:array1 == array2 |==> false
447:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):679:array1 == array2 |==> true
448:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):680:true |==> false
449:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null |==> array1 != null
450:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null |==> false
451:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null |==> true
452:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array2 == null |==> array2 != null
453:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array2 == null |==> false
454:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array2 == null |==> true
455:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array1 == null != (array2 == null)
456:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array1 == null && array2 == null
457:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array1 == null == (array2 == null)
458:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> false
459:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array1 == null
460:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> array2 == null
461:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):682:array1 == null || array2 == null |==> true
462:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):683:false |==> true
463:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> array1.length < array2.length
464:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> array1.length <= array2.length
465:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> array1.length == array2.length
466:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> array1.length > array2.length
467:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> array1.length >= array2.length
468:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> false
469:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):685:array1.length != array2.length |==> true
470:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):686:false |==> true
471:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:0 |==> 1
472:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:0 |==> -1
473:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> i != array1.length
474:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> i <= array1.length
475:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> i == array1.length
476:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> i > array1.length
477:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> i >= array1.length
478:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> false
479:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):689:i < array1.length |==> true
480:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> array1[i] < array2[i]
481:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> array1[i] <= array2[i]
482:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> array1[i] == array2[i]
483:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> array1[i] > array2[i]
484:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> array1[i] >= array2[i]
485:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> false
486:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):690:array1[i] != array2[i] |==> true
487:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):691:false |==> true
488:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(byte[],byte[]):695:true |==> false
489:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):706:array1 == array2 |==> array1 != array2
490:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):706:array1 == array2 |==> false
491:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):706:array1 == array2 |==> true
492:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):707:true |==> false
493:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null |==> array1 != null
494:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null |==> false
495:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null |==> true
496:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array2 == null |==> array2 != null
497:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array2 == null |==> false
498:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array2 == null |==> true
499:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array1 == null != (array2 == null)
500:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array1 == null && array2 == null
501:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array1 == null == (array2 == null)
502:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> false
503:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array1 == null
504:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> array2 == null
505:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):709:array1 == null || array2 == null |==> true
506:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):710:false |==> true
507:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> array1.length < array2.length
508:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> array1.length <= array2.length
509:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> array1.length == array2.length
510:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> array1.length > array2.length
511:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> array1.length >= array2.length
512:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> false
513:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):712:array1.length != array2.length |==> true
514:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):713:false |==> true
515:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:0 |==> 1
516:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:0 |==> -1
517:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> i != array1.length
518:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> i <= array1.length
519:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> i == array1.length
520:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> i > array1.length
521:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> i >= array1.length
522:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> false
523:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):716:i < array1.length |==> true
524:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> array1[i] < array2[i]
525:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> array1[i] <= array2[i]
526:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> array1[i] == array2[i]
527:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> array1[i] > array2[i]
528:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> array1[i] >= array2[i]
529:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> false
530:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):717:array1[i] != array2[i] |==> true
531:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):718:false |==> true
532:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(short[],short[]):722:true |==> false
533:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):733:array1 == array2 |==> array1 != array2
534:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):733:array1 == array2 |==> false
535:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):733:array1 == array2 |==> true
536:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):734:true |==> false
537:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null |==> array1 != null
538:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null |==> false
539:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null |==> true
540:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array2 == null |==> array2 != null
541:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array2 == null |==> false
542:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array2 == null |==> true
543:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array1 == null != (array2 == null)
544:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array1 == null && array2 == null
545:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array1 == null == (array2 == null)
546:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> false
547:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array1 == null
548:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> array2 == null
549:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):736:array1 == null || array2 == null |==> true
550:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):737:false |==> true
551:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> array1.length < array2.length
552:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> array1.length <= array2.length
553:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> array1.length == array2.length
554:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> array1.length > array2.length
555:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> array1.length >= array2.length
556:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> false
557:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):739:array1.length != array2.length |==> true
558:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):740:false |==> true
559:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:0 |==> 1
560:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:0 |==> -1
561:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> i != array1.length
562:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> i <= array1.length
563:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> i == array1.length
564:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> i > array1.length
565:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> i >= array1.length
566:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> false
567:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):743:i < array1.length |==> true
568:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> array1[i] < array2[i]
569:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> array1[i] <= array2[i]
570:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> array1[i] == array2[i]
571:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> array1[i] > array2[i]
572:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> array1[i] >= array2[i]
573:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> false
574:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):744:array1[i] != array2[i] |==> true
575:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):745:false |==> true
576:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(int[],int[]):749:true |==> false
577:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):760:array1 == array2 |==> array1 != array2
578:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):760:array1 == array2 |==> false
579:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):760:array1 == array2 |==> true
580:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):761:true |==> false
581:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null |==> array1 != null
582:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null |==> false
583:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null |==> true
584:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array2 == null |==> array2 != null
585:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array2 == null |==> false
586:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array2 == null |==> true
587:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array1 == null != (array2 == null)
588:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array1 == null && array2 == null
589:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array1 == null == (array2 == null)
590:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> false
591:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array1 == null
592:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> array2 == null
593:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):763:array1 == null || array2 == null |==> true
594:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):764:false |==> true
595:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> array1.length < array2.length
596:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> array1.length <= array2.length
597:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> array1.length == array2.length
598:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> array1.length > array2.length
599:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> array1.length >= array2.length
600:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> false
601:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):766:array1.length != array2.length |==> true
602:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):767:false |==> true
603:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:0 |==> 1
604:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:0 |==> -1
605:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> i != array1.length
606:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> i <= array1.length
607:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> i == array1.length
608:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> i > array1.length
609:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> i >= array1.length
610:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> false
611:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):770:i < array1.length |==> true
612:ROR:!=(long,long):<(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> array1[i] < array2[i]
613:ROR:!=(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> array1[i] <= array2[i]
614:ROR:!=(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> array1[i] == array2[i]
615:ROR:!=(long,long):>(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> array1[i] > array2[i]
616:ROR:!=(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> array1[i] >= array2[i]
617:ROR:!=(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> false
618:ROR:!=(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):771:array1[i] != array2[i] |==> true
619:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):772:false |==> true
620:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(long[],long[]):776:true |==> false
621:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):787:array1 == array2 |==> array1 != array2
622:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):787:array1 == array2 |==> false
623:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):787:array1 == array2 |==> true
624:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):788:true |==> false
625:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null |==> array1 != null
626:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null |==> false
627:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null |==> true
628:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array2 == null |==> array2 != null
629:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array2 == null |==> false
630:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array2 == null |==> true
631:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array1 == null != (array2 == null)
632:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array1 == null && array2 == null
633:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array1 == null == (array2 == null)
634:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> false
635:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array1 == null
636:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> array2 == null
637:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):790:array1 == null || array2 == null |==> true
638:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):791:false |==> true
639:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> array1.length < array2.length
640:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> array1.length <= array2.length
641:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> array1.length == array2.length
642:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> array1.length > array2.length
643:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> array1.length >= array2.length
644:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> false
645:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):793:array1.length != array2.length |==> true
646:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):794:false |==> true
647:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:0 |==> 1
648:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:0 |==> -1
649:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> i != array1.length
650:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> i <= array1.length
651:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> i == array1.length
652:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> i > array1.length
653:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> i >= array1.length
654:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> false
655:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):797:i < array1.length |==> true
656:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:0 |==> 1
657:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:0 |==> -1
658:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) < 0
659:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) <= 0
660:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) == 0
661:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) > 0
662:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) >= 0
663:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> false
664:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):798:compare(array1[i], array2[i]) != 0 |==> true
665:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):799:false |==> true
666:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(float[],float[]):803:true |==> false
667:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):814:array1 == array2 |==> array1 != array2
668:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):814:array1 == array2 |==> false
669:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):814:array1 == array2 |==> true
670:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):815:true |==> false
671:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null |==> array1 != null
672:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null |==> false
673:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null |==> true
674:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array2 == null |==> array2 != null
675:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array2 == null |==> false
676:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array2 == null |==> true
677:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array1 == null != (array2 == null)
678:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array1 == null && array2 == null
679:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array1 == null == (array2 == null)
680:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> false
681:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array1 == null
682:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> array2 == null
683:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):817:array1 == null || array2 == null |==> true
684:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):818:false |==> true
685:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> array1.length < array2.length
686:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> array1.length <= array2.length
687:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> array1.length == array2.length
688:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> array1.length > array2.length
689:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> array1.length >= array2.length
690:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> false
691:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):820:array1.length != array2.length |==> true
692:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):821:false |==> true
693:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:0 |==> 1
694:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:0 |==> -1
695:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> i != array1.length
696:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> i <= array1.length
697:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> i == array1.length
698:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> i > array1.length
699:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> i >= array1.length
700:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> false
701:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):824:i < array1.length |==> true
702:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:0 |==> 1
703:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:0 |==> -1
704:ROR:!=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) < 0
705:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) <= 0
706:ROR:!=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) == 0
707:ROR:!=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) > 0
708:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> compare(array1[i], array2[i]) >= 0
709:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> false
710:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):825:compare(array1[i], array2[i]) != 0 |==> true
711:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):826:false |==> true
712:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@equals(double[],double[]):830:true |==> false
713:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(long[]):845:array == null |==> array != null
714:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(long[]):845:array == null |==> false
715:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(long[]):845:array == null |==> true
716:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(long[]):847:0 |==> 1
717:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(long[]):847:0 |==> -1
718:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> array.length != 0
719:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> array.length < 0
720:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> array.length <= 0
721:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> array.length > 0
722:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> array.length >= 0
723:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> false
724:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):847:array.length == 0 |==> true
725:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(long[]):852:0 |==> 1
726:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(long[]):852:0 |==> -1
727:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(long[]):853:1 |==> 0
728:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(long[]):853:1 |==> -1
729:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> i != array.length
730:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> i <= array.length
731:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> i == array.length
732:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> i > array.length
733:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> i >= array.length
734:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> false
735:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(long[]):853:i < array.length |==> true
736:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> array[i] != min
737:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> array[i] <= min
738:ROR:<(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> array[i] == min
739:ROR:<(long,long):>(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> array[i] > min
740:ROR:<(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> array[i] >= min
741:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> false
742:ROR:<(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@min(long[]):854:array[i] < min |==> true
743:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(long[]):855:min = array[i] |==> <NO-OP>
744:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(int[]):872:array == null |==> array != null
745:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(int[]):872:array == null |==> false
746:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(int[]):872:array == null |==> true
747:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(int[]):874:0 |==> 1
748:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(int[]):874:0 |==> -1
749:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> array.length != 0
750:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> array.length < 0
751:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> array.length <= 0
752:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> array.length > 0
753:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> array.length >= 0
754:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> false
755:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):874:array.length == 0 |==> true
756:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(int[]):879:0 |==> 1
757:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(int[]):879:0 |==> -1
758:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(int[]):880:1 |==> 0
759:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(int[]):880:1 |==> -1
760:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> j != array.length
761:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> j <= array.length
762:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> j == array.length
763:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> j > array.length
764:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> j >= array.length
765:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> false
766:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):880:j < array.length |==> true
767:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> array[j] != min
768:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> array[j] <= min
769:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> array[j] == min
770:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> array[j] > min
771:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> array[j] >= min
772:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> false
773:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(int[]):881:array[j] < min |==> true
774:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(int[]):882:min = array[j] |==> <NO-OP>
775:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(short[]):899:array == null |==> array != null
776:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(short[]):899:array == null |==> false
777:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(short[]):899:array == null |==> true
778:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(short[]):901:0 |==> 1
779:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(short[]):901:0 |==> -1
780:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> array.length != 0
781:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> array.length < 0
782:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> array.length <= 0
783:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> array.length > 0
784:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> array.length >= 0
785:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> false
786:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):901:array.length == 0 |==> true
787:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(short[]):906:0 |==> 1
788:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(short[]):906:0 |==> -1
789:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(short[]):907:1 |==> 0
790:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(short[]):907:1 |==> -1
791:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> i != array.length
792:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> i <= array.length
793:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> i == array.length
794:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> i > array.length
795:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> i >= array.length
796:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> false
797:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):907:i < array.length |==> true
798:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> array[i] != min
799:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> array[i] <= min
800:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> array[i] == min
801:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> array[i] > min
802:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> array[i] >= min
803:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> false
804:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(short[]):908:array[i] < min |==> true
805:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(short[]):909:min = array[i] |==> <NO-OP>
806:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(byte[]):926:array == null |==> array != null
807:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(byte[]):926:array == null |==> false
808:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(byte[]):926:array == null |==> true
809:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(byte[]):928:0 |==> 1
810:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(byte[]):928:0 |==> -1
811:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> array.length != 0
812:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> array.length < 0
813:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> array.length <= 0
814:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> array.length > 0
815:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> array.length >= 0
816:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> false
817:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):928:array.length == 0 |==> true
818:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(byte[]):933:0 |==> 1
819:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(byte[]):933:0 |==> -1
820:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(byte[]):934:1 |==> 0
821:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(byte[]):934:1 |==> -1
822:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> i != array.length
823:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> i <= array.length
824:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> i == array.length
825:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> i > array.length
826:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> i >= array.length
827:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> false
828:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):934:i < array.length |==> true
829:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> array[i] != min
830:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> array[i] <= min
831:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> array[i] == min
832:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> array[i] > min
833:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> array[i] >= min
834:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> false
835:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte[]):935:array[i] < min |==> true
836:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(byte[]):936:min = array[i] |==> <NO-OP>
837:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(double[]):953:array == null |==> array != null
838:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(double[]):953:array == null |==> false
839:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(double[]):953:array == null |==> true
840:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(double[]):955:0 |==> 1
841:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(double[]):955:0 |==> -1
842:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> array.length != 0
843:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> array.length < 0
844:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> array.length <= 0
845:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> array.length > 0
846:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> array.length >= 0
847:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> false
848:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):955:array.length == 0 |==> true
849:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(double[]):960:0 |==> 1
850:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(double[]):960:0 |==> -1
851:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(double[]):961:1 |==> 0
852:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(double[]):961:1 |==> -1
853:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> i != array.length
854:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> i <= array.length
855:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> i == array.length
856:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> i > array.length
857:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> i >= array.length
858:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> false
859:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(double[]):961:i < array.length |==> true
860:ROR:<(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> array[i] != min
861:ROR:<(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> array[i] <= min
862:ROR:<(double,double):==(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> array[i] == min
863:ROR:<(double,double):>(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> array[i] > min
864:ROR:<(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> array[i] >= min
865:ROR:<(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> false
866:ROR:<(double,double):TRUE(double,double):org.apache.commons.lang.math.NumberUtils@min(double[]):962:array[i] < min |==> true
867:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(double[]):963:min = array[i] |==> <NO-OP>
868:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(float[]):980:array == null |==> array != null
869:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(float[]):980:array == null |==> false
870:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@min(float[]):980:array == null |==> true
871:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(float[]):982:0 |==> 1
872:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(float[]):982:0 |==> -1
873:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> array.length != 0
874:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> array.length < 0
875:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> array.length <= 0
876:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> array.length > 0
877:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> array.length >= 0
878:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> false
879:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):982:array.length == 0 |==> true
880:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@min(float[]):987:0 |==> 1
881:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@min(float[]):987:0 |==> -1
882:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@min(float[]):988:1 |==> 0
883:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@min(float[]):988:1 |==> -1
884:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> i != array.length
885:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> i <= array.length
886:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> i == array.length
887:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> i > array.length
888:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> i >= array.length
889:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> false
890:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(float[]):988:i < array.length |==> true
891:ROR:<(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> array[i] != min
892:ROR:<(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> array[i] <= min
893:ROR:<(float,float):==(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> array[i] == min
894:ROR:<(float,float):>(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> array[i] > min
895:ROR:<(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> array[i] >= min
896:ROR:<(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> false
897:ROR:<(float,float):TRUE(float,float):org.apache.commons.lang.math.NumberUtils@min(float[]):989:array[i] < min |==> true
898:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(float[]):990:min = array[i] |==> <NO-OP>
899:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(long[]):1009:array == null |==> array != null
900:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(long[]):1009:array == null |==> false
901:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(long[]):1009:array == null |==> true
902:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(long[]):1011:0 |==> 1
903:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(long[]):1011:0 |==> -1
904:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> array.length != 0
905:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> array.length < 0
906:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> array.length <= 0
907:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> array.length > 0
908:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> array.length >= 0
909:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> false
910:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1011:array.length == 0 |==> true
911:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(long[]):1016:0 |==> 1
912:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(long[]):1016:0 |==> -1
913:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(long[]):1017:1 |==> 0
914:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(long[]):1017:1 |==> -1
915:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> j != array.length
916:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> j <= array.length
917:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> j == array.length
918:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> j > array.length
919:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> j >= array.length
920:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> false
921:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(long[]):1017:j < array.length |==> true
922:ROR:>(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> array[j] != max
923:ROR:>(long,long):<(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> array[j] < max
924:ROR:>(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> array[j] <= max
925:ROR:>(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> array[j] == max
926:ROR:>(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> array[j] >= max
927:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> false
928:ROR:>(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@max(long[]):1018:array[j] > max |==> true
929:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(long[]):1019:max = array[j] |==> <NO-OP>
930:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(int[]):1036:array == null |==> array != null
931:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(int[]):1036:array == null |==> false
932:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(int[]):1036:array == null |==> true
933:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(int[]):1038:0 |==> 1
934:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(int[]):1038:0 |==> -1
935:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> array.length != 0
936:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> array.length < 0
937:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> array.length <= 0
938:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> array.length > 0
939:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> array.length >= 0
940:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> false
941:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1038:array.length == 0 |==> true
942:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(int[]):1043:0 |==> 1
943:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(int[]):1043:0 |==> -1
944:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(int[]):1044:1 |==> 0
945:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(int[]):1044:1 |==> -1
946:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> j != array.length
947:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> j <= array.length
948:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> j == array.length
949:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> j > array.length
950:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> j >= array.length
951:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> false
952:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1044:j < array.length |==> true
953:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> array[j] != max
954:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> array[j] < max
955:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> array[j] <= max
956:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> array[j] == max
957:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> array[j] >= max
958:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> false
959:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(int[]):1045:array[j] > max |==> true
960:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(int[]):1046:max = array[j] |==> <NO-OP>
961:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(short[]):1063:array == null |==> array != null
962:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(short[]):1063:array == null |==> false
963:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(short[]):1063:array == null |==> true
964:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(short[]):1065:0 |==> 1
965:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(short[]):1065:0 |==> -1
966:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> array.length != 0
967:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> array.length < 0
968:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> array.length <= 0
969:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> array.length > 0
970:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> array.length >= 0
971:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> false
972:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1065:array.length == 0 |==> true
973:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(short[]):1070:0 |==> 1
974:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(short[]):1070:0 |==> -1
975:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(short[]):1071:1 |==> 0
976:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(short[]):1071:1 |==> -1
977:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> i != array.length
978:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> i <= array.length
979:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> i == array.length
980:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> i > array.length
981:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> i >= array.length
982:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> false
983:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1071:i < array.length |==> true
984:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> array[i] != max
985:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> array[i] < max
986:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> array[i] <= max
987:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> array[i] == max
988:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> array[i] >= max
989:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> false
990:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(short[]):1072:array[i] > max |==> true
991:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(short[]):1073:max = array[i] |==> <NO-OP>
992:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(byte[]):1090:array == null |==> array != null
993:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(byte[]):1090:array == null |==> false
994:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(byte[]):1090:array == null |==> true
995:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:0 |==> 1
996:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:0 |==> -1
997:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> array.length != 0
998:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> array.length < 0
999:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> array.length <= 0
1000:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> array.length > 0
1001:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> array.length >= 0
1002:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> false
1003:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1092:array.length == 0 |==> true
1004:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(byte[]):1097:0 |==> 1
1005:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(byte[]):1097:0 |==> -1
1006:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:1 |==> 0
1007:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:1 |==> -1
1008:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> i != array.length
1009:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> i <= array.length
1010:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> i == array.length
1011:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> i > array.length
1012:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> i >= array.length
1013:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> false
1014:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1098:i < array.length |==> true
1015:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> array[i] != max
1016:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> array[i] < max
1017:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> array[i] <= max
1018:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> array[i] == max
1019:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> array[i] >= max
1020:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> false
1021:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte[]):1099:array[i] > max |==> true
1022:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(byte[]):1100:max = array[i] |==> <NO-OP>
1023:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(double[]):1117:array == null |==> array != null
1024:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(double[]):1117:array == null |==> false
1025:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(double[]):1117:array == null |==> true
1026:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(double[]):1119:0 |==> 1
1027:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(double[]):1119:0 |==> -1
1028:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> array.length != 0
1029:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> array.length < 0
1030:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> array.length <= 0
1031:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> array.length > 0
1032:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> array.length >= 0
1033:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> false
1034:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1119:array.length == 0 |==> true
1035:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(double[]):1124:0 |==> 1
1036:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(double[]):1124:0 |==> -1
1037:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(double[]):1125:1 |==> 0
1038:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(double[]):1125:1 |==> -1
1039:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> j != array.length
1040:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> j <= array.length
1041:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> j == array.length
1042:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> j > array.length
1043:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> j >= array.length
1044:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> false
1045:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(double[]):1125:j < array.length |==> true
1046:ROR:>(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> array[j] != max
1047:ROR:>(double,double):<(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> array[j] < max
1048:ROR:>(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> array[j] <= max
1049:ROR:>(double,double):==(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> array[j] == max
1050:ROR:>(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> array[j] >= max
1051:ROR:>(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> false
1052:ROR:>(double,double):TRUE(double,double):org.apache.commons.lang.math.NumberUtils@max(double[]):1126:array[j] > max |==> true
1053:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(double[]):1127:max = array[j] |==> <NO-OP>
1054:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(float[]):1144:array == null |==> array != null
1055:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(float[]):1144:array == null |==> false
1056:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.math.NumberUtils@max(float[]):1144:array == null |==> true
1057:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(float[]):1146:0 |==> 1
1058:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(float[]):1146:0 |==> -1
1059:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> array.length != 0
1060:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> array.length < 0
1061:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> array.length <= 0
1062:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> array.length > 0
1063:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> array.length >= 0
1064:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> false
1065:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1146:array.length == 0 |==> true
1066:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@max(float[]):1151:0 |==> 1
1067:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@max(float[]):1151:0 |==> -1
1068:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@max(float[]):1152:1 |==> 0
1069:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@max(float[]):1152:1 |==> -1
1070:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> j != array.length
1071:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> j <= array.length
1072:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> j == array.length
1073:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> j > array.length
1074:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> j >= array.length
1075:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> false
1076:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(float[]):1152:j < array.length |==> true
1077:ROR:>(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> array[j] != max
1078:ROR:>(float,float):<(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> array[j] < max
1079:ROR:>(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> array[j] <= max
1080:ROR:>(float,float):==(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> array[j] == max
1081:ROR:>(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> array[j] >= max
1082:ROR:>(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> false
1083:ROR:>(float,float):TRUE(float,float):org.apache.commons.lang.math.NumberUtils@max(float[]):1153:array[j] > max |==> true
1084:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(float[]):1154:max = array[j] |==> <NO-OP>
1085:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> b != a
1086:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> b <= a
1087:ROR:<(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> b == a
1088:ROR:<(long,long):>(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> b > a
1089:ROR:<(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> b >= a
1090:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> false
1091:ROR:<(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1172:b < a |==> true
1092:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(long,long,long):1173:a = b |==> <NO-OP>
1093:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> c != a
1094:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> c <= a
1095:ROR:<(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> c == a
1096:ROR:<(long,long):>(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> c > a
1097:ROR:<(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> c >= a
1098:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> false
1099:ROR:<(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@min(long,long,long):1175:c < a |==> true
1100:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(long,long,long):1176:a = c |==> <NO-OP>
1101:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> b != a
1102:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> b <= a
1103:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> b == a
1104:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> b > a
1105:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> b >= a
1106:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> false
1107:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1190:b < a |==> true
1108:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(int,int,int):1191:a = b |==> <NO-OP>
1109:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> c != a
1110:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> c <= a
1111:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> c == a
1112:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> c > a
1113:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> c >= a
1114:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> false
1115:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(int,int,int):1193:c < a |==> true
1116:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(int,int,int):1194:a = c |==> <NO-OP>
1117:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> b != a
1118:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> b <= a
1119:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> b == a
1120:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> b > a
1121:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> b >= a
1122:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> false
1123:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1208:b < a |==> true
1124:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(short,short,short):1209:a = b |==> <NO-OP>
1125:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> c != a
1126:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> c <= a
1127:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> c == a
1128:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> c > a
1129:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> c >= a
1130:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> false
1131:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(short,short,short):1211:c < a |==> true
1132:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(short,short,short):1212:a = c |==> <NO-OP>
1133:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> b != a
1134:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> b <= a
1135:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> b == a
1136:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> b > a
1137:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> b >= a
1138:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> false
1139:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1226:b < a |==> true
1140:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1227:a = b |==> <NO-OP>
1141:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> c != a
1142:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> c <= a
1143:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> c == a
1144:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> c > a
1145:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> c >= a
1146:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> false
1147:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1229:c < a |==> true
1148:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@min(byte,byte,byte):1230:a = c |==> <NO-OP>
1149:ROR:>(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> b != a
1150:ROR:>(long,long):<(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> b < a
1151:ROR:>(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> b <= a
1152:ROR:>(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> b == a
1153:ROR:>(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> b >= a
1154:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> false
1155:ROR:>(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1276:b > a |==> true
1156:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(long,long,long):1277:a = b |==> <NO-OP>
1157:ROR:>(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> c != a
1158:ROR:>(long,long):<(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> c < a
1159:ROR:>(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> c <= a
1160:ROR:>(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> c == a
1161:ROR:>(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> c >= a
1162:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> false
1163:ROR:>(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@max(long,long,long):1279:c > a |==> true
1164:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(long,long,long):1280:a = c |==> <NO-OP>
1165:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> b != a
1166:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> b < a
1167:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> b <= a
1168:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> b == a
1169:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> b >= a
1170:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> false
1171:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1294:b > a |==> true
1172:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(int,int,int):1295:a = b |==> <NO-OP>
1173:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> c != a
1174:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> c < a
1175:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> c <= a
1176:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> c == a
1177:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> c >= a
1178:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> false
1179:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(int,int,int):1297:c > a |==> true
1180:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(int,int,int):1298:a = c |==> <NO-OP>
1181:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> b != a
1182:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> b < a
1183:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> b <= a
1184:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> b == a
1185:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> b >= a
1186:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> false
1187:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1312:b > a |==> true
1188:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(short,short,short):1313:a = b |==> <NO-OP>
1189:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> c != a
1190:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> c < a
1191:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> c <= a
1192:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> c == a
1193:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> c >= a
1194:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> false
1195:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(short,short,short):1315:c > a |==> true
1196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(short,short,short):1316:a = c |==> <NO-OP>
1197:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> b != a
1198:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> b < a
1199:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> b <= a
1200:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> b == a
1201:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> b >= a
1202:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> false
1203:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1330:b > a |==> true
1204:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1331:a = b |==> <NO-OP>
1205:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> c != a
1206:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> c < a
1207:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> c <= a
1208:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> c == a
1209:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> c >= a
1210:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> false
1211:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1333:c > a |==> true
1212:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@max(byte,byte,byte):1334:a = c |==> <NO-OP>
1213:ROR:<(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> lhs != rhs
1214:ROR:<(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> lhs <= rhs
1215:ROR:<(double,double):==(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> lhs == rhs
1216:ROR:<(double,double):>(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> lhs > rhs
1217:ROR:<(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> lhs >= rhs
1218:ROR:<(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> false
1219:ROR:<(double,double):TRUE(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1405:lhs < rhs |==> true
1220:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1406:-1 |==> 0
1221:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(double,double):1406:-1 |==> 1
1222:ROR:>(double,double):!=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> lhs != rhs
1223:ROR:>(double,double):<(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> lhs < rhs
1224:ROR:>(double,double):<=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> lhs <= rhs
1225:ROR:>(double,double):==(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> lhs == rhs
1226:ROR:>(double,double):>=(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> lhs >= rhs
1227:ROR:>(double,double):FALSE(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> false
1228:ROR:>(double,double):TRUE(double,double):org.apache.commons.lang.math.NumberUtils@compare(double,double):1408:lhs > rhs |==> true
1229:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:+1 |==> -1
1230:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:+1 |==> ~1
1231:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:1 |==> 0
1232:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(double,double):1409:1 |==> -1
1233:ROR:==(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> lhsBits != rhsBits
1234:ROR:==(long,long):<(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> lhsBits < rhsBits
1235:ROR:==(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> lhsBits <= rhsBits
1236:ROR:==(long,long):>(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> lhsBits > rhsBits
1237:ROR:==(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> lhsBits >= rhsBits
1238:ROR:==(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> false
1239:ROR:==(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1417:lhsBits == rhsBits |==> true
1240:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@compare(double,double):1418:0 |==> 1
1241:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@compare(double,double):1418:0 |==> -1
1242:ROR:<(long,long):!=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> lhsBits != rhsBits
1243:ROR:<(long,long):<=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> lhsBits <= rhsBits
1244:ROR:<(long,long):==(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> lhsBits == rhsBits
1245:ROR:<(long,long):>(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> lhsBits > rhsBits
1246:ROR:<(long,long):>=(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> lhsBits >= rhsBits
1247:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> false
1248:ROR:<(long,long):TRUE(long,long):org.apache.commons.lang.math.NumberUtils@compare(double,double):1426:lhsBits < rhsBits |==> true
1249:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1427:-1 |==> 0
1250:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(double,double):1427:-1 |==> 1
1251:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:+1 |==> -1
1252:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:+1 |==> ~1
1253:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:1 |==> 0
1254:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(double,double):1429:1 |==> -1
1255:ROR:<(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> lhs != rhs
1256:ROR:<(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> lhs <= rhs
1257:ROR:<(float,float):==(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> lhs == rhs
1258:ROR:<(float,float):>(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> lhs > rhs
1259:ROR:<(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> lhs >= rhs
1260:ROR:<(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> false
1261:ROR:<(float,float):TRUE(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1466:lhs < rhs |==> true
1262:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1467:-1 |==> 0
1263:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(float,float):1467:-1 |==> 1
1264:ROR:>(float,float):!=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> lhs != rhs
1265:ROR:>(float,float):<(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> lhs < rhs
1266:ROR:>(float,float):<=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> lhs <= rhs
1267:ROR:>(float,float):==(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> lhs == rhs
1268:ROR:>(float,float):>=(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> lhs >= rhs
1269:ROR:>(float,float):FALSE(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> false
1270:ROR:>(float,float):TRUE(float,float):org.apache.commons.lang.math.NumberUtils@compare(float,float):1469:lhs > rhs |==> true
1271:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:+1 |==> -1
1272:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:+1 |==> ~1
1273:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:1 |==> 0
1274:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(float,float):1470:1 |==> -1
1275:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> lhsBits != rhsBits
1276:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> lhsBits < rhsBits
1277:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> lhsBits <= rhsBits
1278:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> lhsBits > rhsBits
1279:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> lhsBits >= rhsBits
1280:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> false
1281:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1478:lhsBits == rhsBits |==> true
1282:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@compare(float,float):1479:0 |==> 1
1283:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@compare(float,float):1479:0 |==> -1
1284:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> lhsBits != rhsBits
1285:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> lhsBits <= rhsBits
1286:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> lhsBits == rhsBits
1287:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> lhsBits > rhsBits
1288:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> lhsBits >= rhsBits
1289:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> false
1290:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1487:lhsBits < rhsBits |==> true
1291:LVR:NEG:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1488:-1 |==> 0
1292:LVR:NEG:POS:org.apache.commons.lang.math.NumberUtils@compare(float,float):1488:-1 |==> 1
1293:ORU:+(int):-(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:+1 |==> -1
1294:ORU:+(int):~(int):org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:+1 |==> ~1
1295:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:1 |==> 0
1296:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@compare(float,float):1490:1 |==> -1
1297:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1506:StringUtils.isEmpty(str) |==> false
1298:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1506:StringUtils.isEmpty(str) |==> true
1299:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1507:false |==> true
1300:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:0 |==> 1
1301:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:0 |==> -1
1302:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> i != str.length()
1303:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> i <= str.length()
1304:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> i == str.length()
1305:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> i > str.length()
1306:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> i >= str.length()
1307:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> false
1308:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1509:i < str.length() |==> true
1309:COR:Character.isDigit(str.charAt(i)):TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1510:Character.isDigit(str.charAt(i)) |==> false
1310:COR:Character.isDigit(str.charAt(i)):FALSE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1510:Character.isDigit(str.charAt(i)) |==> true
1311:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1511:false |==> true
1312:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isDigits(java.lang.String):1514:true |==> false
1313:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1531:StringUtils.isEmpty(str) |==> false
1314:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1531:StringUtils.isEmpty(str) |==> true
1315:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1532:false |==> true
1316:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1536:false |==> true
1317:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1537:false |==> true
1318:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1538:false |==> true
1319:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1539:false |==> true
1320:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> 1
1321:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> -1
1322:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> chars[0] != '-'
1323:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> chars[0] < '-'
1324:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> chars[0] <= '-'
1325:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> chars[0] > '-'
1326:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> chars[0] >= '-'
1327:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> false
1328:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:chars[0] == '-' |==> true
1329:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:1 |==> 0
1330:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:1 |==> -1
1331:LVR:0:POS:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> 1
1332:LVR:0:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1541:0 |==> -1
1333:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:1 |==> 0
1334:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:1 |==> -1
1335:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start % 1
1336:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start * 1
1337:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start - 1
1338:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:start + 1 |==> start / 1
1339:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> sz != start + 1
1340:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> sz < start + 1
1341:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> sz <= start + 1
1342:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> sz == start + 1
1343:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> sz >= start + 1
1344:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> false
1345:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1542:sz > start + 1 |==> true
1346:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> chars[start] != '0'
1347:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> chars[start] < '0'
1348:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> chars[start] <= '0'
1349:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> chars[start] > '0'
1350:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> chars[start] >= '0'
1351:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> false
1352:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' |==> true
1353:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:1 |==> 0
1354:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:1 |==> -1
1355:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start % 1
1356:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start * 1
1357:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start - 1
1358:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:start + 1 |==> start / 1
1359:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> chars[start + 1] != 'x'
1360:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> chars[start + 1] < 'x'
1361:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> chars[start + 1] <= 'x'
1362:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> chars[start + 1] > 'x'
1363:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> chars[start + 1] >= 'x'
1364:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> false
1365:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start + 1] == 'x' |==> true
1366:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start] == '0' != (chars[start + 1] == 'x')
1367:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start] == '0' == (chars[start + 1] == 'x')
1368:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> false
1369:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start] == '0'
1370:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start + 1] == 'x'
1371:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> true
1372:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1543:chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start] == '0' || chars[start + 1] == 'x'
1373:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:2 |==> 0
1374:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:2 |==> -2
1375:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start % 2
1376:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start * 2
1377:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start - 2
1378:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1544:start + 2 |==> start / 2
1379:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> i != sz
1380:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> i < sz
1381:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> i <= sz
1382:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> i > sz
1383:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> i >= sz
1384:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> false
1385:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1545:i == sz |==> true
1386:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1546:false |==> true
1387:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> i != chars.length
1388:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> i <= chars.length
1389:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> i == chars.length
1390:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> i > chars.length
1391:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> i >= chars.length
1392:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> false
1393:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1549:i < chars.length |==> true
1394:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> chars[i] != '0'
1395:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> chars[i] <= '0'
1396:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> chars[i] == '0'
1397:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> chars[i] > '0'
1398:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> chars[i] >= '0'
1399:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> false
1400:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' |==> true
1401:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> chars[i] != '9'
1402:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> chars[i] < '9'
1403:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> chars[i] <= '9'
1404:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> chars[i] == '9'
1405:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> chars[i] >= '9'
1406:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> false
1407:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] > '9' |==> true
1408:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' != chars[i] > '9'
1409:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' && chars[i] > '9'
1410:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' == chars[i] > '9'
1411:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> false
1412:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0'
1413:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> chars[i] > '9'
1414:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:chars[i] < '0' || chars[i] > '9' |==> true
1415:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> chars[i] != 'a'
1416:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> chars[i] <= 'a'
1417:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> chars[i] == 'a'
1418:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> chars[i] > 'a'
1419:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> chars[i] >= 'a'
1420:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> false
1421:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' |==> true
1422:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> chars[i] != 'f'
1423:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> chars[i] < 'f'
1424:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> chars[i] <= 'f'
1425:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> chars[i] == 'f'
1426:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> chars[i] >= 'f'
1427:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> false
1428:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] > 'f' |==> true
1429:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' != chars[i] > 'f'
1430:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' && chars[i] > 'f'
1431:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' == chars[i] > 'f'
1432:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> false
1433:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a'
1434:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] > 'f'
1435:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:chars[i] < 'a' || chars[i] > 'f' |==> true
1436:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') != (chars[i] < 'a' || chars[i] > 'f')
1437:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') == (chars[i] < 'a' || chars[i] > 'f')
1438:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> false
1439:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9')
1440:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < 'a' || chars[i] > 'f')
1441:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1551:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> true
1442:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') || (chars[i] < 'a' || chars[i] > 'f')
1443:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> chars[i] != 'A'
1444:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> chars[i] <= 'A'
1445:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> chars[i] == 'A'
1446:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> chars[i] > 'A'
1447:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> chars[i] >= 'A'
1448:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> false
1449:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' |==> true
1450:ROR:>(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> chars[i] != 'F'
1451:ROR:>(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> chars[i] < 'F'
1452:ROR:>(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> chars[i] <= 'F'
1453:ROR:>(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> chars[i] == 'F'
1454:ROR:>(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> chars[i] >= 'F'
1455:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> false
1456:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] > 'F' |==> true
1457:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' != chars[i] > 'F'
1458:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' && chars[i] > 'F'
1459:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' == chars[i] > 'F'
1460:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> false
1461:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A'
1462:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] > 'F'
1463:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:chars[i] < 'A' || chars[i] > 'F' |==> true
1464:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> ((chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')) != (chars[i] < 'A' || chars[i] > 'F')
1465:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> ((chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')) == (chars[i] < 'A' || chars[i] > 'F')
1466:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> false
1467:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')
1468:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < 'A' || chars[i] > 'F')
1469:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1552:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> true
1470:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1550:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') || (chars[i] < 'A' || chars[i] > 'F')
1471:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1553:false |==> true
1472:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1556:true |==> false
1473:STD:<DEC>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1559:sz-- |==> <NO-OP>
1474:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> i != sz
1475:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> i <= sz
1476:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> i == sz
1477:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> i > sz
1478:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> i >= sz
1479:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> false
1480:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz |==> true
1481:LVR:POS:0:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:1 |==> 0
1482:LVR:POS:NEG:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:1 |==> -1
1483:AOR:+(int,int):%(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz % 1
1484:AOR:+(int,int):*(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz * 1
1485:AOR:+(int,int):-(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz - 1
1486:AOR:+(int,int):/(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:sz + 1 |==> sz / 1
1487:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> i != sz + 1
1488:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> i <= sz + 1
1489:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> i == sz + 1
1490:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> i > sz + 1
1491:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> i >= sz + 1
1492:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> false
1493:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 |==> true
1494:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> i < sz + 1 != allowSigns
1495:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> i < sz + 1 == allowSigns
1496:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> false
1497:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> i < sz + 1
1498:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> allowSigns
1499:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> true
1500:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns |==> i < sz + 1 || allowSigns
1501:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> (i < sz + 1 && allowSigns) != !foundDigit
1502:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> (i < sz + 1 && allowSigns) == !foundDigit
1503:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> false
1504:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> i < sz + 1 && allowSigns
1505:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> !foundDigit
1506:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> true
1507:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz + 1 && allowSigns && !foundDigit |==> i < sz + 1 && allowSigns || !foundDigit
1508:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz != (i < sz + 1 && allowSigns && !foundDigit)
1509:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz && (i < sz + 1 && allowSigns && !foundDigit)
1510:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz == (i < sz + 1 && allowSigns && !foundDigit)
1511:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> false
1512:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz
1513:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> (i < sz + 1 && allowSigns && !foundDigit)
1514:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1564:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> true
1515:ROR:>=(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> chars[i] != '0'
1516:ROR:>=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> chars[i] < '0'
1517:ROR:>=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> chars[i] <= '0'
1518:ROR:>=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> chars[i] == '0'
1519:ROR:>=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> chars[i] > '0'
1520:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> false
1521:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' |==> true
1522:ROR:<=(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> chars[i] != '9'
1523:ROR:<=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> chars[i] < '9'
1524:ROR:<=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> chars[i] == '9'
1525:ROR:<=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> chars[i] > '9'
1526:ROR:<=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> chars[i] >= '9'
1527:ROR:<=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> false
1528:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] <= '9' |==> true
1529:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' != chars[i] <= '9'
1530:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
1531:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> false
1532:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
1533:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
1534:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> true
1535:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1565:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' || chars[i] <= '9'
1536:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1566:true |==> false
1537:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1566:foundDigit = true |==> <NO-OP>
1538:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1567:false |==> true
1539:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1567:allowSigns = false |==> <NO-OP>
1540:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> chars[i] != '.'
1541:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> chars[i] < '.'
1542:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> chars[i] <= '.'
1543:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> chars[i] > '.'
1544:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> chars[i] >= '.'
1545:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> false
1546:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1569:chars[i] == '.' |==> true
1547:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasDecPoint != hasExp
1548:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasDecPoint && hasExp
1549:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasDecPoint == hasExp
1550:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> false
1551:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasDecPoint
1552:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> hasExp
1553:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1570:hasDecPoint || hasExp |==> true
1554:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1572:false |==> true
1555:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1574:true |==> false
1556:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1574:hasDecPoint = true |==> <NO-OP>
1557:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> chars[i] != 'e'
1558:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> chars[i] < 'e'
1559:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> chars[i] <= 'e'
1560:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> chars[i] > 'e'
1561:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> chars[i] >= 'e'
1562:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> false
1563:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' |==> true
1564:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> chars[i] != 'E'
1565:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> chars[i] < 'E'
1566:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> chars[i] <= 'E'
1567:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> chars[i] > 'E'
1568:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> chars[i] >= 'E'
1569:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> false
1570:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'E' |==> true
1571:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
1572:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' && chars[i] == 'E'
1573:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' == (chars[i] == 'E')
1574:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> false
1575:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
1576:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
1577:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1575:chars[i] == 'e' || chars[i] == 'E' |==> true
1578:COR:hasExp:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1577:hasExp |==> false
1579:COR:hasExp:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1577:hasExp |==> true
1580:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1579:false |==> true
1581:COR:foundDigit:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1581:foundDigit |==> false
1582:COR:foundDigit:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1581:foundDigit |==> true
1583:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1582:false |==> true
1584:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1584:true |==> false
1585:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1584:hasExp = true |==> <NO-OP>
1586:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1585:true |==> false
1587:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1585:allowSigns = true |==> <NO-OP>
1588:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> chars[i] != '+'
1589:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> chars[i] < '+'
1590:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> chars[i] <= '+'
1591:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> chars[i] > '+'
1592:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> chars[i] >= '+'
1593:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> false
1594:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' |==> true
1595:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> chars[i] != '-'
1596:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> chars[i] < '-'
1597:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> chars[i] <= '-'
1598:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> chars[i] > '-'
1599:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> chars[i] >= '-'
1600:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> false
1601:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '-' |==> true
1602:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' != (chars[i] == '-')
1603:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' && chars[i] == '-'
1604:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' == (chars[i] == '-')
1605:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> false
1606:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+'
1607:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '-'
1608:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1586:chars[i] == '+' || chars[i] == '-' |==> true
1609:COR:allowSigns:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1587:allowSigns |==> false
1610:COR:allowSigns:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1587:allowSigns |==> true
1611:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1588:false |==> true
1612:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1590:false |==> true
1613:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1590:allowSigns = false |==> <NO-OP>
1614:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1591:false |==> true
1615:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1591:foundDigit = false |==> <NO-OP>
1616:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1593:false |==> true
1617:STD:<INC>:<NO-OP>:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1595:i++ |==> <NO-OP>
1618:ROR:<(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> i != chars.length
1619:ROR:<(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> i <= chars.length
1620:ROR:<(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> i == chars.length
1621:ROR:<(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> i > chars.length
1622:ROR:<(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> i >= chars.length
1623:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> false
1624:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1597:i < chars.length |==> true
1625:ROR:>=(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> chars[i] != '0'
1626:ROR:>=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> chars[i] < '0'
1627:ROR:>=(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> chars[i] <= '0'
1628:ROR:>=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> chars[i] == '0'
1629:ROR:>=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> chars[i] > '0'
1630:ROR:>=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> false
1631:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' |==> true
1632:ROR:<=(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> chars[i] != '9'
1633:ROR:<=(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> chars[i] < '9'
1634:ROR:<=(int,int):==(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> chars[i] == '9'
1635:ROR:<=(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> chars[i] > '9'
1636:ROR:<=(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> chars[i] >= '9'
1637:ROR:<=(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> false
1638:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] <= '9' |==> true
1639:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' != chars[i] <= '9'
1640:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
1641:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> false
1642:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
1643:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
1644:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> true
1645:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1598:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' || chars[i] <= '9'
1646:LVR:TRUE:FALSE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1600:true |==> false
1647:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> chars[i] != 'e'
1648:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> chars[i] < 'e'
1649:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> chars[i] <= 'e'
1650:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> chars[i] > 'e'
1651:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> chars[i] >= 'e'
1652:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> false
1653:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' |==> true
1654:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> chars[i] != 'E'
1655:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> chars[i] < 'E'
1656:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> chars[i] <= 'E'
1657:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> chars[i] > 'E'
1658:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> chars[i] >= 'E'
1659:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> false
1660:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'E' |==> true
1661:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
1662:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' && chars[i] == 'E'
1663:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' == (chars[i] == 'E')
1664:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> false
1665:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
1666:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
1667:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1602:chars[i] == 'e' || chars[i] == 'E' |==> true
1668:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1604:false |==> true
1669:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> chars[i] != 'd'
1670:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> chars[i] < 'd'
1671:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> chars[i] <= 'd'
1672:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> chars[i] > 'd'
1673:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> chars[i] >= 'd'
1674:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> false
1675:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' |==> true
1676:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> chars[i] != 'D'
1677:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> chars[i] < 'D'
1678:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> chars[i] <= 'D'
1679:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> chars[i] > 'D'
1680:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> chars[i] >= 'D'
1681:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> false
1682:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'D' |==> true
1683:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' != (chars[i] == 'D')
1684:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' && chars[i] == 'D'
1685:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' == (chars[i] == 'D')
1686:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'd' || chars[i] == 'D' |==> false
1687:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd'
1688:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'D'
1689:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1608:chars[i] == 'd' || chars[i] == 'D' |==> true
1690:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> chars[i] != 'f'
1691:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> chars[i] < 'f'
1692:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> chars[i] <= 'f'
1693:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> chars[i] > 'f'
1694:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> chars[i] >= 'f'
1695:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> false
1696:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'f' |==> true
1697:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') != (chars[i] == 'f')
1698:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') && chars[i] == 'f'
1699:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') == (chars[i] == 'f')
1700:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> false
1701:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'd' || chars[i] == 'D'
1702:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'f'
1703:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1609:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> true
1704:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> chars[i] != 'F'
1705:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> chars[i] < 'F'
1706:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> chars[i] <= 'F'
1707:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> chars[i] > 'F'
1708:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> chars[i] >= 'F'
1709:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> false
1710:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'F' |==> true
1711:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') != (chars[i] == 'F')
1712:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') && chars[i] == 'F'
1713:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') == (chars[i] == 'F')
1714:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> false
1715:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f'
1716:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'F'
1717:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1610:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> true
1718:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1606:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns != (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1719:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1606:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns == (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1720:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> false
1721:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1606:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns
1722:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1723:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1607:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> true
1724:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1606:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns || (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
1725:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> chars[i] != 'l'
1726:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> chars[i] < 'l'
1727:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> chars[i] <= 'l'
1728:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> chars[i] > 'l'
1729:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> chars[i] >= 'l'
1730:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> false
1731:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' |==> true
1732:ROR:==(int,int):!=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> chars[i] != 'L'
1733:ROR:==(int,int):<(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> chars[i] < 'L'
1734:ROR:==(int,int):<=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> chars[i] <= 'L'
1735:ROR:==(int,int):>(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> chars[i] > 'L'
1736:ROR:==(int,int):>=(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> chars[i] >= 'L'
1737:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> false
1738:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'L' |==> true
1739:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' != (chars[i] == 'L')
1740:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' && chars[i] == 'L'
1741:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' == (chars[i] == 'L')
1742:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'l' || chars[i] == 'L' |==> false
1743:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1613:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l'
1744:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'L'
1745:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1614:chars[i] == 'l' || chars[i] == 'L' |==> true
1746:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> foundDigit != !hasExp
1747:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> foundDigit == !hasExp
1748:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> false
1749:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> foundDigit
1750:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> !hasExp
1751:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> true
1752:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1616:foundDigit && !hasExp |==> foundDigit || !hasExp
1753:LVR:FALSE:TRUE:org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1619:false |==> true
1754:COR:&&(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> !allowSigns != foundDigit
1755:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> !allowSigns == foundDigit
1756:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> false
1757:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> !allowSigns
1758:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> foundDigit
1759:COR:&&(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> true
1760:COR:&&(boolean,boolean):||(boolean,boolean):org.apache.commons.lang.math.NumberUtils@isNumber(java.lang.String):1623:!allowSigns && foundDigit |==> !allowSigns || foundDigit