1:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@escapeJava(java.lang.String):86:false |==> true
2:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@escapeJava(java.lang.String):86:false |==> true
3:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@escapeJava(java.io.Writer,java.lang.String):102:false |==> true
4:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@escapeJava(java.io.Writer,java.lang.String):102:false |==> true
5:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJava(java.io.Writer,java.lang.String):102:escapeJavaStyleString(out, str, false, false) |==> <NO-OP>
6:LVR:TRUE:FALSE:org.apache.commons.lang.StringEscapeUtils@escapeJavaScript(java.lang.String):127:true |==> false
7:LVR:TRUE:FALSE:org.apache.commons.lang.StringEscapeUtils@escapeJavaScript(java.lang.String):127:true |==> false
8:LVR:TRUE:FALSE:org.apache.commons.lang.StringEscapeUtils@escapeJavaScript(java.io.Writer,java.lang.String):143:true |==> false
9:LVR:TRUE:FALSE:org.apache.commons.lang.StringEscapeUtils@escapeJavaScript(java.io.Writer,java.lang.String):143:true |==> false
10:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaScript(java.io.Writer,java.lang.String):143:escapeJavaStyleString(out, str, true, true) |==> <NO-OP>
11:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):155:str == null |==> str != null
12:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):155:str == null |==> false
13:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):155:str == null |==> true
14:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):159:2 |==> 0
15:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):159:2 |==> -2
16:AOR:*(int,int):%(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):159:str.length() * 2 |==> str.length() % 2
17:AOR:*(int,int):+(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):159:str.length() * 2 |==> str.length() + 2
18:AOR:*(int,int):-(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):159:str.length() * 2 |==> str.length() - 2
19:AOR:*(int,int):/(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):159:str.length() * 2 |==> str.length() / 2
20:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):160:escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash) |==> <NO-OP>
21:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.lang.String,boolean,boolean):164:ioe.printStackTrace() |==> <NO-OP>
22:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):180:out == null |==> out != null
23:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):180:out == null |==> false
24:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):180:out == null |==> true
25:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):183:str == null |==> str != null
26:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):183:str == null |==> false
27:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):183:str == null |==> true
28:LVR:0:POS:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:0 |==> 1
29:LVR:0:NEG:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:0 |==> -1
30:ROR:<(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:i < sz |==> i != sz
31:ROR:<(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:i < sz |==> i <= sz
32:ROR:<(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:i < sz |==> i == sz
33:ROR:<(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:i < sz |==> i > sz
34:ROR:<(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:i < sz |==> i >= sz
35:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:i < sz |==> false
36:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):188:i < sz |==> true
37:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:4095 |==> 0
38:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:4095 |==> -4095
39:ROR:>(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:ch > 4095 |==> ch != 4095
40:ROR:>(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:ch > 4095 |==> ch < 4095
41:ROR:>(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:ch > 4095 |==> ch <= 4095
42:ROR:>(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:ch > 4095 |==> ch == 4095
43:ROR:>(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:ch > 4095 |==> ch >= 4095
44:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:ch > 4095 |==> false
45:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):192:ch > 4095 |==> true
46:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):193:out.write("\\u" + hex(ch)) |==> <NO-OP>
47:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:255 |==> 0
48:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:255 |==> -255
49:ROR:>(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:ch > 255 |==> ch != 255
50:ROR:>(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:ch > 255 |==> ch < 255
51:ROR:>(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:ch > 255 |==> ch <= 255
52:ROR:>(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:ch > 255 |==> ch == 255
53:ROR:>(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:ch > 255 |==> ch >= 255
54:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:ch > 255 |==> false
55:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):194:ch > 255 |==> true
56:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):195:out.write("\\u0" + hex(ch)) |==> <NO-OP>
57:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:127 |==> 0
58:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:127 |==> -127
59:ROR:>(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:ch > 127 |==> ch != 127
60:ROR:>(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:ch > 127 |==> ch < 127
61:ROR:>(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:ch > 127 |==> ch <= 127
62:ROR:>(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:ch > 127 |==> ch == 127
63:ROR:>(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:ch > 127 |==> ch >= 127
64:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:ch > 127 |==> false
65:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):196:ch > 127 |==> true
66:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):197:out.write("\\u00" + hex(ch)) |==> <NO-OP>
67:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:32 |==> 0
68:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:32 |==> -32
69:ROR:<(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:ch < 32 |==> ch != 32
70:ROR:<(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:ch < 32 |==> ch <= 32
71:ROR:<(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:ch < 32 |==> ch == 32
72:ROR:<(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:ch < 32 |==> ch > 32
73:ROR:<(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:ch < 32 |==> ch >= 32
74:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:ch < 32 |==> false
75:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):198:ch < 32 |==> true
76:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):201:out.write('\\') |==> <NO-OP>
77:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):202:out.write('b') |==> <NO-OP>
78:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):205:out.write('\\') |==> <NO-OP>
79:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):206:out.write('n') |==> <NO-OP>
80:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):209:out.write('\\') |==> <NO-OP>
81:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):210:out.write('t') |==> <NO-OP>
82:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):213:out.write('\\') |==> <NO-OP>
83:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):214:out.write('f') |==> <NO-OP>
84:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):217:out.write('\\') |==> <NO-OP>
85:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):218:out.write('r') |==> <NO-OP>
86:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:15 |==> 0
87:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:15 |==> -15
88:ROR:>(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:ch > 15 |==> ch != 15
89:ROR:>(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:ch > 15 |==> ch < 15
90:ROR:>(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:ch > 15 |==> ch <= 15
91:ROR:>(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:ch > 15 |==> ch == 15
92:ROR:>(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:ch > 15 |==> ch >= 15
93:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:ch > 15 |==> false
94:ROR:>(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):221:ch > 15 |==> true
95:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):222:out.write("\\u00" + hex(ch)) |==> <NO-OP>
96:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):224:out.write("\\u000" + hex(ch)) |==> <NO-OP>
97:COR:escapeSingleQuote:TRUE:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):231:escapeSingleQuote |==> false
98:COR:escapeSingleQuote:FALSE:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):231:escapeSingleQuote |==> true
99:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):232:out.write('\\') |==> <NO-OP>
100:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):234:out.write('\'') |==> <NO-OP>
101:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):237:out.write('\\') |==> <NO-OP>
102:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):238:out.write('\"') |==> <NO-OP>
103:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):241:out.write('\\') |==> <NO-OP>
104:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):242:out.write('\\') |==> <NO-OP>
105:COR:escapeForwardSlash:TRUE:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):245:escapeForwardSlash |==> false
106:COR:escapeForwardSlash:FALSE:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):245:escapeForwardSlash |==> true
107:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):246:out.write('\\') |==> <NO-OP>
108:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):248:out.write('/') |==> <NO-OP>
109:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean):251:out.write(ch) |==> <NO-OP>
110:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.lang.String):279:str == null |==> str != null
111:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.lang.String):279:str == null |==> false
112:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.lang.String):279:str == null |==> true
113:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.lang.String):284:unescapeJava(writer, str) |==> <NO-OP>
114:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.lang.String):288:ioe.printStackTrace() |==> <NO-OP>
115:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):309:out == null |==> out != null
116:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):309:out == null |==> false
117:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):309:out == null |==> true
118:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):312:str == null |==> str != null
119:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):312:str == null |==> false
120:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):312:str == null |==> true
121:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):316:4 |==> 0
122:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):316:4 |==> -4
123:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):317:false |==> true
124:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):318:false |==> true
125:LVR:0:POS:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:0 |==> 1
126:LVR:0:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:0 |==> -1
127:ROR:<(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:i < sz |==> i != sz
128:ROR:<(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:i < sz |==> i <= sz
129:ROR:<(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:i < sz |==> i == sz
130:ROR:<(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:i < sz |==> i > sz
131:ROR:<(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:i < sz |==> i >= sz
132:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:i < sz |==> false
133:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):319:i < sz |==> true
134:COR:inUnicode:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):321:inUnicode |==> false
135:COR:inUnicode:FALSE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):321:inUnicode |==> true
136:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):324:unicode.append(ch) |==> <NO-OP>
137:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:4 |==> 0
138:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:4 |==> -4
139:ROR:==(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:unicode.length() == 4 |==> unicode.length() != 4
140:ROR:==(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:unicode.length() == 4 |==> unicode.length() < 4
141:ROR:==(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:unicode.length() == 4 |==> unicode.length() <= 4
142:ROR:==(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:unicode.length() == 4 |==> unicode.length() > 4
143:ROR:==(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:unicode.length() == 4 |==> unicode.length() >= 4
144:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:unicode.length() == 4 |==> false
145:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):325:unicode.length() == 4 |==> true
146:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):329:16 |==> 0
147:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):329:16 |==> -16
148:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):330:out.write((char)value) |==> <NO-OP>
149:LVR:0:POS:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):331:0 |==> 1
150:LVR:0:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):331:0 |==> -1
151:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):331:unicode.setLength(0) |==> <NO-OP>
152:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):332:false |==> true
153:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):332:inUnicode = false |==> <NO-OP>
154:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):333:false |==> true
155:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):333:hadSlash = false |==> <NO-OP>
156:COR:hadSlash:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):340:hadSlash |==> false
157:COR:hadSlash:FALSE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):340:hadSlash |==> true
158:LVR:FALSE:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):342:false |==> true
159:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):342:hadSlash = false |==> <NO-OP>
160:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):345:out.write('\\') |==> <NO-OP>
161:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):348:out.write('\'') |==> <NO-OP>
162:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):351:out.write('\"') |==> <NO-OP>
163:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):354:out.write('\r') |==> <NO-OP>
164:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):357:out.write('\f') |==> <NO-OP>
165:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):360:out.write('\t') |==> <NO-OP>
166:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):363:out.write('\n') |==> <NO-OP>
167:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):366:out.write('\b') |==> <NO-OP>
168:LVR:TRUE:FALSE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):371:true |==> false
169:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):371:inUnicode = true |==> <NO-OP>
170:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):375:out.write(ch) |==> <NO-OP>
171:ROR:==(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):379:ch == '\\' |==> ch != '\\'
172:ROR:==(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):379:ch == '\\' |==> ch < '\\'
173:ROR:==(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):379:ch == '\\' |==> ch <= '\\'
174:ROR:==(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):379:ch == '\\' |==> ch > '\\'
175:ROR:==(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):379:ch == '\\' |==> ch >= '\\'
176:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):379:ch == '\\' |==> false
177:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):379:ch == '\\' |==> true
178:LVR:TRUE:FALSE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):380:true |==> false
179:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):380:hadSlash = true |==> <NO-OP>
180:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):383:out.write(ch) |==> <NO-OP>
181:COR:hadSlash:TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):385:hadSlash |==> false
182:COR:hadSlash:FALSE:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):385:hadSlash |==> true
183:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJava(java.io.Writer,java.lang.String):388:out.write('\\') |==> <NO-OP>
184:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeJavaScript(java.io.Writer,java.lang.String):424:unescapeJava(out, str) |==> <NO-OP>
185:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):456:str == null |==> str != null
186:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):456:str == null |==> false
187:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):456:str == null |==> true
188:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):460:1.5 |==> 0.0
189:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):460:1.5 |==> -1.5
190:AOR:*(double,double):%(double,double):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):460:str.length() * 1.5 |==> str.length() % 1.5
191:AOR:*(double,double):+(double,double):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):460:str.length() * 1.5 |==> str.length() + 1.5
192:AOR:*(double,double):-(double,double):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):460:str.length() * 1.5 |==> str.length() - 1.5
193:AOR:*(double,double):/(double,double):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):460:str.length() * 1.5 |==> str.length() / 1.5
194:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):461:escapeHtml(writer, str) |==> <NO-OP>
195:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.lang.String):466:e.printStackTrace() |==> <NO-OP>
196:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.io.Writer,java.lang.String):501:writer == null |==> writer != null
197:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.io.Writer,java.lang.String):501:writer == null |==> false
198:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.io.Writer,java.lang.String):501:writer == null |==> true
199:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.io.Writer,java.lang.String):504:string == null |==> string != null
200:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.io.Writer,java.lang.String):504:string == null |==> false
201:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.io.Writer,java.lang.String):504:string == null |==> true
202:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeHtml(java.io.Writer,java.lang.String):507:Entities.HTML40.escape(writer, string) |==> <NO-OP>
203:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):528:str == null |==> str != null
204:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):528:str == null |==> false
205:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):528:str == null |==> true
206:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):532:1.5 |==> 0.0
207:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):532:1.5 |==> -1.5
208:AOR:*(double,double):%(double,double):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):532:str.length() * 1.5 |==> str.length() % 1.5
209:AOR:*(double,double):+(double,double):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):532:str.length() * 1.5 |==> str.length() + 1.5
210:AOR:*(double,double):-(double,double):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):532:str.length() * 1.5 |==> str.length() - 1.5
211:AOR:*(double,double):/(double,double):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):532:str.length() * 1.5 |==> str.length() / 1.5
212:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):533:unescapeHtml(writer, str) |==> <NO-OP>
213:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.lang.String):538:e.printStackTrace() |==> <NO-OP>
214:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.io.Writer,java.lang.String):562:writer == null |==> writer != null
215:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.io.Writer,java.lang.String):562:writer == null |==> false
216:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.io.Writer,java.lang.String):562:writer == null |==> true
217:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.io.Writer,java.lang.String):565:string == null |==> string != null
218:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.io.Writer,java.lang.String):565:string == null |==> false
219:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.io.Writer,java.lang.String):565:string == null |==> true
220:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeHtml(java.io.Writer,java.lang.String):568:Entities.HTML40.unescape(writer, string) |==> <NO-OP>
221:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.io.Writer,java.lang.String):592:writer == null |==> writer != null
222:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.io.Writer,java.lang.String):592:writer == null |==> false
223:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.io.Writer,java.lang.String):592:writer == null |==> true
224:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.io.Writer,java.lang.String):595:str == null |==> str != null
225:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.io.Writer,java.lang.String):595:str == null |==> false
226:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.io.Writer,java.lang.String):595:str == null |==> true
227:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeXml(java.io.Writer,java.lang.String):598:Entities.XML.escape(writer, str) |==> <NO-OP>
228:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.lang.String):619:str == null |==> str != null
229:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.lang.String):619:str == null |==> false
230:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeXml(java.lang.String):619:str == null |==> true
231:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.io.Writer,java.lang.String):644:writer == null |==> writer != null
232:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.io.Writer,java.lang.String):644:writer == null |==> false
233:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.io.Writer,java.lang.String):644:writer == null |==> true
234:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.io.Writer,java.lang.String):647:str == null |==> str != null
235:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.io.Writer,java.lang.String):647:str == null |==> false
236:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.io.Writer,java.lang.String):647:str == null |==> true
237:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.io.Writer,java.lang.String):650:Entities.XML.unescape(writer, str) |==> <NO-OP>
238:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.lang.String):669:str == null |==> str != null
239:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.lang.String):669:str == null |==> false
240:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeXml(java.lang.String):669:str == null |==> true
241:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeSql(java.lang.String):695:str == null |==> str != null
242:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeSql(java.lang.String):695:str == null |==> false
243:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeSql(java.lang.String):695:str == null |==> true
244:COR:StringUtils.containsNone(str, CSV_SEARCH_CHARS):TRUE:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.lang.String):726:StringUtils.containsNone(str, CSV_SEARCH_CHARS) |==> false
245:COR:StringUtils.containsNone(str, CSV_SEARCH_CHARS):FALSE:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.lang.String):726:StringUtils.containsNone(str, CSV_SEARCH_CHARS) |==> true
246:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.lang.String):731:escapeCsv(writer, str) |==> <NO-OP>
247:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.lang.String):735:ioe.printStackTrace() |==> <NO-OP>
248:COR:StringUtils.containsNone(str, CSV_SEARCH_CHARS):TRUE:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):764:StringUtils.containsNone(str, CSV_SEARCH_CHARS) |==> false
249:COR:StringUtils.containsNone(str, CSV_SEARCH_CHARS):FALSE:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):764:StringUtils.containsNone(str, CSV_SEARCH_CHARS) |==> true
250:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):765:str != null |==> str == null
251:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):765:str != null |==> false
252:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):765:str != null |==> true
253:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):766:out.write(str) |==> <NO-OP>
254:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):770:out.write(CSV_QUOTE) |==> <NO-OP>
255:LVR:0:POS:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:0 |==> 1
256:LVR:0:NEG:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:0 |==> -1
257:ROR:<(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:i < str.length() |==> i != str.length()
258:ROR:<(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:i < str.length() |==> i <= str.length()
259:ROR:<(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:i < str.length() |==> i == str.length()
260:ROR:<(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:i < str.length() |==> i > str.length()
261:ROR:<(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:i < str.length() |==> i >= str.length()
262:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:i < str.length() |==> false
263:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):771:i < str.length() |==> true
264:ROR:==(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):773:c == CSV_QUOTE |==> c != CSV_QUOTE
265:ROR:==(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):773:c == CSV_QUOTE |==> c < CSV_QUOTE
266:ROR:==(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):773:c == CSV_QUOTE |==> c <= CSV_QUOTE
267:ROR:==(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):773:c == CSV_QUOTE |==> c > CSV_QUOTE
268:ROR:==(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):773:c == CSV_QUOTE |==> c >= CSV_QUOTE
269:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):773:c == CSV_QUOTE |==> false
270:ROR:==(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):773:c == CSV_QUOTE |==> true
271:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):774:out.write(CSV_QUOTE) |==> <NO-OP>
272:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):776:out.write(c) |==> <NO-OP>
273:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@escapeCsv(java.io.Writer,java.lang.String):778:out.write(CSV_QUOTE) |==> <NO-OP>
274:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.lang.String):804:str == null |==> str != null
275:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.lang.String):804:str == null |==> false
276:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.lang.String):804:str == null |==> true
277:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.lang.String):809:unescapeCsv(writer, str) |==> <NO-OP>
278:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.lang.String):813:ioe.printStackTrace() |==> <NO-OP>
279:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):842:str == null |==> str != null
280:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):842:str == null |==> false
281:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):842:str == null |==> true
282:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:2 |==> 0
283:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:2 |==> -2
284:ROR:<(int,int):!=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:str.length() < 2 |==> str.length() != 2
285:ROR:<(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:str.length() < 2 |==> str.length() <= 2
286:ROR:<(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:str.length() < 2 |==> str.length() == 2
287:ROR:<(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:str.length() < 2 |==> str.length() > 2
288:ROR:<(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:str.length() < 2 |==> str.length() >= 2
289:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:str.length() < 2 |==> false
290:ROR:<(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):845:str.length() < 2 |==> true
291:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):846:out.write(str) |==> <NO-OP>
292:LVR:0:POS:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:0 |==> 1
293:LVR:0:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:0 |==> -1
294:ROR:!=(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE |==> str.charAt(0) < CSV_QUOTE
295:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE |==> str.charAt(0) <= CSV_QUOTE
296:ROR:!=(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE |==> str.charAt(0) == CSV_QUOTE
297:ROR:!=(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE |==> str.charAt(0) > CSV_QUOTE
298:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE |==> str.charAt(0) >= CSV_QUOTE
299:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE |==> false
300:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE |==> true
301:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:1 |==> 0
302:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:1 |==> -1
303:AOR:-(int,int):%(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.length() - 1 |==> str.length() % 1
304:AOR:-(int,int):*(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.length() - 1 |==> str.length() * 1
305:AOR:-(int,int):+(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.length() - 1 |==> str.length() + 1
306:AOR:-(int,int):/(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.length() - 1 |==> str.length() / 1
307:ROR:!=(int,int):<(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(str.length() - 1) < CSV_QUOTE
308:ROR:!=(int,int):<=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(str.length() - 1) <= CSV_QUOTE
309:ROR:!=(int,int):==(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(str.length() - 1) == CSV_QUOTE
310:ROR:!=(int,int):>(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(str.length() - 1) > CSV_QUOTE
311:ROR:!=(int,int):>=(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(str.length() - 1) >= CSV_QUOTE
312:ROR:!=(int,int):FALSE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(str.length() - 1) != CSV_QUOTE |==> false
313:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(str.length() - 1) != CSV_QUOTE |==> true
314:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(0) != CSV_QUOTE != (str.charAt(str.length() - 1) != CSV_QUOTE)
315:COR:||(boolean,boolean):&&(boolean,boolean):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(0) != CSV_QUOTE && str.charAt(str.length() - 1) != CSV_QUOTE
316:COR:||(boolean,boolean):==(boolean,boolean):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(0) != CSV_QUOTE == (str.charAt(str.length() - 1) != CSV_QUOTE)
317:COR:||(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE |==> false
318:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(0) != CSV_QUOTE
319:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE |==> str.charAt(str.length() - 1) != CSV_QUOTE
320:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):849:str.charAt(0) != CSV_QUOTE || str.charAt(str.length() - 1) != CSV_QUOTE |==> true
321:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):850:out.write(str) |==> <NO-OP>
322:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:1 |==> 0
323:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:1 |==> -1
324:LVR:POS:0:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:1 |==> 0
325:LVR:POS:NEG:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:1 |==> -1
326:AOR:-(int,int):%(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:str.length() - 1 |==> str.length() % 1
327:AOR:-(int,int):*(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:str.length() - 1 |==> str.length() * 1
328:AOR:-(int,int):+(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:str.length() - 1 |==> str.length() + 1
329:AOR:-(int,int):/(int,int):org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):855:str.length() - 1 |==> str.length() / 1
330:COR:StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS):TRUE:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):857:StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) |==> false
331:COR:StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS):FALSE:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):857:StringUtils.containsAny(quoteless, CSV_SEARCH_CHARS) |==> true
332:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):859:str = StringUtils.replace(quoteless, CSV_QUOTE_STR + CSV_QUOTE_STR, CSV_QUOTE_STR) |==> <NO-OP>
333:STD:<CALL>:<NO-OP>:org.apache.commons.lang.StringEscapeUtils@unescapeCsv(java.io.Writer,java.lang.String):862:out.write(str) |==> <NO-OP>
