1:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):67:callback.process(externs, root) |==> <NO-OP>
2:COR:isVarInlineForbidden(v):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):88:isVarInlineForbidden(v) |==> false
3:COR:isVarInlineForbidden(v):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):88:isVarInlineForbidden(v) |==> true
4:COR:isInlinableObject(referenceInfo.references):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):94:isInlinableObject(referenceInfo.references) |==> false
5:COR:isInlinableObject(referenceInfo.references):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):94:isInlinableObject(referenceInfo.references) |==> true
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):97:staleVars.add(v) |==> <NO-OP>
7:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):99:0 |==> 1
8:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):99:0 |==> -1
9:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):104:splitObject(v, declaration, init, referenceInfo) |==> <NO-OP>
10:COR:node.isName():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):119:node.isName() |==> false
11:COR:node.isName():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):119:node.isName() |==> true
12:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):120:staleVars.add(scope.getVar(node.getString())) |==> <NO-OP>
13:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@blacklistVarReferencesInTree(com.google.javascript.rhino.Node,com.google.javascript.jscomp.Scope):116:NodeUtil.visitPreOrder(root, new NodeUtil.Visitor(){...) |==> <NO-OP>
14:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal() != var.isExtern()
15:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal() && var.isExtern()
16:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal() == var.isExtern()
17:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> false
18:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal()
19:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> var.isExtern()
20:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> true
21:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) != compiler.getCodingConvention().isExported(var.name)
22:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) && compiler.getCodingConvention().isExported(var.name)
23:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) == compiler.getCodingConvention().isExported(var.name)
24:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> false
25:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> var.isGlobal() || var.isExtern()
26:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> compiler.getCodingConvention().isExported(var.name)
27:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> true
28:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) != RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
29:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) && RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
30:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) == RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
31:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> false
32:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)
33:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
34:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> true
35:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) != staleVars.contains(var)
36:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) && staleVars.contains(var)
37:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) == staleVars.contains(var)
38:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> false
39:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
40:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> staleVars.contains(var)
41:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> true
42:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):156:false |==> true
43:COR:parent.isGetProp():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):166:parent.isGetProp() |==> false
44:COR:parent.isGetProp():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):166:parent.isGetProp() |==> true
45:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:parent.getFirstChild() == name |==> parent.getFirstChild() != name
46:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:parent.getFirstChild() == name |==> false
47:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:parent.getFirstChild() == name |==> true
48:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:Preconditions.checkState(parent.getFirstChild() == name) |==> <NO-OP>
49:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.getFirstChild() == parent |==> gramps.getFirstChild() != parent
50:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.getFirstChild() == parent |==> false
51:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.getFirstChild() == parent |==> true
52:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall() != (gramps.getFirstChild() == parent)
53:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall() == (gramps.getFirstChild() == parent)
54:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> false
55:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall()
56:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.getFirstChild() == parent
57:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> true
58:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall() || gramps.getFirstChild() == parent
59:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):171:false |==> true
60:COR:gramps.isDelProp():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):176:gramps.isDelProp() |==> false
61:COR:gramps.isDelProp():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):176:gramps.isDelProp() |==> true
62:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):177:false |==> true
63:COR:validProperties.contains(propName):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):189:validProperties.contains(propName) |==> false
64:COR:validProperties.contains(propName):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):189:validProperties.contains(propName) |==> true
65:COR:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):190:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps) |==> false
66:COR:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):190:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps) |==> true
67:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):191:validProperties.add(propName) |==> <NO-OP>
68:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):193:false |==> true
69:COR:isVarOrAssignExprLhs(name):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:isVarOrAssignExprLhs(name) |==> false
70:COR:isVarOrAssignExprLhs(name):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:isVarOrAssignExprLhs(name) |==> true
71:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:false |==> true
72:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):205:val == null |==> val != null
73:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):205:val == null |==> false
74:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):205:val == null |==> true
75:COR:val.isObjectLit():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):211:val.isObjectLit() |==> false
76:COR:val.isObjectLit():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):211:val.isObjectLit() |==> true
77:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):212:false |==> true
78:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):223:child != null |==> child == null
79:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):223:child != null |==> false
80:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):223:child != null |==> true
81:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef() != child.isSetterDef()
82:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef() && child.isSetterDef()
83:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef() == child.isSetterDef()
84:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> false
85:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef()
86:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):226:child.isGetterDef() || child.isSetterDef() |==> child.isSetterDef()
87:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:child.isGetterDef() || child.isSetterDef() |==> true
88:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):228:false |==> true
89:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):231:validProperties.add(child.getString()) |==> <NO-OP>
90:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):240:refNode == childVal |==> refNode != childVal
91:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):240:refNode == childVal |==> false
92:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):240:refNode == childVal |==> true
93:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):242:false |==> true
94:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):244:refNode = refNode.getParent() |==> <NO-OP>
95:LVR:TRUE:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):253:true |==> false
96:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):253:ret = true |==> <NO-OP>
97:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.getFirstChild() == n |==> parent.getFirstChild() != n
98:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.getFirstChild() == n |==> false
99:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.getFirstChild() == n |==> true
100:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign() != (parent.getFirstChild() == n)
101:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign() == (parent.getFirstChild() == n)
102:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.isAssign() && parent.getFirstChild() == n |==> false
103:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign()
104:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.isAssign() && parent.getFirstChild() == n |==> parent.getFirstChild() == n
105:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):262:parent.isAssign() && parent.getFirstChild() == n |==> true
106:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign() || parent.getFirstChild() == n
107:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> (parent.isAssign() && parent.getFirstChild() == n) != parent.getParent().isExprResult()
108:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> (parent.isAssign() && parent.getFirstChild() == n) == parent.getParent().isExprResult()
109:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):263:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> false
110:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.isAssign() && parent.getFirstChild() == n
111:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):263:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.getParent().isExprResult()
112:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):263:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> true
113:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.isAssign() && parent.getFirstChild() == n || parent.getParent().isExprResult()
114:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar() != (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
115:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar() && (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
116:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar() == (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
117:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> false
118:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar()
119:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):261:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
120:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):260:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> true
121:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() != ref.isInitializingDeclaration()
122:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() && ref.isInitializingDeclaration()
123:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() == ref.isInitializingDeclaration()
124:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> false
125:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue()
126:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isInitializingDeclaration()
127:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):276:ref.isLvalue() || ref.isInitializingDeclaration() |==> true
128:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):278:val != null |==> val == null
129:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):278:val != null |==> false
130:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):278:val != null |==> true
131:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):279:Preconditions.checkState(val.isObjectLit()) |==> <NO-OP>
132:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):280:child != null |==> child == null
133:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):280:child != null |==> false
134:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):280:child != null |==> true
135:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):283:varmap.containsKey(varname) |==> false
136:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):283:varmap.containsKey(varname) |==> true
137:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):289:varmap.put(varname, var) |==> <NO-OP>
138:COR:ref.getParent().isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):292:ref.getParent().isVar() |==> false
139:COR:ref.getParent().isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):292:ref.getParent().isVar() |==> true
140:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):296:Preconditions.checkState(getprop.isGetProp()) |==> <NO-OP>
141:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):300:varmap.containsKey(varname) |==> false
142:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):300:varmap.containsKey(varname) |==> true
143:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):305:varmap.put(varname, var) |==> <NO-OP>
144:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):319:Preconditions.checkState(object.isObjectLit()) |==> <NO-OP>
145:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):320:key != null |==> key == null
146:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):320:key != null |==> false
147:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):320:key != null |==> true
148:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):322:initvals.put(key.getString(), key.removeFirstChild()) |==> <NO-OP>
149:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):336:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
150:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):337:Preconditions.checkState(val.isObjectLit()) |==> <NO-OP>
151:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):339:key != null |==> key == null
152:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):339:key != null |==> false
153:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):339:key != null |==> true
154:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):344:nodes.add(IR.assign(IR.name(varmap.get(var)), value)) |==> <NO-OP>
155:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):348:all.remove(var) |==> <NO-OP>
156:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):353:nodes.add(IR.assign(IR.name(varmap.get(var)), NodeUtil.newUndefinedNode(null))) |==> <NO-OP>
157:COR:nodes.isEmpty():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):360:nodes.isEmpty() |==> false
158:COR:nodes.isEmpty():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):360:nodes.isEmpty() |==> true
159:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):365:nodes.add(IR.trueNode()) |==> <NO-OP>
160:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):370:nodes = Lists.reverse(nodes) |==> <NO-OP>
161:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:0 |==> 1
162:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:0 |==> -1
163:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:2 |==> 0
164:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:2 |==> -2
165:AOR:-(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() % 2
166:AOR:-(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() * 2
167:AOR:-(int,int):+(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() + 2
168:AOR:-(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:nodes.size() - 2 |==> nodes.size() / 2
169:ROR:<(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> i != nodes.size() - 2
170:ROR:<(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> i <= nodes.size() - 2
171:ROR:<(int,int):==(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> i == nodes.size() - 2
172:ROR:<(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> i > nodes.size() - 2
173:ROR:<(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> i >= nodes.size() - 2
174:ROR:<(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> false
175:ROR:<(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:i < nodes.size() - 2 |==> true
176:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
177:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):377:cur.addChildToFront(t) |==> <NO-OP>
178:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):378:cur = t |==> <NO-OP>
179:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):380:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
180:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:1 |==> 0
181:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:1 |==> -1
182:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i % 1
183:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i * 1
184:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i - 1
185:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:i + 1 |==> i / 1
186:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:cur.addChildToFront(nodes.get(i + 1)) |==> <NO-OP>
187:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):385:replacement.copyInformationFromForTree(replace) |==> <NO-OP>
188:COR:replace.isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):387:replace.isVar() |==> false
189:COR:replace.isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):387:replace.isVar() |==> true
190:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):388:replace.getParent().replaceChild(replace, NodeUtil.newExpr(replacement)) |==> <NO-OP>
191:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):391:replace.getParent().replaceChild(replace, replacement) |==> <NO-OP>
192:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined() != init.getParent().isVar()
193:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined() == init.getParent().isVar()
194:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> false
195:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined()
196:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):412:referenceInfo.isWellDefined() && init.getParent().isVar() |==> init.getParent().isVar()
197:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> true
198:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined() || init.getParent().isVar()
199:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):413:defined |==> false
200:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):413:defined |==> true
201:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):415:fillInitialValues(init, initvals) |==> <NO-OP>
202:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):425:val == null |==> val != null
203:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):425:val == null |==> false
204:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):425:val == null |==> true
205:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):427:varnode.copyInformationFromForTree(vnode) |==> <NO-OP>
206:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):429:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
207:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):431:vnode.getParent().addChildBefore(varnode, vnode) |==> <NO-OP>
208:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined |==> false
209:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined |==> true
210:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):435:vnode.getParent().removeChild(vnode) |==> <NO-OP>
211:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:ref == init |==> ref != init
212:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:ref == init |==> false
213:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:ref == init |==> true
214:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> defined != (ref == init)
215:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> defined == (ref == init)
216:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> false
217:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> defined
218:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> ref == init
219:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> true
220:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:defined && ref == init |==> defined || ref == init
221:COR:ref.isLvalue():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):442:ref.isLvalue() |==> false
222:COR:ref.isLvalue():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):442:ref.isLvalue() |==> true
223:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):445:replaceAssignmentExpression(v, ref, varmap) |==> <NO-OP>
224:COR:ref.getParent().isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):446:ref.getParent().isVar() |==> false
225:COR:ref.getParent().isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):446:ref.getParent().isVar() |==> true
226:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):449:ref.getGrandparent().removeChild(ref.getParent()) |==> <NO-OP>
227:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):453:Preconditions.checkState(getprop.isGetProp()) |==> <NO-OP>
228:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):456:1 |==> 0
229:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):456:1 |==> -1
230:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):460:Preconditions.checkState(varmap.containsKey(var)) |==> <NO-OP>
231:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):464:replacement.copyInformationFrom(getprop) |==> <NO-OP>
232:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):465:ref.getGrandparent().replaceChild(ref.getParent(), replacement) |==> <NO-OP>
233:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):469:compiler.reportCodeChange() |==> <NO-OP>
