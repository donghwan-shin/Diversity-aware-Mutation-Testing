1:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@<init>(com.google.javascript.jscomp.AbstractCompiler,com.google.common.base.Supplier<java.lang.String>):46:this.compiler = compiler |==> <NO-OP>
2:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@<init>(com.google.javascript.jscomp.AbstractCompiler,com.google.common.base.Supplier<java.lang.String>):47:this.safeNameIdSupplier = safeNameIdSupplier |==> <NO-OP>
3:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):67:makeLocalNamesUnique(newFnNode, isCallInLoop) |==> <NO-OP>
4:COR:hasArgs:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):77:hasArgs |==> false
5:COR:hasArgs:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):77:hasArgs |==> true
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):78:FunctionArgumentInjector.maybeAddTempsForCallArguments(newFnNode, args, namesToAlias, compiler.getCodingConvention()) |==> <NO-OP>
7:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):84:newBlock.detachFromParent() |==> <NO-OP>
8:COR:hasArgs:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):86:hasArgs |==> false
9:COR:hasArgs:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):86:hasArgs |==> true
10:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):89:newBlock == inlineResult |==> newBlock != inlineResult
11:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):89:newBlock == inlineResult |==> false
12:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):89:newBlock == inlineResult |==> true
13:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):89:Preconditions.checkState(newBlock == inlineResult) |==> <NO-OP>
14:COR:isCallInLoop:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):97:isCallInLoop |==> false
15:COR:isCallInLoop:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):97:isCallInLoop |==> true
16:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):98:fixUnitializedVarDeclarations(newBlock) |==> <NO-OP>
17:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):104:injectableBlock != null |==> injectableBlock == null
18:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):104:injectableBlock != null |==> false
19:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):104:injectableBlock != null |==> true
20:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@mutate(java.lang.String,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,boolean,boolean):104:Preconditions.checkState(injectableBlock != null) |==> <NO-OP>
21:COR:NodeUtil.isLoopStructure(n):TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):117:NodeUtil.isLoopStructure(n) |==> false
22:COR:NodeUtil.isLoopStructure(n):FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):117:NodeUtil.isLoopStructure(n) |==> true
23:COR:NodeUtil.isVar(n):TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):122:NodeUtil.isVar(n) |==> false
24:COR:NodeUtil.isVar(n):FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):122:NodeUtil.isVar(n) |==> true
25:COR:name.hasChildren():TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):125:name.hasChildren() |==> false
26:COR:name.hasChildren():FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):125:name.hasChildren() |==> true
27:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):127:name.addChildToBack(NodeUtil.newUndefinedNode(srcLocation)) |==> <NO-OP>
28:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):132:c != null |==> c == null
29:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):132:c != null |==> false
30:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):132:c != null |==> true
31:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@fixUnitializedVarDeclarations(com.google.javascript.rhino.Node):133:fixUnitializedVarDeclarations(c) |==> <NO-OP>
32:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@makeLocalNamesUnique(com.google.javascript.rhino.Node,boolean):145:NodeTraversal.traverse(compiler, fnNode, new MakeDeclaredNamesUnique(new InlineRenamer(idSupplier, "inline_", isCallInLoop))) |==> <NO-OP>
33:LVR:FALSE:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@makeLocalNamesUnique(com.google.javascript.rhino.Node,boolean):152:false |==> true
34:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@makeLocalNamesUnique(com.google.javascript.rhino.Node,boolean):152:new RenameLabels(compiler, new LabelNameSupplier(idSupplier), false).process(null, fnNode) |==> <NO-OP>
35:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null |==> fnName != null
36:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null |==> false
37:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null |==> true
38:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName == null != fnName.isEmpty()
39:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName == null && fnName.isEmpty()
40:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName == null == fnName.isEmpty()
41:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> false
42:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName == null
43:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> fnName.isEmpty()
44:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@getLabelNameForFunction(java.lang.String):173:fnName == null || fnName.isEmpty() |==> true
45:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null |==> namesToAlias != null
46:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null |==> false
47:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null |==> true
48:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias == null != namesToAlias.isEmpty()
49:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias == null && namesToAlias.isEmpty()
50:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias == null == namesToAlias.isEmpty()
51:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> false
52:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias == null
53:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> namesToAlias.isEmpty()
54:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):191:namesToAlias == null || namesToAlias.isEmpty() |==> true
55:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):195:result == fnTemplateRoot |==> result != fnTemplateRoot
56:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):195:result == fnTemplateRoot |==> false
57:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):195:result == fnTemplateRoot |==> true
58:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):195:Preconditions.checkState(result == fnTemplateRoot) |==> <NO-OP>
59:COR:namesToAlias.contains(name):TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):212:namesToAlias.contains(name) |==> false
60:COR:namesToAlias.contains(name):FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):212:namesToAlias.contains(name) |==> true
61:LVR:0:POS:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):216:0 |==> 1
62:LVR:0:NEG:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):216:0 |==> -1
63:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):216:newVars.add(0, newNode) |==> <NO-OP>
64:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):218:newArgMap.remove(name) |==> <NO-OP>
65:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):225:result == fnTemplateRoot |==> result != fnTemplateRoot
66:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):225:result == fnTemplateRoot |==> false
67:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):225:result == fnTemplateRoot |==> true
68:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):225:Preconditions.checkState(result == fnTemplateRoot) |==> <NO-OP>
69:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@aliasAndInlineArguments(com.google.javascript.rhino.Node,java.util.LinkedHashMap<java.lang.String,com.google.javascript.rhino.Node>,java.util.Set<java.lang.String>):230:fnTemplateRoot.addChildToFront(n) |==> <NO-OP>
70:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):261:Preconditions.checkNotNull(block) |==> <NO-OP>
71:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):262:Preconditions.checkNotNull(labelName) |==> <NO-OP>
72:LVR:FALSE:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):266:false |==> true
73:LVR:0:POS:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:0 |==> 1
74:LVR:0:NEG:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:0 |==> -1
75:ROR:>(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> returnCount != 0
76:ROR:>(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> returnCount < 0
77:ROR:>(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> returnCount <= 0
78:ROR:>(int,int):==(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> returnCount == 0
79:ROR:>(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> returnCount >= 0
80:ROR:>(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> false
81:ROR:>(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):269:returnCount > 0 |==> true
82:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):270:hasReturnAtExit = hasReturnAtExit(block) |==> <NO-OP>
83:COR:hasReturnAtExit:TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):273:hasReturnAtExit |==> false
84:COR:hasReturnAtExit:FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):273:hasReturnAtExit |==> true
85:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):274:convertLastReturnToStatement(block, resultName) |==> <NO-OP>
86:STD:<DEC>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):275:returnCount-- |==> <NO-OP>
87:LVR:0:POS:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:0 |==> 1
88:LVR:0:NEG:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:0 |==> -1
89:ROR:>(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> returnCount != 0
90:ROR:>(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> returnCount < 0
91:ROR:>(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> returnCount <= 0
92:ROR:>(int,int):==(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> returnCount == 0
93:ROR:>(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> returnCount >= 0
94:ROR:>(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> false
95:ROR:>(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):278:returnCount > 0 |==> true
96:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):282:replaceReturnWithBreak(block, null, resultName, labelName) |==> <NO-OP>
97:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):288:label.addChildToFront(name) |==> <NO-OP>
98:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):289:label.addChildToBack(block) |==> <NO-OP>
99:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):292:newRoot.addChildrenToBack(label) |==> <NO-OP>
100:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):296:root = newRoot |==> <NO-OP>
101:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> resultMustBeSet != !hasReturnAtExit
102:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> resultMustBeSet == !hasReturnAtExit
103:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> false
104:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> resultMustBeSet
105:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> !hasReturnAtExit
106:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> true
107:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit |==> resultMustBeSet || !hasReturnAtExit
108:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultName != null |==> resultName == null
109:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultName != null |==> false
110:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultName != null |==> true
111:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> (resultMustBeSet && !hasReturnAtExit) != (resultName != null)
112:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> (resultMustBeSet && !hasReturnAtExit) == (resultName != null)
113:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> false
114:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> resultMustBeSet && !hasReturnAtExit
115:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> resultName != null
116:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> true
117:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):302:resultMustBeSet && !hasReturnAtExit && resultName != null |==> resultMustBeSet && !hasReturnAtExit || resultName != null
118:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturns(com.google.javascript.rhino.Node,java.lang.String,java.lang.String,boolean):303:addDummyAssignment(block, resultName) |==> <NO-OP>
119:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> node.getType() != Token.BLOCK
120:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> node.getType() < Token.BLOCK
121:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> node.getType() <= Token.BLOCK
122:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> node.getType() > Token.BLOCK
123:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> node.getType() >= Token.BLOCK
124:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> false
125:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:node.getType() == Token.BLOCK |==> true
126:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):318:Preconditions.checkArgument(node.getType() == Token.BLOCK) |==> <NO-OP>
127:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):324:resultNode.copyInformationFromForTree(node) |==> <NO-OP>
128:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@addDummyAssignment(com.google.javascript.rhino.Node,java.lang.String):326:node.addChildrenToBack(resultNode) |==> <NO-OP>
129:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> ret.getType() != Token.RETURN
130:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> ret.getType() < Token.RETURN
131:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> ret.getType() <= Token.RETURN
132:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> ret.getType() > Token.RETURN
133:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> ret.getType() >= Token.RETURN
134:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> false
135:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:ret.getType() == Token.RETURN |==> true
136:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):340:Preconditions.checkArgument(ret.getType() == Token.RETURN) |==> <NO-OP>
137:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):343:resultNode == null |==> resultNode != null
138:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):343:resultNode == null |==> false
139:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):343:resultNode == null |==> true
140:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):344:block.removeChild(ret) |==> <NO-OP>
141:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):346:resultNode.copyInformationFromForTree(ret) |==> <NO-OP>
142:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@convertLastReturnToStatement(com.google.javascript.rhino.Node,java.lang.String):347:block.replaceChild(ret, resultNode) |==> <NO-OP>
143:COR:node.hasChildren():TRUE:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):377:node.hasChildren() |==> false
144:COR:node.hasChildren():FALSE:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):377:node.hasChildren() |==> true
145:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):380:retVal = node.getFirstChild().cloneTree() |==> <NO-OP>
146:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):383:resultName == null |==> resultName != null
147:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):383:resultName == null |==> false
148:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):383:resultName == null |==> true
149:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):384:retVal != null |==> retVal == null
150:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):384:retVal != null |==> false
151:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):384:retVal != null |==> true
152:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):385:resultNode = NodeUtil.newExpr(retVal) |==> <NO-OP>
153:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):388:retVal == null |==> retVal != null
154:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):388:retVal == null |==> false
155:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):388:retVal == null |==> true
156:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):391:retVal = NodeUtil.newUndefinedNode(srcLocation) |==> <NO-OP>
157:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@getReplacementReturnStatement(com.google.javascript.rhino.Node,java.lang.String):394:resultNode = createAssignStatementNode(resultName, retVal) |==> <NO-OP>
158:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> block.getLastChild().getType() != Token.RETURN
159:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> block.getLastChild().getType() < Token.RETURN
160:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> block.getLastChild().getType() <= Token.RETURN
161:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> block.getLastChild().getType() > Token.RETURN
162:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> block.getLastChild().getType() >= Token.RETURN
163:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> false
164:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@hasReturnAtExit(com.google.javascript.rhino.Node):406:block.getLastChild().getType() == Token.RETURN |==> true
165:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> current.getType() != Token.FUNCTION
166:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> current.getType() < Token.FUNCTION
167:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> current.getType() <= Token.FUNCTION
168:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> current.getType() > Token.FUNCTION
169:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> current.getType() >= Token.FUNCTION
170:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> false
171:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION |==> true
172:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> current.getType() != Token.EXPR_RESULT
173:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> current.getType() < Token.EXPR_RESULT
174:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> current.getType() <= Token.EXPR_RESULT
175:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> current.getType() > Token.EXPR_RESULT
176:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> current.getType() >= Token.EXPR_RESULT
177:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> false
178:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.EXPR_RESULT |==> true
179:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.FUNCTION != (current.getType() == Token.EXPR_RESULT)
180:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.FUNCTION && current.getType() == Token.EXPR_RESULT
181:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.FUNCTION == (current.getType() == Token.EXPR_RESULT)
182:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> false
183:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):418:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.FUNCTION
184:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> current.getType() == Token.EXPR_RESULT
185:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):419:current.getType() == Token.FUNCTION || current.getType() == Token.EXPR_RESULT |==> true
186:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> current.getType() != Token.RETURN
187:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> current.getType() < Token.RETURN
188:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> current.getType() <= Token.RETURN
189:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> current.getType() > Token.RETURN
190:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> current.getType() >= Token.RETURN
191:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> false
192:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):425:current.getType() == Token.RETURN |==> true
193:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):426:Preconditions.checkState(NodeUtil.isStatementBlock(parent)) |==> <NO-OP>
194:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):433:breakNode.copyInformationFromForTree(current) |==> <NO-OP>
195:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):434:parent.replaceChild(current, breakNode) |==> <NO-OP>
196:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):435:resultNode != null |==> resultNode == null
197:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):435:resultNode != null |==> false
198:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):435:resultNode != null |==> true
199:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):436:resultNode.copyInformationFromForTree(current) |==> <NO-OP>
200:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):437:parent.addChildBefore(resultNode, breakNode) |==> <NO-OP>
201:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):439:current = breakNode |==> <NO-OP>
202:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):441:c != null |==> c == null
203:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):441:c != null |==> false
204:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):441:c != null |==> true
205:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.FunctionToBlockMutator@replaceReturnWithBreak(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,java.lang.String,java.lang.String):443:c = replaceReturnWithBreak(c, current, resultName, labelName) |==> <NO-OP>
206:LVR:TRUE:FALSE:com.google.javascript.jscomp.RenameLabels@<init>(com.google.javascript.jscomp.AbstractCompiler):77:true |==> false
207:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@<init>():107:namespaceStack.push(new LabelNamespace()) |==> <NO-OP>
208:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@enterScope(com.google.javascript.jscomp.NodeTraversal):122:namespaceStack.push(new LabelNamespace()) |==> <NO-OP>
209:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@exitScope(com.google.javascript.jscomp.NodeTraversal):127:namespaceStack.pop() |==> <NO-OP>
210:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> node.getType() != Token.LABEL
211:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> node.getType() < Token.LABEL
212:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> node.getType() <= Token.LABEL
213:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> node.getType() > Token.LABEL
214:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> node.getType() >= Token.LABEL
215:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> false
216:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:node.getType() == Token.LABEL |==> true
217:LVR:POS:0:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:1 |==> 0
218:LVR:POS:NEG:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:1 |==> -1
219:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() % 1
220:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() * 1
221:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() - 1
222:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):141:current.renameMap.size() + 1 |==> current.renameMap.size() / 1
223:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):146:Preconditions.checkState(!current.renameMap.containsKey(name)) |==> <NO-OP>
224:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):147:current.renameMap.put(name, li) |==> <NO-OP>
225:ROR:<(int,int):!=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> names.size() != currentDepth
226:ROR:<(int,int):<=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> names.size() <= currentDepth
227:ROR:<(int,int):==(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> names.size() == currentDepth
228:ROR:<(int,int):>(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> names.size() > currentDepth
229:ROR:<(int,int):>=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> names.size() >= currentDepth
230:ROR:<(int,int):FALSE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> false
231:ROR:<(int,int):TRUE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:names.size() < currentDepth |==> true
232:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):151:names.add(nameSupplier.get()) |==> <NO-OP>
233:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):155:compiler.addToDebugLog("label renamed: " + name + " => " + newName) |==> <NO-OP>
234:LVR:TRUE:FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@shouldTraverse(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):158:true |==> false
235:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):170:visitLabel(node, parent) |==> <NO-OP>
236:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visit(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):175:visitBreakOrContinue(node) |==> <NO-OP>
237:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):186:nameNode != null |==> nameNode == null
238:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):186:nameNode != null |==> false
239:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):186:nameNode != null |==> true
240:LVR:0:POS:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:0 |==> 1
241:LVR:0:NEG:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:0 |==> -1
242:ROR:!=(int,int):<(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> name.length() < 0
243:ROR:!=(int,int):<=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> name.length() <= 0
244:ROR:!=(int,int):==(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> name.length() == 0
245:ROR:!=(int,int):>(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> name.length() > 0
246:ROR:!=(int,int):>=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> name.length() >= 0
247:ROR:!=(int,int):FALSE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> false
248:ROR:!=(int,int):TRUE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:name.length() != 0 |==> true
249:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):189:Preconditions.checkState(name.length() != 0) |==> <NO-OP>
250:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):191:li != null |==> li == null
251:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):191:li != null |==> false
252:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):191:li != null |==> true
253:LVR:TRUE:FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):194:true |==> false
254:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):194:li.referenced = true |==> <NO-OP>
255:COR:name.equals(newName):TRUE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):195:name.equals(newName) |==> false
256:COR:name.equals(newName):FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):195:name.equals(newName) |==> true
257:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):197:nameNode.setString(newName) |==> <NO-OP>
258:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitBreakOrContinue(com.google.javascript.rhino.Node):198:compiler.reportCodeChange() |==> <NO-OP>
259:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):211:nameNode != null |==> nameNode == null
260:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):211:nameNode != null |==> false
261:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):211:nameNode != null |==> true
262:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):211:Preconditions.checkState(nameNode != null) |==> <NO-OP>
263:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> li.referenced != !removeUnused
264:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> li.referenced && !removeUnused
265:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> li.referenced == !removeUnused
266:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> false
267:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> li.referenced
268:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> !removeUnused
269:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):215:li.referenced || !removeUnused |==> true
270:COR:name.equals(newName):TRUE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):217:name.equals(newName) |==> false
271:COR:name.equals(newName):FALSE:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):217:name.equals(newName) |==> true
272:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):219:nameNode.setString(newName) |==> <NO-OP>
273:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):220:compiler.reportCodeChange() |==> <NO-OP>
274:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):225:node.removeChild(newChild) |==> <NO-OP>
275:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):226:parent.replaceChild(node, newChild) |==> <NO-OP>
276:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> newChild.getType() != Token.BLOCK
277:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> newChild.getType() < Token.BLOCK
278:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> newChild.getType() <= Token.BLOCK
279:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> newChild.getType() > Token.BLOCK
280:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> newChild.getType() >= Token.BLOCK
281:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> false
282:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):227:newChild.getType() == Token.BLOCK |==> true
283:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):228:NodeUtil.tryMergeBlock(newChild) |==> <NO-OP>
284:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):230:compiler.reportCodeChange() |==> <NO-OP>
285:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels$ProcessLabels@visitLabel(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):234:namespaceStack.peek().renameMap.remove(name) |==> <NO-OP>
286:LVR:POS:0:com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:1 |==> 0
287:LVR:POS:NEG:com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:1 |==> -1
288:AOR:-(int,int):%(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id % 1
289:AOR:-(int,int):*(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id * 1
290:AOR:-(int,int):+(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id + 1
291:AOR:-(int,int):/(int,int):com.google.javascript.jscomp.RenameLabels$ProcessLabels@getNameForId(int):243:id - 1 |==> id / 1
292:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.RenameLabels@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):258:NodeTraversal.traverse(compiler, root, new ProcessLabels()) |==> <NO-OP>
293:LVR:FALSE:TRUE:com.google.javascript.jscomp.RenameLabels$LabelInfo:263:false |==> true
