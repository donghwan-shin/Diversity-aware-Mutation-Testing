1:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@optimizeSubtree(com.google.javascript.rhino.Node):33:child != null |==> child == null
2:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@optimizeSubtree(com.google.javascript.rhino.Node):33:child != null |==> false
3:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@optimizeSubtree(com.google.javascript.rhino.Node):33:child != null |==> true
4:COR:NodeUtil.isExprAssign(child):TRUE:com.google.javascript.jscomp.ExploitAssigns@optimizeSubtree(com.google.javascript.rhino.Node):35:NodeUtil.isExprAssign(child) |==> false
5:COR:NodeUtil.isExprAssign(child):FALSE:com.google.javascript.jscomp.ExploitAssigns@optimizeSubtree(com.google.javascript.rhino.Node):35:NodeUtil.isExprAssign(child) |==> true
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@optimizeSubtree(com.google.javascript.rhino.Node):36:collapseAssign(child.getFirstChild(), child, subtree) |==> <NO-OP>
7:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@optimizeSubtree(com.google.javascript.rhino.Node):38:child = next |==> <NO-OP>
8:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):50:true |==> false
9:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):50:isCollapsibleValue(leftValue, true) && collapseAssignEqualTo(expr, exprParent, leftValue) |==> isCollapsibleValue(leftValue, true) != collapseAssignEqualTo(expr, exprParent, leftValue)
10:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):50:isCollapsibleValue(leftValue, true) && collapseAssignEqualTo(expr, exprParent, leftValue) |==> isCollapsibleValue(leftValue, true) == collapseAssignEqualTo(expr, exprParent, leftValue)
11:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):50:isCollapsibleValue(leftValue, true) && collapseAssignEqualTo(expr, exprParent, leftValue) |==> false
12:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):50:isCollapsibleValue(leftValue, true) && collapseAssignEqualTo(expr, exprParent, leftValue) |==> isCollapsibleValue(leftValue, true)
13:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):51:isCollapsibleValue(leftValue, true) && collapseAssignEqualTo(expr, exprParent, leftValue) |==> collapseAssignEqualTo(expr, exprParent, leftValue)
14:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):50:isCollapsibleValue(leftValue, true) && collapseAssignEqualTo(expr, exprParent, leftValue) |==> true
15:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):50:isCollapsibleValue(leftValue, true) && collapseAssignEqualTo(expr, exprParent, leftValue) |==> isCollapsibleValue(leftValue, true) || collapseAssignEqualTo(expr, exprParent, leftValue)
16:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):52:reportCodeChange() |==> <NO-OP>
17:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):53:false |==> true
18:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):53:isCollapsibleValue(rightValue, false) && collapseAssignEqualTo(expr, exprParent, rightValue) |==> isCollapsibleValue(rightValue, false) != collapseAssignEqualTo(expr, exprParent, rightValue)
19:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):53:isCollapsibleValue(rightValue, false) && collapseAssignEqualTo(expr, exprParent, rightValue) |==> isCollapsibleValue(rightValue, false) == collapseAssignEqualTo(expr, exprParent, rightValue)
20:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):53:isCollapsibleValue(rightValue, false) && collapseAssignEqualTo(expr, exprParent, rightValue) |==> false
21:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):53:isCollapsibleValue(rightValue, false) && collapseAssignEqualTo(expr, exprParent, rightValue) |==> isCollapsibleValue(rightValue, false)
22:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):54:isCollapsibleValue(rightValue, false) && collapseAssignEqualTo(expr, exprParent, rightValue) |==> collapseAssignEqualTo(expr, exprParent, rightValue)
23:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):53:isCollapsibleValue(rightValue, false) && collapseAssignEqualTo(expr, exprParent, rightValue) |==> true
24:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):53:isCollapsibleValue(rightValue, false) && collapseAssignEqualTo(expr, exprParent, rightValue) |==> isCollapsibleValue(rightValue, false) || collapseAssignEqualTo(expr, exprParent, rightValue)
25:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):55:reportCodeChange() |==> <NO-OP>
26:COR:rightValue.isAssign():TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):56:rightValue.isAssign() |==> false
27:COR:rightValue.isAssign():FALSE:com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):56:rightValue.isAssign() |==> true
28:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssign(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):58:collapseAssign(rightValue, expr, exprParent) |==> <NO-OP>
29:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):83:!isLValue || value.getFirstChild().isThis() |==> !isLValue != value.getFirstChild().isThis()
30:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):83:!isLValue || value.getFirstChild().isThis() |==> !isLValue && value.getFirstChild().isThis()
31:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):83:!isLValue || value.getFirstChild().isThis() |==> !isLValue == value.getFirstChild().isThis()
32:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):83:!isLValue || value.getFirstChild().isThis() |==> false
33:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):83:!isLValue || value.getFirstChild().isThis() |==> !isLValue
34:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):83:!isLValue || value.getFirstChild().isThis() |==> value.getFirstChild().isThis()
35:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):83:!isLValue || value.getFirstChild().isThis() |==> true
36:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@isCollapsibleValue(com.google.javascript.rhino.Node,boolean):86:true |==> false
37:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):113:next != null |==> next == null
38:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):113:next != null |==> false
39:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):113:next != null |==> true
40:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):122:parent = next |==> <NO-OP>
41:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):123:next = next.getFirstChild() |==> <NO-OP>
42:COR:next.getFirstChild().hasChildren():TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):127:next.getFirstChild().hasChildren() |==> false
43:COR:next.getFirstChild().hasChildren():FALSE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):127:next.getFirstChild().hasChildren() |==> true
44:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):128:parent = next.getFirstChild() |==> <NO-OP>
45:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):129:next = parent.getFirstChild() |==> <NO-OP>
46:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):132:false |==> true
47:COR:next.isQualifiedName():TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):136:next.isQualifiedName() |==> false
48:COR:next.isQualifiedName():FALSE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):136:next.isQualifiedName() |==> true
49:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:value.isQualifiedName() && nextName.equals(value.getQualifiedName()) |==> value.isQualifiedName() != nextName.equals(value.getQualifiedName())
50:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:value.isQualifiedName() && nextName.equals(value.getQualifiedName()) |==> value.isQualifiedName() == nextName.equals(value.getQualifiedName())
51:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:value.isQualifiedName() && nextName.equals(value.getQualifiedName()) |==> false
52:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:value.isQualifiedName() && nextName.equals(value.getQualifiedName()) |==> value.isQualifiedName()
53:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):139:value.isQualifiedName() && nextName.equals(value.getQualifiedName()) |==> nextName.equals(value.getQualifiedName())
54:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:value.isQualifiedName() && nextName.equals(value.getQualifiedName()) |==> true
55:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):138:value.isQualifiedName() && nextName.equals(value.getQualifiedName()) |==> value.isQualifiedName() || nextName.equals(value.getQualifiedName())
56:COR:isSafeReplacement(next, assign):TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):145:isSafeReplacement(next, assign) |==> false
57:COR:isSafeReplacement(next, assign):FALSE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):145:isSafeReplacement(next, assign) |==> true
58:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):146:false |==> true
59:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):149:exprParent.removeChild(expr) |==> <NO-OP>
60:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):150:expr.removeChild(assign) |==> <NO-OP>
61:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):151:parent.replaceChild(next, assign) |==> <NO-OP>
62:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):152:true |==> false
63:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):155:false |==> true
64:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):172:leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isGetProp() != leftSide.getFirstChild().isThis()
65:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):172:leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isGetProp() == leftSide.getFirstChild().isThis()
66:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):172:leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> false
67:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):172:leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isGetProp()
68:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):173:leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.getFirstChild().isThis()
69:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):172:leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> true
70:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):172:leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isGetProp() || leftSide.getFirstChild().isThis()
71:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):171:leftSide.isName() || leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isName() != (leftSide.isGetProp() && leftSide.getFirstChild().isThis())
72:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):171:leftSide.isName() || leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isName() && (leftSide.isGetProp() && leftSide.getFirstChild().isThis())
73:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):171:leftSide.isName() || leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isName() == (leftSide.isGetProp() && leftSide.getFirstChild().isThis())
74:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):171:leftSide.isName() || leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> false
75:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):171:leftSide.isName() || leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isName()
76:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):172:leftSide.isName() || leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> leftSide.isGetProp() && leftSide.getFirstChild().isThis()
77:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):171:leftSide.isName() || leftSide.isGetProp() && leftSide.getFirstChild().isThis() |==> true
78:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):175:parent = next |==> <NO-OP>
79:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):176:next = leftSide.getNext() |==> <NO-OP>
80:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):179:false |==> true
81:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):183:NodeUtil.isImmutableValue(next) && next.isEquivalentTo(value) |==> NodeUtil.isImmutableValue(next) != next.isEquivalentTo(value)
82:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):183:NodeUtil.isImmutableValue(next) && next.isEquivalentTo(value) |==> NodeUtil.isImmutableValue(next) == next.isEquivalentTo(value)
83:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):184:NodeUtil.isImmutableValue(next) && next.isEquivalentTo(value) |==> false
84:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):183:NodeUtil.isImmutableValue(next) && next.isEquivalentTo(value) |==> NodeUtil.isImmutableValue(next)
85:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):184:NodeUtil.isImmutableValue(next) && next.isEquivalentTo(value) |==> next.isEquivalentTo(value)
86:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):184:NodeUtil.isImmutableValue(next) && next.isEquivalentTo(value) |==> true
87:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):183:NodeUtil.isImmutableValue(next) && next.isEquivalentTo(value) |==> NodeUtil.isImmutableValue(next) || next.isEquivalentTo(value)
88:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):188:exprParent.removeChild(expr) |==> <NO-OP>
89:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):189:expr.removeChild(assign) |==> <NO-OP>
90:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):190:parent.replaceChild(next, assign) |==> <NO-OP>
91:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):191:true |==> false
92:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):194:false |==> true
93:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@collapseAssignEqualTo(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):198:false |==> true
94:COR:node.isName():TRUE:com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):208:node.isName() |==> false
95:COR:node.isName():FALSE:com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):208:node.isName() |==> true
96:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):209:true |==> false
97:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):211:Preconditions.checkArgument(node.isGetProp()) |==> <NO-OP>
98:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):214:node = node.getFirstChild() |==> <NO-OP>
99:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:node.isName() && isNameAssignedTo(node.getString(), replacement) |==> node.isName() != isNameAssignedTo(node.getString(), replacement)
100:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:node.isName() && isNameAssignedTo(node.getString(), replacement) |==> node.isName() == isNameAssignedTo(node.getString(), replacement)
101:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):217:node.isName() && isNameAssignedTo(node.getString(), replacement) |==> false
102:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:node.isName() && isNameAssignedTo(node.getString(), replacement) |==> node.isName()
103:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):217:node.isName() && isNameAssignedTo(node.getString(), replacement) |==> isNameAssignedTo(node.getString(), replacement)
104:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):217:node.isName() && isNameAssignedTo(node.getString(), replacement) |==> true
105:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):216:node.isName() && isNameAssignedTo(node.getString(), replacement) |==> node.isName() || isNameAssignedTo(node.getString(), replacement)
106:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):218:false |==> true
107:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@isSafeReplacement(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):221:true |==> false
108:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):229:c != null |==> c == null
109:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):229:c != null |==> false
110:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):229:c != null |==> true
111:COR:isNameAssignedTo(name, c):TRUE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):230:isNameAssignedTo(name, c) |==> false
112:COR:isNameAssignedTo(name, c):FALSE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):230:isNameAssignedTo(name, c) |==> true
113:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):231:true |==> false
114:COR:node.isName():TRUE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):235:node.isName() |==> false
115:COR:node.isName():FALSE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):235:node.isName() |==> true
116:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.getFirstChild() == node |==> parent.getFirstChild() != node
117:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.getFirstChild() == node |==> false
118:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.getFirstChild() == node |==> true
119:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.isAssign() && parent.getFirstChild() == node |==> parent.isAssign() != (parent.getFirstChild() == node)
120:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.isAssign() && parent.getFirstChild() == node |==> parent.isAssign() == (parent.getFirstChild() == node)
121:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.isAssign() && parent.getFirstChild() == node |==> false
122:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.isAssign() && parent.getFirstChild() == node |==> parent.isAssign()
123:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.isAssign() && parent.getFirstChild() == node |==> parent.getFirstChild() == node
124:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.isAssign() && parent.getFirstChild() == node |==> true
125:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):237:parent.isAssign() && parent.getFirstChild() == node |==> parent.isAssign() || parent.getFirstChild() == node
126:COR:name.equals(node.getString()):TRUE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):238:name.equals(node.getString()) |==> false
127:COR:name.equals(node.getString()):FALSE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):238:name.equals(node.getString()) |==> true
128:LVR:TRUE:FALSE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):239:true |==> false
129:LVR:FALSE:TRUE:com.google.javascript.jscomp.ExploitAssigns@isNameAssignedTo(java.lang.String,com.google.javascript.rhino.Node):244:false |==> true
