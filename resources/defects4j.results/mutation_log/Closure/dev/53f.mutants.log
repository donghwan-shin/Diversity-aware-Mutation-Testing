1:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):66:callback.process(externs, root) |==> <NO-OP>
2:COR:isVarInlineForbidden(v):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):87:isVarInlineForbidden(v) |==> false
3:COR:isVarInlineForbidden(v):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):87:isVarInlineForbidden(v) |==> true
4:COR:isInlinableObject(referenceInfo.references):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):93:isInlinableObject(referenceInfo.references) |==> false
5:COR:isInlinableObject(referenceInfo.references):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):93:isInlinableObject(referenceInfo.references) |==> true
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):96:staleVars.add(v) |==> <NO-OP>
7:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):98:0 |==> 1
8:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):98:0 |==> -1
9:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):103:splitObject(v, declaration, init, referenceInfo) |==> <NO-OP>
10:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):118:node.getType() == Token.NAME |==> node.getType() != Token.NAME
11:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):118:node.getType() == Token.NAME |==> node.getType() < Token.NAME
12:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):118:node.getType() == Token.NAME |==> node.getType() <= Token.NAME
13:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):118:node.getType() == Token.NAME |==> node.getType() > Token.NAME
14:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):118:node.getType() == Token.NAME |==> node.getType() >= Token.NAME
15:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):118:node.getType() == Token.NAME |==> false
16:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):118:node.getType() == Token.NAME |==> true
17:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):119:staleVars.add(scope.getVar(node.getString())) |==> <NO-OP>
18:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@blacklistVarReferencesInTree(com.google.javascript.rhino.Node,com.google.javascript.jscomp.Scope):115:NodeUtil.visitPreOrder(root, new NodeUtil.Visitor(){...) |==> <NO-OP>
19:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() |==> var.isGlobal() != var.isExtern()
20:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() |==> var.isGlobal() && var.isExtern()
21:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() |==> var.isGlobal() == var.isExtern()
22:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> false
23:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() |==> var.isGlobal()
24:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isExtern()
25:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> true
26:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) != compiler.getCodingConvention().isExported(var.name)
27:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) && compiler.getCodingConvention().isExported(var.name)
28:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) == compiler.getCodingConvention().isExported(var.name)
29:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> false
30:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> var.isGlobal() || var.isExtern()
31:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> compiler.getCodingConvention().isExported(var.name)
32:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> true
33:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) != RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
34:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) && RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
35:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) == RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
36:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> false
37:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)
38:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
39:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> true
40:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) != staleVars.contains(var)
41:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) && staleVars.contains(var)
42:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) == staleVars.contains(var)
43:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> false
44:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):139:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
45:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> staleVars.contains(var)
46:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> true
47:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):155:false |==> true
48:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):164:parent.getType() == Token.GETPROP |==> parent.getType() != Token.GETPROP
49:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):164:parent.getType() == Token.GETPROP |==> parent.getType() < Token.GETPROP
50:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):164:parent.getType() == Token.GETPROP |==> parent.getType() <= Token.GETPROP
51:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):164:parent.getType() == Token.GETPROP |==> parent.getType() > Token.GETPROP
52:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):164:parent.getType() == Token.GETPROP |==> parent.getType() >= Token.GETPROP
53:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):164:parent.getType() == Token.GETPROP |==> false
54:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):164:parent.getType() == Token.GETPROP |==> true
55:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):165:parent.getFirstChild() == name |==> parent.getFirstChild() != name
56:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):165:parent.getFirstChild() == name |==> false
57:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):165:parent.getFirstChild() == name |==> true
58:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):165:Preconditions.checkState(parent.getFirstChild() == name) |==> <NO-OP>
59:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL |==> gramps.getType() != Token.CALL
60:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL |==> gramps.getType() < Token.CALL
61:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL |==> gramps.getType() <= Token.CALL
62:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL |==> gramps.getType() > Token.CALL
63:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL |==> gramps.getType() >= Token.CALL
64:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL |==> false
65:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL |==> true
66:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):168:gramps.getFirstChild() == parent |==> gramps.getFirstChild() != parent
67:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):168:gramps.getFirstChild() == parent |==> false
68:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):168:gramps.getFirstChild() == parent |==> true
69:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL && gramps.getFirstChild() == parent |==> gramps.getType() == Token.CALL != (gramps.getFirstChild() == parent)
70:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL && gramps.getFirstChild() == parent |==> gramps.getType() == Token.CALL == (gramps.getFirstChild() == parent)
71:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):168:gramps.getType() == Token.CALL && gramps.getFirstChild() == parent |==> false
72:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL && gramps.getFirstChild() == parent |==> gramps.getType() == Token.CALL
73:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):168:gramps.getType() == Token.CALL && gramps.getFirstChild() == parent |==> gramps.getFirstChild() == parent
74:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):168:gramps.getType() == Token.CALL && gramps.getFirstChild() == parent |==> true
75:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:gramps.getType() == Token.CALL && gramps.getFirstChild() == parent |==> gramps.getType() == Token.CALL || gramps.getFirstChild() == parent
76:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:false |==> true
77:COR:isVarOrAssignExprLhs(name):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):175:isVarOrAssignExprLhs(name) |==> false
78:COR:isVarOrAssignExprLhs(name):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):175:isVarOrAssignExprLhs(name) |==> true
79:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):176:false |==> true
80:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):180:val == null |==> val != null
81:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):180:val == null |==> false
82:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):180:val == null |==> true
83:ROR:!=(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):186:val.getType() != Token.OBJECTLIT |==> val.getType() < Token.OBJECTLIT
84:ROR:!=(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):186:val.getType() != Token.OBJECTLIT |==> val.getType() <= Token.OBJECTLIT
85:ROR:!=(int,int):==(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):186:val.getType() != Token.OBJECTLIT |==> val.getType() == Token.OBJECTLIT
86:ROR:!=(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):186:val.getType() != Token.OBJECTLIT |==> val.getType() > Token.OBJECTLIT
87:ROR:!=(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):186:val.getType() != Token.OBJECTLIT |==> val.getType() >= Token.OBJECTLIT
88:ROR:!=(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):186:val.getType() != Token.OBJECTLIT |==> false
89:ROR:!=(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):186:val.getType() != Token.OBJECTLIT |==> true
90:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):187:false |==> true
91:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):198:child != null |==> child == null
92:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):198:child != null |==> false
93:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):198:child != null |==> true
94:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET |==> child.getType() != Token.GET
95:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET |==> child.getType() < Token.GET
96:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET |==> child.getType() <= Token.GET
97:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET |==> child.getType() > Token.GET
98:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET |==> child.getType() >= Token.GET
99:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET |==> false
100:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET |==> true
101:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.SET |==> child.getType() != Token.SET
102:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.SET |==> child.getType() < Token.SET
103:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.SET |==> child.getType() <= Token.SET
104:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.SET |==> child.getType() > Token.SET
105:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.SET |==> child.getType() >= Token.SET
106:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.SET |==> false
107:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.SET |==> true
108:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET || child.getType() == Token.SET |==> child.getType() == Token.GET != (child.getType() == Token.SET)
109:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET || child.getType() == Token.SET |==> child.getType() == Token.GET && child.getType() == Token.SET
110:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET || child.getType() == Token.SET |==> child.getType() == Token.GET == (child.getType() == Token.SET)
111:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET || child.getType() == Token.SET |==> false
112:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET || child.getType() == Token.SET |==> child.getType() == Token.GET
113:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):201:child.getType() == Token.GET || child.getType() == Token.SET |==> child.getType() == Token.SET
114:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):200:child.getType() == Token.GET || child.getType() == Token.SET |==> true
115:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):203:false |==> true
116:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):212:refNode == childVal |==> refNode != childVal
117:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):212:refNode == childVal |==> false
118:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):212:refNode == childVal |==> true
119:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):214:false |==> true
120:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):216:refNode = refNode.getParent() |==> <NO-OP>
121:LVR:TRUE:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:true |==> false
122:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:ret = true |==> <NO-OP>
123:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR |==> parent.getType() != Token.VAR
124:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR |==> parent.getType() < Token.VAR
125:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR |==> parent.getType() <= Token.VAR
126:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR |==> parent.getType() > Token.VAR
127:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR |==> parent.getType() >= Token.VAR
128:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR |==> false
129:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR |==> true
130:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN |==> parent.getType() != Token.ASSIGN
131:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN |==> parent.getType() < Token.ASSIGN
132:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN |==> parent.getType() <= Token.ASSIGN
133:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN |==> parent.getType() > Token.ASSIGN
134:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN |==> parent.getType() >= Token.ASSIGN
135:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN |==> false
136:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN |==> true
137:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):234:parent.getFirstChild() == n |==> parent.getFirstChild() != n
138:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):234:parent.getFirstChild() == n |==> false
139:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):234:parent.getFirstChild() == n |==> true
140:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n |==> parent.getType() == Token.ASSIGN != (parent.getFirstChild() == n)
141:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n |==> parent.getType() == Token.ASSIGN == (parent.getFirstChild() == n)
142:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):234:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n |==> false
143:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n |==> parent.getType() == Token.ASSIGN
144:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):234:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n |==> parent.getFirstChild() == n
145:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):234:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n |==> true
146:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n |==> parent.getType() == Token.ASSIGN || parent.getFirstChild() == n
147:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getParent().getType() != Token.EXPR_RESULT
148:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getParent().getType() < Token.EXPR_RESULT
149:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getParent().getType() <= Token.EXPR_RESULT
150:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getParent().getType() > Token.EXPR_RESULT
151:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getParent().getType() >= Token.EXPR_RESULT
152:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getParent().getType() == Token.EXPR_RESULT |==> false
153:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getParent().getType() == Token.EXPR_RESULT |==> true
154:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT |==> (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n) != (parent.getParent().getType() == Token.EXPR_RESULT)
155:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT |==> (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n) == (parent.getParent().getType() == Token.EXPR_RESULT)
156:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT |==> false
157:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getType() == Token.ASSIGN && parent.getFirstChild() == n
158:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getParent().getType() == Token.EXPR_RESULT
159:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):235:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT |==> true
160:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT |==> parent.getType() == Token.ASSIGN && parent.getFirstChild() == n || parent.getParent().getType() == Token.EXPR_RESULT
161:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT) |==> parent.getType() == Token.VAR != (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT)
162:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT) |==> parent.getType() == Token.VAR && (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT)
163:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT) |==> parent.getType() == Token.VAR == (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT)
164:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT) |==> false
165:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT) |==> parent.getType() == Token.VAR
166:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):233:parent.getType() == Token.VAR || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT) |==> (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT)
167:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):232:parent.getType() == Token.VAR || (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n && parent.getParent().getType() == Token.EXPR_RESULT) |==> true
168:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):248:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() != ref.isInitializingDeclaration()
169:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):248:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() && ref.isInitializingDeclaration()
170:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):248:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() == ref.isInitializingDeclaration()
171:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):248:ref.isLvalue() || ref.isInitializingDeclaration() |==> false
172:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):248:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue()
173:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):248:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isInitializingDeclaration()
174:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):248:ref.isLvalue() || ref.isInitializingDeclaration() |==> true
175:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):250:val != null |==> val == null
176:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):250:val != null |==> false
177:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):250:val != null |==> true
178:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:val.getType() == Token.OBJECTLIT |==> val.getType() != Token.OBJECTLIT
179:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:val.getType() == Token.OBJECTLIT |==> val.getType() < Token.OBJECTLIT
180:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:val.getType() == Token.OBJECTLIT |==> val.getType() <= Token.OBJECTLIT
181:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:val.getType() == Token.OBJECTLIT |==> val.getType() > Token.OBJECTLIT
182:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:val.getType() == Token.OBJECTLIT |==> val.getType() >= Token.OBJECTLIT
183:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:val.getType() == Token.OBJECTLIT |==> false
184:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:val.getType() == Token.OBJECTLIT |==> true
185:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):251:Preconditions.checkState(val.getType() == Token.OBJECTLIT) |==> <NO-OP>
186:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):252:child != null |==> child == null
187:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):252:child != null |==> false
188:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):252:child != null |==> true
189:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):255:varmap.containsKey(varname) |==> false
190:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):255:varmap.containsKey(varname) |==> true
191:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):261:varmap.put(varname, var) |==> <NO-OP>
192:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):264:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() != Token.VAR
193:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):264:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() < Token.VAR
194:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):264:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() <= Token.VAR
195:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):264:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() > Token.VAR
196:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):264:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() >= Token.VAR
197:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):264:ref.getParent().getType() == Token.VAR |==> false
198:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):264:ref.getParent().getType() == Token.VAR |==> true
199:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:getprop.getType() == Token.GETPROP |==> getprop.getType() != Token.GETPROP
200:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:getprop.getType() == Token.GETPROP |==> getprop.getType() < Token.GETPROP
201:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:getprop.getType() == Token.GETPROP |==> getprop.getType() <= Token.GETPROP
202:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:getprop.getType() == Token.GETPROP |==> getprop.getType() > Token.GETPROP
203:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:getprop.getType() == Token.GETPROP |==> getprop.getType() >= Token.GETPROP
204:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:getprop.getType() == Token.GETPROP |==> false
205:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:getprop.getType() == Token.GETPROP |==> true
206:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):268:Preconditions.checkState(getprop.getType() == Token.GETPROP) |==> <NO-OP>
207:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):272:varmap.containsKey(varname) |==> false
208:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):272:varmap.containsKey(varname) |==> true
209:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):277:varmap.put(varname, var) |==> <NO-OP>
210:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:object.getType() == Token.OBJECTLIT |==> object.getType() != Token.OBJECTLIT
211:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:object.getType() == Token.OBJECTLIT |==> object.getType() < Token.OBJECTLIT
212:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:object.getType() == Token.OBJECTLIT |==> object.getType() <= Token.OBJECTLIT
213:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:object.getType() == Token.OBJECTLIT |==> object.getType() > Token.OBJECTLIT
214:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:object.getType() == Token.OBJECTLIT |==> object.getType() >= Token.OBJECTLIT
215:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:object.getType() == Token.OBJECTLIT |==> false
216:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:object.getType() == Token.OBJECTLIT |==> true
217:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):291:Preconditions.checkState(object.getType() == Token.OBJECTLIT) |==> <NO-OP>
218:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):292:key != null |==> key == null
219:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):292:key != null |==> false
220:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):292:key != null |==> true
221:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):294:initvals.put(key.getString(), key.removeFirstChild()) |==> <NO-OP>
222:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):308:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
223:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:val.getType() == Token.OBJECTLIT |==> val.getType() != Token.OBJECTLIT
224:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:val.getType() == Token.OBJECTLIT |==> val.getType() < Token.OBJECTLIT
225:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:val.getType() == Token.OBJECTLIT |==> val.getType() <= Token.OBJECTLIT
226:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:val.getType() == Token.OBJECTLIT |==> val.getType() > Token.OBJECTLIT
227:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:val.getType() == Token.OBJECTLIT |==> val.getType() >= Token.OBJECTLIT
228:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:val.getType() == Token.OBJECTLIT |==> false
229:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:val.getType() == Token.OBJECTLIT |==> true
230:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):309:Preconditions.checkState(val.getType() == Token.OBJECTLIT) |==> <NO-OP>
231:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):311:key != null |==> key == null
232:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):311:key != null |==> false
233:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):311:key != null |==> true
234:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):316:nodes.add(new Node(Token.ASSIGN, Node.newString(Token.NAME, varmap.get(var)), value)) |==> <NO-OP>
235:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):319:all.remove(var) |==> <NO-OP>
236:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):324:nodes.add(new Node(Token.ASSIGN, Node.newString(Token.NAME, varmap.get(var)), NodeUtil.newUndefinedNode(null))) |==> <NO-OP>
237:COR:nodes.isEmpty():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):331:nodes.isEmpty() |==> false
238:COR:nodes.isEmpty():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):331:nodes.isEmpty() |==> true
239:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):336:nodes.add(new Node(Token.TRUE)) |==> <NO-OP>
240:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):341:nodes = Lists.reverse(nodes) |==> <NO-OP>
241:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:0 |==> 1
242:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:0 |==> -1
243:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:2 |==> 0
244:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:2 |==> -2
245:AOR:-(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:nodes.size() - 2 |==> nodes.size() % 2
246:AOR:-(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:nodes.size() - 2 |==> nodes.size() * 2
247:AOR:-(int,int):+(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:nodes.size() - 2 |==> nodes.size() + 2
248:AOR:-(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:nodes.size() - 2 |==> nodes.size() / 2
249:ROR:<(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:i < nodes.size() - 2 |==> i != nodes.size() - 2
250:ROR:<(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:i < nodes.size() - 2 |==> i <= nodes.size() - 2
251:ROR:<(int,int):==(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:i < nodes.size() - 2 |==> i == nodes.size() - 2
252:ROR:<(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:i < nodes.size() - 2 |==> i > nodes.size() - 2
253:ROR:<(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:i < nodes.size() - 2 |==> i >= nodes.size() - 2
254:ROR:<(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:i < nodes.size() - 2 |==> false
255:ROR:<(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):345:i < nodes.size() - 2 |==> true
256:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):346:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
257:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):348:cur.addChildToFront(t) |==> <NO-OP>
258:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):349:cur = t |==> <NO-OP>
259:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):351:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
260:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):352:1 |==> 0
261:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):352:1 |==> -1
262:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):352:i + 1 |==> i % 1
263:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):352:i + 1 |==> i * 1
264:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):352:i + 1 |==> i - 1
265:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):352:i + 1 |==> i / 1
266:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):352:cur.addChildToFront(nodes.get(i + 1)) |==> <NO-OP>
267:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):356:replacement.copyInformationFromForTree(replace) |==> <NO-OP>
268:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):358:replace.getType() == Token.VAR |==> replace.getType() != Token.VAR
269:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):358:replace.getType() == Token.VAR |==> replace.getType() < Token.VAR
270:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):358:replace.getType() == Token.VAR |==> replace.getType() <= Token.VAR
271:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):358:replace.getType() == Token.VAR |==> replace.getType() > Token.VAR
272:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):358:replace.getType() == Token.VAR |==> replace.getType() >= Token.VAR
273:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):358:replace.getType() == Token.VAR |==> false
274:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):358:replace.getType() == Token.VAR |==> true
275:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):359:replace.getParent().replaceChild(replace, NodeUtil.newExpr(replacement)) |==> <NO-OP>
276:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):362:replace.getParent().replaceChild(replace, replacement) |==> <NO-OP>
277:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:init.getParent().getType() == Token.VAR |==> init.getParent().getType() != Token.VAR
278:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:init.getParent().getType() == Token.VAR |==> init.getParent().getType() < Token.VAR
279:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:init.getParent().getType() == Token.VAR |==> init.getParent().getType() <= Token.VAR
280:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:init.getParent().getType() == Token.VAR |==> init.getParent().getType() > Token.VAR
281:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:init.getParent().getType() == Token.VAR |==> init.getParent().getType() >= Token.VAR
282:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:init.getParent().getType() == Token.VAR |==> false
283:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:init.getParent().getType() == Token.VAR |==> true
284:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):382:referenceInfo.isWellDefined() && init.getParent().getType() == Token.VAR |==> referenceInfo.isWellDefined() != (init.getParent().getType() == Token.VAR)
285:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):382:referenceInfo.isWellDefined() && init.getParent().getType() == Token.VAR |==> referenceInfo.isWellDefined() == (init.getParent().getType() == Token.VAR)
286:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):382:referenceInfo.isWellDefined() && init.getParent().getType() == Token.VAR |==> false
287:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):382:referenceInfo.isWellDefined() && init.getParent().getType() == Token.VAR |==> referenceInfo.isWellDefined()
288:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):383:referenceInfo.isWellDefined() && init.getParent().getType() == Token.VAR |==> init.getParent().getType() == Token.VAR
289:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):382:referenceInfo.isWellDefined() && init.getParent().getType() == Token.VAR |==> true
290:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):382:referenceInfo.isWellDefined() && init.getParent().getType() == Token.VAR |==> referenceInfo.isWellDefined() || init.getParent().getType() == Token.VAR
291:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):384:defined |==> false
292:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):384:defined |==> true
293:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):386:fillInitialValues(init, initvals) |==> <NO-OP>
294:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):396:val == null |==> val != null
295:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):396:val == null |==> false
296:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):396:val == null |==> true
297:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):398:varnode.copyInformationFromForTree(vnode) |==> <NO-OP>
298:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):400:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
299:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):402:vnode.getParent().addChildBefore(varnode, vnode) |==> <NO-OP>
300:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:defined |==> false
301:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:defined |==> true
302:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):406:vnode.getParent().removeChild(vnode) |==> <NO-OP>
303:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:ref == init |==> ref != init
304:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:ref == init |==> false
305:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:ref == init |==> true
306:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:defined && ref == init |==> defined != (ref == init)
307:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:defined && ref == init |==> defined == (ref == init)
308:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:defined && ref == init |==> false
309:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:defined && ref == init |==> defined
310:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:defined && ref == init |==> ref == init
311:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:defined && ref == init |==> true
312:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):411:defined && ref == init |==> defined || ref == init
313:COR:ref.isLvalue():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):413:ref.isLvalue() |==> false
314:COR:ref.isLvalue():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):413:ref.isLvalue() |==> true
315:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):416:replaceAssignmentExpression(v, ref, varmap) |==> <NO-OP>
316:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):417:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() != Token.VAR
317:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):417:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() < Token.VAR
318:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):417:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() <= Token.VAR
319:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):417:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() > Token.VAR
320:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):417:ref.getParent().getType() == Token.VAR |==> ref.getParent().getType() >= Token.VAR
321:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):417:ref.getParent().getType() == Token.VAR |==> false
322:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):417:ref.getParent().getType() == Token.VAR |==> true
323:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):420:ref.getGrandparent().removeChild(ref.getParent()) |==> <NO-OP>
324:ROR:==(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:getprop.getType() == Token.GETPROP |==> getprop.getType() != Token.GETPROP
325:ROR:==(int,int):<(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:getprop.getType() == Token.GETPROP |==> getprop.getType() < Token.GETPROP
326:ROR:==(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:getprop.getType() == Token.GETPROP |==> getprop.getType() <= Token.GETPROP
327:ROR:==(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:getprop.getType() == Token.GETPROP |==> getprop.getType() > Token.GETPROP
328:ROR:==(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:getprop.getType() == Token.GETPROP |==> getprop.getType() >= Token.GETPROP
329:ROR:==(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:getprop.getType() == Token.GETPROP |==> false
330:ROR:==(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:getprop.getType() == Token.GETPROP |==> true
331:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):424:Preconditions.checkState(getprop.getType() == Token.GETPROP) |==> <NO-OP>
332:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):427:1 |==> 0
333:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):427:1 |==> -1
334:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):431:Preconditions.checkState(varmap.containsKey(var)) |==> <NO-OP>
335:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):435:replacement.copyInformationFrom(getprop) |==> <NO-OP>
336:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):436:ref.getGrandparent().replaceChild(ref.getParent(), replacement) |==> <NO-OP>
337:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:compiler.reportCodeChange() |==> <NO-OP>