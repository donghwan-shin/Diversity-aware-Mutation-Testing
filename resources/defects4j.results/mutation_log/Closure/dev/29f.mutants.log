1:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals@process(com.google.javascript.rhino.Node,com.google.javascript.rhino.Node):67:callback.process(externs, root) |==> <NO-OP>
2:COR:isVarInlineForbidden(v):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):88:isVarInlineForbidden(v) |==> false
3:COR:isVarInlineForbidden(v):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):88:isVarInlineForbidden(v) |==> true
4:COR:isInlinableObject(referenceInfo.references):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):94:isInlinableObject(referenceInfo.references) |==> false
5:COR:isInlinableObject(referenceInfo.references):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):94:isInlinableObject(referenceInfo.references) |==> true
6:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):97:staleVars.add(v) |==> <NO-OP>
7:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):99:0 |==> 1
8:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):99:0 |==> -1
9:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@afterExitScope(com.google.javascript.jscomp.NodeTraversal,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceMap):104:splitObject(v, declaration, init, referenceInfo) |==> <NO-OP>
10:COR:node.isName():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):119:node.isName() |==> false
11:COR:node.isName():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):119:node.isName() |==> true
12:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior$1@visit(com.google.javascript.rhino.Node):120:staleVars.add(scope.getVar(node.getString())) |==> <NO-OP>
13:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@blacklistVarReferencesInTree(com.google.javascript.rhino.Node,com.google.javascript.jscomp.Scope):116:NodeUtil.visitPreOrder(root, new NodeUtil.Visitor(){...) |==> <NO-OP>
14:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal() != var.isExtern()
15:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal() && var.isExtern()
16:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal() == var.isExtern()
17:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> false
18:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() |==> var.isGlobal()
19:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> var.isExtern()
20:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):141:var.isGlobal() || var.isExtern() |==> true
21:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) != compiler.getCodingConvention().isExported(var.name)
22:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) && compiler.getCodingConvention().isExported(var.name)
23:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> (var.isGlobal() || var.isExtern()) == compiler.getCodingConvention().isExported(var.name)
24:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> false
25:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> var.isGlobal() || var.isExtern()
26:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> compiler.getCodingConvention().isExported(var.name)
27:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):142:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) |==> true
28:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) != RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
29:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) && RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
30:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)) == RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
31:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> false
32:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name)
33:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
34:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):143:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) |==> true
35:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) != staleVars.contains(var)
36:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) && staleVars.contains(var)
37:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> (var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)) == staleVars.contains(var)
38:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> false
39:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):140:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name)
40:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> staleVars.contains(var)
41:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarInlineForbidden(com.google.javascript.jscomp.Scope.Var):144:var.isGlobal() || var.isExtern() || compiler.getCodingConvention().isExported(var.name) || RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(var.name) || staleVars.contains(var) |==> true
42:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):156:false |==> true
43:COR:parent.isGetProp():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):166:parent.isGetProp() |==> false
44:COR:parent.isGetProp():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):166:parent.isGetProp() |==> true
45:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:parent.getFirstChild() == name |==> parent.getFirstChild() != name
46:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:parent.getFirstChild() == name |==> false
47:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:parent.getFirstChild() == name |==> true
48:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):167:Preconditions.checkState(parent.getFirstChild() == name) |==> <NO-OP>
49:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.getFirstChild() == parent |==> gramps.getFirstChild() != parent
50:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.getFirstChild() == parent |==> false
51:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.getFirstChild() == parent |==> true
52:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall() != (gramps.getFirstChild() == parent)
53:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall() == (gramps.getFirstChild() == parent)
54:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> false
55:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall()
56:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.getFirstChild() == parent
57:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):170:gramps.isCall() && gramps.getFirstChild() == parent |==> true
58:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):169:gramps.isCall() && gramps.getFirstChild() == parent |==> gramps.isCall() || gramps.getFirstChild() == parent
59:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):171:false |==> true
60:COR:validProperties.contains(propName):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):183:validProperties.contains(propName) |==> false
61:COR:validProperties.contains(propName):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):183:validProperties.contains(propName) |==> true
62:COR:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):184:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps) |==> false
63:COR:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):184:NodeUtil.isVarOrSimpleAssignLhs(parent, gramps) |==> true
64:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):185:validProperties.add(propName) |==> <NO-OP>
65:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):187:false |==> true
66:COR:isVarOrAssignExprLhs(name):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):194:isVarOrAssignExprLhs(name) |==> false
67:COR:isVarOrAssignExprLhs(name):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):194:isVarOrAssignExprLhs(name) |==> true
68:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):195:false |==> true
69:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):199:val == null |==> val != null
70:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):199:val == null |==> false
71:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):199:val == null |==> true
72:COR:val.isObjectLit():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):205:val.isObjectLit() |==> false
73:COR:val.isObjectLit():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):205:val.isObjectLit() |==> true
74:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):206:false |==> true
75:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):217:child != null |==> child == null
76:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):217:child != null |==> false
77:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):217:child != null |==> true
78:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):219:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef() != child.isSetterDef()
79:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):219:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef() && child.isSetterDef()
80:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):219:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef() == child.isSetterDef()
81:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):219:child.isGetterDef() || child.isSetterDef() |==> false
82:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):219:child.isGetterDef() || child.isSetterDef() |==> child.isGetterDef()
83:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):220:child.isGetterDef() || child.isSetterDef() |==> child.isSetterDef()
84:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):219:child.isGetterDef() || child.isSetterDef() |==> true
85:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):222:false |==> true
86:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):225:validProperties.add(child.getString()) |==> <NO-OP>
87:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):234:refNode == childVal |==> refNode != childVal
88:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):234:refNode == childVal |==> false
89:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):234:refNode == childVal |==> true
90:LVR:FALSE:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):236:false |==> true
91:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):238:refNode = refNode.getParent() |==> <NO-OP>
92:LVR:TRUE:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):247:true |==> false
93:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isInlinableObject(java.util.List<com.google.javascript.jscomp.ReferenceCollectingCallback.Reference>):247:ret = true |==> <NO-OP>
94:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):256:parent.getFirstChild() == n |==> parent.getFirstChild() != n
95:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):256:parent.getFirstChild() == n |==> false
96:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):256:parent.getFirstChild() == n |==> true
97:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign() != (parent.getFirstChild() == n)
98:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign() == (parent.getFirstChild() == n)
99:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):256:parent.isAssign() && parent.getFirstChild() == n |==> false
100:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign()
101:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):256:parent.isAssign() && parent.getFirstChild() == n |==> parent.getFirstChild() == n
102:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):256:parent.isAssign() && parent.getFirstChild() == n |==> true
103:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n |==> parent.isAssign() || parent.getFirstChild() == n
104:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> (parent.isAssign() && parent.getFirstChild() == n) != parent.getParent().isExprResult()
105:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> (parent.isAssign() && parent.getFirstChild() == n) == parent.getParent().isExprResult()
106:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):257:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> false
107:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.isAssign() && parent.getFirstChild() == n
108:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):257:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.getParent().isExprResult()
109:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):257:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> true
110:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult() |==> parent.isAssign() && parent.getFirstChild() == n || parent.getParent().isExprResult()
111:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):254:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar() != (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
112:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):254:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar() && (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
113:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):254:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar() == (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
114:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):254:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> false
115:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):254:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> parent.isVar()
116:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):255:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult())
117:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@isVarOrAssignExprLhs(com.google.javascript.rhino.Node):254:parent.isVar() || (parent.isAssign() && parent.getFirstChild() == n && parent.getParent().isExprResult()) |==> true
118:COR:||(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):270:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() != ref.isInitializingDeclaration()
119:COR:||(boolean,boolean):&&(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):270:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() && ref.isInitializingDeclaration()
120:COR:||(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):270:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue() == ref.isInitializingDeclaration()
121:COR:||(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):270:ref.isLvalue() || ref.isInitializingDeclaration() |==> false
122:COR:||(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):270:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isLvalue()
123:COR:||(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):270:ref.isLvalue() || ref.isInitializingDeclaration() |==> ref.isInitializingDeclaration()
124:COR:||(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):270:ref.isLvalue() || ref.isInitializingDeclaration() |==> true
125:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):272:val != null |==> val == null
126:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):272:val != null |==> false
127:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):272:val != null |==> true
128:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):273:Preconditions.checkState(val.isObjectLit()) |==> <NO-OP>
129:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):274:child != null |==> child == null
130:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):274:child != null |==> false
131:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):274:child != null |==> true
132:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):277:varmap.containsKey(varname) |==> false
133:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):277:varmap.containsKey(varname) |==> true
134:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):283:varmap.put(varname, var) |==> <NO-OP>
135:COR:ref.getParent().isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):286:ref.getParent().isVar() |==> false
136:COR:ref.getParent().isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):286:ref.getParent().isVar() |==> true
137:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):290:Preconditions.checkState(getprop.isGetProp()) |==> <NO-OP>
138:COR:varmap.containsKey(varname):TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):294:varmap.containsKey(varname) |==> false
139:COR:varmap.containsKey(varname):FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):294:varmap.containsKey(varname) |==> true
140:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@computeVarList(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):299:varmap.put(varname, var) |==> <NO-OP>
141:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):313:Preconditions.checkState(object.isObjectLit()) |==> <NO-OP>
142:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):314:key != null |==> key == null
143:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):314:key != null |==> false
144:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):314:key != null |==> true
145:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@fillInitialValues(com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,com.google.javascript.rhino.Node>):316:initvals.put(key.getString(), key.removeFirstChild()) |==> <NO-OP>
146:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):330:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
147:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):331:Preconditions.checkState(val.isObjectLit()) |==> <NO-OP>
148:ROR:!=(java.lang.Object,java.lang.Object):==(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):333:key != null |==> key == null
149:ROR:!=(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):333:key != null |==> false
150:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):333:key != null |==> true
151:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):338:nodes.add(IR.assign(IR.name(varmap.get(var)), value)) |==> <NO-OP>
152:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):342:all.remove(var) |==> <NO-OP>
153:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):347:nodes.add(IR.assign(IR.name(varmap.get(var)), NodeUtil.newUndefinedNode(null))) |==> <NO-OP>
154:COR:nodes.isEmpty():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):354:nodes.isEmpty() |==> false
155:COR:nodes.isEmpty():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):354:nodes.isEmpty() |==> true
156:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):359:nodes.add(IR.trueNode()) |==> <NO-OP>
157:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):364:nodes = Lists.reverse(nodes) |==> <NO-OP>
158:LVR:0:POS:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:0 |==> 1
159:LVR:0:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:0 |==> -1
160:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:2 |==> 0
161:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:2 |==> -2
162:AOR:-(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:nodes.size() - 2 |==> nodes.size() % 2
163:AOR:-(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:nodes.size() - 2 |==> nodes.size() * 2
164:AOR:-(int,int):+(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:nodes.size() - 2 |==> nodes.size() + 2
165:AOR:-(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:nodes.size() - 2 |==> nodes.size() / 2
166:ROR:<(int,int):!=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:i < nodes.size() - 2 |==> i != nodes.size() - 2
167:ROR:<(int,int):<=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:i < nodes.size() - 2 |==> i <= nodes.size() - 2
168:ROR:<(int,int):==(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:i < nodes.size() - 2 |==> i == nodes.size() - 2
169:ROR:<(int,int):>(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:i < nodes.size() - 2 |==> i > nodes.size() - 2
170:ROR:<(int,int):>=(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:i < nodes.size() - 2 |==> i >= nodes.size() - 2
171:ROR:<(int,int):FALSE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:i < nodes.size() - 2 |==> false
172:ROR:<(int,int):TRUE(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):368:i < nodes.size() - 2 |==> true
173:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):369:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
174:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):371:cur.addChildToFront(t) |==> <NO-OP>
175:STD:<ASSIGN>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):372:cur = t |==> <NO-OP>
176:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):374:cur.addChildToFront(nodes.get(i)) |==> <NO-OP>
177:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:1 |==> 0
178:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:1 |==> -1
179:AOR:+(int,int):%(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:i + 1 |==> i % 1
180:AOR:+(int,int):*(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:i + 1 |==> i * 1
181:AOR:+(int,int):-(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:i + 1 |==> i - 1
182:AOR:+(int,int):/(int,int):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:i + 1 |==> i / 1
183:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):375:cur.addChildToFront(nodes.get(i + 1)) |==> <NO-OP>
184:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):379:replacement.copyInformationFromForTree(replace) |==> <NO-OP>
185:COR:replace.isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:replace.isVar() |==> false
186:COR:replace.isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):381:replace.isVar() |==> true
187:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):382:replace.getParent().replaceChild(replace, NodeUtil.newExpr(replacement)) |==> <NO-OP>
188:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@replaceAssignmentExpression(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,java.util.Map<java.lang.String,java.lang.String>):385:replace.getParent().replaceChild(replace, replacement) |==> <NO-OP>
189:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined() != init.getParent().isVar()
190:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined() == init.getParent().isVar()
191:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:referenceInfo.isWellDefined() && init.getParent().isVar() |==> false
192:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined()
193:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):406:referenceInfo.isWellDefined() && init.getParent().isVar() |==> init.getParent().isVar()
194:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:referenceInfo.isWellDefined() && init.getParent().isVar() |==> true
195:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):405:referenceInfo.isWellDefined() && init.getParent().isVar() |==> referenceInfo.isWellDefined() || init.getParent().isVar()
196:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):407:defined |==> false
197:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):407:defined |==> true
198:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):409:fillInitialValues(init, initvals) |==> <NO-OP>
199:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):419:val == null |==> val != null
200:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):419:val == null |==> false
201:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):419:val == null |==> true
202:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):421:varnode.copyInformationFromForTree(vnode) |==> <NO-OP>
203:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):423:blacklistVarReferencesInTree(val, v.scope) |==> <NO-OP>
204:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):425:vnode.getParent().addChildBefore(varnode, vnode) |==> <NO-OP>
205:COR:defined:TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):428:defined |==> false
206:COR:defined:FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):428:defined |==> true
207:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):429:vnode.getParent().removeChild(vnode) |==> <NO-OP>
208:ROR:==(java.lang.Object,java.lang.Object):!=(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:ref == init |==> ref != init
209:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:ref == init |==> false
210:ROR:==(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:ref == init |==> true
211:COR:&&(boolean,boolean):!=(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined && ref == init |==> defined != (ref == init)
212:COR:&&(boolean,boolean):==(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined && ref == init |==> defined == (ref == init)
213:COR:&&(boolean,boolean):FALSE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined && ref == init |==> false
214:COR:&&(boolean,boolean):LHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined && ref == init |==> defined
215:COR:&&(boolean,boolean):RHS(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined && ref == init |==> ref == init
216:COR:&&(boolean,boolean):TRUE(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined && ref == init |==> true
217:COR:&&(boolean,boolean):||(boolean,boolean):com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):434:defined && ref == init |==> defined || ref == init
218:COR:ref.isLvalue():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):436:ref.isLvalue() |==> false
219:COR:ref.isLvalue():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):436:ref.isLvalue() |==> true
220:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):439:replaceAssignmentExpression(v, ref, varmap) |==> <NO-OP>
221:COR:ref.getParent().isVar():TRUE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:ref.getParent().isVar() |==> false
222:COR:ref.getParent().isVar():FALSE:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):440:ref.getParent().isVar() |==> true
223:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):443:ref.getGrandparent().removeChild(ref.getParent()) |==> <NO-OP>
224:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):447:Preconditions.checkState(getprop.isGetProp()) |==> <NO-OP>
225:LVR:POS:0:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):450:1 |==> 0
226:LVR:POS:NEG:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):450:1 |==> -1
227:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):454:Preconditions.checkState(varmap.containsKey(var)) |==> <NO-OP>
228:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):458:replacement.copyInformationFrom(getprop) |==> <NO-OP>
229:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):459:ref.getGrandparent().replaceChild(ref.getParent(), replacement) |==> <NO-OP>
230:STD:<CALL>:<NO-OP>:com.google.javascript.jscomp.InlineObjectLiterals$InliningBehavior@splitObject(com.google.javascript.jscomp.Scope.Var,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.Reference,com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection):463:compiler.reportCodeChange() |==> <NO-OP>